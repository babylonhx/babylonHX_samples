<haxe>
	<class path="ApplicationMain" params="" file="Export/html5/haxe/ApplicationMain.hx">
		<config public="1" static="1"><t path="lime.app.Config"/></config>
		<preloader public="1" static="1"><c path="openfl.display.Preloader"/></preloader>
		<app static="1"><c path="lime.app.Application"/></app>
		<create public="1" set="method" line="14" static="1"><f a=""><x path="Void"/></f></create>
		<init public="1" set="method" line="811" static="1"><f a=""><x path="Void"/></f></init>
		<main public="1" set="method" line="840" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":keep"/></meta>
		</main>
		<start public="1" set="method" line="871" static="1"><f a=""><x path="Void"/></f></start>
	</class>
	<class path="openfl.events.IEventDispatcher" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/IEventDispatcher.hx" interface="1">
		<addEventListener public="1" set="method"><f a="type:listener:?useCapture:?priority:?useWeakReference">
	<c path="String"/>
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></addEventListener>
		<dispatchEvent public="1" set="method"><f a="event">
	<c path="openfl.events.Event"/>
	<x path="Bool"/>
</f></dispatchEvent>
		<hasEventListener public="1" set="method"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasEventListener>
		<removeEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Void"/>
</f></removeEventListener>
		<willTrigger public="1" set="method"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></willTrigger>
	</class>
	<class path="openfl.events.EventDispatcher" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/EventDispatcher.hx">
		<implements path="openfl.events.IEventDispatcher"/>
		<__sortByPriority set="method" line="169" static="1">
			<f a="l1:l2">
				<c path="openfl.events._EventDispatcher.Listener"/>
				<c path="openfl.events._EventDispatcher.Listener"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__sortByPriority>
		<__targetDispatcher>
			<c path="openfl.events.IEventDispatcher"/>
			<meta><m n=":noCompletion"/></meta>
		</__targetDispatcher>
		<__eventMap>
			<x path="Map">
				<c path="String"/>
				<c path="Array"><c path="openfl.events._EventDispatcher.Listener"/></c>
			</x>
			<meta><m n=":noCompletion"/></meta>
		</__eventMap>
		<addEventListener public="1" set="method" line="27"><f a="type:listener:?useCapture:?priority:?useWeakReference" v="::false:0:false">
	<c path="String"/>
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></addEventListener>
		<dispatchEvent public="1" set="method" line="52"><f a="event">
	<c path="openfl.events.Event"/>
	<x path="Bool"/>
</f></dispatchEvent>
		<hasEventListener public="1" set="method" line="110"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasEventListener>
		<removeEventListener public="1" set="method" line="118"><f a="type:listener:?capture" v="::false">
	<c path="String"/>
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Void"/>
</f></removeEventListener>
		<toString public="1" set="method" line="152"><f a=""><c path="String"/></f></toString>
		<willTrigger public="1" set="method" line="162"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></willTrigger>
		<new public="1" set="method" line="16"><f a="?target" v="null">
	<c path="openfl.events.IEventDispatcher"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl.display.IBitmapDrawable" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/IBitmapDrawable.hx" interface="1">
		<__worldTransform public="1"><c path="openfl.geom.Matrix"/></__worldTransform>
		<__renderCanvas public="1" set="method"><f a="renderSession">
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></__renderCanvas>
		<__renderMask public="1" set="method"><f a="renderSession">
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></__renderMask>
		<__updateChildren public="1" set="method"><f a="transformOnly">
	<x path="Bool"/>
	<x path="Void"/>
</f></__updateChildren>
	</class>
	<class path="openfl.display.DisplayObject" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/DisplayObject.hx">
		<extends path="openfl.events.EventDispatcher"/>
		<implements path="openfl.display.IBitmapDrawable"/>
		<__instanceCount line="161" static="1">
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__instanceCount>
		<__worldRenderDirty line="162" static="1">
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldRenderDirty>
		<__worldTransformDirty line="163" static="1">
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldTransformDirty>
		<alpha public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the alpha transparency value of the object specified. Valid
	 * values are 0(fully transparent) to 1(fully opaque). The default value is
	 * 1. Display objects with <code>alpha</code> set to 0 <i>are</i> active,
	 * even though they are invisible.]]></haxe_doc>
		</alpha>
		<blendMode public="1">
			<e path="openfl.display.BlendMode"/>
			<haxe_doc><![CDATA[* A value from the BlendMode class that specifies which blend mode to use. A
	 * bitmap can be drawn internally in two ways. If you have a blend mode
	 * enabled or an external clipping mask, the bitmap is drawn by adding a
	 * bitmap-filled square shape to the vector render. If you attempt to set
	 * this property to an invalid value, Flash runtimes set the value to
	 * <code>BlendMode.NORMAL</code>.
	 *
	 * <p>The <code>blendMode</code> property affects each pixel of the display
	 * object. Each pixel is composed of three constituent colors(red, green,
	 * and blue), and each constituent color has a value between 0x00 and 0xFF.
	 * Flash Player or Adobe AIR compares each constituent color of one pixel in
	 * the movie clip with the corresponding color of the pixel in the
	 * background. For example, if <code>blendMode</code> is set to
	 * <code>BlendMode.LIGHTEN</code>, Flash Player or Adobe AIR compares the red
	 * value of the display object with the red value of the background, and uses
	 * the lighter of the two as the value for the red component of the displayed
	 * color.</p>
	 *
	 * <p>The following table describes the <code>blendMode</code> settings. The
	 * BlendMode class defines string values you can use. The illustrations in
	 * the table show <code>blendMode</code> values applied to a circular display
	 * object(2) superimposed on another display object(1).</p>]]></haxe_doc>
		</blendMode>
		<cacheAsBitmap public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* If set to <code>true</code>, NME will use the software renderer to cache
	 * an internal bitmap representation of the display object. For native targets,
	 * this is often much slower than the default hardware renderer. When you
	 * are using the Flash target, this caching may increase performance for display 
	 * objects that contain complex vector content.
	 *
	 * <p>All vector data for a display object that has a cached bitmap is drawn
	 * to the bitmap instead of the main display. If
	 * <code>cacheAsBitmapMatrix</code> is null or unsupported, the bitmap is
	 * then copied to the main display as unstretched, unrotated pixels snapped
	 * to the nearest pixel boundaries. Pixels are mapped 1 to 1 with the parent
	 * object. If the bounds of the bitmap change, the bitmap is recreated
	 * instead of being stretched.</p>
	 *
	 * <p>If <code>cacheAsBitmapMatrix</code> is non-null and supported, the
	 * object is drawn to the off-screen bitmap using that matrix and the
	 * stretched and/or rotated results of that rendering are used to draw the
	 * object to the main display.</p>
	 *
	 * <p>No internal bitmap is created unless the <code>cacheAsBitmap</code>
	 * property is set to <code>true</code>.</p>
	 *
	 * <p>After you set the <code>cacheAsBitmap</code> property to
	 * <code>true</code>, the rendering does not change, however the display
	 * object performs pixel snapping automatically. The animation speed can be
	 * significantly faster depending on the complexity of the vector content.
	 * </p>
	 *
	 * <p>The <code>cacheAsBitmap</code> property is automatically set to
	 * <code>true</code> whenever you apply a filter to a display object(when
	 * its <code>filter</code> array is not empty), and if a display object has a
	 * filter applied to it, <code>cacheAsBitmap</code> is reported as
	 * <code>true</code> for that display object, even if you set the property to
	 * <code>false</code>. If you clear all filters for a display object, the
	 * <code>cacheAsBitmap</code> setting changes to what it was last set to.</p>
	 *
	 * <p>A display object does not use a bitmap even if the
	 * <code>cacheAsBitmap</code> property is set to <code>true</code> and
	 * instead renders from vector data in the following cases:</p>
	 *
	 * <ul>
	 *   <li>The bitmap is too large. In AIR 1.5 and Flash Player 10, the maximum
	 * size for a bitmap image is 8,191 pixels in width or height, and the total
	 * number of pixels cannot exceed 16,777,215 pixels.(So, if a bitmap image
	 * is 8,191 pixels wide, it can only be 2,048 pixels high.) In Flash Player 9
	 * and earlier, the limitation is is 2880 pixels in height and 2,880 pixels
	 * in width.</li>
	 *   <li>The bitmap fails to allocate(out of memory error). </li>
	 * </ul>
	 *
	 * <p>The <code>cacheAsBitmap</code> property is best used with movie clips
	 * that have mostly static content and that do not scale and rotate
	 * frequently. With such movie clips, <code>cacheAsBitmap</code> can lead to
	 * performance increases when the movie clip is translated(when its <i>x</i>
	 * and <i>y</i> position is changed).</p>]]></haxe_doc>
		</cacheAsBitmap>
		<filters public="1" get="accessor" set="accessor">
			<c path="Array"><c path="openfl.filters.BitmapFilter"/></c>
			<haxe_doc><![CDATA[* An indexed array that contains each filter object currently associated
	 * with the display object. The openfl.filters package contains several
	 * classes that define specific filters you can use.
	 *
	 * <p>Filters can be applied in Flash Professional at design time, or at run
	 * time by using ActionScript code. To apply a filter by using ActionScript,
	 * you must make a temporary copy of the entire <code>filters</code> array,
	 * modify the temporary array, then assign the value of the temporary array
	 * back to the <code>filters</code> array. You cannot directly add a new
	 * filter object to the <code>filters</code> array.</p>
	 *
	 * <p>To add a filter by using ActionScript, perform the following steps
	 * (assume that the target display object is named
	 * <code>myDisplayObject</code>):</p>
	 *
	 * <ol>
	 *   <li>Create a new filter object by using the constructor method of your
	 * chosen filter class.</li>
	 *   <li>Assign the value of the <code>myDisplayObject.filters</code> array
	 * to a temporary array, such as one named <code>myFilters</code>.</li>
	 *   <li>Add the new filter object to the <code>myFilters</code> temporary
	 * array.</li>
	 *   <li>Assign the value of the temporary array to the
	 * <code>myDisplayObject.filters</code> array.</li>
	 * </ol>
	 *
	 * <p>If the <code>filters</code> array is undefined, you do not need to use
	 * a temporary array. Instead, you can directly assign an array literal that
	 * contains one or more filter objects that you create. The first example in
	 * the Examples section adds a drop shadow filter by using code that handles
	 * both defined and undefined <code>filters</code> arrays.</p>
	 *
	 * <p>To modify an existing filter object, you must use the technique of
	 * modifying a copy of the <code>filters</code> array:</p>
	 *
	 * <ol>
	 *   <li>Assign the value of the <code>filters</code> array to a temporary
	 * array, such as one named <code>myFilters</code>.</li>
	 *   <li>Modify the property by using the temporary array,
	 * <code>myFilters</code>. For example, to set the quality property of the
	 * first filter in the array, you could use the following code:
	 * <code>myFilters[0].quality = 1;</code></li>
	 *   <li>Assign the value of the temporary array to the <code>filters</code>
	 * array.</li>
	 * </ol>
	 *
	 * <p>At load time, if a display object has an associated filter, it is
	 * marked to cache itself as a transparent bitmap. From this point forward,
	 * as long as the display object has a valid filter list, the player caches
	 * the display object as a bitmap. This source bitmap is used as a source
	 * image for the filter effects. Each display object usually has two bitmaps:
	 * one with the original unfiltered source display object and another for the
	 * final image after filtering. The final image is used when rendering. As
	 * long as the display object does not change, the final image does not need
	 * updating.</p>
	 *
	 * <p>The openfl.filters package includes classes for filters. For example, to
	 * create a DropShadow filter, you would write:</p>
	 * 
	 * @throws ArgumentError When <code>filters</code> includes a ShaderFilter
	 *                       and the shader output type is not compatible with
	 *                       this operation(the shader must specify a
	 *                       <code>pixel4</code> output).
	 * @throws ArgumentError When <code>filters</code> includes a ShaderFilter
	 *                       and the shader doesn't specify any image input or
	 *                       the first input is not an <code>image4</code> input.
	 * @throws ArgumentError When <code>filters</code> includes a ShaderFilter
	 *                       and the shader specifies an image input that isn't
	 *                       provided.
	 * @throws ArgumentError When <code>filters</code> includes a ShaderFilter, a
	 *                       ByteArray or Vector.<Number> instance as a shader
	 *                       input, and the <code>width</code> and
	 *                       <code>height</code> properties aren't specified for
	 *                       the ShaderInput object, or the specified values
	 *                       don't match the amount of data in the input data.
	 *                       See the <code>ShaderInput.input</code> property for
	 *                       more information.]]></haxe_doc>
		</filters>
		<height public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the height of the display object, in pixels. The height is
	 * calculated based on the bounds of the content of the display object. When
	 * you set the <code>height</code> property, the <code>scaleY</code> property
	 * is adjusted accordingly, as shown in the following code:
	 *
	 * <p>Except for TextField and Video objects, a display object with no
	 * content(such as an empty sprite) has a height of 0, even if you try to
	 * set <code>height</code> to a different value.</p>]]></haxe_doc>
		</height>
		<loaderInfo public="1">
			<c path="openfl.display.LoaderInfo"/>
			<haxe_doc><![CDATA[* Returns a LoaderInfo object containing information about loading the file
	 * to which this display object belongs. The <code>loaderInfo</code> property
	 * is defined only for the root display object of a SWF file or for a loaded
	 * Bitmap(not for a Bitmap that is drawn with ActionScript). To find the
	 * <code>loaderInfo</code> object associated with the SWF file that contains
	 * a display object named <code>myDisplayObject</code>, use
	 * <code>myDisplayObject.root.loaderInfo</code>.
	 *
	 * <p>A large SWF file can monitor its download by calling
	 * <code>this.root.loaderInfo.addEventListener(Event.COMPLETE,
	 * func)</code>.</p>]]></haxe_doc>
		</loaderInfo>
		<mask public="1" get="accessor" set="accessor">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc><![CDATA[* The calling display object is masked by the specified <code>mask</code>
	 * object. To ensure that masking works when the Stage is scaled, the
	 * <code>mask</code> display object must be in an active part of the display
	 * list. The <code>mask</code> object itself is not drawn. Set
	 * <code>mask</code> to <code>null</code> to remove the mask.
	 *
	 * <p>To be able to scale a mask object, it must be on the display list. To
	 * be able to drag a mask Sprite object(by calling its
	 * <code>startDrag()</code> method), it must be on the display list. To call
	 * the <code>startDrag()</code> method for a mask sprite based on a
	 * <code>mouseDown</code> event being dispatched by the sprite, set the
	 * sprite's <code>buttonMode</code> property to <code>true</code>.</p>
	 *
	 * <p>When display objects are cached by setting the
	 * <code>cacheAsBitmap</code> property to <code>true</code> an the
	 * <code>cacheAsBitmapMatrix</code> property to a Matrix object, both the
	 * mask and the display object being masked must be part of the same cached
	 * bitmap. Thus, if the display object is cached, then the mask must be a
	 * child of the display object. If an ancestor of the display object on the
	 * display list is cached, then the mask must be a child of that ancestor or
	 * one of its descendents. If more than one ancestor of the masked object is
	 * cached, then the mask must be a descendent of the cached container closest
	 * to the masked object in the display list.</p>
	 *
	 * <p><b>Note:</b> A single <code>mask</code> object cannot be used to mask
	 * more than one calling display object. When the <code>mask</code> is
	 * assigned to a second display object, it is removed as the mask of the
	 * first object, and that object's <code>mask</code> property becomes
	 * <code>null</code>.</p>]]></haxe_doc>
		</mask>
		<mouseX public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the x coordinate of the mouse or user input device position, in
	 * pixels.
	 *
	 * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned x
	 * coordinate will reflect the non-rotated object.</p>]]></haxe_doc>
		</mouseX>
		<mouseY public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the y coordinate of the mouse or user input device position, in
	 * pixels.
	 *
	 * <p><b>Note</b>: For a DisplayObject that has been rotated, the returned y
	 * coordinate will reflect the non-rotated object.</p>]]></haxe_doc>
		</mouseY>
		<name public="1" get="accessor" set="accessor">
			<c path="String"/>
			<haxe_doc><![CDATA[* Indicates the instance name of the DisplayObject. The object can be
	 * identified in the child list of its parent display object container by
	 * calling the <code>getChildByName()</code> method of the display object
	 * container.
	 * 
	 * @throws IllegalOperationError If you are attempting to set this property
	 *                               on an object that was placed on the timeline
	 *                               in the Flash authoring tool.]]></haxe_doc>
		</name>
		<opaqueBackground public="1">
			<t path="Null"><x path="Int"/></t>
			<haxe_doc><![CDATA[* Specifies whether the display object is opaque with a certain background
	 * color. A transparent bitmap contains alpha channel data and is drawn
	 * transparently. An opaque bitmap has no alpha channel(and renders faster
	 * than a transparent bitmap). If the bitmap is opaque, you specify its own
	 * background color to use.
	 *
	 * <p>If set to a number value, the surface is opaque(not transparent) with
	 * the RGB background color that the number specifies. If set to
	 * <code>null</code>(the default value), the display object has a
	 * transparent background.</p>
	 *
	 * <p>The <code>opaqueBackground</code> property is intended mainly for use
	 * with the <code>cacheAsBitmap</code> property, for rendering optimization.
	 * For display objects in which the <code>cacheAsBitmap</code> property is
	 * set to true, setting <code>opaqueBackground</code> can improve rendering
	 * performance.</p>
	 *
	 * <p>The opaque background region is <i>not</i> matched when calling the
	 * <code>hitTestPoint()</code> method with the <code>shapeFlag</code>
	 * parameter set to <code>true</code>.</p>
	 *
	 * <p>The opaque background region does not respond to mouse events.</p>]]></haxe_doc>
		</opaqueBackground>
		<parent public="1" set="null">
			<c path="openfl.display.DisplayObjectContainer"/>
			<haxe_doc><![CDATA[* Indicates the DisplayObjectContainer object that contains this display
	 * object. Use the <code>parent</code> property to specify a relative path to
	 * display objects that are above the current display object in the display
	 * list hierarchy.
	 *
	 * <p>You can use <code>parent</code> to move up multiple levels in the
	 * display list as in the following:</p>
	 * 
	 * @throws SecurityError The parent display object belongs to a security
	 *                       sandbox to which you do not have access. You can
	 *                       avoid this situation by having the parent movie call
	 *                       the <code>Security.allowDomain()</code> method.]]></haxe_doc>
		</parent>
		<root public="1" get="accessor" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc><![CDATA[* For a display object in a loaded SWF file, the <code>root</code> property
	 * is the top-most display object in the portion of the display list's tree
	 * structure represented by that SWF file. For a Bitmap object representing a
	 * loaded image file, the <code>root</code> property is the Bitmap object
	 * itself. For the instance of the main class of the first SWF file loaded,
	 * the <code>root</code> property is the display object itself. The
	 * <code>root</code> property of the Stage object is the Stage object itself.
	 * The <code>root</code> property is set to <code>null</code> for any display
	 * object that has not been added to the display list, unless it has been
	 * added to a display object container that is off the display list but that
	 * is a child of the top-most display object in a loaded SWF file.
	 *
	 * <p>For example, if you create a new Sprite object by calling the
	 * <code>Sprite()</code> constructor method, its <code>root</code> property
	 * is <code>null</code> until you add it to the display list(or to a display
	 * object container that is off the display list but that is a child of the
	 * top-most display object in a SWF file).</p>
	 *
	 * <p>For a loaded SWF file, even though the Loader object used to load the
	 * file may not be on the display list, the top-most display object in the
	 * SWF file has its <code>root</code> property set to itself. The Loader
	 * object does not have its <code>root</code> property set until it is added
	 * as a child of a display object for which the <code>root</code> property is
	 * set.</p>]]></haxe_doc>
		</root>
		<rotation public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the rotation of the DisplayObject instance, in degrees, from its
	 * original orientation. Values from 0 to 180 represent clockwise rotation;
	 * values from 0 to -180 represent counterclockwise rotation. Values outside
	 * this range are added to or subtracted from 360 to obtain a value within
	 * the range. For example, the statement <code>my_video.rotation = 450</code>
	 * is the same as <code> my_video.rotation = 90</code>.]]></haxe_doc>
		</rotation>
		<scale9Grid public="1">
			<c path="openfl.geom.Rectangle"/>
			<haxe_doc><![CDATA[* The current scaling grid that is in effect. If set to <code>null</code>,
	 * the entire display object is scaled normally when any scale transformation
	 * is applied.
	 *
	 * <p>When you define the <code>scale9Grid</code> property, the display
	 * object is divided into a grid with nine regions based on the
	 * <code>scale9Grid</code> rectangle, which defines the center region of the
	 * grid. The eight other regions of the grid are the following areas: </p>
	 *
	 * <ul>
	 *   <li>The upper-left corner outside of the rectangle</li>
	 *   <li>The area above the rectangle </li>
	 *   <li>The upper-right corner outside of the rectangle</li>
	 *   <li>The area to the left of the rectangle</li>
	 *   <li>The area to the right of the rectangle</li>
	 *   <li>The lower-left corner outside of the rectangle</li>
	 *   <li>The area below the rectangle</li>
	 *   <li>The lower-right corner outside of the rectangle</li>
	 * </ul>
	 *
	 * <p>You can think of the eight regions outside of the center(defined by
	 * the rectangle) as being like a picture frame that has special rules
	 * applied to it when scaled.</p>
	 *
	 * <p>When the <code>scale9Grid</code> property is set and a display object
	 * is scaled, all text and gradients are scaled normally; however, for other
	 * types of objects the following rules apply:</p>
	 *
	 * <ul>
	 *   <li>Content in the center region is scaled normally. </li>
	 *   <li>Content in the corners is not scaled. </li>
	 *   <li>Content in the top and bottom regions is scaled horizontally only.
	 * Content in the left and right regions is scaled vertically only.</li>
	 *   <li>All fills(including bitmaps, video, and gradients) are stretched to
	 * fit their shapes.</li>
	 * </ul>
	 *
	 * <p>If a display object is rotated, all subsequent scaling is normal(and
	 * the <code>scale9Grid</code> property is ignored).</p>
	 *
	 * <p>For example, consider the following display object and a rectangle that
	 * is applied as the display object's <code>scale9Grid</code>:</p>
	 *
	 * <p>A common use for setting <code>scale9Grid</code> is to set up a display
	 * object to be used as a component, in which edge regions retain the same
	 * width when the component is scaled.</p>
	 * 
	 * @throws ArgumentError If you pass an invalid argument to the method.]]></haxe_doc>
		</scale9Grid>
		<scaleX public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the horizontal scale(percentage) of the object as applied from
	 * the registration point. The default registration point is(0,0). 1.0
	 * equals 100% scale.
	 *
	 * <p>Scaling the local coordinate system changes the <code>x</code> and
	 * <code>y</code> property values, which are defined in whole pixels. </p>]]></haxe_doc>
		</scaleX>
		<scaleY public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the vertical scale(percentage) of an object as applied from the
	 * registration point of the object. The default registration point is(0,0).
	 * 1.0 is 100% scale.
	 *
	 * <p>Scaling the local coordinate system changes the <code>x</code> and
	 * <code>y</code> property values, which are defined in whole pixels. </p>]]></haxe_doc>
		</scaleY>
		<scrollRect public="1" get="accessor" set="accessor">
			<c path="openfl.geom.Rectangle"/>
			<haxe_doc><![CDATA[* The scroll rectangle bounds of the display object. The display object is
	 * cropped to the size defined by the rectangle, and it scrolls within the
	 * rectangle when you change the <code>x</code> and <code>y</code> properties
	 * of the <code>scrollRect</code> object.
	 *
	 * <p>The properties of the <code>scrollRect</code> Rectangle object use the
	 * display object's coordinate space and are scaled just like the overall
	 * display object. The corner bounds of the cropped window on the scrolling
	 * display object are the origin of the display object(0,0) and the point
	 * defined by the width and height of the rectangle. They are not centered
	 * around the origin, but use the origin to define the upper-left corner of
	 * the area. A scrolled display object always scrolls in whole pixel
	 * increments. </p>
	 *
	 * <p>You can scroll an object left and right by setting the <code>x</code>
	 * property of the <code>scrollRect</code> Rectangle object. You can scroll
	 * an object up and down by setting the <code>y</code> property of the
	 * <code>scrollRect</code> Rectangle object. If the display object is rotated
	 * 90° and you scroll it left and right, the display object actually scrolls
	 * up and down.</p>]]></haxe_doc>
		</scrollRect>
		<stage public="1" set="null">
			<c path="openfl.display.Stage"/>
			<haxe_doc><![CDATA[* The Stage of the display object. A Flash runtime application has only one
	 * Stage object. For example, you can create and load multiple display
	 * objects into the display list, and the <code>stage</code> property of each
	 * display object refers to the same Stage object(even if the display object
	 * belongs to a loaded SWF file).
	 *
	 * <p>If a display object is not added to the display list, its
	 * <code>stage</code> property is set to <code>null</code>.</p>]]></haxe_doc>
		</stage>
		<transform public="1" get="accessor" set="accessor">
			<c path="openfl.geom.Transform"/>
			<haxe_doc><![CDATA[* An object with properties pertaining to a display object's matrix, color
	 * transform, and pixel bounds. The specific properties  -  matrix,
	 * colorTransform, and three read-only properties
	 * (<code>concatenatedMatrix</code>, <code>concatenatedColorTransform</code>,
	 * and <code>pixelBounds</code>)  -  are described in the entry for the
	 * Transform class.
	 *
	 * <p>Each of the transform object's properties is itself an object. This
	 * concept is important because the only way to set new values for the matrix
	 * or colorTransform objects is to create a new object and copy that object
	 * into the transform.matrix or transform.colorTransform property.</p>
	 *
	 * <p>For example, to increase the <code>tx</code> value of a display
	 * object's matrix, you must make a copy of the entire matrix object, then
	 * copy the new object into the matrix property of the transform object:</p>
	 * <pre xml:space="preserve"><code> var myMatrix:Matrix =
	 * myDisplayObject.transform.matrix; myMatrix.tx += 10;
	 * myDisplayObject.transform.matrix = myMatrix; </code></pre>
	 *
	 * <p>You cannot directly set the <code>tx</code> property. The following
	 * code has no effect on <code>myDisplayObject</code>: </p>
	 * <pre xml:space="preserve"><code> myDisplayObject.transform.matrix.tx +=
	 * 10; </code></pre>
	 *
	 * <p>You can also copy an entire transform object and assign it to another
	 * display object's transform property. For example, the following code
	 * copies the entire transform object from <code>myOldDisplayObj</code> to
	 * <code>myNewDisplayObj</code>:</p>
	 * <code>myNewDisplayObj.transform = myOldDisplayObj.transform;</code>
	 *
	 * <p>The resulting display object, <code>myNewDisplayObj</code>, now has the
	 * same values for its matrix, color transform, and pixel bounds as the old
	 * display object, <code>myOldDisplayObj</code>.</p>
	 *
	 * <p>Note that AIR for TV devices use hardware acceleration, if it is
	 * available, for color transforms.</p>]]></haxe_doc>
		</transform>
		<visible public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* Whether or not the display object is visible. Display objects that are not
	 * visible are disabled. For example, if <code>visible=false</code> for an
	 * InteractiveObject instance, it cannot be clicked.]]></haxe_doc>
		</visible>
		<width public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the width of the display object, in pixels. The width is
	 * calculated based on the bounds of the content of the display object. When
	 * you set the <code>width</code> property, the <code>scaleX</code> property
	 * is adjusted accordingly, as shown in the following code:
	 *
	 * <p>Except for TextField and Video objects, a display object with no
	 * content(such as an empty sprite) has a width of 0, even if you try to set
	 * <code>width</code> to a different value.</p>]]></haxe_doc>
		</width>
		<x public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the <i>x</i> coordinate of the DisplayObject instance relative
	 * to the local coordinates of the parent DisplayObjectContainer. If the
	 * object is inside a DisplayObjectContainer that has transformations, it is
	 * in the local coordinate system of the enclosing DisplayObjectContainer.
	 * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the
	 * DisplayObjectContainer's children inherit a coordinate system that is
	 * rotated 90° counterclockwise. The object's coordinates refer to the
	 * registration point position.]]></haxe_doc>
		</x>
		<y public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc><![CDATA[* Indicates the <i>y</i> coordinate of the DisplayObject instance relative
	 * to the local coordinates of the parent DisplayObjectContainer. If the
	 * object is inside a DisplayObjectContainer that has transformations, it is
	 * in the local coordinate system of the enclosing DisplayObjectContainer.
	 * Thus, for a DisplayObjectContainer rotated 90° counterclockwise, the
	 * DisplayObjectContainer's children inherit a coordinate system that is
	 * rotated 90° counterclockwise. The object's coordinates refer to the
	 * registration point position.]]></haxe_doc>
		</y>
		<__worldTransform public="1">
			<c path="openfl.geom.Matrix"/>
			<meta>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__worldTransform>
		<__alpha>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__alpha>
		<__filters>
			<c path="Array"><c path="openfl.filters.BitmapFilter"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__filters>
		<__graphics>
			<c path="openfl.display.Graphics"/>
			<meta><m n=":noCompletion"/></meta>
		</__graphics>
		<__interactive>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__interactive>
		<__isMask>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__isMask>
		<__mask>
			<c path="openfl.display.DisplayObject"/>
			<meta><m n=":noCompletion"/></meta>
		</__mask>
		<__name>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__name>
		<__renderable>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__renderable>
		<__renderDirty>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__renderDirty>
		<__rotation>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__rotation>
		<__rotationCache>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__rotationCache>
		<__rotationCosine>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__rotationCosine>
		<__rotationSine>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__rotationSine>
		<__scaleX>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__scaleX>
		<__scaleY>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__scaleY>
		<__scrollRect>
			<c path="openfl.geom.Rectangle"/>
			<meta><m n=":noCompletion"/></meta>
		</__scrollRect>
		<__transform>
			<c path="openfl.geom.Transform"/>
			<meta><m n=":noCompletion"/></meta>
		</__transform>
		<__transformDirty>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__transformDirty>
		<__visible>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__visible>
		<__worldAlpha>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldAlpha>
		<__worldAlphaChanged>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldAlphaChanged>
		<__worldClip>
			<c path="openfl.geom.Rectangle"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldClip>
		<__worldClipChanged>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldClipChanged>
		<__worldTransformCache>
			<c path="openfl.geom.Matrix"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldTransformCache>
		<__worldTransformChanged>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldTransformChanged>
		<__worldVisible>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldVisible>
		<__worldVisibleChanged>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldVisibleChanged>
		<__worldZ>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__worldZ>
		<__x>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__x>
		<__y>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__y>
		<__canvas>
			<c path="js.html.CanvasElement"/>
			<meta><m n=":noCompletion"/></meta>
		</__canvas>
		<__context>
			<c path="js.html.CanvasRenderingContext2D"/>
			<meta><m n=":noCompletion"/></meta>
		</__context>
		<__style>
			<c path="js.html.CSSStyleDeclaration"/>
			<meta><m n=":noCompletion"/></meta>
		</__style>
		<dispatchEvent public="1" set="method" line="767" override="1"><f a="event">
	<c path="openfl.events.Event"/>
	<x path="Bool"/>
</f></dispatchEvent>
		<getBounds public="1" set="method" line="813">
			<f a="targetCoordinateSpace">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc><![CDATA[* Returns a rectangle that defines the area of the display object relative
	 * to the coordinate system of the <code>targetCoordinateSpace</code> object.
	 * Consider the following code, which shows how the rectangle returned can
	 * vary depending on the <code>targetCoordinateSpace</code> parameter that
	 * you pass to the method:
	 *
	 * <p><b>Note:</b> Use the <code>localToGlobal()</code> and
	 * <code>globalToLocal()</code> methods to convert the display object's local
	 * coordinates to display coordinates, or display coordinates to local
	 * coordinates, respectively.</p>
	 *
	 * <p>The <code>getBounds()</code> method is similar to the
	 * <code>getRect()</code> method; however, the Rectangle returned by the
	 * <code>getBounds()</code> method includes any strokes on shapes, whereas
	 * the Rectangle returned by the <code>getRect()</code> method does not. For
	 * an example, see the description of the <code>getRect()</code> method.</p>
	 * 
	 * @param targetCoordinateSpace The display object that defines the
	 *                              coordinate system to use.
	 * @return The rectangle that defines the area of the display object relative
	 *         to the <code>targetCoordinateSpace</code> object's coordinate
	 *         system.]]></haxe_doc>
		</getBounds>
		<getRect public="1" set="method" line="850">
			<f a="targetCoordinateSpace">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc><![CDATA[* Returns a rectangle that defines the boundary of the display object, based
	 * on the coordinate system defined by the <code>targetCoordinateSpace</code>
	 * parameter, excluding any strokes on shapes. The values that the
	 * <code>getRect()</code> method returns are the same or smaller than those
	 * returned by the <code>getBounds()</code> method.
	 *
	 * <p><b>Note:</b> Use <code>localToGlobal()</code> and
	 * <code>globalToLocal()</code> methods to convert the display object's local
	 * coordinates to Stage coordinates, or Stage coordinates to local
	 * coordinates, respectively.</p>
	 * 
	 * @param targetCoordinateSpace The display object that defines the
	 *                              coordinate system to use.
	 * @return The rectangle that defines the area of the display object relative
	 *         to the <code>targetCoordinateSpace</code> object's coordinate
	 *         system.]]></haxe_doc>
		</getRect>
		<globalToLocal public="1" set="method" line="875">
			<f a="pos">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc><![CDATA[* Converts the <code>point</code> object from the Stage(global) coordinates
	 * to the display object's(local) coordinates.
	 *
	 * <p>To use this method, first create an instance of the Point class. The
	 * <i>x</i> and <i>y</i> values that you assign represent global coordinates
	 * because they relate to the origin(0,0) of the main display area. Then
	 * pass the Point instance as the parameter to the
	 * <code>globalToLocal()</code> method. The method returns a new Point object
	 * with <i>x</i> and <i>y</i> values that relate to the origin of the display
	 * object instead of the origin of the Stage.</p>
	 * 
	 * @param point An object created with the Point class. The Point object
	 *              specifies the <i>x</i> and <i>y</i> coordinates as
	 *              properties.
	 * @return A Point object with coordinates relative to the display object.]]></haxe_doc>
		</globalToLocal>
		<hitTestObject public="1" set="method" line="890">
			<f a="obj">
				<c path="openfl.display.DisplayObject"/>
				<x path="Bool"/>
			</f>
			<haxe_doc><![CDATA[* Evaluates the bounding box of the display object to see if it overlaps or
	 * intersects with the bounding box of the <code>obj</code> display object.
	 * 
	 * @param obj The display object to test against.
	 * @return <code>true</code> if the bounding boxes of the display objects
	 *         intersect; <code>false</code> if not.]]></haxe_doc>
		</hitTestObject>
		<hitTestPoint public="1" set="method" line="922">
			<f a="x:y:?shapeFlag" v="::false">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<haxe_doc><![CDATA[* Evaluates the display object to see if it overlaps or intersects with the
	 * point specified by the <code>x</code> and <code>y</code> parameters. The
	 * <code>x</code> and <code>y</code> parameters specify a point in the
	 * coordinate space of the Stage, not the display object container that
	 * contains the display object(unless that display object container is the
	 * Stage).
	 * 
	 * @param x         The <i>x</i> coordinate to test against this object.
	 * @param y         The <i>y</i> coordinate to test against this object.
	 * @param shapeFlag Whether to check against the actual pixels of the object
	 *                 (<code>true</code>) or the bounding box
	 *                 (<code>false</code>).
	 * @return <code>true</code> if the display object overlaps or intersects
	 *         with the specified point; <code>false</code> otherwise.]]></haxe_doc>
		</hitTestPoint>
		<localToGlobal public="1" set="method" line="959">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<haxe_doc><![CDATA[* Converts the <code>point</code> object from the display object's(local)
	 * coordinates to the Stage(global) coordinates.
	 *
	 * <p>This method allows you to convert any given <i>x</i> and <i>y</i>
	 * coordinates from values that are relative to the origin(0,0) of a
	 * specific display object(local coordinates) to values that are relative to
	 * the origin of the Stage(global coordinates).</p>
	 *
	 * <p>To use this method, first create an instance of the Point class. The
	 * <i>x</i> and <i>y</i> values that you assign represent local coordinates
	 * because they relate to the origin of the display object.</p>
	 *
	 * <p>You then pass the Point instance that you created as the parameter to
	 * the <code>localToGlobal()</code> method. The method returns a new Point
	 * object with <i>x</i> and <i>y</i> values that relate to the origin of the
	 * Stage instead of the origin of the display object.</p>
	 * 
	 * @param point The name or identifier of a point created with the Point
	 *              class, specifying the <i>x</i> and <i>y</i> coordinates as
	 *              properties.
	 * @return A Point object with coordinates relative to the Stage.]]></haxe_doc>
		</localToGlobal>
		<__broadcast set="method" line="966">
			<f a="event:notifyChilden">
				<c path="openfl.events.Event"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__broadcast>
		<__getBounds set="method" line="987">
			<f a="rect:matrix">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getBounds>
		<__getInteractive set="method" line="994">
			<f a="stack">
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getInteractive>
		<__getLocalBounds get="inline" set="null" line="1001">
			<f a="rect">
				<c path="openfl.geom.Rectangle"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getLocalBounds>
		<__getTransform set="method" line="1009">
			<f a=""><c path="openfl.geom.Matrix"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__getTransform>
		<__hitTest set="method" line="1048">
			<f a="x:y:shapeFlag:stack:interactiveOnly">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__hitTest>
		<__renderCanvas public="1" set="method" line="1055">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderCanvas>
		<__renderDOM public="1" set="method" line="1062">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderDOM>
		<__renderGL public="1" set="method" line="1069">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderGL>
		<__renderMask public="1" set="method" line="1076">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderMask>
		<__setStageReference set="method" line="1083">
			<f a="stage">
				<c path="openfl.display.Stage"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__setStageReference>
		<__setRenderDirty get="inline" set="null" line="1106">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__setRenderDirty>
		<__setTransformDirty get="inline" set="null" line="1118">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__setTransformDirty>
		<__update public="1" set="method" line="1130">
			<f a="transformOnly:updateChildren">
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__update>
		<__updateChildren public="1" set="method" line="1285">
			<f a="transformOnly">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__updateChildren>
		<get_alpha set="method" line="1308">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_alpha>
		<set_alpha set="method" line="1315">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_alpha>
		<get_filters set="method" line="1323">
			<f a=""><c path="Array"><c path="openfl.filters.BitmapFilter"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_filters>
		<set_filters set="method" line="1338">
			<f a="value">
				<c path="Array"><c path="openfl.filters.BitmapFilter"/></c>
				<c path="Array"><c path="openfl.filters.BitmapFilter"/></c>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_filters>
		<get_height set="method" line="1347">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_height>
		<set_height set="method" line="1357">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_height>
		<get_mask set="method" line="1377">
			<f a=""><c path="openfl.display.DisplayObject"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_mask>
		<set_mask set="method" line="1384">
			<f a="value">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_mask>
		<get_mouseX set="method" line="1394">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_mouseX>
		<get_mouseY set="method" line="1407">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_mouseY>
		<get_name set="method" line="1420">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_name>
		<set_name set="method" line="1427">
			<f a="value">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_name>
		<get_root set="method" line="1434">
			<f a=""><c path="openfl.display.DisplayObject"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_root>
		<get_rotation set="method" line="1447">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_rotation>
		<set_rotation set="method" line="1454">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_rotation>
		<get_scaleX set="method" line="1462">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_scaleX>
		<set_scaleX set="method" line="1469">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_scaleX>
		<get_scaleY set="method" line="1477">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_scaleY>
		<set_scaleY set="method" line="1484">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_scaleY>
		<get_scrollRect set="method" line="1492">
			<f a=""><c path="openfl.geom.Rectangle"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_scrollRect>
		<set_scrollRect set="method" line="1499">
			<f a="value">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_scrollRect>
		<get_transform set="method" line="1513">
			<f a=""><c path="openfl.geom.Transform"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_transform>
		<set_transform set="method" line="1526">
			<f a="value">
				<c path="openfl.geom.Transform"/>
				<c path="openfl.geom.Transform"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_transform>
		<get_visible set="method" line="1549">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_visible>
		<set_visible set="method" line="1556">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_visible>
		<get_width set="method" line="1564">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_width>
		<set_width set="method" line="1574">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_width>
		<get_x set="method" line="1594">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_x>
		<set_x set="method" line="1601">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_x>
		<get_y set="method" line="1609">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_y>
		<set_y set="method" line="1616">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_y>
		<new set="method" line="740"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl.display.InteractiveObject" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/InteractiveObject.hx">
		<extends path="openfl.display.DisplayObject"/>
		<doubleClickEnabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* Specifies whether the object receives <code>doubleClick</code> events. The
	 * default value is <code>false</code>, which means that by default an
	 * InteractiveObject instance does not receive <code>doubleClick</code>
	 * events. If the <code>doubleClickEnabled</code> property is set to
	 * <code>true</code>, the instance receives <code>doubleClick</code> events
	 * within its bounds. The <code>mouseEnabled</code> property of the
	 * InteractiveObject instance must also be set to <code>true</code> for the
	 * object to receive <code>doubleClick</code> events.
	 *
	 * <p>No event is dispatched by setting this property. You must use the
	 * <code>addEventListener()</code> method to add an event listener for the
	 * <code>doubleClick</code> event.</p>]]></haxe_doc>
		</doubleClickEnabled>
		<focusRect public="1"><d/></focusRect>
		<mouseEnabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* Specifies whether this object receives mouse, or other user input,
	 * messages. The default value is <code>true</code>, which means that by
	 * default any InteractiveObject instance that is on the display list
	 * receives mouse events or other user input events. If
	 * <code>mouseEnabled</code> is set to <code>false</code>, the instance does
	 * not receive any mouse events(or other user input events like keyboard
	 * events). Any children of this instance on the display list are not
	 * affected. To change the <code>mouseEnabled</code> behavior for all
	 * children of an object on the display list, use
	 * <code>openfl.display.DisplayObjectContainer.mouseChildren</code>.
	 *
	 * <p> No event is dispatched by setting this property. You must use the
	 * <code>addEventListener()</code> method to create interactive
	 * functionality.</p>]]></haxe_doc>
		</mouseEnabled>
		<needsSoftKeyboard public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* Specifies whether a virtual keyboard(an on-screen, software keyboard)
	 * should display when this InteractiveObject instance receives focus.
	 *
	 * <p>By default, the value is <code>false</code> and focusing an
	 * InteractiveObject instance does not raise a soft keyboard. If the
	 * <code>needsSoftKeyboard</code> property is set to <code>true</code>, the
	 * runtime raises a soft keyboard when the InteractiveObject instance is
	 * ready to accept user input. An InteractiveObject instance is ready to
	 * accept user input after a programmatic call to set the Stage
	 * <code>focus</code> property or a user interaction, such as a "tap." If the
	 * client system has a hardware keyboard available or does not support
	 * virtual keyboards, then the soft keyboard is not raised.</p>
	 *
	 * <p>The InteractiveObject instance dispatches
	 * <code>softKeyboardActivating</code>, <code>softKeyboardActivate</code>,
	 * and <code>softKeyboardDeactivate</code> events when the soft keyboard
	 * raises and lowers.</p>
	 *
	 * <p><b>Note:</b> This property is not supported in AIR applications on
	 * iOS.</p>]]></haxe_doc>
		</needsSoftKeyboard>
		<softKeyboardInputAreaOfInterest public="1"><c path="openfl.geom.Rectangle"/></softKeyboardInputAreaOfInterest>
		<tabEnabled public="1"><x path="Bool"/></tabEnabled>
		<tabIndex public="1"><x path="Int"/></tabIndex>
		<requestSoftKeyboard public="1" set="method" line="1155">
			<f a=""><x path="Bool"/></f>
			<haxe_doc><![CDATA[* Raises a virtual keyboard.
	 *
	 * <p>Calling this method focuses the InteractiveObject instance and raises
	 * the soft keyboard, if necessary. The <code>needsSoftKeyboard</code> must
	 * also be <code>true</code>. A keyboard is not raised if a hardware keyboard
	 * is available, or if the client system does not support virtual
	 * keyboards.</p>
	 *
	 * <p><b>Note:</b> This method is not supported in AIR applications on
	 * iOS.</p>
	 * 
	 * @return A value of <code>true</code> means that the soft keyboard request
	 *         was granted; <code>false</code> means that the soft keyboard was
	 *         not raised.]]></haxe_doc>
		</requestSoftKeyboard>
		<__getInteractive set="method" line="1164" override="1">
			<f a="stack">
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getInteractive>
		<new public="1" set="method" line="1126">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[* Calling the <code>new InteractiveObject()</code> constructor throws an
	 * <code>ArgumentError</code> exception. You can, however, call constructors
	 * for the following subclasses of InteractiveObject:
	 * <ul>
	 *   <li><code>new SimpleButton()</code></li>
	 *   <li><code>new TextField()</code></li>
	 *   <li><code>new Loader()</code></li>
	 *   <li><code>new Sprite()</code></li>
	 *   <li><code>new MovieClip()</code></li>
	 * </ul>]]></haxe_doc>
		</new>
		<haxe_doc><![CDATA[* The InteractiveObject class is the abstract base class for all display
 * objects with which the user can interact, using the mouse, keyboard, or
 * other user input device.
 *
 * <p>You cannot instantiate the InteractiveObject class directly. A call to
 * the <code>new InteractiveObject()</code> constructor throws an
 * <code>ArgumentError</code> exception.</p>
 *
 * <p>The InteractiveObject class itself does not include any APIs for
 * rendering content onscreen. To create a custom subclass of the
 * InteractiveObject class, extend one of the subclasses that do have APIs for
 * rendering content onscreen, such as the Sprite, SimpleButton, TextField, or
 * MovieClip classes.</p>
 * 
 * @event clear                  Dispatched when the user selects 'Clear'(or
 *                               'Delete') from the text context menu. This
 *                               event is dispatched to the object that
 *                               currently has focus. If the object that
 *                               currently has focus is a TextField, the
 *                               default behavior of this event is to cause
 *                               any currently selected text in the text field
 *                               to be deleted.
 * @event click                  Dispatched when a user presses and releases
 *                               the main button of the user's pointing device
 *                               over the same InteractiveObject. For a click
 *                               event to occur, it must always follow this
 *                               series of events in the order of occurrence:
 *                               mouseDown event, then mouseUp. The target
 *                               object must be identical for both of these
 *                               events; otherwise the <code>click</code>
 *                               event does not occur. Any number of other
 *                               mouse events can occur at any time between
 *                               the <code>mouseDown</code> or
 *                               <code>mouseUp</code> events; the
 *                               <code>click</code> event still occurs.
 * @event contextMenu            Dispatched when a user gesture triggers the
 *                               context menu associated with this interactive
 *                               object in an AIR application.
 * @event copy                   Dispatched when the user activates the
 *                               platform-specific accelerator key combination
 *                               for a copy operation or selects 'Copy' from
 *                               the text context menu. This event is
 *                               dispatched to the object that currently has
 *                               focus. If the object that currently has focus
 *                               is a TextField, the default behavior of this
 *                               event is to cause any currently selected text
 *                               in the text field to be copied to the
 *                               clipboard.
 * @event cut                    Dispatched when the user activates the
 *                               platform-specific accelerator key combination
 *                               for a cut operation or selects 'Cut' from the
 *                               text context menu. This event is dispatched
 *                               to the object that currently has focus. If
 *                               the object that currently has focus is a
 *                               TextField, the default behavior of this event
 *                               is to cause any currently selected text in
 *                               the text field to be cut to the clipboard.
 * @event doubleClick            Dispatched when a user presses and releases
 *                               the main button of a pointing device twice in
 *                               rapid succession over the same
 *                               InteractiveObject when that object's
 *                               <code>doubleClickEnabled</code> flag is set
 *                               to <code>true</code>. For a
 *                               <code>doubleClick</code> event to occur, it
 *                               must immediately follow the following series
 *                               of events: <code>mouseDown</code>,
 *                               <code>mouseUp</code>, <code>click</code>,
 *                               <code>mouseDown</code>, <code>mouseUp</code>.
 *                               All of these events must share the same
 *                               target as the <code>doubleClick</code> event.
 *                               The second click, represented by the second
 *                               <code>mouseDown</code> and
 *                               <code>mouseUp</code> events, must occur
 *                               within a specific period of time after the
 *                               <code>click</code> event. The allowable
 *                               length of this period varies by operating
 *                               system and can often be configured by the
 *                               user. If the target is a selectable text
 *                               field, the word under the pointer is selected
 *                               as the default behavior. If the target
 *                               InteractiveObject does not have its
 *                               <code>doubleClickEnabled</code> flag set to
 *                               <code>true</code> it receives two
 *                               <code>click</code> events.
 *
 *                               <p>The <code>doubleClickEnabled</code>
 *                               property defaults to <code>false</code>. </p>
 *
 *                               <p>The double-click text selection behavior
 *                               of a TextField object is not related to the
 *                               <code>doubleClick</code> event. Use
 *                               <code>TextField.doubleClickEnabled</code> to
 *                               control TextField selections.</p>
 * @event focusIn                Dispatched <i>after</i> a display object
 *                               gains focus. This situation happens when a
 *                               user highlights the object with a pointing
 *                               device or keyboard navigation. The recipient
 *                               of such focus is called the target object of
 *                               this event, while the corresponding
 *                               InteractiveObject instance that lost focus
 *                               because of this change is called the related
 *                               object. A reference to the related object is
 *                               stored in the receiving object's
 *                               <code>relatedObject</code> property. The
 *                               <code>shiftKey</code> property is not used.
 *                               This event follows the dispatch of the
 *                               previous object's <code>focusOut</code>
 *                               event.
 * @event focusOut               Dispatched <i>after</i> a display object
 *                               loses focus. This happens when a user
 *                               highlights a different object with a pointing
 *                               device or keyboard navigation. The object
 *                               that loses focus is called the target object
 *                               of this event, while the corresponding
 *                               InteractiveObject instance that receives
 *                               focus is called the related object. A
 *                               reference to the related object is stored in
 *                               the target object's
 *                               <code>relatedObject</code> property. The
 *                               <code>shiftKey</code> property is not used.
 *                               This event precedes the dispatch of the
 *                               <code>focusIn</code> event by the related
 *                               object.
 * @event gesturePan             Dispatched when the user moves a point of
 *                               contact over the InteractiveObject instance
 *                               on a touch-enabled device(such as moving a
 *                               finger from left to right over a display
 *                               object on a mobile phone or tablet with a
 *                               touch screen). Some devices might also
 *                               interpret this contact as a
 *                               <code>mouseOver</code> event and as a
 *                               <code>touchOver</code> event.
 *
 *                               <p>Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               <code>mouseOver</code> event or a
 *                               <code>touchOver</code> event or a
 *                               <code>gesturePan</code> event, or all if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               <code>mouseOver</code> event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               <code>gesturePan</code> event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event gesturePressAndTap     Dispatched when the user creates a point of
 *                               contact with an InteractiveObject instance,
 *                               then taps on a touch-enabled device(such as
 *                               placing several fingers over a display object
 *                               to open a menu and then taps one finger to
 *                               select a menu item on a mobile phone or
 *                               tablet with a touch screen). Some devices
 *                               might also interpret this contact as a
 *                               combination of several mouse events, as well.
 *
 *
 *                               <p>Specifically, if a user moves a finger
 *                               over an InteractiveObject, and then provides
 *                               a secondary tap, the InteractiveObject
 *                               instance can dispatch a
 *                               <code>mouseOver</code> event and a
 *                               <code>click</code> event(among others) as
 *                               well as the <code>gesturePressAndTap</code>
 *                               event, or all if the current environment
 *                               supports it. Choose how you want to handle
 *                               the user interaction. Use the
 *                               openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               <code>mouseOver</code> event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               <code>gesturePressAndTap</code> event, you
 *                               can design your event handler to respond to
 *                               the specific needs of a touch-enabled
 *                               environment and provide users with a richer
 *                               touch-enabled experience. You can also handle
 *                               both events, separately, to provide a
 *                               different response for a touch event than a
 *                               mouse event.</p>
 *
 *                               <p>When handling the properties of the event
 *                               object, note that the <code>localX</code> and
 *                               <code>localY</code> properties are set to the
 *                               primary point of contact(the "push"). The
 *                               <code>offsetX</code> and <code>offsetY</code>
 *                               properties are the distance to the secondary
 *                               point of contact(the "tap").</p>
 * @event gestureRotate          Dispatched when the user performs a rotation
 *                               gesture at a point of contact with an
 *                               InteractiveObject instance(such as touching
 *                               two fingers and rotating them over a display
 *                               object on a mobile phone or tablet with a
 *                               touch screen). Two-finger rotation is a
 *                               common rotation gesture, but each device and
 *                               operating system can have its own
 *                               requirements to indicate rotation. Some
 *                               devices might also interpret this contact as
 *                               a combination of several mouse events, as
 *                               well.
 *
 *                               <p>Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               <code>mouseOver</code> event and a
 *                               <code>click</code> event(among others), in
 *                               addition to the <code>gestureRotate</code>
 *                               event, or all if the current environment
 *                               supports it. Choose how you want to handle
 *                               the user interaction. Use the
 *                               openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               <code>mouseOver</code> event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               <code>gestureRotate</code> event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p>When handling the properties of the event
 *                               object, note that the <code>localX</code> and
 *                               <code>localY</code> properties are set to the
 *                               primary point of contact. The
 *                               <code>offsetX</code> and <code>offsetY</code>
 *                               properties are the distance to the point of
 *                               contact where the rotation gesture is
 *                               complete.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event gestureSwipe           Dispatched when the user performs a swipe
 *                               gesture at a point of contact with an
 *                               InteractiveObject instance(such as touching
 *                               three fingers to a screen and then moving
 *                               them in parallel over a display object on a
 *                               mobile phone or tablet with a touch screen).
 *                               Moving several fingers in parallel is a
 *                               common swipe gesture, but each device and
 *                               operating system can have its own
 *                               requirements for a swipe. Some devices might
 *                               also interpret this contact as a combination
 *                               of several mouse events, as well.
 *
 *                               <p>Specifically, if a user moves a finger
 *                               over an InteractiveObject, and then moves the
 *                               fingers together, the InteractiveObject
 *                               instance can dispatch a <code>rollOver</code>
 *                               event and a <code>rollOut</code> event(among
 *                               others), in addition to the
 *                               <code>gestureSwipe</code> event, or all if
 *                               the current environment supports it. Choose
 *                               how you want to handle the user interaction.
 *                               If you choose to handle the
 *                               <code>rollOver</code> event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               <code>gestureSwipe</code> event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p>When handling the properties of the event
 *                               object, note that the <code>localX</code> and
 *                               <code>localY</code> properties are set to the
 *                               primary point of contact. The
 *                               <code>offsetX</code> and <code>offsetY</code>
 *                               properties are the distance to the point of
 *                               contact where the swipe gesture is
 *                               complete.</p>
 *
 *                               <p><b>Note:</b> While some devices using the
 *                               Mac OS operating system can interpret a
 *                               four-finger swipe, this API only supports a
 *                               three-finger swipe.</p>
 * @event gestureTwoFingerTap    Dispatched when the user presses two points
 *                               of contact over the same InteractiveObject
 *                               instance on a touch-enabled device(such as
 *                               presses and releases two fingers over a
 *                               display object on a mobile phone or tablet
 *                               with a touch screen). Some devices might also
 *                               interpret this contact as a
 *                               <code>doubleClick</code> event.
 *
 *                               <p>Specifically, if a user taps two fingers
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               <code>doubleClick</code> event or a
 *                               <code>gestureTwoFingerTap</code> event, or
 *                               both if the current environment supports it.
 *                               Choose how you want to handle the user
 *                               interaction. Use the openfl.ui.Multitouch
 *                               class to manage touch event handling(enable
 *                               touch gesture event handling, simple touch
 *                               point event handling, or disable touch events
 *                               so only mouse events are dispatched). If you
 *                               choose to handle the <code>doubleClick</code>
 *                               event, then the same event handler will run
 *                               on a touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               <code>gestureTwoFingerTap</code> event, you
 *                               can design your event handler to respond to
 *                               the specific needs of a touch-enabled
 *                               environment and provide users with a richer
 *                               touch-enabled experience. You can also handle
 *                               both events, separately, to provide a
 *                               different response for a touch event than a
 *                               mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event gestureZoom            Dispatched when the user performs a zoom
 *                               gesture at a point of contact with an
 *                               InteractiveObject instance(such as touching
 *                               two fingers to a screen and then quickly
 *                               spreading the fingers apart over a display
 *                               object on a mobile phone or tablet with a
 *                               touch screen). Moving fingers apart is a
 *                               common zoom gesture, but each device and
 *                               operating system can have its own
 *                               requirements to indicate zoom. Some devices
 *                               might also interpret this contact as a
 *                               combination of several mouse events, as well.
 *
 *
 *                               <p>Specifically, if a user moves a finger
 *                               over an InteractiveObject, and then moves the
 *                               fingers apart, the InteractiveObject instance
 *                               can dispatch a <code>mouseOver</code> event
 *                               and a <code>click</code> event(among
 *                               others), in addition to the
 *                               <code>gestureZoom</code> event, or all if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               <code>mouseOver</code> event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               <code>gestureZoom</code> event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p>When handling the properties of the event
 *                               object, note that the <code>localX</code> and
 *                               <code>localY</code> properties are set to the
 *                               primary point of contact. The
 *                               <code>offsetX</code> and <code>offsetY</code>
 *                               properties are the distance to the point of
 *                               contact where the zoom gesture is
 *                               complete.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event imeStartComposition    This event is dispatched to any client app
 *                               that supports inline input with an IME
 * @event keyDown                Dispatched when the user presses a key.
 *                               Mappings between keys and specific characters
 *                               vary by device and operating system. This
 *                               event type is generated after such a mapping
 *                               occurs but before the processing of an input
 *                               method editor(IME). IMEs are used to enter
 *                               characters, such as Chinese ideographs, that
 *                               the standard QWERTY keyboard is ill-equipped
 *                               to produce. This event occurs before the
 *                               <code>keyUp</code> event.
 *
 *                               <p>In AIR, canceling this event prevents the
 *                               character from being entered into a text
 *                               field.</p>
 * @event keyFocusChange         Dispatched when the user attempts to change
 *                               focus by using keyboard navigation. The
 *                               default behavior of this event is to change
 *                               the focus and dispatch the corresponding
 *                               <code>focusIn</code> and
 *                               <code>focusOut</code> events.
 *
 *                               <p>This event is dispatched to the object
 *                               that currently has focus. The related object
 *                               for this event is the InteractiveObject
 *                               instance that receives focus if you do not
 *                               prevent the default behavior. You can prevent
 *                               the change in focus by calling the
 *                               <code>preventDefault()</code> method in an
 *                               event listener that is properly registered
 *                               with the target object. Focus changes and
 *                               <code>focusIn</code> and
 *                               <code>focusOut</code> events are dispatched
 *                               by default.</p>
 * @event keyUp                  Dispatched when the user releases a key.
 *                               Mappings between keys and specific characters
 *                               vary by device and operating system. This
 *                               event type is generated after such a mapping
 *                               occurs but before the processing of an input
 *                               method editor(IME). IMEs are used to enter
 *                               characters, such as Chinese ideographs, that
 *                               the standard QWERTY keyboard is ill-equipped
 *                               to produce. This event occurs after a
 *                               <code>keyDown</code> event and has the
 *                               following characteristics:
 * @event middleClick            Dispatched when a user presses and releases
 *                               the middle button of the user's pointing
 *                               device over the same InteractiveObject. For a
 *                               <code>middleClick</code> event to occur, it
 *                               must always follow this series of events in
 *                               the order of occurrence:
 *                               <code>middleMouseDown</code> event, then
 *                               <code>middleMouseUp</code>. The target object
 *                               must be identical for both of these events;
 *                               otherwise the <code>middleClick</code> event
 *                               does not occur. Any number of other mouse
 *                               events can occur at any time between the
 *                               <code>middleMouseDown</code> or
 *                               <code>middleMouseUp</code> events; the
 *                               <code>middleClick</code> event still occurs.
 * @event middleMouseDown        Dispatched when a user presses the middle
 *                               pointing device button over an
 *                               InteractiveObject instance.
 * @event middleMouseUp          Dispatched when a user releases the pointing
 *                               device button over an InteractiveObject
 *                               instance.
 * @event mouseDown              Dispatched when a user presses the pointing
 *                               device button over an InteractiveObject
 *                               instance. If the target is a SimpleButton
 *                               instance, the SimpleButton instance displays
 *                               the <code>downState</code> display object as
 *                               the default behavior. If the target is a
 *                               selectable text field, the text field begins
 *                               selection as the default behavior.
 * @event mouseFocusChange       Dispatched when the user attempts to change
 *                               focus by using a pointer device. The default
 *                               behavior of this event is to change the focus
 *                               and dispatch the corresponding
 *                               <code>focusIn</code> and
 *                               <code>focusOut</code> events.
 *
 *                               <p>This event is dispatched to the object
 *                               that currently has focus. The related object
 *                               for this event is the InteractiveObject
 *                               instance that receives focus if you do not
 *                               prevent the default behavior. You can prevent
 *                               the change in focus by calling
 *                               <code>preventDefault()</code> in an event
 *                               listener that is properly registered with the
 *                               target object. The <code>shiftKey</code>
 *                               property is not used. Focus changes and
 *                               <code>focusIn</code> and
 *                               <code>focusOut</code> events are dispatched
 *                               by default.</p>
 * @event mouseMove              Dispatched when a user moves the pointing
 *                               device while it is over an InteractiveObject.
 *                               If the target is a text field that the user
 *                               is selecting, the selection is updated as the
 *                               default behavior.
 * @event mouseOut               Dispatched when the user moves a pointing
 *                               device away from an InteractiveObject
 *                               instance. The event target is the object
 *                               previously under the pointing device. The
 *                               <code>relatedObject</code> is the object the
 *                               pointing device has moved to. If the target
 *                               is a SimpleButton instance, the button
 *                               displays the <code>upState</code> display
 *                               object as the default behavior.
 *
 *                               <p>The <code>mouseOut</code> event is
 *                               dispatched each time the mouse leaves the
 *                               area of any child object of the display
 *                               object container, even if the mouse remains
 *                               over another child object of the display
 *                               object container. This is different behavior
 *                               than the purpose of the <code>rollOut</code>
 *                               event, which is to simplify the coding of
 *                               rollover behaviors for display object
 *                               containers with children. When the mouse
 *                               leaves the area of a display object or the
 *                               area of any of its children to go to an
 *                               object that is not one of its children, the
 *                               display object dispatches the
 *                               <code>rollOut</code> event.The
 *                               <code>rollOut</code> events are dispatched
 *                               consecutively up the parent chain of the
 *                               object, starting with the object and ending
 *                               with the highest parent that is neither the
 *                               root nor an ancestor of the
 *                               <code>relatedObject</code>.</p>
 * @event mouseOver              Dispatched when the user moves a pointing
 *                               device over an InteractiveObject instance.
 *                               The <code>relatedObject</code> is the object
 *                               that was previously under the pointing
 *                               device. If the target is a SimpleButton
 *                               instance, the object displays the
 *                               <code>overState</code> or
 *                               <code>upState</code> display object,
 *                               depending on whether the mouse button is
 *                               down, as the default behavior.
 *
 *                               <p>The <code>mouseOver</code> event is
 *                               dispatched each time the mouse enters the
 *                               area of any child object of the display
 *                               object container, even if the mouse was
 *                               already over another child object of the
 *                               display object container. This is different
 *                               behavior than the purpose of the
 *                               <code>rollOver</code> event, which is to
 *                               simplify the coding of rollout behaviors for
 *                               display object containers with children. When
 *                               the mouse enters the area of a display object
 *                               or the area of any of its children from an
 *                               object that is not one of its children, the
 *                               display object dispatches the
 *                               <code>rollOver</code> event. The
 *                               <code>rollOver</code> events are dispatched
 *                               consecutively down the parent chain of the
 *                               object, starting with the highest parent that
 *                               is neither the root nor an ancestor of the
 *                               <code>relatedObject</code> and ending with
 *                               the object.</p>
 * @event mouseUp                Dispatched when a user releases the pointing
 *                               device button over an InteractiveObject
 *                               instance. If the target is a SimpleButton
 *                               instance, the object displays the
 *                               <code>upState</code> display object. If the
 *                               target is a selectable text field, the text
 *                               field ends selection as the default behavior.
 * @event mouseWheel             Dispatched when a mouse wheel is spun over an
 *                               InteractiveObject instance. If the target is
 *                               a text field, the text scrolls as the default
 *                               behavior. Only available on Microsoft Windows
 *                               operating systems.
 * @event nativeDragComplete     Dispatched by the drag initiator
 *                               InteractiveObject when the user releases the
 *                               drag gesture.
 *
 *                               <p>The event's dropAction property indicates
 *                               the action set by the drag target object; a
 *                               value of "none"
 *                              (<code>DragActions.NONE</code>) indicates
 *                               that the drop was canceled or was not
 *                               accepted.</p>
 *
 *                               <p>The <code>nativeDragComplete</code> event
 *                               handler is a convenient place to update the
 *                               state of the initiating display object, for
 *                               example, by removing an item from a list(on
 *                               a drag action of "move"), or by changing the
 *                               visual properties.</p>
 * @event nativeDragDrop         Dispatched by the target InteractiveObject
 *                               when a dragged object is dropped on it and
 *                               the drop has been accepted with a call to
 *                               DragManager.acceptDragDrop().
 *
 *                               <p>Access the dropped data using the event
 *                               object <code>clipboard</code> property.</p>
 *
 *                               <p>The handler for this event should set the
 *                               <code>DragManager.dropAction</code> property
 *                               to provide feedback to the initiator object
 *                               about which drag action was taken. If no
 *                               value is set, the DragManager will select a
 *                               default value from the list of allowed
 *                               actions.</p>
 * @event nativeDragEnter        Dispatched by an InteractiveObject when a
 *                               drag gesture enters its boundary.
 *
 *                               <p>Handle either the
 *                               <code>nativeDragEnter</code> or
 *                               <code>nativeDragOver</code> events to allow
 *                               the display object to become the drop
 *                               target.</p>
 *
 *                               <p>To determine whether the dispatching
 *                               display object can accept the drop, check the
 *                               suitability of the data in
 *                               <code>clipboard</code> property of the event
 *                               object, and the allowed drag actions in the
 *                               <code>allowedActions</code> property.</p>
 * @event nativeDragExit         Dispatched by an InteractiveObject when a
 *                               drag gesture leaves its boundary.
 * @event nativeDragOver         Dispatched by an InteractiveObject
 *                               continually while a drag gesture remains
 *                               within its boundary.
 *
 *                               <p><code>nativeDragOver</code> events are
 *                               dispatched whenever the mouse is moved. On
 *                               Windows and Mac, they are also dispatched on
 *                               a short timer interval even when the mouse
 *                               has not moved.</p>
 *
 *                               <p>Handle either the
 *                               <code>nativeDragOver</code> or
 *                               <code>nativeDragEnter</code> events to allow
 *                               the display object to become the drop
 *                               target.</p>
 *
 *                               <p>To determine whether the dispatching
 *                               display object can accept the drop, check the
 *                               suitability of the data in
 *                               <code>clipboard</code> property of the event
 *                               object, and the allowed drag actions in the
 *                               <code>allowedActions</code> property.</p>
 * @event nativeDragStart        Dispatched at the beginning of a drag
 *                               operation by the InteractiveObject that is
 *                               specified as the drag initiator in the
 *                               DragManager.doDrag() call.
 * @event nativeDragUpdate       Dispatched during a drag operation by the
 *                               InteractiveObject that is specified as the
 *                               drag initiator in the DragManager.doDrag()
 *                               call.
 *
 *                               <p><code>nativeDragUpdate</code> events are
 *                               not dispatched on Linux.</p>
 * @event paste                  Dispatched when the user activates the
 *                               platform-specific accelerator key combination
 *                               for a paste operation or selects 'Paste' from
 *                               the text context menu. This event is
 *                               dispatched to the object that currently has
 *                               focus. If the object that currently has focus
 *                               is a TextField, the default behavior of this
 *                               event is to cause the contents of the
 *                               clipboard to be pasted into the text field at
 *                               the current insertion point replacing any
 *                               currently selected text in the text field.
 * @event rightClick             Dispatched when a user presses and releases
 *                               the right button of the user's pointing
 *                               device over the same InteractiveObject. For a
 *                               <code>rightClick</code> event to occur, it
 *                               must always follow this series of events in
 *                               the order of occurrence:
 *                               <code>rightMouseDown</code> event, then
 *                               <code>rightMouseUp</code>. The target object
 *                               must be identical for both of these events;
 *                               otherwise the <code>rightClick</code> event
 *                               does not occur. Any number of other mouse
 *                               events can occur at any time between the
 *                               <code>rightMouseDown</code> or
 *                               <code>rightMouseUp</code> events; the
 *                               <code>rightClick</code> event still occurs.
 * @event rightMouseDown         Dispatched when a user presses the pointing
 *                               device button over an InteractiveObject
 *                               instance.
 * @event rightMouseUp           Dispatched when a user releases the pointing
 *                               device button over an InteractiveObject
 *                               instance.
 * @event rollOut                Dispatched when the user moves a pointing
 *                               device away from an InteractiveObject
 *                               instance. The event target is the object
 *                               previously under the pointing device or a
 *                               parent of that object. The
 *                               <code>relatedObject</code> is the object that
 *                               the pointing device has moved to. The
 *                               <code>rollOut</code> events are dispatched
 *                               consecutively up the parent chain of the
 *                               object, starting with the object and ending
 *                               with the highest parent that is neither the
 *                               root nor an ancestor of the
 *                               <code>relatedObject</code>.
 *
 *                               <p>The purpose of the <code>rollOut</code>
 *                               event is to simplify the coding of rollover
 *                               behaviors for display object containers with
 *                               children. When the mouse leaves the area of a
 *                               display object or the area of any of its
 *                               children to go to an object that is not one
 *                               of its children, the display object
 *                               dispatches the <code>rollOut</code> event.
 *                               This is different behavior than that of the
 *                               <code>mouseOut</code> event, which is
 *                               dispatched each time the mouse leaves the
 *                               area of any child object of the display
 *                               object container, even if the mouse remains
 *                               over another child object of the display
 *                               object container.</p>
 * @event rollOver               Dispatched when the user moves a pointing
 *                               device over an InteractiveObject instance.
 *                               The event target is the object under the
 *                               pointing device or a parent of that object.
 *                               The <code>relatedObject</code> is the object
 *                               that was previously under the pointing
 *                               device. The <code>rollOver</code> events are
 *                               dispatched consecutively down the parent
 *                               chain of the object, starting with the
 *                               highest parent that is neither the root nor
 *                               an ancestor of the <code>relatedObject</code>
 *                               and ending with the object.
 *
 *                               <p>The purpose of the <code>rollOver</code>
 *                               event is to simplify the coding of rollout
 *                               behaviors for display object containers with
 *                               children. When the mouse enters the area of a
 *                               display object or the area of any of its
 *                               children from an object that is not one of
 *                               its children, the display object dispatches
 *                               the <code>rollOver</code> event. This is
 *                               different behavior than that of the
 *                               <code>mouseOver</code> event, which is
 *                               dispatched each time the mouse enters the
 *                               area of any child object of the display
 *                               object container, even if the mouse was
 *                               already over another child object of the
 *                               display object container. </p>
 * @event selectAll              Dispatched when the user activates the
 *                               platform-specific accelerator key combination
 *                               for a select all operation or selects 'Select
 *                               All' from the text context menu. This event
 *                               is dispatched to the object that currently
 *                               has focus. If the object that currently has
 *                               focus is a TextField, the default behavior of
 *                               this event is to cause all the contents of
 *                               the text field to be selected.
 * @event softKeyboardActivate   Dispatched immediately after the soft
 *                               keyboard is raised.
 * @event softKeyboardActivating Dispatched immediately before the soft
 *                               keyboard is raised.
 * @event softKeyboardDeactivate Dispatched immediately after the soft
 *                               keyboard is lowered.
 * @event tabChildrenChange      Dispatched when the value of the object's
 *                               <code>tabChildren</code> flag changes.
 * @event tabEnabledChange       Dispatched when the object's
 *                               <code>tabEnabled</code> flag changes.
 * @event tabIndexChange         Dispatched when the value of the object's
 *                               <code>tabIndex</code> property changes.
 * @event textInput              Dispatched when a user enters one or more
 *                               characters of text. Various text input
 *                               methods can generate this event, including
 *                               standard keyboards, input method editors
 *                              (IMEs), voice or speech recognition systems,
 *                               and even the act of pasting plain text with
 *                               no formatting or style information.
 * @event touchBegin             Dispatched when the user first contacts a
 *                               touch-enabled device(such as touches a
 *                               finger to a mobile phone or tablet with a
 *                               touch screen). Some devices might also
 *                               interpret this contact as a
 *                               <code>mouseDown</code> event.
 *
 *                               <p>Specifically, if a user touches a finger
 *                               to a touch screen, the InteractiveObject
 *                               instance can dispatch a
 *                               <code>mouseDown</code> event or a
 *                               <code>touchBegin</code> event, or both if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               <code>mouseDown</code> event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               <code>touchBegin</code> event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event touchEnd               Dispatched when the user removes contact with
 *                               a touch-enabled device(such as lifts a
 *                               finger off a mobile phone or tablet with a
 *                               touch screen). Some devices might also
 *                               interpret this contact as a
 *                               <code>mouseUp</code> event.
 *
 *                               <p>Specifically, if a user lifts a finger
 *                               from a touch screen, the InteractiveObject
 *                               instance can dispatch a <code>mouseUp</code>
 *                               event or a <code>touchEnd</code> event, or
 *                               both if the current environment supports it.
 *                               Choose how you want to handle the user
 *                               interaction. Use the openfl.ui.Multitouch
 *                               class to manage touch event handling(enable
 *                               touch gesture event handling, simple touch
 *                               point event handling, or disable touch events
 *                               so only mouse events are dispatched). If you
 *                               choose to handle the <code>mouseUp</code>
 *                               event, then the same event handler will run
 *                               on a touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               <code>touchEnd</code> event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event touchMove              Dispatched when the user moves the point of
 *                               contact with a touch-enabled device(such as
 *                               drags a finger across a mobile phone or
 *                               tablet with a touch screen). Some devices
 *                               might also interpret this contact as a
 *                               <code>mouseMove</code> event.
 *
 *                               <p>Specifically, if a user moves a finger
 *                               across a touch screen, the InteractiveObject
 *                               instance can dispatch a
 *                               <code>mouseMove</code> event or a
 *                               <code>touchMove</code> event, or both if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               <code>mouseMove</code> event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               <code>touchMove</code> event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event touchOut               Dispatched when the user moves the point of
 *                               contact away from InteractiveObject instance
 *                               on a touch-enabled device(such as drags a
 *                               finger from one display object to another on
 *                               a mobile phone or tablet with a touch
 *                               screen). Some devices might also interpret
 *                               this contact as a <code>mouseOut</code>
 *                               event.
 *
 *                               <p>Specifically, if a user moves a finger
 *                               across a touch screen, the InteractiveObject
 *                               instance can dispatch a <code>mouseOut</code>
 *                               event or a <code>touchOut</code> event, or
 *                               both if the current environment supports it.
 *                               Choose how you want to handle the user
 *                               interaction. Use the openfl.ui.Multitouch
 *                               class to manage touch event handling(enable
 *                               touch gesture event handling, simple touch
 *                               point event handling, or disable touch events
 *                               so only mouse events are dispatched). If you
 *                               choose to handle the <code>mouseOut</code>
 *                               event, then the same event handler will run
 *                               on a touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               <code>touchOut</code> event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event touchOver              Dispatched when the user moves the point of
 *                               contact over an InteractiveObject instance on
 *                               a touch-enabled device(such as drags a
 *                               finger from a point outside a display object
 *                               to a point over a display object on a mobile
 *                               phone or tablet with a touch screen). Some
 *                               devices might also interpret this contact as
 *                               a <code>mouseOver</code> event.
 *
 *                               <p>Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               <code>mouseOver</code> event or a
 *                               <code>touchOver</code> event, or both if the
 *                               current environment supports it. Choose how
 *                               you want to handle the user interaction. Use
 *                               the openfl.ui.Multitouch class to manage touch
 *                               event handling(enable touch gesture event
 *                               handling, simple touch point event handling,
 *                               or disable touch events so only mouse events
 *                               are dispatched). If you choose to handle the
 *                               <code>mouseOver</code> event, then the same
 *                               event handler will run on a touch-enabled
 *                               device and a mouse enabled device. However,
 *                               if you choose to handle the
 *                               <code>touchOver</code> event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event touchRollOut           Dispatched when the user moves the point of
 *                               contact away from an InteractiveObject
 *                               instance on a touch-enabled device(such as
 *                               drags a finger from over a display object to
 *                               a point outside the display object on a
 *                               mobile phone or tablet with a touch screen).
 *                               Some devices might also interpret this
 *                               contact as a <code>rollOut</code> event.
 *
 *                               <p>Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               <code>rollOut</code> event or a
 *                               <code>touchRollOut</code> event, or both if
 *                               the current environment supports it. Choose
 *                               how you want to handle the user interaction.
 *                               Use the openfl.ui.Multitouch class to manage
 *                               touch event handling(enable touch gesture
 *                               event handling, simple touch point event
 *                               handling, or disable touch events so only
 *                               mouse events are dispatched). If you choose
 *                               to handle the <code>rollOut</code> event,
 *                               then the same event handler will run on a
 *                               touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               <code>touchRollOut</code> event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event touchRollOver          Dispatched when the user moves the point of
 *                               contact over an InteractiveObject instance on
 *                               a touch-enabled device(such as drags a
 *                               finger from a point outside a display object
 *                               to a point over a display object on a mobile
 *                               phone or tablet with a touch screen). Some
 *                               devices might also interpret this contact as
 *                               a <code>rollOver</code> event.
 *
 *                               <p>Specifically, if a user moves a finger
 *                               over an InteractiveObject, the
 *                               InteractiveObject instance can dispatch a
 *                               <code>rollOver</code> event or a
 *                               <code>touchRollOver</code> event, or both if
 *                               the current environment supports it. Choose
 *                               how you want to handle the user interaction.
 *                               Use the openfl.ui.Multitouch class to manage
 *                               touch event handling(enable touch gesture
 *                               event handling, simple touch point event
 *                               handling, or disable touch events so only
 *                               mouse events are dispatched). If you choose
 *                               to handle the <code>rollOver</code> event,
 *                               then the same event handler will run on a
 *                               touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               <code>touchRollOver</code> event, you can
 *                               design your event handler to respond to the
 *                               specific needs of a touch-enabled environment
 *                               and provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>
 * @event touchTap               Dispatched when the user lifts the point of
 *                               contact over the same InteractiveObject
 *                               instance on which the contact was initiated
 *                               on a touch-enabled device(such as presses
 *                               and releases a finger from a single point
 *                               over a display object on a mobile phone or
 *                               tablet with a touch screen). Some devices
 *                               might also interpret this contact as a
 *                               <code>click</code> event.
 *
 *                               <p>Specifically, if a user taps a finger over
 *                               an InteractiveObject, the InteractiveObject
 *                               instance can dispatch a <code>click</code>
 *                               event or a <code>touchTap</code> event, or
 *                               both if the current environment supports it.
 *                               Choose how you want to handle the user
 *                               interaction. Use the openfl.ui.Multitouch
 *                               class to manage touch event handling(enable
 *                               touch gesture event handling, simple touch
 *                               point event handling, or disable touch events
 *                               so only mouse events are dispatched). If you
 *                               choose to handle the <code>click</code>
 *                               event, then the same event handler will run
 *                               on a touch-enabled device and a mouse enabled
 *                               device. However, if you choose to handle the
 *                               <code>touchTap</code> event, you can design
 *                               your event handler to respond to the specific
 *                               needs of a touch-enabled environment and
 *                               provide users with a richer touch-enabled
 *                               experience. You can also handle both events,
 *                               separately, to provide a different response
 *                               for a touch event than a mouse event.</p>
 *
 *                               <p><b>Note:</b> See the Multitouch class for
 *                               environment compatibility information.</p>]]></haxe_doc>
	</class>
	<class path="openfl.display.DisplayObjectContainer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/DisplayObjectContainer.hx">
		<extends path="openfl.display.InteractiveObject"/>
		<mouseChildren public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* Determines whether or not the children of the object are mouse, or user
	 * input device, enabled. If an object is enabled, a user can interact with
	 * it by using a mouse or user input device. The default is
	 * <code>true</code>.
	 *
	 * <p>This property is useful when you create a button with an instance of
	 * the Sprite class(instead of using the SimpleButton class). When you use a
	 * Sprite instance to create a button, you can choose to decorate the button
	 * by using the <code>addChild()</code> method to add additional Sprite
	 * instances. This process can cause unexpected behavior with mouse events
	 * because the Sprite instances you add as children can become the target
	 * object of a mouse event when you expect the parent instance to be the
	 * target object. To ensure that the parent instance serves as the target
	 * objects for mouse events, you can set the <code>mouseChildren</code>
	 * property of the parent instance to <code>false</code>.</p>
	 *
	 * <p> No event is dispatched by setting this property. You must use the
	 * <code>addEventListener()</code> method to create interactive
	 * functionality.</p>]]></haxe_doc>
		</mouseChildren>
		<numChildren public="1" get="accessor" set="null">
			<x path="Int"/>
			<haxe_doc>* Returns the number of children of this object.</haxe_doc>
		</numChildren>
		<tabChildren public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* Determines whether the children of the object are tab enabled. Enables or
	 * disables tabbing for the children of the object. The default is
	 * <code>true</code>.
	 *
	 * <p><b>Note:</b> Do not use the <code>tabChildren</code> property with
	 * Flex. Instead, use the
	 * <code>mx.core.UIComponent.hasFocusableChildren</code> property.</p>
	 * 
	 * @throws IllegalOperationError Calling this property of the Stage object
	 *                               throws an exception. The Stage object does
	 *                               not implement this property.]]></haxe_doc>
		</tabChildren>
		<__children>
			<c path="Array"><c path="openfl.display.DisplayObject"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__children>
		<__removedChildren>
			<c path="Array"><c path="openfl.display.DisplayObject"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__removedChildren>
		<addChild public="1" set="method" line="138">
			<f a="child">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc><![CDATA[* Adds a child DisplayObject instance to this DisplayObjectContainer
	 * instance. The child is added to the front(top) of all other children in
	 * this DisplayObjectContainer instance.(To add a child to a specific index
	 * position, use the <code>addChildAt()</code> method.)
	 *
	 * <p>If you add a child object that already has a different display object
	 * container as a parent, the object is removed from the child list of the
	 * other display object container. </p>
	 *
	 * <p><b>Note:</b> The command <code>stage.addChild()</code> can cause
	 * problems with a published SWF file, including security problems and
	 * conflicts with other loaded SWF files. There is only one Stage within a
	 * Flash runtime instance, no matter how many SWF files you load into the
	 * runtime. So, generally, objects should not be added to the Stage,
	 * directly, at all. The only object the Stage should contain is the root
	 * object. Create a DisplayObjectContainer to contain all of the items on the
	 * display list. Then, if necessary, add that DisplayObjectContainer instance
	 * to the Stage.</p>
	 * 
	 * @param child The DisplayObject instance to add as a child of this
	 *              DisplayObjectContainer instance.
	 * @return The DisplayObject instance that you pass in the <code>child</code>
	 *         parameter.
	 * @throws ArgumentError Throws if the child is the same as the parent. Also
	 *                       throws if the caller is a child(or grandchild etc.)
	 *                       of the child being added.
	 * @event added Dispatched when a display object is added to the display
	 *              list.]]></haxe_doc>
		</addChild>
		<addChildAt public="1" set="method" line="197">
			<f a="child:index">
				<c path="openfl.display.DisplayObject"/>
				<x path="Int"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc><![CDATA[* Adds a child DisplayObject instance to this DisplayObjectContainer
	 * instance. The child is added at the index position specified. An index of
	 * 0 represents the back(bottom) of the display list for this
	 * DisplayObjectContainer object.
	 *
	 * <p>For example, the following example shows three display objects, labeled
	 * a, b, and c, at index positions 0, 2, and 1, respectively:</p>
	 *
	 * <p>If you add a child object that already has a different display object
	 * container as a parent, the object is removed from the child list of the
	 * other display object container. </p>
	 * 
	 * @param child The DisplayObject instance to add as a child of this
	 *              DisplayObjectContainer instance.
	 * @param index The index position to which the child is added. If you
	 *              specify a currently occupied index position, the child object
	 *              that exists at that position and all higher positions are
	 *              moved up one position in the child list.
	 * @return The DisplayObject instance that you pass in the <code>child</code>
	 *         parameter.
	 * @throws ArgumentError Throws if the child is the same as the parent. Also
	 *                       throws if the caller is a child(or grandchild etc.)
	 *                       of the child being added.
	 * @throws RangeError    Throws if the index position does not exist in the
	 *                       child list.
	 * @event added Dispatched when a display object is added to the display
	 *              list.]]></haxe_doc>
		</addChildAt>
		<areInaccessibleObjectsUnderPoint public="1" set="method" line="259">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<x path="Bool"/>
			</f>
			<haxe_doc><![CDATA[* Indicates whether the security restrictions would cause any display
	 * objects to be omitted from the list returned by calling the
	 * <code>DisplayObjectContainer.getObjectsUnderPoint()</code> method with the
	 * specified <code>point</code> point. By default, content from one domain
	 * cannot access objects from another domain unless they are permitted to do
	 * so with a call to the <code>Security.allowDomain()</code> method. For more
	 * information, related to security, see the Flash Player Developer Center
	 * Topic: <a href="http://www.adobe.com/go/devnet_security_en"
	 * scope="external">Security</a>.
	 *
	 * <p>The <code>point</code> parameter is in the coordinate space of the
	 * Stage, which may differ from the coordinate space of the display object
	 * container(unless the display object container is the Stage). You can use
	 * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>
	 * methods to convert points between these coordinate spaces.</p>
	 * 
	 * @param point The point under which to look.
	 * @return <code>true</code> if the point contains child display objects with
	 *         security restrictions.]]></haxe_doc>
		</areInaccessibleObjectsUnderPoint>
		<contains public="1" set="method" line="278">
			<f a="child">
				<c path="openfl.display.DisplayObject"/>
				<x path="Bool"/>
			</f>
			<haxe_doc><![CDATA[* Determines whether the specified display object is a child of the
	 * DisplayObjectContainer instance or the instance itself. The search
	 * includes the entire display list including this DisplayObjectContainer
	 * instance. Grandchildren, great-grandchildren, and so on each return
	 * <code>true</code>.
	 * 
	 * @param child The child object to test.
	 * @return <code>true</code> if the <code>child</code> object is a child of
	 *         the DisplayObjectContainer or the container itself; otherwise
	 *         <code>false</code>.]]></haxe_doc>
		</contains>
		<getChildAt public="1" set="method" line="312">
			<f a="index">
				<x path="Int"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc><![CDATA[* Returns the child display object instance that exists at the specified
	 * index.
	 * 
	 * @param index The index position of the child object.
	 * @return The child display object at the specified index position.
	 * @throws RangeError    Throws if the index does not exist in the child
	 *                       list.
	 * @throws SecurityError This child display object belongs to a sandbox to
	 *                       which you do not have access. You can avoid this
	 *                       situation by having the child movie call
	 *                       <code>Security.allowDomain()</code>.]]></haxe_doc>
		</getChildAt>
		<getChildByName public="1" set="method" line="343">
			<f a="name">
				<c path="String"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc><![CDATA[* Returns the child display object that exists with the specified name. If
	 * more that one child display object has the specified name, the method
	 * returns the first object in the child list.
	 *
	 * <p>The <code>getChildAt()</code> method is faster than the
	 * <code>getChildByName()</code> method. The <code>getChildAt()</code> method
	 * accesses a child from a cached array, whereas the
	 * <code>getChildByName()</code> method has to traverse a linked list to
	 * access a child.</p>
	 * 
	 * @param name The name of the child to return.
	 * @return The child display object with the specified name.
	 * @throws SecurityError This child display object belongs to a sandbox to
	 *                       which you do not have access. You can avoid this
	 *                       situation by having the child movie call the
	 *                       <code>Security.allowDomain()</code> method.]]></haxe_doc>
		</getChildByName>
		<getChildIndex public="1" set="method" line="364">
			<f a="child">
				<c path="openfl.display.DisplayObject"/>
				<x path="Int"/>
			</f>
			<haxe_doc><![CDATA[* Returns the index position of a <code>child</code> DisplayObject instance.
	 * 
	 * @param child The DisplayObject instance to identify.
	 * @return The index position of the child display object to identify.
	 * @throws ArgumentError Throws if the child parameter is not a child of this
	 *                       object.]]></haxe_doc>
		</getChildIndex>
		<getObjectsUnderPoint public="1" set="method" line="396">
			<f a="point">
				<c path="openfl.geom.Point"/>
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
			</f>
			<haxe_doc><![CDATA[* Returns an array of objects that lie under the specified point and are
	 * children(or grandchildren, and so on) of this DisplayObjectContainer
	 * instance. Any child objects that are inaccessible for security reasons are
	 * omitted from the returned array. To determine whether this security
	 * restriction affects the returned array, call the
	 * <code>areInaccessibleObjectsUnderPoint()</code> method.
	 *
	 * <p>The <code>point</code> parameter is in the coordinate space of the
	 * Stage, which may differ from the coordinate space of the display object
	 * container(unless the display object container is the Stage). You can use
	 * the <code>globalToLocal()</code> and the <code>localToGlobal()</code>
	 * methods to convert points between these coordinate spaces.</p>
	 * 
	 * @param point The point under which to look.
	 * @return An array of objects that lie under the specified point and are
	 *         children(or grandchildren, and so on) of this
	 *         DisplayObjectContainer instance.]]></haxe_doc>
		</getObjectsUnderPoint>
		<removeChild public="1" set="method" line="426">
			<f a="child">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc><![CDATA[* Removes the specified <code>child</code> DisplayObject instance from the
	 * child list of the DisplayObjectContainer instance. The <code>parent</code>
	 * property of the removed child is set to <code>null</code> , and the object
	 * is garbage collected if no other references to the child exist. The index
	 * positions of any display objects above the child in the
	 * DisplayObjectContainer are decreased by 1.
	 *
	 * <p>The garbage collector reallocates unused memory space. When a variable
	 * or object is no longer actively referenced or stored somewhere, the
	 * garbage collector sweeps through and wipes out the memory space it used to
	 * occupy if no other references to it exist.</p>
	 * 
	 * @param child The DisplayObject instance to remove.
	 * @return The DisplayObject instance that you pass in the <code>child</code>
	 *         parameter.
	 * @throws ArgumentError Throws if the child parameter is not a child of this
	 *                       object.]]></haxe_doc>
		</removeChild>
		<removeChildAt public="1" set="method" line="472">
			<f a="index">
				<x path="Int"/>
				<c path="openfl.display.DisplayObject"/>
			</f>
			<haxe_doc><![CDATA[* Removes a child DisplayObject from the specified <code>index</code>
	 * position in the child list of the DisplayObjectContainer. The
	 * <code>parent</code> property of the removed child is set to
	 * <code>null</code>, and the object is garbage collected if no other
	 * references to the child exist. The index positions of any display objects
	 * above the child in the DisplayObjectContainer are decreased by 1.
	 *
	 * <p>The garbage collector reallocates unused memory space. When a variable
	 * or object is no longer actively referenced or stored somewhere, the
	 * garbage collector sweeps through and wipes out the memory space it used to
	 * occupy if no other references to it exist.</p>
	 * 
	 * @param index The child index of the DisplayObject to remove.
	 * @return The DisplayObject instance that was removed.
	 * @throws RangeError    Throws if the index does not exist in the child
	 *                       list.
	 * @throws SecurityError This child display object belongs to a sandbox to
	 *                       which the calling object does not have access. You
	 *                       can avoid this situation by having the child movie
	 *                       call the <code>Security.allowDomain()</code> method.]]></haxe_doc>
		</removeChildAt>
		<removeChildren public="1" set="method" line="485"><f a="?beginIndex:?endIndex" v="0:2147483647">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></removeChildren>
		<setChildIndex public="1" set="method" line="548">
			<f a="child:index">
				<c path="openfl.display.DisplayObject"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Changes the position of an existing child in the display object container.
	 * This affects the layering of child objects. For example, the following
	 * example shows three display objects, labeled a, b, and c, at index
	 * positions 0, 1, and 2, respectively:
	 *
	 * <p>When you use the <code>setChildIndex()</code> method and specify an
	 * index position that is already occupied, the only positions that change
	 * are those in between the display object's former and new position. All
	 * others will stay the same. If a child is moved to an index LOWER than its
	 * current index, all children in between will INCREASE by 1 for their index
	 * reference. If a child is moved to an index HIGHER than its current index,
	 * all children in between will DECREASE by 1 for their index reference. For
	 * example, if the display object container in the previous example is named
	 * <code>container</code>, you can swap the position of the display objects
	 * labeled a and b by calling the following code:</p>
	 *
	 * <p>This code results in the following arrangement of objects:</p>
	 * 
	 * @param child The child DisplayObject instance for which you want to change
	 *              the index number.
	 * @param index The resulting index number for the <code>child</code> display
	 *              object.
	 * @throws ArgumentError Throws if the child parameter is not a child of this
	 *                       object.
	 * @throws RangeError    Throws if the index does not exist in the child
	 *                       list.]]></haxe_doc>
		</setChildIndex>
		<swapChildren public="1" set="method" line="570">
			<f a="child1:child2">
				<c path="openfl.display.DisplayObject"/>
				<c path="openfl.display.DisplayObject"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Swaps the z-order(front-to-back order) of the two specified child
	 * objects. All other child objects in the display object container remain in
	 * the same index positions.
	 * 
	 * @param child1 The first child object.
	 * @param child2 The second child object.
	 * @throws ArgumentError Throws if either child parameter is not a child of
	 *                       this object.</haxe_doc>
		</swapChildren>
		<swapChildrenAt public="1" set="method" line="617">
			<f a="child1:child2">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Swaps the z-order(front-to-back order) of the child objects at the two
	 * specified index positions in the child list. All other child objects in
	 * the display object container remain in the same index positions.
	 * 
	 * @param index1 The index position of the first child object.
	 * @param index2 The index position of the second child object.
	 * @throws RangeError If either index does not exist in the child list.</haxe_doc>
		</swapChildrenAt>
		<__broadcast set="method" line="627" override="1">
			<f a="event:notifyChilden">
				<c path="openfl.events.Event"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__broadcast>
		<__getBounds set="method" line="656" override="1">
			<f a="rect:matrix">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getBounds>
		<__hitTest set="method" line="687" override="1">
			<f a="x:y:shapeFlag:stack:interactiveOnly">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__hitTest>
		<__renderCanvas public="1" set="method" line="734" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderCanvas>
		<__renderDOM public="1" set="method" line="773" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderDOM>
		<__renderGL public="1" set="method" line="812" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderGL>
		<__renderMask public="1" set="method" line="827" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderMask>
		<__setStageReference set="method" line="837" override="1">
			<f a="stage">
				<c path="openfl.display.Stage"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__setStageReference>
		<__update public="1" set="method" line="866" override="1">
			<f a="transformOnly:updateChildren">
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__update>
		<__updateChildren public="1" set="method" line="891" override="1">
			<f a="transformOnly">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__updateChildren>
		<get_numChildren set="method" line="911">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numChildren>
		<new public="1" set="method" line="96">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[* Calling the <code>new DisplayObjectContainer()</code> constructor throws
	 * an <code>ArgumentError</code> exception. You <i>can</i>, however, call
	 * constructors for the following subclasses of DisplayObjectContainer:
	 * <ul>
	 *   <li><code>new Loader()</code></li>
	 *   <li><code>new Sprite()</code></li>
	 *   <li><code>new MovieClip()</code></li>
	 * </ul>]]></haxe_doc>
		</new>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl.display.Sprite" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Sprite.hx">
		<extends path="openfl.display.DisplayObjectContainer"/>
		<buttonMode public="1"><x path="Bool"/></buttonMode>
		<graphics public="1" get="accessor" set="null"><c path="openfl.display.Graphics"/></graphics>
		<useHandCursor public="1"><x path="Bool"/></useHandCursor>
		<startDrag public="1" set="method" line="35"><f a="?lockCenter:?bounds" v="false:null">
	<x path="Bool"/>
	<c path="openfl.geom.Rectangle"/>
	<x path="Void"/>
</f></startDrag>
		<stopDrag public="1" set="method" line="46"><f a=""><x path="Void"/></f></stopDrag>
		<__getBounds set="method" line="57" override="1">
			<f a="rect:matrix">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getBounds>
		<__hitTest set="method" line="70" override="1">
			<f a="x:y:shapeFlag:stack:interactiveOnly">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__hitTest>
		<__renderCanvas public="1" set="method" line="103" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderCanvas>
		<__renderDOM public="1" set="method" line="112" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderDOM>
		<__renderGL public="1" set="method" line="121" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderGL>
		<__renderMask public="1" set="method" line="142" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderMask>
		<get_graphics set="method" line="164">
			<f a=""><c path="openfl.display.Graphics"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_graphics>
		<new public="1" set="method" line="25"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="Main" params="" file="Source/Main.hx">
		<extends path="openfl.display.Sprite"/>
		<main public="1" set="method" line="159" static="1"><f a=""><x path="Void"/></f></main>
		<safeDestroy public="1" set="method" line="168" static="1"><f a="obj:?destroy" v=":true">
	<d/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></safeDestroy>
		<safeRemove public="1" set="method" line="182" static="1"><f a="obj">
	<d/>
	<x path="Bool"/>
</f></safeRemove>
		<inited public="1"><x path="Bool"/></inited>
		<scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></scene>
		<engine public="1"><c path="com.gamestudiohx.babylonhx.Engine"/></engine>
		<camera public="1"><d/></camera>
		<resize set="method" line="104"><f a="e">
	<unknown/>
	<x path="Void"/>
</f></resize>
		<init public="1" set="method" line="108"><f a=""><x path="Void"/></f></init>
		<getEngine public="1" set="method" line="134"><f a=""><c path="com.gamestudiohx.babylonhx.Engine"/></f></getEngine>
		<getScene public="1" set="method" line="138"><f a=""><c path="com.gamestudiohx.babylonhx.Scene"/></f></getScene>
		<added set="method" line="149"><f a="e">
	<unknown/>
	<x path="Void"/>
</f></added>
		<new public="1" set="method" line="144"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* ...
* @author Brendon Smith</haxe_doc>
	</class>
	<class path="DocumentClass" params="" file="Export/html5/haxe/ApplicationMain.hx" module="ApplicationMain">
		<extends path="Main"/>
		<new public="1" set="method" line="926"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":build"><e>'???'</e></m>
			<m n=":keep"/>
		</meta>
	</class>
	<class path="Array" params="T" file="/usr/lib/haxe/std/js/_std/Array.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` Array.</haxe_doc>
		</length>
		<concat public="1" set="method">
			<f a="a">
				<c path="Array"><c path="Array.T"/></c>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Returns a new Array by appending the elements of `a` to the elements of
		`this` Array.

		This operation does not modify `this` Array.

		If `a` is the empty Array `[]`, a copy of `this` Array is returned.

		The length of the returned Array is equal to the sum of `this.length`
		and `a.length`.

		If `a` is `null`, the result is unspecified.</haxe_doc>
		</concat>
		<join public="1" set="method">
			<f a="sep">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a string representation of `this` Array, with `sep` separating
		each element.

		The result of this operation is equal to `Std.string(this[0]) + sep +
		Std.string(this[1]) + sep + ... + sep + Std.string(this[this.length-1])`

		If `this` is the empty Array `[]`, the result is the empty String `""`.
		If `this` has exactly one element, the result is equal to a call to
		`Std.string(this[0])`.

		If `sep` is null, the result is unspecified.</haxe_doc>
		</join>
		<pop public="1" set="method">
			<f a=""><t path="Null"><c path="Array.T"/></t></f>
			<haxe_doc>Removes the last element of `this` Array and returns it.

		This operation modifies `this` Array in place.

		If `this` has at least one element, `this.length` will decrease by 1.

		If `this` is the empty Array `[]`, null is returned and the length
		remains 0.</haxe_doc>
		</pop>
		<push public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Adds the element `x` at the end of `this` Array and returns the new
		length of `this` Array.

		This operation modifies `this` Array in place.

		`this.length` increases by 1.</haxe_doc>
		</push>
		<reverse public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[Reverse the order of elements of `this` Array.

		This operation modifies `this` Array in place.

		If `this.length < 2`, `this` remains unchanged.]]></haxe_doc>
		</reverse>
		<shift public="1" set="method">
			<f a=""><t path="Null"><c path="Array.T"/></t></f>
			<haxe_doc>Removes the first element of `this` Array and returns it.

		This operation modifies `this` Array in place.

		If `this` has at least one element, `this`.length and the index of each
		remaining element is decreased by 1.

		If `this` is the empty Array `[]`, `null` is returned and the length
		remains 0.</haxe_doc>
		</shift>
		<slice public="1" set="method">
			<f a="pos:?end">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Creates a shallow copy of the range of `this` Array, starting at and
		including `pos`, up to but not including `end`.

		This operation does not modify `this` Array.

		The elements are not copied and retain their identity.

		If `end` is omitted or exceeds `this.length`, it defaults to the end of
		`this` Array.

		If `pos` or `end` are negative, their offsets are calculated from the
		end	of `this` Array by `this.length + pos` and `this.length + end`
		respectively. If this yields a negative value, 0 is used instead.

		If `pos` exceeds `this.length` or if `end` exceeds or equals `pos`,
		the result is `[]`.</haxe_doc>
		</slice>
		<sort public="1" set="method">
			<f a="f">
				<f a=":">
					<c path="Array.T"/>
					<c path="Array.T"/>
					<x path="Int"/>
				</f>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[Sorts `this` Array according to the comparison function `f`, where
		`f(x,y)` returns 0 if x == y, a positive Int if x > y and a
		negative Int if x < y.

		This operation modifies `this` Array in place.

		The sort operation is not guaranteed to be stable, which means that the
		order of equal elements may not be retained. For a stable Array sorting
		algorithm, `haxe.ds.sort.MergeSort.sort()` can be used instead.

		If `f` is null, the result is unspecified.]]></haxe_doc>
		</sort>
		<splice public="1" set="method">
			<f a="pos:len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc><![CDATA[Removes `len` elements from `this` Array, starting at and including
		`pos`, an returns them.

		This operation modifies `this` Array in place.

		If `len` is < 0 or `pos` exceeds `this`.length, the result is the empty
		Array [].

		If `pos` is negative, its value is calculated from the end	of `this`
		Array by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the sum of the resulting values for `len` and `pos` exceed
		`this.length`, this operation will affect the elements from `pos` to the
		end of `this` Array.

		The length of the returned Array is equal to the new length of `this`
		Array subtracted from the original length of `this` Array. In other
		words, each element of the original `this` Array either remains in
		`this` Array or becomes an element of the returned Array.]]></haxe_doc>
		</splice>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representation of `this` Array.

		The result will include the individual elements' String representations
		separated by comma. The enclosing [ ] may be missing on some platforms,
		use Std.string() to get a String representation that is consistent
		across platforms.</haxe_doc>
		</toString>
		<unshift public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds the element `x` at the start of `this` Array.

		This operation modifies `this` Array in place.

		`this.length` and the index of each Array element increases by 1.</haxe_doc>
		</unshift>
		<iterator public="1" get="inline" set="null" line="69">
			<f a=""><t path="Iterator"><c path="Array.T"/></t></f>
			<meta><m n=":runtime"/></meta>
			<haxe_doc>Returns an iterator of the Array values.</haxe_doc>
		</iterator>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Array.</haxe_doc>
		</new>
		<haxe_doc>An Array is a storage for values. You can access it using indexes or
	with its API.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Class" params="T" file="/usr/lib/haxe/std/Class.hx">
		<this><x path="Class"><c path="Class.T"/></x></this>
		<haxe_doc>An abstract type that represents a Class.

	See `Type` for the Haxe Reflection API.</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<class path="Date" params="" file="/usr/lib/haxe/std/js/_std/Date.hx" extern="1">
		<now public="1" get="inline" set="null" line="38" static="1">
			<f a=""><c path="Date"/></f>
			<haxe_doc>Returns a Date representing the current local time.</haxe_doc>
		</now>
		<fromTime public="1" get="inline" set="null" line="42" static="1">
			<f a="t">
				<x path="Float"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from timestamp `t`.</haxe_doc>
		</fromTime>
		<fromString public="1" get="inline" set="null" line="48" static="1">
			<f a="s">
				<c path="String"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from a formated string `s`, with the following accepted
		formats:

		- `"YYYY-MM-DD hh:mm:ss"`
		- `"YYYY-MM-DD"`
		- `"hh:mm:ss"`

		The first two formats are expressed in local time, the third in UTC
		Epoch.</haxe_doc>
		</fromString>
		<getTime public="1" set="method">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns the timestamp of the date. It might only have a per-second
		precision depending on the platforms.</haxe_doc>
		</getTime>
		<getHours public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the hours of `this` Date (0-23 range).</haxe_doc>
		</getHours>
		<getMinutes public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the minutes of `this` Date (0-59 range).</haxe_doc>
		</getMinutes>
		<getSeconds public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the seconds of the `this` Date (0-59 range).</haxe_doc>
		</getSeconds>
		<getFullYear public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the full year of `this` Date (4-digits).</haxe_doc>
		</getFullYear>
		<getMonth public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the month of `this` Date (0-11 range).</haxe_doc>
		</getMonth>
		<getDate public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of `this` Date (1-31 range).</haxe_doc>
		</getDate>
		<getDay public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of the week of `this` Date (0-6 range).</haxe_doc>
		</getDay>
		<toString public="1" get="inline" set="null" line="34">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representation of `this` Date, by using the
		standard format [YYYY-MM-DD HH:MM:SS]. See `DateTools.format` for
		other formating rules.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="year:month:day:hour:min:sec">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new date object from the given arguments.

		The behaviour of a Date instance is only consistent across platforms if
		the the arguments describe a valid date.

		- month: 0 to 11
		- day: 1 to 31
		- hour: 0 to 23
		- min: 0 to 59
		- sec: 0 to 59</haxe_doc>
		</new>
		<haxe_doc>The Date class provides a basic structure for date and time related
	information. Date instances can be created by

	- `new Date()` for a specific date,
	- `Date.now()` to obtain information about the current time,
	- `Date.fromTime()` with a given timestamp or
	- `Date.fromString()` by parsing from a String.

	There is some extra functions available in the `DateTools` class.

	In the context of haxe dates, a timestamp is defined as the number of
	milliseconds elapsed since 1st January 1970.</haxe_doc>
		<meta><m n=":coreApi"/></meta>
	</class>
	<class path="lime.AssetLibrary" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/Assets.hx" module="lime.Assets">
		<eventCallback public="1"><d/></eventCallback>
		<exists public="1" set="method" line="984"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></exists>
		<getAudioBuffer public="1" set="method" line="991"><f a="id">
	<c path="String"/>
	<c path="lime.audio.AudioBuffer"/>
</f></getAudioBuffer>
		<getBytes public="1" set="method" line="998"><f a="id">
	<c path="String"/>
	<c path="lime.utils.ByteArray"/>
</f></getBytes>
		<getFont public="1" set="method" line="1005"><f a="id">
	<c path="String"/>
	<d/>
</f></getFont>
		<getImage public="1" set="method" line="1012"><f a="id">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</f></getImage>
		<getPath public="1" set="method" line="1026"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getPath>
		<getText public="1" set="method" line="1033"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getText>
		<isLocal public="1" set="method" line="1058"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></isLocal>
		<list public="1" set="method" line="1065"><f a="type">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></list>
		<load set="method" line="1072"><f a="handler">
	<f a="">
		<c path="lime.AssetLibrary"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></load>
		<loadAudioBuffer public="1" set="method" line="1079"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="lime.audio.AudioBuffer"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadAudioBuffer>
		<loadBytes public="1" set="method" line="1086"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="lime.utils.ByteArray"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadBytes>
		<loadFont public="1" set="method" line="1093"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadFont>
		<loadImage public="1" set="method" line="1100"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="lime.graphics.Image"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadImage>
		<loadText public="1" set="method" line="1114"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadText>
		<new public="1" set="method" line="977"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="DefaultAssetLibrary" params="" file="Export/html5/haxe/DefaultAssetLibrary.hx">
		<extends path="lime.AssetLibrary"/>
		<className public="1" set="null"><x path="Map">
	<c path="String"/>
	<d/>
</x></className>
		<path public="1" set="null"><x path="Map">
	<c path="String"/>
	<c path="String"/>
</x></path>
		<type public="1" set="null"><x path="Map">
	<c path="String"/>
	<x path="lime.AssetType"/>
</x></type>
		<lastModified><x path="Float"/></lastModified>
		<timer><c path="haxe.Timer"/></timer>
		<exists public="1" set="method" line="2030" override="1"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></exists>
		<getAudioBuffer public="1" set="method" line="2072" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.audio.AudioBuffer"/>
</f></getAudioBuffer>
		<getBytes public="1" set="method" line="2096" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.utils.ByteArray"/>
</f></getBytes>
		<getFont public="1" set="method" line="2144" override="1"><f a="id">
	<c path="String"/>
	<d/>
</f></getFont>
		<getImage public="1" set="method" line="2175" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</f></getImage>
		<getPath public="1" set="method" line="2224" override="1"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getPath>
		<getText public="1" set="method" line="2239" override="1"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getText>
		<isLocal public="1" set="method" line="2289" override="1"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></isLocal>
		<list public="1" set="method" line="2308" override="1"><f a="type">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></list>
		<loadAudioBuffer public="1" set="method" line="2328" override="1"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="lime.audio.AudioBuffer"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadAudioBuffer>
		<loadBytes public="1" set="method" line="2357" override="1"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="lime.utils.ByteArray"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadBytes>
		<loadImage public="1" set="method" line="2390" override="1"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="lime.graphics.Image"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadImage>
		<loadText public="1" set="method" line="2507" override="1"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadText>
		<new public="1" set="method" line="41"><f a=""><x path="Void"/></f></new>
	</class>
	<abstract path="Enum" params="T" file="/usr/lib/haxe/std/Enum.hx">
		<this><x path="Enum"><c path="Enum.T"/></x></this>
		<haxe_doc>An abstract type that represents an Enum type.

	The corresponding enum instance type is `EnumValue`.

	See `Type` for the Haxe Reflection API.</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="EnumValue" params="" file="/usr/lib/haxe/std/EnumValue.hx">
		<this><x path="EnumValue"/></this>
		<haxe_doc>An abstract type that represents any enum value.
	See `Type` for the Haxe Reflection API.</haxe_doc>
		<meta><m n=":coreType"/></meta>
	</abstract>
	<class path="Lambda" params="" file="/usr/lib/haxe/std/Lambda.hx">
		<count public="1" params="A" set="method" line="191" static="1">
			<f a="it:?pred" v=":null">
				<t path="Iterable"><c path="count.A"/></t>
				<f a="">
					<c path="count.A"/>
					<x path="Bool"/>
				</f>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the number of elements in `it` for which `pred` is true, or the
		total number of elements in `it` if `pred` is null.

		This function traverses all elements.</haxe_doc>
		</count>
		<indexOf public="1" params="T" set="method" line="217" static="1">
			<f a="it:v">
				<t path="Iterable"><c path="indexOf.T"/></t>
				<c path="indexOf.T"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the index of the first element `v` within Iterable `it`.

		This function uses operator `==` to check for equality.

		If `v` does not exist in `it`, the result is -1.</haxe_doc>
		</indexOf>
		<haxe_doc>The `Lambda` class is a collection of methods to support functional
	programming. It is ideally used with 'using Lambda' and then acts as an
	extension to Iterable types.

	On static platforms, working with the Iterable structure might be slower
	than performing the operations directly on known types, such as Array and
	List.

	If the first argument to any of the methods is null, the result is
	unspecified.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="BabylonExt" params="" file="Source/Main.hx" module="Main" extern="1"><new public="1" set="method"><f a="engine:scene:camera">
	<c path="com.gamestudiohx.babylonhx.Engine"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<d/>
	<x path="Void"/>
</f></new></class>
	<abstract path="Map" params="K:V" file="/usr/lib/haxe/std/Map.hx">
		<from>
			<icast field="fromStringMap"><c path="haxe.ds.StringMap"><c path="fromStringMap.V"/></c></icast>
			<icast field="fromIntMap"><c path="haxe.ds.IntMap"><c path="fromIntMap.V"/></c></icast>
			<icast field="fromObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="fromObjectMap.K"/>
	<c path="fromObjectMap.V"/>
</c></icast>
		</from>
		<this><c path="IMap">
	<c path="Map.K"/>
	<c path="Map.V"/>
</c></this>
		<to>
			<icast field="toStringMap"><c path="haxe.ds.StringMap"><c path="Map.V"/></c></icast>
			<icast field="toIntMap"><c path="haxe.ds.IntMap"><c path="Map.V"/></c></icast>
			<icast field="toEnumValueMapMap"><c path="haxe.ds.EnumValueMap">
	<c path="toEnumValueMapMap.K"/>
	<c path="Map.V"/>
</c></icast>
			<icast field="toObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="toObjectMap.K"/>
	<c path="Map.V"/>
</c></icast>
		</to>
		<haxe_doc><![CDATA[Map allows key to value mapping for arbitrary value types, and many key
	types.

	This is a multi-type abstract, it is instantiated as one of its
	specialization types depending on its type parameters.

	A Map can be instantiated without explicit type parameters. Type inference
	will then determine the type parameters from the usage.

	Maps can also be created with `key1 => value1, key2 => value2` syntax.

	Map is an abstract type, it is not available at runtime.]]></haxe_doc>
		<meta><m n=":multiType"><e>K</e></m></meta>
		<impl><class path="_Map.Map_Impl_" params="" file="/usr/lib/haxe/std/Map.hx" private="1" module="Map"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="IMap" params="K:V" file="/usr/lib/haxe/std/Map.hx" module="Map" interface="1"><meta><m n=":keep"/></meta></class>
	<typedef path="_Map.Hashable" params="" file="/usr/lib/haxe/std/Map.hx" private="1" module="Map"><a><hashCode set="method"><f a=""><x path="Int"/></f></hashCode></a></typedef>
	<class path="Math" params="" file="/usr/lib/haxe/std/Math.hx" extern="1">
		<PI public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>Represents the ratio of the circumference of a circle to its diameter, 
		specified by the constant, π. `PI` is approximately 3.141592653589793.</haxe_doc>
		</PI>
		<NEGATIVE_INFINITY public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special Float constant which denotes negative infinity.

		For example, this is the result of -1.0 / 0.0.

		Operations with NEGATIVE_INFINITY as an operand may result in
		NEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. 

		If this constant is converted to an Int, e.g. through Std.int(), the
		result is unspecified.</haxe_doc>
		</NEGATIVE_INFINITY>
		<POSITIVE_INFINITY public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special Float constant which denotes negative infinity.

		For example, this is the result of 1.0 / 0.0.

		Operations with POSITIVE_INFINITY as an operand may result in
		NEGATIVE_INFINITY, POSITIVE_INFINITY or NaN. 

		If this constant is converted to an Int, e.g. through Std.int(), the
		result is unspecified.</haxe_doc>
		</POSITIVE_INFINITY>
		<NaN public="1" set="null" static="1">
			<x path="Float"/>
			<haxe_doc>A special Float constant which denotes an invalid number.

		NaN stands for "Not a Number". It occurs when a mathematically incorrect
		operation is executed, such as taking the square root of a negative
		number: Math.sqrt(-1).

		All further operations with NaN as an operand will result in NaN.

		If this constant is converted to an Int, e.g. through Std.int(), the
		result is unspecified.

		In order to test if a value is NaN, you should use Math.isNaN() function.

		@php In PHP versions prior to 5.3.1 VC 9 there may be unexpected
		results when performing arithmetic operations with NaN on Windows, 
		see [https://bugs.php.net/bug.php?id=42143]</haxe_doc>
		</NaN>
		<abs public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the absolute value of `v`.

		If `v` is positive or 0, the result is unchanged. Otherwise the result 
		is -`v`.
		
		If `v` is NEGATIVE_INFINITY or POSITIVE_INFINITY, the result is 
		POSITIVE_INFINITY.
		
		If `v` is NaN, the result is NaN.</haxe_doc>
		</abs>
		<min public="1" set="method" static="1">
			<f a="a:b">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the smaller of values `a` and `b`.

		If `a` or `b` are NaN, the result is NaN.
		If `a` or `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.
		If `a` and `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.</haxe_doc>
		</min>
		<max public="1" set="method" static="1">
			<f a="a:b">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the greater of values `a` and `b`.

		If `a` or `b` are NaN, the result is NaN.
		If `a` or `b` are POSITIVE_INFINITY, the result is POSITIVE_INFINITY.
		If `a` and `b` are NEGATIVE_INFINITY, the result is NEGATIVE_INFINITY.</haxe_doc>
		</max>
		<sin public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric sine of the specified angle `v`, in radians.
		
		If `v` is NaN or infinite, the result is NaN.</haxe_doc>
		</sin>
		<cos public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric cosine of the specified angle `v`, in radians.
		
		If `v` is NaN or infinite, the result is NaN.</haxe_doc>
		</cos>
		<tan public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric tangent of the specified angle `v`, in radians.
		
		If `v` is NaN or infinite, the result is NaN.</haxe_doc>
		</tan>
		<asin public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc of the specified angle `v`, in radians.
		
		If `v` is NaN or infinite, the result is NaN.</haxe_doc>
		</asin>
		<acos public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc cosine of the specified angle `v`, 
		in radians.
		
		If `v` is NaN or infinite, the result is NaN.</haxe_doc>
		</acos>
		<atan public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc tangent of the specified angle `v`, 
		in radians.
		
		If `v` is NaN or infinite, the result is NaN.</haxe_doc>
		</atan>
		<atan2 public="1" set="method" static="1">
			<f a="y:x">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the trigonometric arc tangent whose tangent is the quotient of 
		two specified numbers, in radians.
		
		If parameter `x` or `y`  is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, 
		the result is NaN.</haxe_doc>
		</atan2>
		<pow public="1" set="method" static="1">
			<f a="v:exp">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns a specified base `v` raised to the specified power `exp`.</haxe_doc>
		</pow>
		<sqrt public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the square root of `v`.
		
		If `v` is negative (including NEGATIVE_INFINITY) or NaN, the result 
		is NaN.
		If `v` is POSITIVE_INFINITY, the result is POSITIVE_INFINITY.
		If `v` is 0.0, the result is 0.0.</haxe_doc>
		</sqrt>
		<round public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Rounds `v` to the nearest integer value.
		
		If `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY 
		or POSITIVE_INFINITY, the result is unspecified.</haxe_doc>
		</round>
		<floor public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the largest integer value that is not greater than `v`.

		If `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY 
		or POSITIVE_INFINITY, the result is unspecified.</haxe_doc>
		</floor>
		<ceil public="1" set="method" static="1">
			<f a="v">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the smallest integer value that is not less than `v`.

		If `v` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY 
		or POSITIVE_INFINITY, the result is unspecified.</haxe_doc>
		</ceil>
		<random public="1" set="method" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns a pseudo-random number which is greater than or equal to 0.0, 
		and less than 1.0.</haxe_doc>
		</random>
		<isFinite public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `f` is a finite number.

		If `f` is POSITIVE_INFINITY, NEGATIVE_INFINITY or NaN, the result 
		is false, otherwise the result is true.</haxe_doc>
		</isFinite>
		<isNaN public="1" set="method" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `f` is not a valid number.

		If `f` is NaN, the result is true, otherwise the result is false. 
		In particular, both POSITIVE_INFINITY and NEGATIVE_INFINITY are
		not considered NaN.</haxe_doc>
		</isNaN>
		<haxe_doc>This class defines mathematical functions and constants.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="NMEPreloader" params="" file="Export/html5/haxe/NMEPreloader.hx">
		<extends path="openfl.display.Sprite"/>
		<outline><c path="openfl.display.Sprite"/></outline>
		<progress><c path="openfl.display.Sprite"/></progress>
		<getBackgroundColor public="1" set="method" line="52"><f a=""><x path="Int"/></f></getBackgroundColor>
		<getHeight public="1" set="method" line="58"><f a=""><x path="Float"/></f></getHeight>
		<getWidth public="1" set="method" line="74"><f a=""><x path="Float"/></f></getWidth>
		<onInit public="1" set="method" line="90"><f a=""><x path="Void"/></f></onInit>
		<onLoaded public="1" set="method" line="96"><f a=""><x path="Void"/></f></onLoaded>
		<onUpdate public="1" set="method" line="102"><f a="bytesLoaded:bytesTotal">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onUpdate>
		<new public="1" set="method" line="11"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="Reflect" params="" file="/usr/lib/haxe/std/js/_std/Reflect.hx">
		<hasField public="1" get="inline" set="null" line="24" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if structure `o` has a field named `field`.

		This is only guaranteed to work for anonymous structures. Refer to
		`Type.getInstanceFields` for a function supporting class instances.

		If `o` or `field` are null, the result is unspecified.</haxe_doc>
		</hasField>
		<field public="1" set="method" line="28" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Returns the value of the field named `field` on object `o`.

		If `o` is not an object or has no field named `field`, the result is
		null.

		If the field is defined as a property, its accessors are ignored. Refer
		to `Reflect.getProperty` for a function supporting property accessors.

		If `field` is null, the result is unspecified.

		(As3) If used on a property field, the getter will be invoked. It is
		not possible to obtain the value directly.</haxe_doc>
		</field>
		<setField public="1" get="inline" set="null" line="32" static="1">
			<f a="o:field:value">
				<d/>
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the field named `field` of object `o` to value `value`.

		If `o` has no field named `field`, this function is only guaranteed to
		work for anonymous structures.

		If `o` or `field` are null, the result is unspecified.

		(As3) If used on a property field, the setter will be invoked. It is
		not possible to set the value directly.</haxe_doc>
		</setField>
		<getProperty public="1" get="inline" set="null" line="36" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Returns the value of the field named `field` on object `o`, taking
		property getter functions into account.

		If the field is not a property, this function behaves like
		`Reflect.field`, but might be slower.

		If `o` or `field` are null, the result is unspecified.</haxe_doc>
		</getProperty>
		<setProperty public="1" get="inline" set="null" line="41" static="1">
			<f a="o:field:value">
				<d/>
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the field named `field` of object `o` to value `value`, taking
		property setter functions into account.

		If the field is not a property, this function behaves like
		`Reflect.setField`, but might be slower.

		If `field` is null, the result is unspecified.</haxe_doc>
		</setProperty>
		<callMethod public="1" get="inline" set="null" line="46" static="1">
			<f a="o:func:args">
				<d/>
				<d/>
				<c path="Array"><d/></c>
				<d/>
			</f>
			<haxe_doc>Call a method with the given object and arguments.</haxe_doc>
		</callMethod>
		<fields public="1" set="method" line="50" static="1">
			<f a="o">
				<d/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns the fields of structure `o`.

		This method is only guaranteed to work on anonymous structures. Refer to
		`Type.getInstanceFields` for a function supporting class instances.

		If `o` is null, the result is unspecified.</haxe_doc>
		</fields>
		<isFunction public="1" set="method" line="61" static="1">
			<f a="f">
				<d/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns true if `f` is a function, false otherwise.

		If `f` is null, the result is false.</haxe_doc>
		</isFunction>
		<compare public="1" params="T" set="method" line="65" static="1">
			<f a="a:b">
				<c path="compare.T"/>
				<c path="compare.T"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Compares `a` and `b`.

		If `a` is less than `b`, the result is negative. If `b` is less than
		`a`, the result is positive. If `a` and `b` are equal, the result is 0.

		This function is only defined if `a` and `b` are of the same type.

		If that type is a function, the result is unspecified and
		`Reflect.compareMethods` should be used instead.

		For all other types, the result is 0 if `a` and `b` are equal. If they
		are not equal, the result depends on the type and is negative if:

		- Numeric types: a is less than b
		- String: a is lexicographically less than b
		- Other: unspecified

		If `a` and `b` are null, the result is 0. If only one of them is null,
		the result is unspecified.</haxe_doc>
		</compare>
		<isEnumValue public="1" set="method" line="84" static="1">
			<f a="v">
				<d/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `v` is an enum value.

		The result is true if `v` is of type EnumValue, i.e. an enum
		constructor.

		Otherwise, including if `v` is null, the result is false.</haxe_doc>
		</isEnumValue>
		<deleteField public="1" set="method" line="88" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Removes the field named `field` from structure `o`.

		This method is only guaranteed to work on anonymous structures.

		If `o` or `field` are null, the result is unspecified.</haxe_doc>
		</deleteField>
		<makeVarArgs public="1" set="method" line="102" static="1">
			<f a="f">
				<f a="">
					<c path="Array"><d/></c>
					<d/>
				</f>
				<d/>
			</f>
			<haxe_doc>Transform a function taking an array of arguments into a function that can
		be called with any number of arguments.</haxe_doc>
			<overloads><makeVarArgs public="1" set="method"><f a="f">
	<f a="">
		<c path="Array"><d/></c>
		<x path="Void"/>
	</f>
	<d/>
</f></makeVarArgs></overloads>
		</makeVarArgs>
		<haxe_doc>The Reflect API is a way to manipulate values dynamicly through an
	abstract interface in an untyped manner. Use with care.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="String" params="" file="/usr/lib/haxe/std/js/_std/String.hx" extern="1">
		<fromCharCode public="1" set="method" static="1">
			<f a="code">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the String corresponding to the character code `code`.

		If `code` is negative or has another invalid value, the result is
		unspecified.</haxe_doc>
		</fromCharCode>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of characters in `this` String.</haxe_doc>
		</length>
		<toUpperCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are upper case.

		Affects the characters `a-z`. Other characters remain unchanged.</haxe_doc>
		</toUpperCase>
		<toLowerCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are lower case.

		Affects the characters `A-Z`. Other characters remain unchanged.</haxe_doc>
		</toLowerCase>
		<charAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the character at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, the empty String ""
		is returned.</haxe_doc>
		</charAt>
		<indexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the leftmost occurence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String starting from `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</indexOf>
		<lastIndexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the rightmost occurence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String from 0 to `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</lastIndexOf>
		<split public="1" set="method">
			<f a="delimiter">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Splits `this` String at each occurence of `delimiter`.

		If `this` String is the empty String "", the result is not consistent
		across targets and may either be `[]` (on Js, Cpp) or `[""]`.

		If `delimiter` is the empty String "", `this` String is split into an
		Array of `this.length` elements, where the elements correspond to the
		characters of `this` String.

		If `delimiter` is not found within `this` String, the result is an Array
		with one element, which equals `this` String.

		If `delimiter` is null, the result is unspecified.

		Otherwise, `this` String is split into parts at each occurence of
		`delimiter`. If `this` String starts (or ends) with [delimiter}, the
		result Array contains a leading (or trailing) empty String "" element.
		Two subsequent delimiters also result in an empty String "" element.</haxe_doc>
		</split>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the String itself.</haxe_doc>
		</toString>
		<substring public="1" set="method">
			<f a="startIndex:?endIndex">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the part of `this` String from `startIndex` to `endIndex`.

		If `startIndex` or `endIndex` are negative, 0 is used instead.

		If `startIndex` exceeds `endIndex`, they are swapped.

		If the (possibly swapped) `endIndex` is omitted or exceeds
		`this.length`, `this.length` is used instead.

		If the (possibly swapped) `startIndex` exceeds `this.length`, the empty
		String "" is returned.</haxe_doc>
		</substring>
		<charCodeAt public="1" get="inline" set="null" line="35">
			<f a="index">
				<x path="Int"/>
				<t path="Null"><x path="Int"/></t>
			</f>
			<haxe_doc>Returns the character code at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, null is returned.

		To obtain the character code of a single character, "x".code can be used
		instead to inline the character code at compile time. Note that this
		only works on String literals of length 1.</haxe_doc>
		</charCodeAt>
		<substr public="1" get="inline" set="null" line="39">
			<f a="pos:?len" v=":null">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns `len` characters of `this` String, starting at position `pos`.

		If `len` is omitted, all characters from position `pos` to the end of
		`this` String are included.

		If `pos` is negative, its value is calculated from the end of `this`
		String by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the calculated position + `len` exceeds `this.length`, the characters
		from that position to the end of `this` String are returned.

		If `len` is negative, the result is unspecified.</haxe_doc>
		</substr>
		<new public="1" set="method">
			<f a="string">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a copy from a given String.</haxe_doc>
		</new>
		<haxe_doc>The basic String class.

	A haxe String is immutable, it is not possible to modify individual
	characters. No method of this class changes the state of `this` String.

	Strings can be constructed using the string literal syntax "string value".

	String can be concatenated by using the + operator. If an operand is not a
	String, it is passed through Std.string() first.</haxe_doc>
		<meta><m n=":coreApi"/></meta>
	</class>
	<class path="Std" params="" file="/usr/lib/haxe/std/js/_std/Std.hx">
		<string public="1" set="method" line="35" static="1">
			<f a="s">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Converts any value to a String.

		If `s` is of `String`, `Int`, `Float` or `Bool`, its value is returned.

		If `s` is an instance of a class and that class or one of its parent classes has
		a `toString` method, that method is called. If no such method is present, the result
		is unspecified.

		If `s` is an enum constructor without argument, the constructor's name is returned. If
		arguments exists, the constructor's name followed by the String representations of
		the arguments is returned.

		If `s` is a structure, the field names along with their values are returned. The field order
		and the operator separating field names and values are unspecified.

		If s is null, "null" is returned.</haxe_doc>
		</string>
		<int public="1" get="inline" set="null" line="39" static="1">
			<f a="x">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Converts a `Float` to an `Int`, rounded towards 0.

		If `x` is outside of the signed Int32 range, or is NaN, NEGATIVE_INFINITY or POSITIVE_INFINITY, the result is unspecified.</haxe_doc>
		</int>
		<parseInt public="1" set="method" line="43" static="1">
			<f a="x">
				<c path="String"/>
				<t path="Null"><x path="Int"/></t>
			</f>
			<haxe_doc>Converts a `String` to an `Int`.

		Leading whitespaces are ignored.

		If `x` starts with 0x or 0X, hexadecimal notation is recognized where the following digits may
		contain 0-9 and A-F.

		Otherwise `x` is read as decimal number with 0-9 being allowed characters. `x` may also start with
		a - to denote a negative value.

		In decimal mode, parsing continues until an invalid character is detected, in which case the
		result up to that point is returned. For hexadecimal notation, the effect of invalid characters
		is unspecified.

		Leading 0s that are not part of the 0x/0X hexadecimal notation are ignored, which means octal
		notation is not supported.

		If the input cannot be recognized, the result is null.</haxe_doc>
		</parseInt>
		<parseFloat public="1" set="method" line="53" static="1">
			<f a="x">
				<c path="String"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Converts a `String` to a `Float`.

		The parsing rules for `parseInt` apply here as well, with the exception of invalid input
		resulting in a NaN value instead of null.

		Additionally, decimal notation may contain a single `.` to denote the start of the fractions.</haxe_doc>
		</parseFloat>
		<haxe_doc>The Std class provides standard methods for manipulating basic types.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":keepInit"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Void" params="" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Void"/></this>
		<haxe_doc>The standard Void type. Only `null` values can be of the type `Void`.</haxe_doc>
		<meta><m n=":coreType"/></meta>
	</abstract>
	<abstract path="Float" params="" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Float"/></this>
		<haxe_doc><![CDATA[The standard Float type, this is a double-precision IEEE 64bit float.

	On static targets, null cannot be assigned to Float. If this is necessary,
	`Null<Float>` can be used instead.]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Int" params="" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Int"/></this>
		<to><icast><x path="Float"/></icast></to>
		<haxe_doc><![CDATA[The standard Int type. Its precision depends on the platform.

	On static targets, null cannot be assigned to Int. If this is necessary,
	`Null<Int>` can be used instead.]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<typedef path="Null" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<c path="Null.T"/>
		<haxe_doc>`Null` can be useful in two cases. In order to document some methods
	that accepts or can return a `null` value, or for the Flash9 compiler and AS3
	generator to distinguish between base values that can be null and others that
	can't.</haxe_doc>
	</typedef>
	<abstract path="Bool" params="" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Bool"/></this>
		<haxe_doc><![CDATA[The standard Boolean type, which can either be true or false.

	On static targets, null cannot be assigned to Bool. If this is necessary,
	`Null<Bool>` can be used instead.]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Dynamic" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Dynamic"><c path="Dynamic.T"/></x></this>
		<haxe_doc>Dynamic is a special type which is compatible with all other types.

	Use of Dynamic should be minimized as it prevents several compiler
	checks and optimizations.</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<typedef path="Iterator" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<a>
			<next set="method">
				<f a=""><c path="Iterator.T"/></f>
				<haxe_doc>Returns the current item of the Iterator and advances to the next one.

		This method is not required to check hasNext() first. A call to this
		method while hasNext() is false yields unspecified behavior.</haxe_doc>
			</next>
			<hasNext set="method">
				<f a=""><x path="Bool"/></f>
				<haxe_doc>Returns false if the iteration is complete, true otherwise.

		Usually iteration is considered to be complete if all elements of the
		underlying data structure were handled through calls to next(). However,
		in custom iterators any logic may be used to determine the completion
		state.</haxe_doc>
			</hasNext>
		</a>
		<haxe_doc>An Iterator is a structure that permits iteration over elements of type T.

	Any class with matching hasNext and next fields is considered an Iterator
	and can then be used e.g. in for-loops. This makes it easy to implement
	custom iterators.</haxe_doc>
	</typedef>
	<typedef path="Iterable" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<a><iterator set="method"><f a=""><t path="Iterator"><c path="Iterable.T"/></t></f></iterator></a>
		<haxe_doc>An Iterable is a data structure which has an iterator() method.
	See `Lambda` for generic functions on iterable structures.</haxe_doc>
	</typedef>
	<class path="ArrayAccess" params="T" file="/usr/lib/haxe/std/StdTypes.hx" module="StdTypes" extern="1" interface="1"><haxe_doc>ArrayAccess is used to indicate a class that can be accessed using brackets.
	The type parameter represent the type of the elements stored.</haxe_doc></class>
	<class path="StringBuf" params="" file="/usr/lib/haxe/std/StringBuf.hx">
		<b><c path="String"/></b>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new StringBuf instance.

		This may involve initialization of the internal buffer.</haxe_doc>
		</new>
		<haxe_doc>A String buffer is an efficient way to build a big string by appending small
	elements together.

	Its cross-platform implementation uses String concatenation internally, but
	StringBuf may be optimized for different targets.

	Unlike String, an instance of StringBuf is not immutable in the sense that
	it can be passed as argument to functions which modify it by appending more
	values. However, the internal buffer cannot be modified.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="StringTools" params="" file="/usr/lib/haxe/std/StringTools.hx">
		<urlEncode public="1" get="inline" set="null" line="36" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Encode an URL by using the standard format.</haxe_doc>
		</urlEncode>
		<urlDecode public="1" get="inline" set="null" line="61" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Decode an URL using the standard format.</haxe_doc>
		</urlDecode>
		<startsWith public="1" set="method" line="127" static="1">
			<f a="s:start">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if the string `s` starts with the string `start`.

		If `start` is null, the result is unspecified.

		If `start` is the empty String "", the result is true.</haxe_doc>
		</startsWith>
		<isSpace public="1" set="method" line="165" static="1">
			<f a="s:pos">
				<c path="String"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if the character in the string `s` at position `pos` is a space.

		A character is considered to be a space character if its character code
		is 9,10,11,12,13 or 32.

		If `s` is the empty String "", or if pos is not a valid position within
		`s`, the result is false.</haxe_doc>
		</isSpace>
		<ltrim public="1" set="method" line="179" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Removes leading space characters of `s`.

		This function internally calls isSpace() to decide which characters to
		remove.

		If `s` is the empty String "" or consists only of space characters, the
		result is the empty String "".</haxe_doc>
		</ltrim>
		<rtrim public="1" set="method" line="204" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Removes trailing space characters of `s`.

		This function internally calls isSpace() to decide which characters to
		remove.

		If `s` is the empty String "" or consists only of space characters, the
		result is the empty String "".</haxe_doc>
		</rtrim>
		<trim public="1" set="method" line="226" static="1">
			<f a="s">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Removes leading and trailing space characters of `s`.

		This is a convenience function for ltrim(rtrim(s)).</haxe_doc>
		</trim>
		<replace public="1" set="method" line="291" static="1">
			<f a="s:sub:by">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Replace all occurences of the String `sub` in the String `s` by the
		String `by`.

		If `sub` is the empty String "", `by` is inserted after each character
		of `s`. If `by` is also the empty String "", `s` remains unchanged.

		This is a convenience function for `s.split(sub).join(by)`.

		If `sub` or `by` are null, the result is unspecified.</haxe_doc>
		</replace>
		<hex public="1" set="method" line="313" static="1">
			<f a="n:?digits" v=":null">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Encodes `n` into a hexadecimal representation.

		If `digits` is specified, the resulting String is padded with "0" until
		its length equals `digits`.</haxe_doc>
		</hex>
		<fastCodeAt public="1" get="inline" set="null" line="342" static="1">
			<f a="s:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the character code at position `index` of String `s`.

		This method is faster than String.charCodeAt() on most platforms.
		However, unlike String.charCodeAt(), the result is unspecified if
		`index` is negative or exceeds `s.length`.

		This operation is not guaranteed to work if `s` contains the \0
		character.</haxe_doc>
		</fastCodeAt>
		<haxe_doc>This class provides advanced methods on Strings. It is ideally used with
	'using StringTools' and then acts as an extension to the String class.

	If the first argument to any of the methods is null, the result is
	unspecified.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<enum path="ValueType" params="" file="/usr/lib/haxe/std/js/_std/Type.hx" module="Type">
		<TNull/>
		<TInt/>
		<TFloat/>
		<TBool/>
		<TObject/>
		<TFunction/>
		<TClass a="c"><x path="Class"><d/></x></TClass>
		<TEnum a="e"><x path="Enum"><d/></x></TEnum>
		<TUnknown/>
	</enum>
	<class path="Type" params="" file="/usr/lib/haxe/std/js/_std/Type.hx">
		<getClass public="1" params="T" set="method" line="36" static="1">
			<f a="o">
				<c path="getClass.T"/>
				<x path="Class"><c path="getClass.T"/></x>
			</f>
			<haxe_doc>Returns the class of `o`, if `o` is a class instance.

		If `o` is null or of a different type, null is returned.

		In general, type parameter information cannot be obtained at runtime.</haxe_doc>
		</getClass>
		<getClassName public="1" set="method" line="53" static="1">
			<f a="c">
				<x path="Class"><d/></x>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the name of class `c`, including its path.

		If `c` is inside a package, the package structure is returned dot-
		separated, with another dot separating the class name:
		`pack1.pack2.(...).packN.ClassName`
		If `c` is a sub-type of a haxe module, that module is not part of the
		package structure.

		If `c` has no package, the class name is returned.

		If `c` is null, the result is unspecified.

		The class name does not include any type parameters.</haxe_doc>
		</getClassName>
		<resolveClass public="1" set="method" line="63" static="1">
			<f a="name">
				<c path="String"/>
				<x path="Class"><d/></x>
			</f>
			<haxe_doc>Resolves a class by name.

		If `name` is the path of an existing class, that class is returned.

		Otherwise null is returned.

		If `name` is null or the path to a different type, the result is
		unspecified.

		The class name must not include any type parameters.</haxe_doc>
		</resolveClass>
		<resolveEnum public="1" set="method" line="71" static="1">
			<f a="name">
				<c path="String"/>
				<x path="Enum"><d/></x>
			</f>
			<haxe_doc>Resolves an enum by name.

		If `name` is the path of an existing enum, that enum is returned.

		Otherwise null is returned.

		If `name` is null the result is unspecified.

		If `name` is the path to a different type, null is returned.

		The enum name must not include any type parameters.</haxe_doc>
		</resolveEnum>
		<createInstance public="1" params="T" set="method" line="79" static="1">
			<f a="cl:args">
				<x path="Class"><c path="createInstance.T"/></x>
				<c path="Array"><d/></c>
				<c path="createInstance.T"/>
			</f>
			<haxe_doc>Creates an instance of class `cl`, using `args` as arguments to the
		class constructor.

		This function guarantees that the class constructor is called.

		Default values of constructors arguments are not guaranteed to be
		taken into account.

		If `cl` or `args` are null, or if the number of elements in `args` does
		not match the expected number of constructor arguments, or if any
		argument has an invalid type,  or if `cl` has no own constructor, the
		result is unspecified.

		In particular, default values of constructor arguments are not
		guaranteed to be taken into account.</haxe_doc>
		</createInstance>
		<getClassFields public="1" set="method" line="136" static="1">
			<f a="c">
				<x path="Class"><d/></x>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns a list of static fields of class `c`.

		This does not include static fields of parent classes.

		The order of the fields in the returned Array is unspecified.

		If `c` is null, the result is unspecified.

		(As3) This method only returns class fields that are public.</haxe_doc>
		</getClassFields>
		<typeof public="1" set="method" line="151" static="1">
			<f a="v">
				<d/>
				<e path="ValueType"/>
			</f>
			<haxe_doc>Returns the runtime type of value `v`.

		The result corresponds to the type `v` has at runtime, which may vary
		per platform. Assumptions regarding this should be minimized to avoid
		surprises.</haxe_doc>
		</typeof>
		<haxe_doc>The haxe Reflection API allows retrieval of type information at runtime.

	This class complements the more lightweight Reflect class, with a focus on
	class and enum instances.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="UInt" params="" file="/usr/lib/haxe/std/UInt.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="Int"/></icast>
			<icast field="toFloat"><x path="Float"/></icast>
		</to>
		<haxe_doc>The unsigned Int type is only defined for Flash9 and C#.
	Simulate it for other platforms.</haxe_doc>
		<impl><class path="_UInt.UInt_Impl_" params="" file="/usr/lib/haxe/std/UInt.hx" private="1" module="UInt"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<typedef path="com.gamestudiohx.babylonhx.BabylonState" params="" file="../../com/gamestudiohx/babylonhx/Engine.hx" module="com.gamestudiohx.babylonhx.Engine">
		<a><culling><t path="Null"><d/></t></culling></a>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin</haxe_doc>
	</typedef>
	<typedef path="com.gamestudiohx.babylonhx.BabylonCaps" params="" file="../../com/gamestudiohx/babylonhx/Engine.hx" module="com.gamestudiohx.babylonhx.Engine"><a>
	<textureFloat><t path="Null"><d/></t></textureFloat>
	<textureAnisotropicFilterExtension><t path="Null"><d/></t></textureAnisotropicFilterExtension>
	<standardDerivatives><t path="Null"><d/></t></standardDerivatives>
	<maxTexturesImageUnits><t path="Null"><d/></t></maxTexturesImageUnits>
	<maxTextureSize><t path="Null"><d/></t></maxTextureSize>
	<maxRenderTextureSize><t path="Null"><d/></t></maxRenderTextureSize>
	<maxCubemapTextureSize><t path="Null"><d/></t></maxCubemapTextureSize>
	<maxAnisotropy><t path="Null"><d/></t></maxAnisotropy>
	<instancedArrays><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.InstancedMesh"/></c></instancedArrays>
</a></typedef>
	<class path="com.gamestudiohx.babylonhx.Engine" params="" file="../../com/gamestudiohx/babylonhx/Engine.hx">
		<clipPlane public="1" line="80" static="1"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></clipPlane>
		<ShadersRepository public="1" line="83" static="1"><c path="String"/></ShadersRepository>
		<ALPHA_DISABLE public="1" line="85" static="1"><x path="Int"/></ALPHA_DISABLE>
		<ALPHA_ADD public="1" line="86" static="1"><x path="Int"/></ALPHA_ADD>
		<ALPHA_COMBINE public="1" line="87" static="1"><x path="Int"/></ALPHA_COMBINE>
		<DELAYLOADSTATE_NONE public="1" line="89" static="1"><x path="Int"/></DELAYLOADSTATE_NONE>
		<DELAYLOADSTATE_LOADED public="1" line="90" static="1"><x path="Int"/></DELAYLOADSTATE_LOADED>
		<DELAYLOADSTATE_LOADING public="1" line="91" static="1"><x path="Int"/></DELAYLOADSTATE_LOADING>
		<DELAYLOADSTATE_NOTLOADED public="1" line="92" static="1"><x path="Int"/></DELAYLOADSTATE_NOTLOADED>
		<epsilon public="1" line="94" static="1"><x path="Float"/></epsilon>
		<collisionsEpsilon public="1" line="95" static="1"><x path="Float"/></collisionsEpsilon>
		<forceWireframe public="1"><x path="Bool"/></forceWireframe>
		<cullBackFaces public="1"><x path="Bool"/></cullBackFaces>
		<scenes public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.Scene"/></c></scenes>
		<_hardwareScalingLevel public="1"><x path="Int"/></_hardwareScalingLevel>
		<_aspectRatio public="1"><x path="Float"/></_aspectRatio>
		<_cachedViewport public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Viewport"/></_cachedViewport>
		<_caps public="1"><t path="com.gamestudiohx.babylonhx.BabylonCaps"/></_caps>
		<_alphaTest public="1"><x path="Bool"/></_alphaTest>
		<_depthMask><x path="Bool"/></_depthMask>
		<_runningLoop public="1"><x path="Bool"/></_runningLoop>
		<_vertexAttribArrays><c path="Array"><x path="Bool"/></c></_vertexAttribArrays>
		<_loadedTexturesCache public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/></c></_loadedTexturesCache>
		<_activeTexturesCache public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></c></_activeTexturesCache>
		<_currentEffect public="1"><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_currentEffect>
		<_currentState public="1"><t path="com.gamestudiohx.babylonhx.BabylonState"/></_currentState>
		<_compiledEffects public="1"><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
</x></_compiledEffects>
		<_cachedEffectForVertexBuffers public="1"><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_cachedEffectForVertexBuffers>
		<_cachedVertexBuffers public="1"><d/></_cachedVertexBuffers>
		<_cachedIndexBuffer public="1"><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_cachedIndexBuffer>
		<_renderingCanvas public="1"><c path="openfl.display.Sprite"/></_renderingCanvas>
		<isFullscreen public="1"><x path="Bool"/></isFullscreen>
		<isPointerLock public="1"><x path="Bool"/></isPointerLock>
		<_renderFunction public="1"><f a="">
	<c path="openfl.geom.Rectangle"/>
	<x path="Void"/>
</f></_renderFunction>
		<_workingCanvas public="1"><c path="openfl.display.BitmapData"/></_workingCanvas>
		<_workingContext public="1"><c path="openfl.display.OpenGLView"/></_workingContext>
		<getAspectRatio public="1" set="method" line="268"><f a="camera">
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Float"/>
</f></getAspectRatio>
		<getRenderWidth public="1" set="method" line="275"><f a=""><x path="Int"/></f></getRenderWidth>
		<getRenderHeight public="1" set="method" line="280"><f a=""><x path="Int"/></f></getRenderHeight>
		<getRenderingCanvas public="1" set="method" line="285"><f a=""><c path="openfl.display.Sprite"/></f></getRenderingCanvas>
		<setHardwareScalingLevel public="1" set="method" line="289"><f a="level">
	<x path="Int"/>
	<x path="Void"/>
</f></setHardwareScalingLevel>
		<getHardwareScalingLevel public="1" set="method" line="294"><f a=""><x path="Int"/></f></getHardwareScalingLevel>
		<getLoadedTexturesCache public="1" set="method" line="298"><f a=""><c path="Array"><c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/></c></f></getLoadedTexturesCache>
		<setDepthFunctionToGreaterOrEqual public="1" set="method" line="302"><f a=""><x path="Void"/></f></setDepthFunctionToGreaterOrEqual>
		<setDepthFunctionToLessOrEqual public="1" set="method" line="306"><f a=""><x path="Void"/></f></setDepthFunctionToLessOrEqual>
		<setDepthFunctionToLess public="1" set="method" line="310"><f a=""><x path="Void"/></f></setDepthFunctionToLess>
		<getCaps public="1" set="method" line="314"><f a=""><t path="com.gamestudiohx.babylonhx.BabylonCaps"/></f></getCaps>
		<stopRenderLoop public="1" set="method" line="321"><f a=""><x path="Void"/></f></stopRenderLoop>
		<_renderLoop public="1" set="method" line="326"><f a="?rect" v="null">
	<c path="openfl.geom.Rectangle"/>
	<x path="Void"/>
</f></_renderLoop>
		<runRenderLoop public="1" set="method" line="338"><f a="renderFunction">
	<f a="">
		<c path="openfl.geom.Rectangle"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></runRenderLoop>
		<switchFullscreen public="1" set="method" line="346"><f a="requestPointerLock">
	<unknown/>
	<x path="Void"/>
</f></switchFullscreen>
		<clear public="1" set="method" line="358"><f a="color:backBuffer:depthStencil">
	<d/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></clear>
		<setViewport public="1" set="method" line="385"><f a="viewport:?requiredWidth:?requiredHeight" v=":0:0">
	<c path="com.gamestudiohx.babylonhx.tools.math.Viewport"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setViewport>
		<setDirectViewport public="1" set="method" line="398"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setDirectViewport>
		<beginFrame public="1" set="method" line="405"><f a=""><x path="Void"/></f></beginFrame>
		<endFrame public="1" set="method" line="409"><f a=""><x path="Void"/></f></endFrame>
		<resize public="1" set="method" line="413"><f a=""><x path="Void"/></f></resize>
		<bindFramebuffer public="1" set="method" line="419"><f a="texture">
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<unBindFramebuffer public="1" set="method" line="427"><f a="texture">
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
	<x path="Void"/>
</f></unBindFramebuffer>
		<flushFramebuffer public="1" get="inline" set="null" line="437"><f a=""><x path="Void"/></f></flushFramebuffer>
		<restoreDefaultFramebuffer public="1" set="method" line="441"><f a=""><x path="Void"/></f></restoreDefaultFramebuffer>
		<_resetVertexBufferBinding set="method" line="449"><f a=""><x path="Void"/></f></_resetVertexBufferBinding>
		<createVertexBuffer public="1" set="method" line="456"><f a="vertices">
	<c path="Array"><x path="Float"/></c>
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
</f></createVertexBuffer>
		<createDynamicVertexBuffer public="1" set="method" line="464"><f a="capacity">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
</f></createDynamicVertexBuffer>
		<updateDynamicVertexBuffer public="1" get="inline" set="null" line="472"><f a="vertexBuffer:vertices:?length" v="::0">
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></updateDynamicVertexBuffer>
		<createIndexBuffer public="1" set="method" line="488"><f a="indices">
	<c path="Array"><x path="Int"/></c>
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
</f></createIndexBuffer>
		<bindBuffers public="1" set="method" line="503"><f a="vertexBuffer:indexBuffer:vertexDeclaration:vertexStrideSize:effect">
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<x path="Void"/>
</f></bindBuffers>
		<bindMultiBuffers public="1" set="method" line="527"><f a="vertexBuffers:indexBuffer:effect">
	<x path="Map">
		<c path="String"/>
		<c path="com.gamestudiohx.babylonhx.mesh.VertexBuffer"/>
	</x>
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<x path="Void"/>
</f></bindMultiBuffers>
		<_releaseBuffer public="1" set="method" line="558"><f a="buffer">
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
	<x path="Bool"/>
</f></_releaseBuffer>
		<deleteInstancesBuffer public="1" set="method" line="569"><f a="buffer">
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
	<x path="Void"/>
</f></deleteInstancesBuffer>
		<updateAndBindInstancesBuffer public="1" set="method" line="575"><f a="instancesBuffer:data:offsetLocations">
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
	<t path="openfl.utils.Float32Array"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></updateAndBindInstancesBuffer>
		<unBindInstancesBuffer public="1" set="method" line="589"><f a="instancesBuffer:offsetLocations">
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></unBindInstancesBuffer>
		<draw public="1" set="method" line="599"><f a="useTriangles:indexStart:indexCount:?instancesCount" v=":::null">
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></draw>
		<_releaseEffect public="1" set="method" line="621"><f a="effect">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<x path="Void"/>
</f></_releaseEffect>
		<createEffect public="1" set="method" line="633"><f a="baseName:attributesNames:uniformsNames:samplers:defines:?optionalDefines" v=":::::null">
	<d/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><c path="String"/></c>
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
</f></createEffect>
		<compileShader public="1" set="method" line="647"><f a="source:type:?defines" v="::null">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<t path="openfl.gl.GLShader"/>
</f></compileShader>
		<createShaderProgram public="1" set="method" line="665"><f a="vertexCode:fragmentCode:defines">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<t path="openfl.gl.GLProgram"/>
</f></createShaderProgram>
		<getUniforms public="1" set="method" line="685"><f a="shaderProgram:uniformsNames">
	<t path="openfl.gl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><t path="openfl.gl.GLUniformLocation"/></c>
</f></getUniforms>
		<getAttributes public="1" set="method" line="694"><f a="shaderProgram:attributesNames">
	<t path="openfl.gl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><x path="Int"/></c>
</f></getAttributes>
		<enableEffect public="1" set="method" line="711"><f a="effect">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<x path="Void"/>
</f></enableEffect>
		<setArray public="1" get="inline" set="null" line="749"><f a="?uniform:array" v="null:">
	<t path="openfl.gl.GLUniformLocation"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></setArray>
		<setMatrices public="1" get="inline" set="null" line="760"><f a="?uniform:matrices" v="null:">
	<t path="openfl.gl.GLUniformLocation"/>
	<t path="openfl.utils.Float32Array"/>
	<x path="Void"/>
</f></setMatrices>
		<setMatrix public="1" get="inline" set="null" line="766"><f a="?uniform:matrix" v="null:">
	<t path="openfl.gl.GLUniformLocation"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></setMatrix>
		<setFloat public="1" get="inline" set="null" line="778"><f a="?uniform:value" v="null:">
	<t path="openfl.gl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat>
		<setFloat2 public="1" get="inline" set="null" line="784"><f a="?uniform:x:y" v="null::">
	<t path="openfl.gl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat2>
		<setFloat3 public="1" get="inline" set="null" line="790"><f a="?uniform:x:y:z" v="null:::">
	<t path="openfl.gl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat3>
		<setBool public="1" get="inline" set="null" line="796"><f a="?uniform:bool" v="null:">
	<t path="openfl.gl.GLUniformLocation"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setBool>
		<setFloat4 public="1" get="inline" set="null" line="802"><f a="?uniform:x:y:z:w" v="null::::">
	<t path="openfl.gl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat4>
		<setColor3 public="1" get="inline" set="null" line="808"><f a="?uniform:color3" v="null:">
	<t path="openfl.gl.GLUniformLocation"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<x path="Void"/>
</f></setColor3>
		<setColor4 public="1" get="inline" set="null" line="814"><f a="?uniform:color3:alpha" v="null::">
	<t path="openfl.gl.GLUniformLocation"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setColor4>
		<setState public="1" set="method" line="823"><f a="culling">
	<x path="Bool"/>
	<x path="Void"/>
</f></setState>
		<setDepthBuffer public="1" set="method" line="837"><f a="enable">
	<x path="Bool"/>
	<x path="Void"/>
</f></setDepthBuffer>
		<setDepthWrite public="1" set="method" line="845"><f a="enable">
	<x path="Bool"/>
	<x path="Void"/>
</f></setDepthWrite>
		<setColorWrite public="1" set="method" line="850"><f a="enable">
	<x path="Bool"/>
	<x path="Void"/>
</f></setColorWrite>
		<setAlphaMode public="1" set="method" line="854"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></setAlphaMode>
		<setAlphaTesting public="1" set="method" line="877"><f a="enable">
	<x path="Bool"/>
	<x path="Void"/>
</f></setAlphaTesting>
		<getAlphaTesting public="1" set="method" line="881"><f a=""><x path="Bool"/></f></getAlphaTesting>
		<wipeCaches public="1" set="method" line="887"><f a=""><x path="Void"/></f></wipeCaches>
		<getExponantOfTwo set="method" line="899"><f a="value:max">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getExponantOfTwo>
		<getScaled set="method" line="912"><f a="source:newWidth:newHeight">
	<c path="openfl.display.BitmapData"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="openfl.display.BitmapData"/>
</f></getScaled>
		<createTexture public="1" set="method" line="920"><f a="url:?noMipmap:?invertY:?scene" v=":null:null:null">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
</f></createTexture>
		<createDynamicTexture public="1" set="method" line="983"><f a="width:height:generateMipMaps">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
</f></createDynamicTexture>
		<updateDynamicTexture public="1" set="method" line="1013"><f a="texture:canvas:invertY">
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
	<c path="openfl.display.BitmapData"/>
	<x path="Int"/>
	<x path="Void"/>
</f></updateDynamicTexture>
		<updateVideoTexture public="1" set="method" line="1034"><f a="texture:video">
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
	<d/>
	<x path="Void"/>
</f></updateVideoTexture>
		<createRenderTargetTexture public="1" set="method" line="1064"><f a="size:options">
	<d/>
	<d/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
</f></createRenderTargetTexture>
		<createCubeTexture public="1" set="method" line="1143"><f a="rootUrl:scene:?extensions" v="::null">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="Array"><c path="String"/></c>
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
</f></createCubeTexture>
		<_releaseTexture public="1" set="method" line="1245"><f a="texture">
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
	<x path="Void"/>
</f></_releaseTexture>
		<bindSamplers public="1" set="method" line="1270"><f a="effect">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<x path="Void"/>
</f></bindSamplers>
		<_bindTexture public="1" set="method" line="1284"><f a="channel:texture">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
	<x path="Void"/>
</f></_bindTexture>
		<setTextureFromPostProcess public="1" set="method" line="1290"><f a="channel:postProcess">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
	<x path="Void"/>
</f></setTextureFromPostProcess>
		<getGLTexture set="method" line="1294"><f a="channel">
	<x path="Int"/>
	<x path="Int"/>
</f></getGLTexture>
		<setTexture public="1" set="method" line="1298"><f a="channel:texture">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/>
	<x path="Void"/>
</f></setTexture>
		<_setAnisotropicLevel public="1" set="method" line="1393"><f a="key:texture">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/>
	<x path="Void"/>
</f></_setAnisotropicLevel>
		<dispose public="1" set="method" line="1403"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="134"><f a="canvas:antialias">
	<c path="openfl.display.Sprite"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Engine"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.Node" params="" file="../../com/gamestudiohx/babylonhx/Node.hx">
		<name public="1"><c path="String"/></name>
		<id public="1"><c path="String"/></id>
		<parent public="1"><c path="com.gamestudiohx.babylonhx.Node"/></parent>
		<position public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></position>
		<_childrenFlag public="1"><x path="Int"/></_childrenFlag>
		<_isReady public="1"><x path="Bool"/></_isReady>
		<_isEnabled public="1"><x path="Bool"/></_isEnabled>
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_currentRenderId public="1"><x path="Int"/></_currentRenderId>
		<onReady public="1"><f a="">
	<c path="com.gamestudiohx.babylonhx.Node"/>
	<x path="Void"/>
</f></onReady>
		<_cache public="1"><d/></_cache>
		<_initCache public="1" set="method" line="42"><f a=""><x path="Void"/></f></_initCache>
		<updateCache public="1" set="method" line="48"><f a="?force" v="false">
	<x path="Bool"/>
	<x path="Void"/>
</f></updateCache>
		<_updateCache public="1" set="method" line="57"><f a="?ignoreParentClass" v="false">
	<x path="Bool"/>
	<x path="Void"/>
</f></_updateCache>
		<_isSynchronized public="1" set="method" line="61"><f a=""><x path="Bool"/></f></_isSynchronized>
		<_syncChildFlag public="1" set="method" line="65"><f a=""><x path="Void"/></f></_syncChildFlag>
		<isSynchronizedWithParent public="1" set="method" line="69"><f a=""><x path="Bool"/></f></isSynchronizedWithParent>
		<isSynchronized public="1" set="method" line="80"><f a="?updateCache" v="false">
	<x path="Bool"/>
	<x path="Bool"/>
</f></isSynchronized>
		<hasNewParent public="1" set="method" line="92"><f a="?update" v="false">
	<x path="Bool"/>
	<x path="Bool"/>
</f></hasNewParent>
		<_needToSynchonizeChildren public="1" set="method" line="102"><f a="childFlag">
	<x path="Int"/>
	<x path="Bool"/>
</f></_needToSynchonizeChildren>
		<isReady public="1" set="method" line="106"><f a=""><x path="Bool"/></f></isReady>
		<isEnabled public="1" set="method" line="110"><f a=""><x path="Bool"/></f></isEnabled>
		<setEnabled public="1" set="method" line="122"><f a="value">
	<x path="Bool"/>
	<x path="Void"/>
</f></setEnabled>
		<isDescendantOf public="1" set="method" line="126"><f a="ancestor">
	<c path="com.gamestudiohx.babylonhx.Node"/>
	<x path="Bool"/>
</f></isDescendantOf>
		<_getDescendants public="1" set="method" line="137"><f a="list:results">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.Node"/></c>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.Node"/></c>
	<x path="Void"/>
</f></_getDescendants>
		<getWorldMatrix public="1" set="method" line="146"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getWorldMatrix>
		<getDescendants public="1" set="method" line="150"><f a=""><c path="Array"><c path="com.gamestudiohx.babylonhx.Node"/></c></f></getDescendants>
		<_setReady public="1" set="method" line="158"><f a="state">
	<x path="Bool"/>
	<x path="Void"/>
</f></_setReady>
		<new public="1" set="method" line="29"><f a="scene">
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Node"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.Scene" params="" file="../../com/gamestudiohx/babylonhx/Scene.hx">
		<FOGMODE_NONE public="1" line="50" static="1"><x path="Int"/></FOGMODE_NONE>
		<FOGMODE_EXP public="1" line="51" static="1"><x path="Int"/></FOGMODE_EXP>
		<FOGMODE_EXP2 public="1" line="52" static="1"><x path="Int"/></FOGMODE_EXP2>
		<FOGMODE_LINEAR public="1" line="53" static="1"><x path="Int"/></FOGMODE_LINEAR>
		<MinDeltaTime public="1" line="54" static="1"><x path="Float"/></MinDeltaTime>
		<MaxDeltaTime public="1" line="55" static="1"><x path="Float"/></MaxDeltaTime>
		<_engine><c path="com.gamestudiohx.babylonhx.Engine"/></_engine>
		<beforeRender public="1"><f a=""><x path="Void"/></f></beforeRender>
		<afterRender public="1"><f a=""><x path="Void"/></f></afterRender>
		<_viewMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_viewMatrix>
		<_projectionMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_projectionMatrix>
		<_physicsEngine public="1"><d/></_physicsEngine>
		<useDelayedTextureLoading public="1"><x path="Bool"/></useDelayedTextureLoading>
		<_totalVertices public="1"><x path="Int"/></_totalVertices>
		<_activeVertices public="1"><x path="Int"/></_activeVertices>
		<_activeParticles public="1"><x path="Int"/></_activeParticles>
		<_lastFrameDuration public="1"><x path="Float"/></_lastFrameDuration>
		<_evaluateActiveMeshesDuration public="1"><x path="Float"/></_evaluateActiveMeshesDuration>
		<_renderTargetsDuration public="1"><x path="Float"/></_renderTargetsDuration>
		<_renderDuration public="1"><x path="Float"/></_renderDuration>
		<_particlesDuration public="1"><x path="Float"/></_particlesDuration>
		<_spritesDuration public="1"><x path="Float"/></_spritesDuration>
		<_animationRatio public="1"><x path="Float"/></_animationRatio>
		<_renderId public="1"><x path="Int"/></_renderId>
		<_executeWhenReadyTimeoutId public="1"><x path="Int"/></_executeWhenReadyTimeoutId>
		<_frustumPlanes public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c></_frustumPlanes>
		<_selectionOctree public="1"><c path="com.gamestudiohx.babylonhx.culling.octrees.Octree"/></_selectionOctree>
		<_toBeDisposed public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_toBeDisposed>
		<_onReadyCallbacks public="1"><c path="Array"><d/></c></_onReadyCallbacks>
		<_pendingData public="1"><c path="Array"><d/></c></_pendingData>
		<_onBeforeRenderCallbacks public="1"><c path="Array"><f a=""><x path="Void"/></f></c></_onBeforeRenderCallbacks>
		<_pickWithRayInverseMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_pickWithRayInverseMatrix>
		<autoClear public="1"><x path="Bool"/></autoClear>
		<forceWireframe public="1"><x path="Bool"/></forceWireframe>
		<clearColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></clearColor>
		<ambientColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></ambientColor>
		<fogMode public="1"><x path="Int"/></fogMode>
		<fogColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></fogColor>
		<fogDensity public="1"><x path="Float"/></fogDensity>
		<fogStart public="1"><x path="Float"/></fogStart>
		<fogEnd public="1"><x path="Float"/></fogEnd>
		<_activeMeshes public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_activeMeshes>
		<_processedMaterials public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_processedMaterials>
		<_renderTargets public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_renderTargets>
		<_activeParticleSystems public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_activeParticleSystems>
		<_activeSkeletons public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_activeSkeletons>
		<renderTargetsEnabled public="1"><x path="Bool"/></renderTargetsEnabled>
		<customRenderTargets public="1"><c path="Array"><d/></c></customRenderTargets>
		<_scaledVelocity public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_scaledVelocity>
		<_scaledPosition public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_scaledPosition>
		<_transformMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_transformMatrix>
		<_activeAnimatables public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.animations._Animatable"/></c></_activeAnimatables>
		<lensFlareSystems public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.lensflare.LensFlareSystem"/></c></lensFlareSystems>
		<_renderingManager public="1"><c path="com.gamestudiohx.babylonhx.rendering.RenderingManager"/></_renderingManager>
		<_geometries><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.Geometry"/></c></_geometries>
		<database public="1"><d/></database>
		<lightsEnabled public="1"><x path="Bool"/></lightsEnabled>
		<lights public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.lights.Light"/></c></lights>
		<cameras public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.cameras.Camera"/></c></cameras>
		<activeCamera public="1"><c path="com.gamestudiohx.babylonhx.cameras.Camera"/></activeCamera>
		<activeCameras public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.cameras.Camera"/></c></activeCameras>
		<meshes public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c></meshes>
		<materials public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.materials.Material"/></c></materials>
		<multiMaterials public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.materials.MultiMaterial"/></c></multiMaterials>
		<defaultMaterial public="1"><c path="com.gamestudiohx.babylonhx.materials.StandardMaterial"/></defaultMaterial>
		<texturesEnabled public="1"><x path="Bool"/></texturesEnabled>
		<textures public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.materials.textures.BaseTexture"/></c></textures>
		<particlesEnabled public="1"><x path="Bool"/></particlesEnabled>
		<particleSystems public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.particles.ParticleSystem"/></c></particleSystems>
		<spriteManagers public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.sprites.SpriteManager"/></c></spriteManagers>
		<layers public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.layer.Layer"/></c></layers>
		<skeletons public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.bones.Skeleton"/></c></skeletons>
		<collisionsEnabled public="1"><x path="Bool"/></collisionsEnabled>
		<gravity public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></gravity>
		<postProcessesEnabled public="1"><x path="Bool"/></postProcessesEnabled>
		<postProcessManager public="1"><c path="com.gamestudiohx.babylonhx.postprocess.PostProcessManager"/></postProcessManager>
		<_animationStartDate public="1"><x path="Int"/></_animationStartDate>
		<_boundingBoxRenderer><c path="com.gamestudiohx.babylonhx.rendering.BoundingBoxRenderer"/></_boundingBoxRenderer>
		<getEngine public="1" set="method" line="255"><f a=""><c path="com.gamestudiohx.babylonhx.Engine"/></f></getEngine>
		<getTotalVertices public="1" set="method" line="259"><f a=""><x path="Int"/></f></getTotalVertices>
		<getBoundingBoxRenderer public="1" set="method" line="263"><f a=""><c path="com.gamestudiohx.babylonhx.rendering.BoundingBoxRenderer"/></f></getBoundingBoxRenderer>
		<getActiveVertices public="1" set="method" line="267"><f a=""><x path="Int"/></f></getActiveVertices>
		<getActiveParticles public="1" set="method" line="271"><f a=""><x path="Int"/></f></getActiveParticles>
		<getLastFrameDuration public="1" set="method" line="275"><f a=""><x path="Float"/></f></getLastFrameDuration>
		<getEvaluateActiveMeshesDuration public="1" set="method" line="279"><f a=""><x path="Float"/></f></getEvaluateActiveMeshesDuration>
		<getRenderTargetsDuration public="1" set="method" line="283"><f a=""><x path="Float"/></f></getRenderTargetsDuration>
		<getRenderDuration public="1" set="method" line="287"><f a=""><x path="Float"/></f></getRenderDuration>
		<getParticlesDuration public="1" set="method" line="291"><f a=""><x path="Float"/></f></getParticlesDuration>
		<getSpritesDuration public="1" set="method" line="295"><f a=""><x path="Float"/></f></getSpritesDuration>
		<getAnimationRatio public="1" set="method" line="299"><f a=""><x path="Float"/></f></getAnimationRatio>
		<getRenderId public="1" set="method" line="303"><f a=""><x path="Int"/></f></getRenderId>
		<isReady public="1" set="method" line="307"><f a=""><x path="Bool"/></f></isReady>
		<registerBeforeRender public="1" set="method" line="351"><f a="func">
	<d/>
	<x path="Void"/>
</f></registerBeforeRender>
		<unregisterBeforeRender public="1" set="method" line="355"><f a="func">
	<d/>
	<x path="Void"/>
</f></unregisterBeforeRender>
		<_addPendingData public="1" set="method" line="363"><f a="data">
	<d/>
	<x path="Void"/>
</f></_addPendingData>
		<_removePendingData public="1" set="method" line="371"><f a="data">
	<d/>
	<x path="Void"/>
</f></_removePendingData>
		<getWaitingItemsCount public="1" set="method" line="389"><f a=""><x path="Int"/></f></getWaitingItemsCount>
		<executeWhenReady public="1" set="method" line="393"><f a="func">
	<d/>
	<x path="Void"/>
</f></executeWhenReady>
		<_checkIsReady set="method" line="411"><f a=""><x path="Void"/></f></_checkIsReady>
		<beginAnimation public="1" set="method" line="427"><f a="target:from:to:loop:?speedRatio:?onAnimationEnd" v="::::1.0f:null">
	<d/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Float"/>
	<f a=""><x path="Void"/></f>
	<x path="Void"/>
</f></beginAnimation>
		<stopAnimation public="1" set="method" line="449"><f a="target">
	<d/>
	<x path="Void"/>
</f></stopAnimation>
		<_animate public="1" set="method" line="458"><f a=""><x path="Void"/></f></_animate>
		<getViewMatrix public="1" set="method" line="475"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getViewMatrix>
		<getProjectionMatrix public="1" set="method" line="479"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getProjectionMatrix>
		<getTransformMatrix public="1" get="inline" set="null" line="483"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getTransformMatrix>
		<updateTransformMatrix public="1" get="inline" set="null" line="487"><f a="?force" v="null">
	<x path="Bool"/>
	<x path="Void"/>
</f></updateTransformMatrix>
		<setTransformMatrix public="1" get="inline" set="null" line="491"><f a="view:projection">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></setTransformMatrix>
		<activeCameraByID public="1" set="method" line="498"><f a="id">
	<c path="String"/>
	<x path="Void"/>
</f></activeCameraByID>
		<getMaterialByID public="1" set="method" line="507"><f a="id">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.Material"/>
</f></getMaterialByID>
		<getMaterialByName public="1" set="method" line="517"><f a="name">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.Material"/>
</f></getMaterialByName>
		<getLightByID public="1" set="method" line="527"><f a="id">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.lights.Light"/>
</f></getLightByID>
		<getMeshByID public="1" set="method" line="537"><f a="id">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
</f></getMeshByID>
		<getLastMeshByID public="1" set="method" line="547"><f a="id">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
</f></getLastMeshByID>
		<getLastEntryByID public="1" set="method" line="558"><f a="id">
	<c path="String"/>
	<d/>
</f></getLastEntryByID>
		<getMeshByName public="1" set="method" line="586"><f a="name">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
</f></getMeshByName>
		<isActiveMesh public="1" set="method" line="596"><f a="mesh">
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
	<x path="Bool"/>
</f></isActiveMesh>
		<getLastSkeletonByID public="1" set="method" line="600"><f a="id">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.bones.Skeleton"/>
</f></getLastSkeletonByID>
		<getSkeletonByID public="1" set="method" line="612"><f a="id">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.bones.Skeleton"/>
</f></getSkeletonByID>
		<getSkeletonByName public="1" set="method" line="622"><f a="name">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.bones.Skeleton"/>
</f></getSkeletonByName>
		<_evaluateSubMesh public="1" get="inline" set="null" line="632"><f a="subMesh:mesh">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
	<x path="Void"/>
</f></_evaluateSubMesh>
		<_evaluateActiveMeshes public="1" get="inline" set="null" line="657"><f a=""><x path="Void"/></f></_evaluateActiveMeshes>
		<_renderForCamera public="1" get="inline" set="null" line="764"><f a="?camera:?mustClearDepth" v="null:false">
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></_renderForCamera>
		<render public="1" get="inline" set="null" line="870"><f a="?rect" v="null">
	<c path="openfl.geom.Rectangle"/>
	<x path="Void"/>
</f></render>
		<dispose public="1" set="method" line="942"><f a=""><x path="Void"/></f></dispose>
		<getGeometryByID public="1" set="method" line="1022"><f a="id">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Geometry"/>
</f></getGeometryByID>
		<pushGeometry public="1" set="method" line="1032"><f a="geometry:?force" v=":false">
	<c path="com.gamestudiohx.babylonhx.mesh.Geometry"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></pushGeometry>
		<_getNewPosition public="1" get="inline" set="null" line="1042"><f a="position:velocity:collider:maximumRetry:finalPosition">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.collisions.Collider"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></_getNewPosition>
		<_collideWithWorld public="1" get="inline" set="null" line="1053"><f a="position:velocity:collider:maximumRetry:finalPosition">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.collisions.Collider"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></_collideWithWorld>
		<createOrUpdateSelectionOctree public="1" get="inline" set="null" line="1090"><f a=""><x path="Void"/></f></createOrUpdateSelectionOctree>
		<createPickingRay public="1" get="inline" set="null" line="1129"><f a="x:y:?world:?camera" v="::null:null">
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Ray"/>
</f></createPickingRay>
		<_internalPick public="1" get="inline" set="null" line="1146"><f a="rayFunction:predicate:fastCheck">
	<f a="">
		<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
		<c path="com.gamestudiohx.babylonhx.tools.math.Ray"/>
	</f>
	<f a="">
		<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
		<x path="Bool"/>
	</f>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.collisions.PickingInfo"/>
</f></_internalPick>
		<pick public="1" set="method" line="1180"><f a="x:y:predicate:fastCheck:camera">
	<x path="Float"/>
	<x path="Float"/>
	<f a="">
		<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
		<x path="Bool"/>
	</f>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<c path="com.gamestudiohx.babylonhx.collisions.PickingInfo"/>
</f></pick>
		<pickWithRay public="1" set="method" line="1186"><f a="ray:predicate:fastCheck">
	<c path="com.gamestudiohx.babylonhx.tools.math.Ray"/>
	<f a="">
		<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
		<x path="Bool"/>
	</f>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.collisions.PickingInfo"/>
</f></pickWithRay>
		<new public="1" set="method" line="148"><f a="engine">
	<c path="com.gamestudiohx.babylonhx.Engine"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Scene"</e></m></meta>
	</class>
	<typedef path="com.gamestudiohx.babylonhx.animations.BabylonFrame" params="" file="../../com/gamestudiohx/babylonhx/animations/Animation.hx" module="com.gamestudiohx.babylonhx.animations.Animation"><a>
	<value><d/></value>
	<frame><x path="Int"/></frame>
</a></typedef>
	<class path="com.gamestudiohx.babylonhx.animations.Animation" params="" file="../../com/gamestudiohx/babylonhx/animations/Animation.hx">
		<ANIMATIONTYPE_FLOAT public="1" line="21" static="1"><x path="Int"/></ANIMATIONTYPE_FLOAT>
		<ANIMATIONTYPE_VECTOR3 public="1" line="22" static="1"><x path="Int"/></ANIMATIONTYPE_VECTOR3>
		<ANIMATIONTYPE_QUATERNION public="1" line="23" static="1"><x path="Int"/></ANIMATIONTYPE_QUATERNION>
		<ANIMATIONTYPE_MATRIX public="1" line="24" static="1"><x path="Int"/></ANIMATIONTYPE_MATRIX>
		<ANIMATIONLOOPMODE_RELATIVE public="1" line="26" static="1"><x path="Int"/></ANIMATIONLOOPMODE_RELATIVE>
		<ANIMATIONLOOPMODE_CYCLE public="1" line="27" static="1"><x path="Int"/></ANIMATIONLOOPMODE_CYCLE>
		<ANIMATIONLOOPMODE_CONSTANT public="1" line="28" static="1"><x path="Int"/></ANIMATIONLOOPMODE_CONSTANT>
		<name public="1"><c path="String"/></name>
		<targetProperty public="1"><c path="String"/></targetProperty>
		<targetPropertyPath public="1"><c path="Array"><c path="String"/></c></targetPropertyPath>
		<framePerSecond public="1"><x path="Int"/></framePerSecond>
		<dataType public="1"><x path="Int"/></dataType>
		<loopMode public="1"><x path="Int"/></loopMode>
		<currentFrame public="1"><x path="Float"/></currentFrame>
		<_keys public="1"><c path="Array"><t path="com.gamestudiohx.babylonhx.animations.BabylonFrame"/></c></_keys>
		<_offsetsCache public="1"><c path="Array"><d/></c></_offsetsCache>
		<_highLimitsCache public="1"><c path="Array"><d/></c></_highLimitsCache>
		<floatInterpolateFunction public="1" get="inline" set="null" line="58"><f a="startValue:endValue:gradient">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
</f></floatInterpolateFunction>
		<quaternionInterpolateFunction public="1" get="inline" set="null" line="62"><f a="startValue:endValue:gradient">
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></quaternionInterpolateFunction>
		<vector3InterpolateFunction public="1" get="inline" set="null" line="66"><f a="startValue:endValue:gradient">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></vector3InterpolateFunction>
		<clone public="1" set="method" line="70"><f a=""><c path="com.gamestudiohx.babylonhx.animations.Animation"/></f></clone>
		<setKeys public="1" set="method" line="78"><f a="values">
	<c path="Array"><t path="com.gamestudiohx.babylonhx.animations.BabylonFrame"/></c>
	<x path="Void"/>
</f></setKeys>
		<_interpolate public="1" set="method" line="86"><f a="currentFrame:repeatCount:loopMode:?offsetValue:?highLimitValue" v=":::null:null">
	<x path="Float"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<d/>
	<d/>
</f></_interpolate>
		<animate public="1" set="method" line="142"><f a="target:delay:from:to:loop:speedRatio">
	<d/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></animate>
		<new public="1" set="method" line="43"><f a="name:targetProperty:framePerSecond:dataType:?loopMode" v="::::-1">
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Animation"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.animations._Animatable" params="" file="../../com/gamestudiohx/babylonhx/animations/_Animatable.hx">
		<target public="1"><d/></target>
		<animationStarted public="1"><x path="Bool"/></animationStarted>
		<loopAnimation public="1"><x path="Bool"/></loopAnimation>
		<fromFrame public="1"><x path="Float"/></fromFrame>
		<toFrame public="1"><x path="Float"/></toFrame>
		<speedRatio public="1"><x path="Float"/></speedRatio>
		<onAnimationEnd public="1"><f a=""><x path="Void"/></f></onAnimationEnd>
		<_localDelayOffset><x path="Float"/></_localDelayOffset>
		<_animate public="1" get="inline" set="null" line="33"><f a="delay">
	<x path="Float"/>
	<x path="Bool"/>
</f></_animate>
		<new public="1" set="method" line="22"><f a="?target:?from:?to:?loop:?speedRatio:?onAnimationEnd" v="null:0:100:false:1.0f:null">
	<d/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Float"/>
	<f a=""><x path="Void"/></f>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin</haxe_doc>
	</class>
	<class path="com.gamestudiohx.babylonhx.bones.Bone" params="" file="../../com/gamestudiohx/babylonhx/bones/Bone.hx">
		<name public="1"><c path="String"/></name>
		<_skeleton public="1"><c path="com.gamestudiohx.babylonhx.bones.Skeleton"/></_skeleton>
		<_matrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_matrix>
		<_baseMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_baseMatrix>
		<_worldTransform public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldTransform>
		<_absoluteTransform public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_absoluteTransform>
		<_invertedAbsoluteTransform public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_invertedAbsoluteTransform>
		<children public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.bones.Bone"/></c></children>
		<animations public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.animations.Animation"/></c></animations>
		<_parent><c path="com.gamestudiohx.babylonhx.bones.Bone"/></_parent>
		<getParent public="1" set="method" line="50"><f a=""><c path="com.gamestudiohx.babylonhx.bones.Bone"/></f></getParent>
		<getLocalMatrix public="1" set="method" line="54"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getLocalMatrix>
		<getAbsoluteMatrix public="1" set="method" line="58"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getAbsoluteMatrix>
		<_updateDifferenceMatrix public="1" set="method" line="70"><f a=""><x path="Void"/></f></_updateDifferenceMatrix>
		<updateMatrix public="1" set="method" line="84"><f a="matrix">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></updateMatrix>
		<markAsDirty public="1" set="method" line="91"><f a=""><x path="Void"/></f></markAsDirty>
		<new public="1" set="method" line="27"><f a="name:skeleton:parentBone:matrix">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.bones.Skeleton"/>
	<c path="com.gamestudiohx.babylonhx.bones.Bone"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Bone"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.bones.Skeleton" params="" file="../../com/gamestudiohx/babylonhx/bones/Skeleton.hx">
		<id public="1"><c path="String"/></id>
		<name public="1"><c path="String"/></name>
		<bones public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.bones.Bone"/></c></bones>
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_isDirty public="1"><x path="Bool"/></_isDirty>
		<_transformMatrices><t path="openfl.utils.Float32Array"/></_transformMatrices>
		<_animatables><c path="Array"><d/></c></_animatables>
		<_markAsDirty public="1" set="method" line="38"><f a=""><x path="Void"/></f></_markAsDirty>
		<getTransformMatrices public="1" set="method" line="42"><f a=""><t path="openfl.utils.Float32Array"/></f></getTransformMatrices>
		<prepare public="1" set="method" line="46"><f a=""><x path="Void"/></f></prepare>
		<getAnimatables public="1" set="method" line="71"><f a=""><c path="Array"><d/></c></f></getAnimatables>
		<clone public="1" set="method" line="83"><f a="name:id">
	<c path="String"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.bones.Skeleton"/>
</f></clone>
		<new public="1" set="method" line="26"><f a="name:id:scene">
	<c path="String"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Skeleton"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.cameras.Camera" params="" file="../../com/gamestudiohx/babylonhx/cameras/Camera.hx">
		<extends path="com.gamestudiohx.babylonhx.Node"/>
		<PERSPECTIVE_CAMERA public="1" line="40" static="1"><x path="Int"/></PERSPECTIVE_CAMERA>
		<ORTHOGRAPHIC_CAMERA public="1" line="41" static="1"><x path="Int"/></ORTHOGRAPHIC_CAMERA>
		<upVector public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></upVector>
		<_worldMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldMatrix>
		<_computedViewMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_computedViewMatrix>
		<_projectionMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_projectionMatrix>
		<fov public="1"><x path="Float"/></fov>
		<orthoLeft public="1"><t path="Null"><x path="Float"/></t></orthoLeft>
		<orthoRight public="1"><t path="Null"><x path="Float"/></t></orthoRight>
		<orthoBottom public="1"><t path="Null"><x path="Float"/></t></orthoBottom>
		<orthoTop public="1"><t path="Null"><x path="Float"/></t></orthoTop>
		<minZ public="1"><x path="Float"/></minZ>
		<maxZ public="1"><x path="Float"/></maxZ>
		<inertia public="1"><x path="Float"/></inertia>
		<mode public="1"><x path="Int"/></mode>
		<viewport public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Viewport"/></viewport>
		<animations public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.animations.Animation"/></c></animations>
		<_postProcesses public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/></c></_postProcesses>
		<_postProcessesTakenIndices public="1"><c path="Array"><x path="Int"/></c></_postProcessesTakenIndices>
		<_initCache public="1" set="method" line="107" override="1"><f a=""><x path="Void"/></f></_initCache>
		<_updateCache public="1" set="method" line="119" override="1"><f a="?ignoreParentClass" v="true">
	<x path="Bool"/>
	<x path="Void"/>
</f></_updateCache>
		<_updateFromScene public="1" set="method" line="144"><f a=""><x path="Void"/></f></_updateFromScene>
		<_isSynchronized public="1" set="method" line="149" override="1"><f a=""><x path="Bool"/></f></_isSynchronized>
		<_isSynchronizedViewMatrix public="1" set="method" line="153"><f a=""><x path="Bool"/></f></_isSynchronizedViewMatrix>
		<_isSynchronizedProjectionMatrix public="1" set="method" line="160"><f a=""><x path="Bool"/></f></_isSynchronizedProjectionMatrix>
		<getScene public="1" set="method" line="178"><f a=""><c path="com.gamestudiohx.babylonhx.Scene"/></f></getScene>
		<attachControl public="1" set="method" line="182"><f a="canvas:?noPreventDefault" v=":false">
	<c path="openfl.display.DisplayObject"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></attachControl>
		<detachControl public="1" set="method" line="186"><f a="canvas">
	<c path="openfl.display.DisplayObject"/>
	<x path="Void"/>
</f></detachControl>
		<_update public="1" set="method" line="190"><f a=""><x path="Void"/></f></_update>
		<attachPostProcess public="1" set="method" line="194"><f a="postProcess:?insertAt" v=":null">
	<c path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
	<x path="Int"/>
	<x path="Int"/>
</f></attachPostProcess>
		<detachPostProcess public="1" set="method" line="241"><f a="postProcess:?atIndices" v=":null">
	<c path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
	<d/>
	<c path="Array"><x path="Int"/></c>
</f></detachPostProcess>
		<getWorldMatrix public="1" get="inline" set="null" line="278" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getWorldMatrix>
		<_getViewMatrix set="method" line="289"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_getViewMatrix>
		<getViewMatrix public="1" get="inline" set="null" line="293"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getViewMatrix>
		<_computeViewMatrix public="1" get="inline" set="null" line="310"><f a="?force" v="false">
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></_computeViewMatrix>
		<getProjectionMatrix public="1" get="inline" set="null" line="318"><f a="?force" v="false">
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></getProjectionMatrix>
		<dispose public="1" set="method" line="333"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="65"><f a="name:position:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Camera"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.cameras.ArcRotateCamera" params="" file="../../com/gamestudiohx/babylonhx/cameras/ArcRotateCamera.hx">
		<extends path="com.gamestudiohx.babylonhx.cameras.Camera"/>
		<alpha public="1"><x path="Float"/></alpha>
		<beta public="1"><x path="Float"/></beta>
		<radius public="1"><x path="Float"/></radius>
		<target public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></target>
		<_keys public="1"><c path="Array"><x path="Int"/></c></_keys>
		<keysUp public="1"><c path="Array"><x path="Int"/></c></keysUp>
		<keysDown public="1"><c path="Array"><x path="Int"/></c></keysDown>
		<keysLeft public="1"><c path="Array"><x path="Int"/></c></keysLeft>
		<keysRight public="1"><c path="Array"><x path="Int"/></c></keysRight>
		<_viewMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_viewMatrix>
		<_attachedCanvas public="1"><c path="openfl.display.DisplayObject"/></_attachedCanvas>
		<_onMouseDown public="1"><f a="">
	<c path="openfl.events.MouseEvent"/>
	<x path="Void"/>
</f></_onMouseDown>
		<_onMouseUp public="1"><f a="">
	<c path="openfl.events.MouseEvent"/>
	<x path="Void"/>
</f></_onMouseUp>
		<_onMouseOut public="1"><f a="">
	<c path="openfl.events.MouseEvent"/>
	<x path="Void"/>
</f></_onMouseOut>
		<_onMouseMove public="1"><f a="">
	<c path="openfl.events.MouseEvent"/>
	<x path="Void"/>
</f></_onMouseMove>
		<_wheel public="1"><f a="">
	<c path="openfl.events.MouseEvent"/>
	<x path="Void"/>
</f></_wheel>
		<_onKeyDown public="1"><f a="">
	<c path="openfl.events.KeyboardEvent"/>
	<x path="Void"/>
</f></_onKeyDown>
		<_onKeyUp public="1"><f a="">
	<c path="openfl.events.KeyboardEvent"/>
	<x path="Void"/>
</f></_onKeyUp>
		<_onLostFocus public="1"><f a=""><x path="Void"/></f></_onLostFocus>
		<_reset public="1"><f a=""><x path="Void"/></f></_reset>
		<inertialAlphaOffset public="1"><x path="Float"/></inertialAlphaOffset>
		<inertialBetaOffset public="1"><x path="Float"/></inertialBetaOffset>
		<inertialRadiusOffset public="1"><x path="Float"/></inertialRadiusOffset>
		<lowerAlphaLimit public="1"><t path="Null"><x path="Float"/></t></lowerAlphaLimit>
		<upperAlphaLimit public="1"><t path="Null"><x path="Float"/></t></upperAlphaLimit>
		<lowerBetaLimit public="1"><t path="Null"><x path="Float"/></t></lowerBetaLimit>
		<upperBetaLimit public="1"><t path="Null"><x path="Float"/></t></upperBetaLimit>
		<lowerRadiusLimit public="1"><t path="Null"><x path="Float"/></t></lowerRadiusLimit>
		<upperRadiusLimit public="1"><t path="Null"><x path="Float"/></t></upperRadiusLimit>
		<angularSensibility public="1"><x path="Float"/></angularSensibility>
		<_initCache public="1" set="method" line="95" override="1"><f a=""><x path="Void"/></f></_initCache>
		<_updateCache public="1" set="method" line="102" override="1"><f a="?ignoreParentClass" v="true">
	<x path="Bool"/>
	<x path="Void"/>
</f></_updateCache>
		<_getTargetPosition public="1" set="method" line="112"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></_getTargetPosition>
		<_isSynchronizedViewMatrix public="1" set="method" line="117" override="1"><f a=""><x path="Bool"/></f></_isSynchronizedViewMatrix>
		<setPosition public="1" set="method" line="124"><f a="position">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></setPosition>
		<attachControl public="1" set="method" line="132" override="1"><f a="canvas:?noPreventDefault" v=":false">
	<c path="openfl.display.DisplayObject"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></attachControl>
		<detachControl public="1" set="method" line="222" override="1"><f a="canvas">
	<c path="openfl.display.DisplayObject"/>
	<x path="Void"/>
</f></detachControl>
		<_update public="1" set="method" line="241" override="1"><f a=""><x path="Void"/></f></_update>
		<_getViewMatrix public="1" get="inline" set="null" line="299" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_getViewMatrix>
		<new public="1" set="method" line="55"><f a="name:alpha:beta:radius:target:scene">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.ArcRotateCamera"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.cameras.FreeCamera" params="" file="../../com/gamestudiohx/babylonhx/cameras/FreeCamera.hx">
		<extends path="com.gamestudiohx.babylonhx.cameras.Camera"/>
		<cameraDirection public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></cameraDirection>
		<cameraRotation public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/></cameraRotation>
		<rotation public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></rotation>
		<ellipsoid public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></ellipsoid>
		<_attachedCanvas public="1"><c path="openfl.display.DisplayObject"/></_attachedCanvas>
		<_keys public="1"><c path="Array"><x path="Int"/></c></_keys>
		<keysUp public="1"><c path="Array"><x path="Int"/></c></keysUp>
		<keysDown public="1"><c path="Array"><x path="Int"/></c></keysDown>
		<keysLeft public="1"><c path="Array"><x path="Int"/></c></keysLeft>
		<keysRight public="1"><c path="Array"><x path="Int"/></c></keysRight>
		<_collider public="1"><c path="com.gamestudiohx.babylonhx.collisions.Collider"/></_collider>
		<_needMoveForGravity public="1"><x path="Bool"/></_needMoveForGravity>
		<_currentTarget public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_currentTarget>
		<_viewMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_viewMatrix>
		<_camMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_camMatrix>
		<_cameraTransformMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_cameraTransformMatrix>
		<_cameraRotationMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_cameraRotationMatrix>
		<_referencePoint public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_referencePoint>
		<_transformedReferencePoint public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_transformedReferencePoint>
		<_oldPosition public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_oldPosition>
		<_diffPosition public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_diffPosition>
		<_newPosition public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_newPosition>
		<_lookAtTemp public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_lookAtTemp>
		<_tempMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_tempMatrix>
		<_localDirection public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_localDirection>
		<_transformedDirection public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_transformedDirection>
		<speed public="1"><x path="Float"/></speed>
		<checkCollisions public="1"><x path="Bool"/></checkCollisions>
		<applyGravity public="1"><x path="Bool"/></applyGravity>
		<noRotationConstraint public="1"><x path="Bool"/></noRotationConstraint>
		<angularSensibility public="1"><x path="Float"/></angularSensibility>
		<lockedTarget public="1"><d/></lockedTarget>
		<onCollide public="1"><f a="">
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
	<x path="Void"/>
</f></onCollide>
		<_onMouseDown public="1"><f a="">
	<c path="openfl.events.MouseEvent"/>
	<x path="Void"/>
</f></_onMouseDown>
		<_onMouseUp public="1"><f a="">
	<c path="openfl.events.MouseEvent"/>
	<x path="Void"/>
</f></_onMouseUp>
		<_onMouseOut public="1"><f a="">
	<c path="openfl.events.MouseEvent"/>
	<x path="Void"/>
</f></_onMouseOut>
		<_onMouseMove public="1"><f a="">
	<c path="openfl.events.MouseEvent"/>
	<x path="Void"/>
</f></_onMouseMove>
		<_onKeyDown public="1"><f a="">
	<c path="openfl.events.KeyboardEvent"/>
	<x path="Void"/>
</f></_onKeyDown>
		<_onKeyUp public="1"><f a="">
	<c path="openfl.events.KeyboardEvent"/>
	<x path="Void"/>
</f></_onKeyUp>
		<_onLostFocus public="1"><f a=""><x path="Void"/></f></_onLostFocus>
		<_reset public="1"><f a=""><x path="Void"/></f></_reset>
		<_waitingParentId public="1"><c path="String"/></_waitingParentId>
		<_waitingLockedTargetId public="1"><c path="String"/></_waitingLockedTargetId>
		<_getLockedTargetPosition public="1" set="method" line="125"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></_getLockedTargetPosition>
		<_updateCache public="1" set="method" line="133" override="1"><f a="?ignoreParentClass" v="true">
	<x path="Bool"/>
	<x path="Void"/>
</f></_updateCache>
		<_isSynchronizedViewMatrix public="1" set="method" line="149" override="1"><f a=""><x path="Bool"/></f></_isSynchronizedViewMatrix>
		<_computeLocalCameraSpeed public="1" get="inline" set="null" line="160"><f a=""><x path="Float"/></f></_computeLocalCameraSpeed>
		<setTarget public="1" set="method" line="164"><f a="target">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></setTarget>
		<attachControl public="1" set="method" line="192" override="1"><f a="canvas:?noPreventDefault" v=":false">
	<c path="openfl.display.DisplayObject"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></attachControl>
		<detachControl public="1" set="method" line="285" override="1"><f a="canvas">
	<c path="openfl.display.DisplayObject"/>
	<x path="Void"/>
</f></detachControl>
		<_collideWithWorld public="1" get="inline" set="null" line="304"><f a="velocity">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></_collideWithWorld>
		<_checkInputs public="1" get="inline" set="null" line="317"><f a=""><x path="Void"/></f></_checkInputs>
		<_update public="1" get="inline" set="null" line="344" override="1"><f a=""><x path="Void"/></f></_update>
		<_getViewMatrix public="1" get="inline" set="null" line="403" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_getViewMatrix>
		<new public="1" set="method" line="82"><f a="name:position:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.FreeCamera"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.cameras.TouchCamera" params="" file="../../com/gamestudiohx/babylonhx/cameras/TouchCamera.hx">
		<extends path="com.gamestudiohx.babylonhx.cameras.FreeCamera"/>
		<_offsetX public="1"><x path="Float"/></_offsetX>
		<_offsetY public="1"><x path="Float"/></_offsetY>
		<_pointerCount public="1"><x path="Int"/></_pointerCount>
		<_pointerPressed public="1"><c path="Array"><d/></c></_pointerPressed>
		<new public="1" set="method" line="19"><f a="name:position:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.TouchCamera"</e></m></meta>
	</class>
	<typedef path="com.gamestudiohx.babylonhx.collisions.LowestRootResult" params="" file="../../com/gamestudiohx/babylonhx/collisions/Collider.hx" module="com.gamestudiohx.babylonhx.collisions.Collider"><a>
	<root><x path="Float"/></root>
	<found><x path="Bool"/></found>
</a></typedef>
	<class path="com.gamestudiohx.babylonhx.collisions.Collider" params="" file="../../com/gamestudiohx/babylonhx/collisions/Collider.hx">
		<radius public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></radius>
		<retry public="1"><x path="Int"/></retry>
		<basePoint public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></basePoint>
		<basePointWorld public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></basePointWorld>
		<velocityWorld public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></velocityWorld>
		<normalizedVelocity public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></normalizedVelocity>
		<velocityWorldLength public="1"><x path="Float"/></velocityWorldLength>
		<velocity public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></velocity>
		<collisionFound public="1"><x path="Bool"/></collisionFound>
		<epsilon public="1"><x path="Float"/></epsilon>
		<nearestDistance public="1"><x path="Float"/></nearestDistance>
		<collidedMesh public="1"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></collidedMesh>
		<intersectionPoint public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></intersectionPoint>
		<initialVelocity public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></initialVelocity>
		<initialPosition public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></initialPosition>
		<_collisionPoint><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_collisionPoint>
		<_planeIntersectionPoint><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_planeIntersectionPoint>
		<_tempVector><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_tempVector>
		<_tempVector2><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_tempVector2>
		<_tempVector3><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_tempVector3>
		<_tempVector4><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_tempVector4>
		<_edge><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_edge>
		<_baseToVertex><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_baseToVertex>
		<_destinationPoint><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_destinationPoint>
		<_slidePlaneNormal><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_slidePlaneNormal>
		<_displacementVector><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_displacementVector>
		<_initialize public="1" set="method" line="73"><f a="source:dir:e">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<x path="Void"/>
</f></_initialize>
		<_checkPointInTriangle public="1" set="method" line="87"><f a="point:pa:pb:pc:n">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Bool"/>
</f></_checkPointInTriangle>
		<intersectBoxAASphere public="1" set="method" line="107"><f a="boxMin:boxMax:sphereCenter:sphereRadius">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></intersectBoxAASphere>
		<getLowestRoot public="1" set="method" line="129"><f a="a:b:c:maxR">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<t path="com.gamestudiohx.babylonhx.collisions.LowestRootResult"/>
</f></getLowestRoot>
		<_canDoCollision public="1" set="method" line="161"><f a="sphereCenter:sphereRadius:vecMin:vecMax">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Bool"/>
</f></_canDoCollision>
		<_testTriangle public="1" set="method" line="177"><f a="faceIndex:subMesh:p1:p2:p3">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></_testTriangle>
		<_collide public="1" get="inline" set="null" line="359"><f a="subMesh:pts:indices:indexStart:indexEnd:decal">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></c>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></_collide>
		<_getResponse public="1" get="inline" set="null" line="370"><f a="pos:vel">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></_getResponse>
		<new public="1" set="method" line="48"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Collider"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.collisions.CollisionPlane" params="" file="../../com/gamestudiohx/babylonhx/collisions/CollisionPlane.hx">
		<normal public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></normal>
		<origin public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></origin>
		<equation public="1"><c path="Array"><x path="Float"/></c></equation>
		<isFrontFacingTo public="1" set="method" line="31"><f a="direction:epsilon">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></isFrontFacingTo>
		<signedDistanceTo public="1" set="method" line="37"><f a="point">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
</f></signedDistanceTo>
		<CreateFromPoints public="1" set="method" line="41"><f a="p1:p2:p3">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.collisions.CollisionPlane"/>
</f></CreateFromPoints>
		<new public="1" set="method" line="18"><f a="origin:normal">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.CollisionPlane"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.collisions.PickingInfo" params="" file="../../com/gamestudiohx/babylonhx/collisions/PickingInfo.hx">
		<hit public="1"><x path="Bool"/></hit>
		<distance public="1"><x path="Float"/></distance>
		<pickedPoint public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></pickedPoint>
		<pickedMesh public="1"><c path="com.gamestudiohx.babylonhx.mesh.Mesh"/></pickedMesh>
		<new public="1" set="method" line="19"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.PickingInfo"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.culling.BoundingBox" params="" file="../../com/gamestudiohx/babylonhx/culling/BoundingBox.hx">
		<intersects public="1" set="method" line="140" static="1"><f a="box0:box1">
	<c path="com.gamestudiohx.babylonhx.culling.BoundingBox"/>
	<c path="com.gamestudiohx.babylonhx.culling.BoundingBox"/>
	<x path="Bool"/>
</f></intersects>
		<IsInFrustum public="1" set="method" line="153" static="1"><f a="boundingVectors:frustumPlanes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></c>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<x path="Bool"/>
</f></IsInFrustum>
		<minimum public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></minimum>
		<maximum public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></maximum>
		<vectors public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></c></vectors>
		<vectorsWorld public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></c></vectorsWorld>
		<center public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></center>
		<_extends public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_extends>
		<directions public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></c></directions>
		<minimumWorld public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></minimumWorld>
		<maximumWorld public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></maximumWorld>
		<_update public="1" set="method" line="72"><f a="world">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></_update>
		<isInFrustrum public="1" set="method" line="104"><f a="frustumPlanes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<x path="Bool"/>
</f></isInFrustrum>
		<intersectsPoint public="1" set="method" line="108"><f a="point">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Bool"/>
</f></intersectsPoint>
		<intersectsSphere public="1" set="method" line="121"><f a="sphere">
	<c path="com.gamestudiohx.babylonhx.culling.BoundingSphere"/>
	<x path="Bool"/>
</f></intersectsSphere>
		<intersectsMinMax public="1" set="method" line="127"><f a="min:max">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Bool"/>
</f></intersectsMinMax>
		<new public="1" set="method" line="28"><f a="minimum:maximum">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.BoundingBox"</e></m></meta>
	</class>
	<typedef path="com.gamestudiohx.babylonhx.culling.BoundingInfoMinMax" params="" file="../../com/gamestudiohx/babylonhx/culling/BoundingInfo.hx" module="com.gamestudiohx.babylonhx.culling.BoundingInfo"><a>
	<min><x path="Float"/></min>
	<max><x path="Float"/></max>
</a></typedef>
	<class path="com.gamestudiohx.babylonhx.culling.BoundingInfo" params="" file="../../com/gamestudiohx/babylonhx/culling/BoundingInfo.hx">
		<minimum public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></minimum>
		<maximum public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></maximum>
		<boundingBox public="1"><c path="com.gamestudiohx.babylonhx.culling.BoundingBox"/></boundingBox>
		<boundingSphere public="1"><c path="com.gamestudiohx.babylonhx.culling.BoundingSphere"/></boundingSphere>
		<_update public="1" set="method" line="32"><f a="world:scale">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Float"/>
	<x path="Void"/>
</f></_update>
		<extentsOverlap set="method" line="37"><f a="min0:max0:min1:max1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></extentsOverlap>
		<computeBoxExtents set="method" line="41"><f a="axis:box">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.culling.BoundingBox"/>
	<t path="com.gamestudiohx.babylonhx.culling.BoundingInfoMinMax"/>
</f></computeBoxExtents>
		<axisOverlap set="method" line="54"><f a="axis:box0:box1">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.culling.BoundingBox"/>
	<c path="com.gamestudiohx.babylonhx.culling.BoundingBox"/>
	<x path="Bool"/>
</f></axisOverlap>
		<isInFrustrum public="1" set="method" line="61"><f a="frustumPlanes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<x path="Bool"/>
</f></isInFrustrum>
		<_checkCollision public="1" set="method" line="68"><f a="collider">
	<c path="com.gamestudiohx.babylonhx.collisions.Collider"/>
	<x path="Bool"/>
</f></_checkCollision>
		<intersectsPoint public="1" set="method" line="72"><f a="point">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Bool"/>
</f></intersectsPoint>
		<isInFrustum public="1" set="method" line="88"><f a="frustumPlanes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<x path="Bool"/>
</f></isInFrustum>
		<intersects public="1" set="method" line="97"><f a="boundingInfo:precise">
	<c path="com.gamestudiohx.babylonhx.culling.BoundingInfo"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></intersects>
		<new public="1" set="method" line="25"><f a="minimum:maximum">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.BoundingInfo"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.culling.BoundingSphere" params="" file="../../com/gamestudiohx/babylonhx/culling/BoundingSphere.hx">
		<intersects public="1" set="method" line="65" static="1"><f a="sphere0:sphere1">
	<c path="com.gamestudiohx.babylonhx.culling.BoundingSphere"/>
	<c path="com.gamestudiohx.babylonhx.culling.BoundingSphere"/>
	<x path="Bool"/>
</f></intersects>
		<minimum public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></minimum>
		<maximum public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></maximum>
		<center public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></center>
		<radius public="1"><x path="Float"/></radius>
		<centerWorld public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></centerWorld>
		<radiusWorld public="1"><x path="Float"/></radiusWorld>
		<_update public="1" set="method" line="38"><f a="world:?scale" v=":1.0f">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Float"/>
	<x path="Void"/>
</f></_update>
		<isInFrustrum public="1" set="method" line="43"><f a="frustumPlanes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<x path="Bool"/>
</f></isInFrustrum>
		<intersectsPoint public="1" set="method" line="52"><f a="point">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Bool"/>
</f></intersectsPoint>
		<new public="1" set="method" line="25"><f a="minimum:maximum">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.BoundingSphere"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.culling.octrees.Octree" params="" file="../../com/gamestudiohx/babylonhx/culling/octrees/Octree.hx">
		<_CreateBlocks public="1" set="method" line="51" static="1"><f a="worldMin:worldMax:meshes:maxBlockCapacity:target">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c>
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></_CreateBlocks>
		<blocks public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.culling.octrees.OctreeBlock"/></c></blocks>
		<_maxBlockCapacity public="1"><x path="Int"/></_maxBlockCapacity>
		<_selection public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.culling.octrees.OctreeBlock"/></c></_selection>
		<update public="1" set="method" line="28"><f a="worldMin:worldMax:meshes">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c>
	<x path="Void"/>
</f></update>
		<addMesh public="1" set="method" line="32"><f a="mesh">
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
	<x path="Void"/>
</f></addMesh>
		<select public="1" set="method" line="39"><f a="frustumPlanes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.culling.octrees.OctreeBlock"/></c>
</f></select>
		<new public="1" set="method" line="22"><f a="?maxBlockCapacity" v="64">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Octree"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.culling.octrees.OctreeBlock" params="" file="../../com/gamestudiohx/babylonhx/culling/octrees/OctreeBlock.hx">
		<meshes public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c></meshes>
		<subMeshes public="1"><c path="Array"><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/></c></c></subMeshes>
		<_capacity public="1"><x path="Int"/></_capacity>
		<_minPoint public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_minPoint>
		<_maxPoint public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_maxPoint>
		<_boundingVectors public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></c></_boundingVectors>
		<blocks public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.culling.octrees.OctreeBlock"/></c></blocks>
		<addMesh public="1" set="method" line="62"><f a="mesh">
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
	<x path="Void"/>
</f></addMesh>
		<addEntries public="1" set="method" line="88"><f a="meshes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c>
	<x path="Void"/>
</f></addEntries>
		<select public="1" set="method" line="95"><f a="frustumPlanes:selection">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.culling.octrees.OctreeBlock"/></c>
	<x path="Void"/>
</f></select>
		<new public="1" set="method" line="30"><f a="minPoint:maxPoint:capacity">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.OctreeBlock"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.layer.Layer" params="" file="../../com/gamestudiohx/babylonhx/layer/Layer.hx">
		<name public="1"><c path="String"/></name>
		<texture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></texture>
		<isBackground public="1"><x path="Bool"/></isBackground>
		<color public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></color>
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<vertices public="1"><c path="Array"><x path="Float"/></c></vertices>
		<indicies public="1"><c path="Array"><x path="Int"/></c></indicies>
		<_indexBuffer public="1"><d/></_indexBuffer>
		<_effect public="1"><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_effect>
		<_vertexDeclaration><c path="Array"><x path="Int"/></c></_vertexDeclaration>
		<_vertexStrideSize><x path="Int"/></_vertexStrideSize>
		<_vertexBuffer><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_vertexBuffer>
		<onDispose><f a=""><x path="Void"/></f></onDispose>
		<render public="1" set="method" line="75"><f a=""><x path="Void"/></f></render>
		<dispose public="1" set="method" line="102"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="33"><f a="name:?imgUrl:scene:?isBackground:?color" v=":null::true:null">
	<c path="String"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Layer"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.lensflare.LensFlare" params="" file="../../com/gamestudiohx/babylonhx/lensflare/LensFlare.hx">
		<size public="1"><x path="Float"/></size>
		<position public="1"><x path="Float"/></position>
		<color public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></color>
		<texture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></texture>
		<_system><c path="com.gamestudiohx.babylonhx.lensflare.LensFlareSystem"/></_system>
		<dispose public="1" set="method" line="33"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="23"><f a="size:position:?color:?imgUrl:system" v="::null:null:">
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.lensflare.LensFlareSystem"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.LensFlare"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.lensflare.LensFlareSystem" params="" file="../../com/gamestudiohx/babylonhx/lensflare/LensFlareSystem.hx">
		<name public="1"><c path="String"/></name>
		<borderLimit public="1"><x path="Float"/></borderLimit>
		<lensFlares public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.lensflare.LensFlare"/></c></lensFlares>
		<_emitter public="1"><d/></_emitter>
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_vertexDeclaration public="1"><c path="Array"><x path="Int"/></c></_vertexDeclaration>
		<_vertexStrideSize public="1"><x path="Int"/></_vertexStrideSize>
		<_vertexBuffer public="1"><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_vertexBuffer>
		<_indexBuffer public="1"><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_indexBuffer>
		<_effect public="1"><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_effect>
		<_positionX public="1"><x path="Float"/></_positionX>
		<_positionY public="1"><x path="Float"/></_positionY>
		<meshesSelectionPredicate public="1"><f a="">
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
	<x path="Bool"/>
</f></meshesSelectionPredicate>
		<getScene public="1" set="method" line="83"><f a=""><c path="com.gamestudiohx.babylonhx.Scene"/></f></getScene>
		<getEmitterPosition public="1" set="method" line="87"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></getEmitterPosition>
		<computeEffectivePosition public="1" set="method" line="91"><f a="globalViewport">
	<c path="com.gamestudiohx.babylonhx.tools.math.Viewport"/>
	<x path="Bool"/>
</f></computeEffectivePosition>
		<_isVisible public="1" set="method" line="111"><f a=""><x path="Bool"/></f></_isVisible>
		<render public="1" set="method" line="123"><f a=""><x path="Bool"/></f></render>
		<dispose public="1" set="method" line="222"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="39"><f a="name:emitter:scene">
	<c path="String"/>
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.LensFlareSystem"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.lights.Light" params="" file="../../com/gamestudiohx/babylonhx/lights/Light.hx">
		<extends path="com.gamestudiohx.babylonhx.Node"/>
		<intensity public="1"><x path="Float"/></intensity>
		<diffuse public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></diffuse>
		<specular public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></specular>
		<animations public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.animations.Animation"/></c></animations>
		<excludedMeshes public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.Mesh"/></c></excludedMeshes>
		<_shadowGenerator public="1"><c path="com.gamestudiohx.babylonhx.lights.shadows.ShadowGenerator"/></_shadowGenerator>
		<_parentedWorldMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_parentedWorldMatrix>
		<_childrendFlag public="1"><x path="Bool"/></_childrendFlag>
		<getScene public="1" set="method" line="45"><f a=""><c path="com.gamestudiohx.babylonhx.Scene"/></f></getScene>
		<getShadowGenerator public="1" set="method" line="49"><f a=""><c path="com.gamestudiohx.babylonhx.lights.shadows.ShadowGenerator"/></f></getShadowGenerator>
		<transferToEffect public="1" set="method" line="53"><f a="effect:?positionUniformName:?directionUniformName" v=":'':null">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></transferToEffect>
		<_getWorldMatrix public="1" set="method" line="57"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_getWorldMatrix>
		<getWorldMatrix public="1" set="method" line="62" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getWorldMatrix>
		<dispose public="1" set="method" line="78"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="31"><f a="name:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Light"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.lights.DirectionalLight" params="" file="../../com/gamestudiohx/babylonhx/lights/DirectionalLight.hx">
		<extends path="com.gamestudiohx.babylonhx.lights.Light"/>
		<direction public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></direction>
		<_worldMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldMatrix>
		<_transformedPosition public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_transformedPosition>
		<_transformedDirection public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_transformedDirection>
		<setDirectionToTarget public="1" set="method" line="31"><f a="target">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></setDirectionToTarget>
		<_computeTransformedPosition public="1" get="inline" set="null" line="36"><f a=""><x path="Bool"/></f></_computeTransformedPosition>
		<transferToEffect public="1" get="inline" set="null" line="50" override="1"><f a="effect:?positionUniformName:?directionUniformName" v=":'':''">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></transferToEffect>
		<_getWorldMatrix public="1" get="inline" set="null" line="64" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_getWorldMatrix>
		<new public="1" set="method" line="25"><f a="name:direction:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.DirectionalLight"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.lights.HemisphericLight" params="" file="../../com/gamestudiohx/babylonhx/lights/HemisphericLight.hx">
		<extends path="com.gamestudiohx.babylonhx.lights.Light"/>
		<direction public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></direction>
		<groundColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></groundColor>
		<_worldMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldMatrix>
		<setDirectionToTarget public="1" set="method" line="35"><f a="target">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></setDirectionToTarget>
		<getShadowGenerator public="1" set="method" line="40" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.lights.shadows.ShadowGenerator"/></f></getShadowGenerator>
		<transferToEffect public="1" get="inline" set="null" line="44" override="1"><f a="effect:?directionUniformName:?groundColorUniformName" v=":'':''">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></transferToEffect>
		<_getWorldMatrix public="1" get="inline" set="null" line="50" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_getWorldMatrix>
		<new public="1" set="method" line="25"><f a="name:direction:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.HemisphericLight"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.lights.PointLight" params="" file="../../com/gamestudiohx/babylonhx/lights/PointLight.hx">
		<extends path="com.gamestudiohx.babylonhx.lights.Light"/>
		<_worldMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldMatrix>
		<_transformedPosition public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_transformedPosition>
		<transferToEffect public="1" get="inline" set="null" line="30" override="1"><f a="effect:?positionUniformName:?directionUniformName" v=":'':''">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></transferToEffect>
		<getShadowGenerator public="1" set="method" line="43" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.lights.shadows.ShadowGenerator"/></f></getShadowGenerator>
		<_getWorldMatrix public="1" get="inline" set="null" line="47" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_getWorldMatrix>
		<new public="1" set="method" line="22"><f a="name:position:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.PointLight"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.lights.SpotLight" params="" file="../../com/gamestudiohx/babylonhx/lights/SpotLight.hx">
		<extends path="com.gamestudiohx.babylonhx.lights.Light"/>
		<_transformedPosition public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_transformedPosition>
		<direction public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></direction>
		<_transformedDirection public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_transformedDirection>
		<angle public="1"><x path="Float"/></angle>
		<exponent public="1"><x path="Float"/></exponent>
		<_worldMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldMatrix>
		<transferToEffect public="1" get="inline" set="null" line="35" override="1"><f a="effect:?positionUniformName:?directionUniformName" v=":'':''">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></transferToEffect>
		<_getWorldMatrix public="1" get="inline" set="null" line="61" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_getWorldMatrix>
		<new public="1" set="method" line="24"><f a="name:position:direction:angle:exponent:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.SpotLight"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.lights.shadows.ShadowGenerator" params="" file="../../com/gamestudiohx/babylonhx/lights/shadows/ShadowGenerator.hx">
		<_FILTER_NONE line="46" static="1"><x path="Int"/></_FILTER_NONE>
		<_FILTER_VARIANCESHADOWMAP line="47" static="1"><x path="Int"/></_FILTER_VARIANCESHADOWMAP>
		<_FILTER_POISSONSAMPLING line="48" static="1"><x path="Int"/></_FILTER_POISSONSAMPLING>
		<_light public="1"><c path="com.gamestudiohx.babylonhx.lights.DirectionalLight"/></_light>
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_shadowMap public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.RenderTargetTexture"/></_shadowMap>
		<_viewMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_viewMatrix>
		<_projectionMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_projectionMatrix>
		<_transformMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_transformMatrix>
		<_worldViewProjection public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldViewProjection>
		<useVarianceShadowMap public="1"><x path="Bool"/></useVarianceShadowMap>
		<_cachedDefines public="1"><c path="String"/></_cachedDefines>
		<_cachedPosition public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_cachedPosition>
		<_cachedDirection public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_cachedDirection>
		<_effect public="1"><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_effect>
		<_darkness public="1"><x path="Float"/></_darkness>
		<isReady public="1" set="method" line="130"><f a="subMesh:?useInstances" v=":false">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></isReady>
		<getShadowMap public="1" set="method" line="167"><f a=""><c path="com.gamestudiohx.babylonhx.materials.textures.RenderTargetTexture"/></f></getShadowMap>
		<getLight public="1" set="method" line="171"><f a=""><c path="com.gamestudiohx.babylonhx.lights.DirectionalLight"/></f></getLight>
		<getTransformMatrix public="1" get="inline" set="null" line="175"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getTransformMatrix>
		<getDarkness public="1" set="method" line="201"><f a=""><x path="Float"/></f></getDarkness>
		<setDarkness public="1" set="method" line="205"><f a="darkness">
	<x path="Float"/>
	<x path="Void"/>
</f></setDarkness>
		<dispose public="1" set="method" line="214"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="51"><f a="mapSize:light">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.lights.DirectionalLight"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.ShadowGenerator"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.Effect" params="" file="../../com/gamestudiohx/babylonhx/materials/Effect.hx">
		<ShadersStore public="1" line="27" static="1"><x path="Map">
	<c path="String"/>
	<c path="String"/>
</x></ShadersStore>
		<name public="1"><d/></name>
		<_engine public="1"><c path="com.gamestudiohx.babylonhx.Engine"/></_engine>
		<defines public="1"><c path="String"/></defines>
		<_uniforms public="1"><c path="Array"><t path="openfl.gl.GLUniformLocation"/></c></_uniforms>
		<_uniformsNames public="1"><c path="Array"><c path="String"/></c></_uniformsNames>
		<_samplers public="1"><c path="Array"><c path="String"/></c></_samplers>
		<_isReady public="1"><x path="Bool"/></_isReady>
		<_compilationError public="1"><c path="String"/></_compilationError>
		<_attributes public="1"><c path="Array"><x path="Int"/></c></_attributes>
		<_attributesNames public="1"><c path="Array"><c path="String"/></c></_attributesNames>
		<_valueCache public="1"><x path="Map">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
</x></_valueCache>
		<_program public="1"><t path="openfl.gl.GLProgram"/></_program>
		<onCompiled public="1"><f a="">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<x path="Void"/>
</f></onCompiled>
		<onError public="1"><f a=":">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<c path="String"/>
	<x path="Void"/>
</f></onError>
		<isReady public="1" set="method" line="129"><f a=""><x path="Bool"/></f></isReady>
		<getAttributeLocationByName public="1" set="method" line="133"><f a="name">
	<c path="String"/>
	<x path="Int"/>
</f></getAttributeLocationByName>
		<getProgram public="1" set="method" line="138"><f a=""><t path="openfl.gl.GLProgram"/></f></getProgram>
		<getAttributesNames public="1" set="method" line="142"><f a=""><c path="Array"><c path="String"/></c></f></getAttributesNames>
		<getAttribute public="1" set="method" line="146"><f a="index">
	<x path="Int"/>
	<x path="Int"/>
</f></getAttribute>
		<getAttributesCount public="1" set="method" line="150"><f a=""><x path="Int"/></f></getAttributesCount>
		<getUniformIndex public="1" set="method" line="154"><f a="uniformName">
	<c path="String"/>
	<x path="Int"/>
</f></getUniformIndex>
		<getUniform public="1" set="method" line="158"><f a="uniformName">
	<c path="String"/>
	<t path="openfl.gl.GLUniformLocation"/>
</f></getUniform>
		<getSamplers public="1" set="method" line="162"><f a=""><c path="Array"><c path="String"/></c></f></getSamplers>
		<getCompilationError public="1" set="method" line="166"><f a=""><c path="String"/></f></getCompilationError>
		<_loadVertexShader public="1" set="method" line="172"><f a="vertex:callbackFn">
	<c path="String"/>
	<f a="">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></_loadVertexShader>
		<_loadFragmentShader public="1" set="method" line="191"><f a="fragment:callbackFn">
	<c path="String"/>
	<f a="">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></_loadFragmentShader>
		<_prepareEffect public="1" set="method" line="210"><f a="vertexSourceCode:fragmentSourceCode:attributesNames:defines:?optionalDefines:useFallback" v="::::null:">
	<c path="String"/>
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<x path="Bool"/>
	<x path="Void"/>
</f></_prepareEffect>
		<_bindTexture public="1" set="method" line="262"><f a="channel:texture">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
	<x path="Void"/>
</f></_bindTexture>
		<setTexture public="1" set="method" line="266"><f a="channel:texture">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/>
	<x path="Void"/>
</f></setTexture>
		<setTextureFromPostProcess public="1" set="method" line="273"><f a="channel:postProcess">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
	<x path="Void"/>
</f></setTextureFromPostProcess>
		<_cacheFloat2 public="1" get="inline" set="null" line="287"><f a="uniformName:x:y">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></_cacheFloat2>
		<_cacheFloat3 public="1" get="inline" set="null" line="296"><f a="uniformName:x:y:z">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></_cacheFloat3>
		<_cacheFloat4 public="1" get="inline" set="null" line="306"><f a="uniformName:x:y:z:w">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></_cacheFloat4>
		<setMatrices public="1" get="inline" set="null" line="317"><f a="uniformName:matrices">
	<c path="String"/>
	<t path="openfl.utils.Float32Array"/>
	<x path="Void"/>
</f></setMatrices>
		<setArray public="1" get="inline" set="null" line="321"><f a="uniformName:array">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
</f></setArray>
		<setMatrix public="1" get="inline" set="null" line="326"><f a="uniformName:matrix">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></setMatrix>
		<setFloat public="1" get="inline" set="null" line="335"><f a="uniformName:value">
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat>
		<setBool public="1" get="inline" set="null" line="342"><f a="uniformName:bool">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setBool>
		<setVector2 public="1" get="inline" set="null" line="349"><f a="uniformName:vector2">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<x path="Void"/>
</f></setVector2>
		<setFloat2 public="1" get="inline" set="null" line="356"><f a="uniformName:x:y">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat2>
		<setVector3 public="1" get="inline" set="null" line="363"><f a="uniformName:vector3">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></setVector3>
		<setFloat3 public="1" get="inline" set="null" line="370"><f a="uniformName:x:y:z">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat3>
		<setFloat4 public="1" get="inline" set="null" line="377"><f a="uniformName:x:y:z:w">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat4>
		<setColor3 public="1" get="inline" set="null" line="384"><f a="uniformName:color3">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<x path="Void"/>
</f></setColor3>
		<setColor4 public="1" get="inline" set="null" line="391"><f a="uniformName:color3:alpha">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setColor4>
		<new public="1" set="method" line="75"><f a="baseName:attributesNames:uniformsNames:samplers:engine:defines:?optionalDefines:?onCompiled:?onError" v="::::::null:null:null">
	<d/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><c path="String"/></c>
	<c path="com.gamestudiohx.babylonhx.Engine"/>
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<f a="">
		<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
		<x path="Void"/>
	</f>
	<f a=":">
		<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
		<c path="String"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Effect"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.Material" params="" file="../../com/gamestudiohx/babylonhx/materials/Material.hx">
		<name public="1"><c path="String"/></name>
		<id public="1"><c path="String"/></id>
		<_renderId public="1"><x path="Int"/></_renderId>
		<_scene><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<checkReadyOnEveryCall public="1"><x path="Bool"/></checkReadyOnEveryCall>
		<checkReadyOnlyOnce public="1"><x path="Bool"/></checkReadyOnlyOnce>
		<alpha public="1"><x path="Float"/></alpha>
		<wireframe public="1"><x path="Bool"/></wireframe>
		<backFaceCulling public="1"><x path="Bool"/></backFaceCulling>
		<_effect public="1"><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_effect>
		<_wasPreviouslyReady public="1"><x path="Bool"/></_wasPreviouslyReady>
		<onDispose public="1"><f a=""><x path="Void"/></f></onDispose>
		<isReady public="1" set="method" line="51"><f a="?mesh:?useInstances" v="null:false">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></isReady>
		<getEffect public="1" set="method" line="55"><f a=""><c path="com.gamestudiohx.babylonhx.materials.Effect"/></f></getEffect>
		<getScene public="1" set="method" line="59"><f a=""><c path="com.gamestudiohx.babylonhx.Scene"/></f></getScene>
		<needAlphaBlending public="1" set="method" line="63"><f a=""><x path="Bool"/></f></needAlphaBlending>
		<needAlphaTesting public="1" set="method" line="67"><f a=""><x path="Bool"/></f></needAlphaTesting>
		<_preBind public="1" set="method" line="71"><f a=""><x path="Void"/></f></_preBind>
		<bind public="1" set="method" line="78"><f a="world:?mesh" v=":null">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Void"/>
</f></bind>
		<unbind public="1" set="method" line="82"><f a=""><x path="Void"/></f></unbind>
		<baseDispose public="1" set="method" line="86"><f a=""><x path="Void"/></f></baseDispose>
		<dispose public="1" set="method" line="98"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="32"><f a="name:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Material"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.MultiMaterial" params="" file="../../com/gamestudiohx/babylonhx/materials/MultiMaterial.hx">
		<name public="1"><c path="String"/></name>
		<id public="1"><c path="String"/></id>
		<_scene><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<subMaterials public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.materials.Material"/></c></subMaterials>
		<getSubMaterial public="1" set="method" line="31"><f a="index">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.materials.Material"/>
</f></getSubMaterial>
		<isReady public="1" set="method" line="39"><f a="mesh">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Bool"/>
</f></isReady>
		<new public="1" set="method" line="21"><f a="name:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.MultiMaterial"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.ShaderMaterial" params="" file="../../com/gamestudiohx/babylonhx/materials/ShaderMaterial.hx">
		<extends path="com.gamestudiohx.babylonhx.materials.Material"/>
		<_shaderPath><d/></_shaderPath>
		<_options><d/></_options>
		<_textures><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/>
</x></_textures>
		<_floats><x path="Map">
	<c path="String"/>
	<x path="Float"/>
</x></_floats>
		<_floatsArrays><x path="Map">
	<c path="String"/>
	<d/>
</x></_floatsArrays>
		<_colors3><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
</x></_colors3>
		<_colors4><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
</x></_colors4>
		<_vectors2><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</x></_vectors2>
		<_vectors3><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</x></_vectors3>
		<_matrices><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</x></_matrices>
		<_cachedWorldViewMatrix><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_cachedWorldViewMatrix>
		<needAlphaBlending public="1" set="method" line="75" override="1"><f a=""><x path="Bool"/></f></needAlphaBlending>
		<needAlphaTesting public="1" set="method" line="79" override="1"><f a=""><x path="Bool"/></f></needAlphaTesting>
		<_checkUniform set="method" line="83"><f a="uniformName">
	<c path="String"/>
	<x path="Void"/>
</f></_checkUniform>
		<setTexture public="1" set="method" line="89"><f a="name:texture">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/>
	<c path="com.gamestudiohx.babylonhx.materials.ShaderMaterial"/>
</f></setTexture>
		<setFloat public="1" set="method" line="98"><f a="name:value">
	<c path="String"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.materials.ShaderMaterial"/>
</f></setFloat>
		<setFloats public="1" set="method" line="105"><f a="name:value">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
	<c path="com.gamestudiohx.babylonhx.materials.ShaderMaterial"/>
</f></setFloats>
		<setColor3 public="1" set="method" line="112"><f a="name:value">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<c path="com.gamestudiohx.babylonhx.materials.ShaderMaterial"/>
</f></setColor3>
		<setColor4 public="1" set="method" line="119"><f a="name:value">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<c path="com.gamestudiohx.babylonhx.materials.ShaderMaterial"/>
</f></setColor4>
		<setVector2 public="1" set="method" line="126"><f a="name:value">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.materials.ShaderMaterial"/>
</f></setVector2>
		<setVector3 public="1" set="method" line="133"><f a="name:value">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.materials.ShaderMaterial"/>
</f></setVector3>
		<setMatrix public="1" set="method" line="140"><f a="name:value">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.materials.ShaderMaterial"/>
</f></setMatrix>
		<isReady public="1" set="method" line="147" override="1"><f a="?mesh:?useInstances" v="null:false">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></isReady>
		<bind public="1" get="inline" set="null" line="157" override="1"><f a="world:?mesh" v=":null">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Void"/>
</f></bind>
		<dispose public="1" get="inline" set="null" line="223" override="1"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="42"><f a="name:scene:shaderPath:options">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<d/>
	<d/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.ShaderMaterial"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.StandardMaterial" params="" file="../../com/gamestudiohx/babylonhx/materials/StandardMaterial.hx">
		<extends path="com.gamestudiohx.babylonhx.materials.Material"/>
		<DiffuseTextureEnabled public="1" line="56" static="1"><x path="Bool"/></DiffuseTextureEnabled>
		<AmbientTextureEnabled public="1" line="57" static="1"><x path="Bool"/></AmbientTextureEnabled>
		<OpacityTextureEnabled public="1" line="58" static="1"><x path="Bool"/></OpacityTextureEnabled>
		<ReflectionTextureEnabled public="1" line="59" static="1"><x path="Bool"/></ReflectionTextureEnabled>
		<EmissiveTextureEnabled public="1" line="60" static="1"><x path="Bool"/></EmissiveTextureEnabled>
		<SpecularTextureEnabled public="1" line="61" static="1"><x path="Bool"/></SpecularTextureEnabled>
		<BumpTextureEnabled public="1" line="62" static="1"><x path="Bool"/></BumpTextureEnabled>
		<diffuseTexture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></diffuseTexture>
		<ambientTexture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></ambientTexture>
		<opacityTexture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></opacityTexture>
		<reflectionTexture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></reflectionTexture>
		<emissiveTexture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></emissiveTexture>
		<specularTexture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></specularTexture>
		<bumpTexture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></bumpTexture>
		<ambientColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></ambientColor>
		<diffuseColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></diffuseColor>
		<specularColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></specularColor>
		<specularPower public="1"><x path="Float"/></specularPower>
		<emissiveColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></emissiveColor>
		<useAlphaFromDiffuseTexture public="1"><x path="Bool"/></useAlphaFromDiffuseTexture>
		<_cachedDefines public="1"><c path="String"/></_cachedDefines>
		<_renderTargets public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_renderTargets>
		<_worldViewProjectionMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldViewProjectionMatrix>
		<_lightMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_lightMatrix>
		<_globalAmbientColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></_globalAmbientColor>
		<_baseColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></_baseColor>
		<_scaledDiffuse public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></_scaledDiffuse>
		<_scaledSpecular public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></_scaledSpecular>
		<needAlphaBlending public="1" set="method" line="87" override="1"><f a=""><x path="Bool"/></f></needAlphaBlending>
		<needAlphaTesting public="1" set="method" line="91" override="1"><f a=""><x path="Bool"/></f></needAlphaTesting>
		<_shouldUseAlphaFromDiffuseTexture public="1" set="method" line="95"><f a=""><x path="Bool"/></f></_shouldUseAlphaFromDiffuseTexture>
		<isReady public="1" set="method" line="99" override="1"><f a="?mesh:?useInstances" v="null:false">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></isReady>
		<getRenderTargetTextures public="1" set="method" line="329"><f a=""><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></f></getRenderTargetTextures>
		<unbind public="1" set="method" line="339" override="1"><f a=""><x path="Void"/></f></unbind>
		<bind public="1" get="inline" set="null" line="345" override="1"><f a="world:?mesh" v=":null">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Void"/>
</f></bind>
		<getAnimatables public="1" set="method" line="489"><f a=""><c path="Array"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></c></f></getAnimatables>
		<dispose public="1" set="method" line="523" override="1"><f a=""><x path="Void"/></f></dispose>
		<clone public="1" set="method" line="555"><f a="name">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.StandardMaterial"/>
</f></clone>
		<new public="1" set="method" line="65"><f a="name:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.StandardMaterial"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.textures.BaseTexture" params="" file="../../com/gamestudiohx/babylonhx/materials/textures/BaseTexture.hx">
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<delayLoadState public="1"><x path="Int"/></delayLoadState>
		<hasAlpha public="1"><x path="Bool"/></hasAlpha>
		<level public="1"><x path="Float"/></level>
		<_texture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/></_texture>
		<onDispose public="1"><f a=""><x path="Void"/></f></onDispose>
		<getInternalTexture public="1" set="method" line="32"><f a=""><c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/></f></getInternalTexture>
		<isReady public="1" set="method" line="36"><f a=""><x path="Bool"/></f></isReady>
		<getScene public="1" set="method" line="44"><f a=""><c path="com.gamestudiohx.babylonhx.Scene"/></f></getScene>
		<getSize public="1" set="method" line="48"><f a=""><d/></f></getSize>
		<getBaseSize public="1" set="method" line="60"><f a=""><d/></f></getBaseSize>
		<_getFromCache public="1" set="method" line="71"><f a="url:noMipmap">
	<c path="String"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture"/>
</f></_getFromCache>
		<delayLoad public="1" set="method" line="85"><f a=""><x path="Void"/></f></delayLoad>
		<releaseInternalTexture public="1" set="method" line="89"><f a=""><x path="Void"/></f></releaseInternalTexture>
		<dispose public="1" set="method" line="108"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="26"><f a="url:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.BaseTexture"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.textures.Texture" params="" file="../../com/gamestudiohx/babylonhx/materials/textures/Texture.hx">
		<extends path="com.gamestudiohx.babylonhx.materials.textures.BaseTexture"/>
		<NEAREST_SAMPLINGMODE public="1" line="75" static="1"><x path="Int"/></NEAREST_SAMPLINGMODE>
		<BILINEAR_SAMPLINGMODE public="1" line="76" static="1"><x path="Int"/></BILINEAR_SAMPLINGMODE>
		<TRILINEAR_SAMPLINGMODE public="1" line="77" static="1"><x path="Int"/></TRILINEAR_SAMPLINGMODE>
		<EXPLICIT_MODE public="1" line="79" static="1"><x path="Int"/></EXPLICIT_MODE>
		<SPHERICAL_MODE public="1" line="80" static="1"><x path="Int"/></SPHERICAL_MODE>
		<PLANAR_MODE public="1" line="81" static="1"><x path="Int"/></PLANAR_MODE>
		<CUBIC_MODE public="1" line="82" static="1"><x path="Int"/></CUBIC_MODE>
		<PROJECTION_MODE public="1" line="83" static="1"><x path="Int"/></PROJECTION_MODE>
		<SKYBOX_MODE public="1" line="84" static="1"><x path="Int"/></SKYBOX_MODE>
		<CLAMP_ADDRESSMODE public="1" line="86" static="1"><x path="Int"/></CLAMP_ADDRESSMODE>
		<WRAP_ADDRESSMODE public="1" line="87" static="1"><x path="Int"/></WRAP_ADDRESSMODE>
		<MIRROR_ADDRESSMODE public="1" line="88" static="1"><x path="Int"/></MIRROR_ADDRESSMODE>
		<uOffset public="1"><x path="Float"/></uOffset>
		<_cachedUOffset public="1"><x path="Float"/></_cachedUOffset>
		<vOffset public="1"><x path="Float"/></vOffset>
		<_cachedVOffset public="1"><x path="Float"/></_cachedVOffset>
		<uScale public="1"><x path="Float"/></uScale>
		<_cachedUScale public="1"><x path="Float"/></_cachedUScale>
		<vScale public="1"><x path="Float"/></vScale>
		<_cachedVScale public="1"><x path="Float"/></_cachedVScale>
		<uAng public="1"><x path="Float"/></uAng>
		<_cachedUAng public="1"><x path="Float"/></_cachedUAng>
		<vAng public="1"><x path="Float"/></vAng>
		<_cachedVAng public="1"><x path="Float"/></_cachedVAng>
		<wAng public="1"><x path="Float"/></wAng>
		<_cachedWAng public="1"><x path="Float"/></_cachedWAng>
		<wrapU public="1"><x path="Int"/></wrapU>
		<wrapV public="1"><x path="Int"/></wrapV>
		<coordinatesIndex public="1"><x path="Float"/></coordinatesIndex>
		<coordinatesMode public="1"><x path="Float"/></coordinatesMode>
		<_cachedCoordinatesMode public="1"><x path="Float"/></_cachedCoordinatesMode>
		<anisotropicFilteringLevel public="1"><x path="Float"/></anisotropicFilteringLevel>
		<_cachedAnisotropicFilteringLevel public="1"><x path="Float"/></_cachedAnisotropicFilteringLevel>
		<_canvas public="1"><c path="openfl.display.BitmapData"/></_canvas>
		<_rowGenerationMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_rowGenerationMatrix>
		<_cachedTextureMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_cachedTextureMatrix>
		<_projectionModeMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_projectionModeMatrix>
		<_t0 public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_t0>
		<_t1 public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_t1>
		<_t2 public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_t2>
		<name public="1"><c path="String"/></name>
		<url public="1"><c path="String"/></url>
		<animations public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.animations.Animation"/></c></animations>
		<_noMipmap public="1"><x path="Bool"/></_noMipmap>
		<_invertY public="1"><x path="Bool"/></_invertY>
		<delayLoad public="1" set="method" line="169" override="1"><f a=""><x path="Void"/></f></delayLoad>
		<_prepareRowForTextureGeneration public="1" set="method" line="182"><f a="x:y:z:t">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></_prepareRowForTextureGeneration>
		<_computeTextureMatrix public="1" set="method" line="197"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_computeTextureMatrix>
		<_computeReflectionTextureMatrix public="1" set="method" line="242"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_computeReflectionTextureMatrix>
		<update public="1" set="method" line="287"><f a="?invertY" v="1">
	<x path="Int"/>
	<x path="Void"/>
</f></update>
		<clone public="1" set="method" line="292"><f a=""><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></f></clone>
		<new public="1" set="method" line="127"><f a="url:scene:?noMipmap:?invertY" v="::null:null">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":expose"><e>"BABYLON.Texture"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.textures.CubeTexture" params="" file="../../com/gamestudiohx/babylonhx/materials/textures/CubeTexture.hx">
		<extends path="com.gamestudiohx.babylonhx.materials.textures.Texture"/>
		<_textureMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_textureMatrix>
		<_extensions public="1"><c path="Array"><c path="String"/></c></_extensions>
		<isCube public="1"><x path="Bool"/></isCube>
		<delayLoad public="1" set="method" line="47" override="1"><f a=""><x path="Void"/></f></delayLoad>
		<_computeReflectionTextureMatrix public="1" set="method" line="60" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></_computeReflectionTextureMatrix>
		<new public="1" set="method" line="22"><f a="rootUrl:scene:?extensions" v="::null">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.CubeTexture"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.textures.DynamicTexture" params="" file="../../com/gamestudiohx/babylonhx/materials/textures/DynamicTexture.hx">
		<extends path="com.gamestudiohx.babylonhx.materials.textures.Texture"/>
		<_generateMipMaps><x path="Bool"/></_generateMipMaps>
		<getCanvas public="1" set="method" line="47"><f a=""><c path="openfl.display.BitmapData"/></f></getCanvas>
		<update public="1" set="method" line="51" override="1"><f a="?invertY" v="1">
	<x path="Int"/>
	<x path="Void"/>
</f></update>
		<clone public="1" set="method" line="76" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></f></clone>
		<new public="1" set="method" line="23"><f a="name:options:scene:generateMipMaps">
	<c path="String"/>
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.DynamicTexture"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.textures.RenderTargetTexture" params="" file="../../com/gamestudiohx/babylonhx/materials/textures/RenderTargetTexture.hx">
		<extends path="com.gamestudiohx.babylonhx.materials.textures.Texture"/>
		<_generateMipMaps public="1"><x path="Bool"/></_generateMipMaps>
		<_renderingManager public="1"><c path="com.gamestudiohx.babylonhx.rendering.RenderingManager"/></_renderingManager>
		<renderList public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c></renderList>
		<renderParticles public="1"><x path="Bool"/></renderParticles>
		<renderSprites public="1"><x path="Bool"/></renderSprites>
		<isRenderTarget public="1"><x path="Bool"/></isRenderTarget>
		<customRenderFunction public="1"><d/></customRenderFunction>
		<onBeforeRender public="1"><f a=""><x path="Void"/></f></onBeforeRender>
		<onAfterRender public="1"><f a=""><x path="Void"/></f></onAfterRender>
		<_waitingRenderList public="1"><c path="Array"><c path="String"/></c></_waitingRenderList>
		<resize public="1" set="method" line="49"><f a="size:generateMipMaps">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></resize>
		<render public="1" set="method" line="54"><f a="?useCameraPostProcess" v="false">
	<x path="Bool"/>
	<x path="Void"/>
</f></render>
		<clone public="1" set="method" line="113" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></f></clone>
		<new public="1" set="method" line="35"><f a="name:size:scene:generateMipMaps">
	<c path="String"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.RenderTargetTexture"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.textures.MirrorTexture" params="" file="../../com/gamestudiohx/babylonhx/materials/textures/MirrorTexture.hx">
		<extends path="com.gamestudiohx.babylonhx.materials.textures.RenderTargetTexture"/>
		<_transformMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_transformMatrix>
		<_savedViewMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_savedViewMatrix>
		<_mirrorMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_mirrorMatrix>
		<mirrorPlane public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></mirrorPlane>
		<clone public="1" set="method" line="54" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></f></clone>
		<new public="1" set="method" line="21"><f a="name:size:scene:generateMipMaps">
	<c path="String"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.MirrorTexture"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.materials.textures.BabylonTexture" params="" file="../../com/gamestudiohx/babylonhx/materials/textures/Texture.hx" module="com.gamestudiohx.babylonhx.materials.textures.Texture">
		<data public="1"><t path="openfl.gl.GLTexture"/></data>
		<_framebuffer public="1"><t path="openfl.gl.GLFramebuffer"/></_framebuffer>
		<_depthBuffer public="1"><t path="openfl.gl.GLRenderbuffer"/></_depthBuffer>
		<generateMipMaps public="1"><x path="Bool"/></generateMipMaps>
		<isCube public="1"><x path="Bool"/></isCube>
		<_size public="1"><x path="Float"/></_size>
		<isReady public="1"><x path="Bool"/></isReady>
		<noMipmap public="1"><x path="Bool"/></noMipmap>
		<references public="1"><x path="Int"/></references>
		<url public="1"><c path="String"/></url>
		<_baseHeight public="1"><x path="Int"/></_baseHeight>
		<_baseWidth public="1"><x path="Int"/></_baseWidth>
		<_cachedWrapU public="1"><x path="Int"/></_cachedWrapU>
		<_cachedWrapV public="1"><x path="Int"/></_cachedWrapV>
		<_width public="1"><x path="Float"/></_width>
		<_height public="1"><x path="Float"/></_height>
		<new public="1" set="method" line="48"><f a="url:data">
	<c path="String"/>
	<t path="openfl.gl.GLTexture"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.BabylonTexture"</e></m></meta>
	</class>
	<typedef path="com.gamestudiohx.babylonhx.mesh.MeshCache" params="" file="../../com/gamestudiohx/babylonhx/mesh/AbstractMesh.hx" module="com.gamestudiohx.babylonhx.mesh.AbstractMesh"><a>
	<scaling><t path="Null"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></t></scaling>
	<rotationQuaternion><t path="Null"><c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/></t></rotationQuaternion>
	<rotation><t path="Null"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></t></rotation>
	<position><t path="Null"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></t></position>
	<pivotMatrixUpdated><t path="Null"><x path="Bool"/></t></pivotMatrixUpdated>
	<localMatrixUpdated><t path="Null"><x path="Bool"/></t></localMatrixUpdated>
</a></typedef>
	<class path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer" params="" file="../../com/gamestudiohx/babylonhx/mesh/AbstractMesh.hx" module="com.gamestudiohx.babylonhx.mesh.AbstractMesh">
		<buffer public="1"><t path="openfl.gl.GLBuffer"/></buffer>
		<references public="1"><x path="Int"/></references>
		<capacity public="1"><x path="Int"/></capacity>
		<new public="1" set="method" line="48"><f a="buffer:?_capacity" v=":0">
	<t path="openfl.gl.GLBuffer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.BabylonGLBuffer"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.AbstractMesh" params="" file="../../com/gamestudiohx/babylonhx/mesh/AbstractMesh.hx">
		<extends path="com.gamestudiohx.babylonhx.Node"/>
		<BILLBOARDMODE_NONE public="1" line="58" static="1"><x path="Int"/></BILLBOARDMODE_NONE>
		<BILLBOARDMODE_X public="1" line="59" static="1"><x path="Int"/></BILLBOARDMODE_X>
		<BILLBOARDMODE_Y public="1" line="60" static="1"><x path="Int"/></BILLBOARDMODE_Y>
		<BILLBOARDMODE_Z public="1" line="61" static="1"><x path="Int"/></BILLBOARDMODE_Z>
		<BILLBOARDMODE_ALL public="1" line="62" static="1"><x path="Int"/></BILLBOARDMODE_ALL>
		<ComputeNormal public="1" set="method" line="839" static="1"><f a="positions:normals:indices">
	<c path="Array"><x path="Float"/></c>
	<c path="Array"><x path="Float"/></c>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></ComputeNormal>
		<rotation public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></rotation>
		<scaling public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></scaling>
		<rotationQuaternion public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/></rotationQuaternion>
		<subMeshes public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/></c></subMeshes>
		<animations public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.animations.Animation"/></c></animations>
		<infiniteDistance public="1"><x path="Bool"/></infiniteDistance>
		<material public="1"><d/></material>
		<isVisible public="1"><x path="Bool"/></isVisible>
		<isPickable public="1"><x path="Bool"/></isPickable>
		<visibility public="1"><x path="Float"/></visibility>
		<billboardMode public="1"><x path="Int"/></billboardMode>
		<checkCollisions public="1"><x path="Bool"/></checkCollisions>
		<receiveShadows public="1"><x path="Bool"/></receiveShadows>
		<onDispose public="1"><f a=""><x path="Void"/></f></onDispose>
		<skeleton public="1"><c path="com.gamestudiohx.babylonhx.bones.Skeleton"/></skeleton>
		<renderingGroupId public="1"><x path="Int"/></renderingGroupId>
		<_animationStarted public="1"><x path="Bool"/></_animationStarted>
		<_scaleFactor public="1"><x path="Float"/></_scaleFactor>
		<_isDisposed public="1"><x path="Bool"/></_isDisposed>
		<_totalVertices public="1"><x path="Int"/></_totalVertices>
		<_worldMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldMatrix>
		<_pivotMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_pivotMatrix>
		<_vertexStrideSize public="1"><x path="Int"/></_vertexStrideSize>
		<_indices public="1"><c path="Array"><x path="Int"/></c></_indices>
		<_renderId public="1"><x path="Int"/></_renderId>
		<_localScaling public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_localScaling>
		<_localRotation public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_localRotation>
		<_localTranslation public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_localTranslation>
		<_localBillboard public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_localBillboard>
		<_localPivotScaling public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_localPivotScaling>
		<_localPivotScalingRotation public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_localPivotScalingRotation>
		<_localWorld public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_localWorld>
		<_rotateYByPI public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_rotateYByPI>
		<_boundingInfo public="1"><c path="com.gamestudiohx.babylonhx.culling.BoundingInfo"/></_boundingInfo>
		<_collisionsTransformMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_collisionsTransformMatrix>
		<_collisionsScalingMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_collisionsScalingMatrix>
		<_absolutePosition><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_absolutePosition>
		<_isDirty><x path="Bool"/></_isDirty>
		<_positions public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></c></_positions>
		<_vertexBuffers public="1"><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexBuffer"/>
</x></_vertexBuffers>
		<_vertexBuffersB public="1"><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
</x></_vertexBuffersB>
		<_delayInfo public="1"><c path="Array"><c path="String"/></c></_delayInfo>
		<_indexBuffer public="1"><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_indexBuffer>
		<parentId public="1" get="accessor" set="null"><c path="String"/></parentId>
		<showSubMeshesBoundingBox public="1"><x path="Bool"/></showSubMeshesBoundingBox>
		<_submeshesOctree public="1"><d/></_submeshesOctree>
		<_resetPointsArrayCache public="1" set="method" line="197"><f a=""><x path="Void"/></f></_resetPointsArrayCache>
		<_generatePointsArray public="1" set="method" line="201"><f a=""><x path="Bool"/></f></_generatePointsArray>
		<_collideForSubMesh public="1" get="inline" set="null" line="206"><f a="subMesh:transformMatrix:collider">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.collisions.Collider"/>
	<x path="Void"/>
</f></_collideForSubMesh>
		<_processCollisionsForSubModels public="1" get="inline" set="null" line="224"><f a="collider:transformMatrix">
	<c path="com.gamestudiohx.babylonhx.collisions.Collider"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></_processCollisionsForSubModels>
		<_checkCollision public="1" get="inline" set="null" line="236"><f a="collider">
	<c path="com.gamestudiohx.babylonhx.collisions.Collider"/>
	<x path="Void"/>
</f></_checkCollision>
		<isInFrustum public="1" set="method" line="247"><f a="frustumPlanes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<x path="Bool"/>
</f></isInFrustum>
		<getBoundingInfo public="1" set="method" line="255"><f a=""><c path="com.gamestudiohx.babylonhx.culling.BoundingInfo"/></f></getBoundingInfo>
		<_preActivate public="1" set="method" line="259"><f a=""><x path="Void"/></f></_preActivate>
		<_activate public="1" set="method" line="262"><f a="renderId">
	<x path="Int"/>
	<x path="Void"/>
</f></_activate>
		<getScene public="1" set="method" line="266"><f a=""><c path="com.gamestudiohx.babylonhx.Scene"/></f></getScene>
		<get_parentId set="method" line="270"><f a=""><c path="String"/></f></get_parentId>
		<getWorldMatrix public="1" get="inline" set="null" line="277" override="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getWorldMatrix>
		<getWorldMatrixFromCache public="1" set="method" line="286"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getWorldMatrixFromCache>
		<getTotalVertices public="1" set="method" line="290"><f a=""><x path="Int"/></f></getTotalVertices>
		<getabsolutePosition public="1" set="method" line="294"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></getabsolutePosition>
		<getAbsolutePosition public="1" get="inline" set="null" line="298"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></getAbsolutePosition>
		<setAbsolutePosition public="1" set="method" line="305"><f a="?absolutePosition" v="null">
	<d/>
	<x path="Void"/>
</f></setAbsolutePosition>
		<rotate public="1" set="method" line="374"><f a="axis:amount:space">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<e path="com.gamestudiohx.babylonhx.tools.Space"/>
	<x path="Void"/>
</f></rotate>
		<translate public="1" set="method" line="395"><f a="axis:distance:space">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<e path="com.gamestudiohx.babylonhx.tools.Space"/>
	<x path="Void"/>
</f></translate>
		<getVerticesData public="1" set="method" line="407"><f a="kind">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
</f></getVerticesData>
		<isVerticesDataPresent public="1" set="method" line="411"><f a="kind">
	<c path="String"/>
	<x path="Bool"/>
</f></isVerticesDataPresent>
		<getTotalIndicies public="1" set="method" line="415"><f a=""><x path="Int"/></f></getTotalIndicies>
		<getIndices public="1" set="method" line="419"><f a=""><c path="Array"><x path="Int"/></c></f></getIndices>
		<getVertexStrideSize public="1" set="method" line="423"><f a=""><x path="Float"/></f></getVertexStrideSize>
		<setPivotMatrix public="1" get="inline" set="null" line="427"><f a="matrix">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></setPivotMatrix>
		<getPivotMatrix public="1" set="method" line="432"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></getPivotMatrix>
		<isSynchronized public="1" set="method" line="436" override="1"><f a="?updateCache" v="true">
	<x path="Bool"/>
	<x path="Bool"/>
</f></isSynchronized>
		<isAnimated public="1" set="method" line="469"><f a=""><x path="Bool"/></f></isAnimated>
		<isDisposed public="1" set="method" line="473"><f a=""><x path="Bool"/></f></isDisposed>
		<_initCache public="1" set="method" line="477" override="1"><f a=""><x path="Void"/></f></_initCache>
		<markAsDirty public="1" set="method" line="486"><f a="property">
	<c path="String"/>
	<x path="Void"/>
</f></markAsDirty>
		<refreshBoudningInfo public="1" get="inline" set="null" line="495"><f a=""><x path="Void"/></f></refreshBoudningInfo>
		<_updateBoundingInfo public="1" get="inline" set="null" line="512"><f a=""><x path="Void"/></f></_updateBoundingInfo>
		<computeWorldMatrix public="1" get="inline" set="null" line="530"><f a="?force" v="false">
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></computeWorldMatrix>
		<locallyTranslate public="1" get="inline" set="null" line="623"><f a="vector3">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></locallyTranslate>
		<lookAt public="1" get="inline" set="null" line="629"><f a="targetPoint:?yawCor:?pitchCor:?rollCor" v=":0:0:0">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></lookAt>
		<bindAndDraw public="1" get="inline" set="null" line="646"><f a="subMesh:effect:wireframe">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></bindAndDraw>
		<setLocalTranslation public="1" get="inline" set="null" line="666"><f a="vector3">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></setLocalTranslation>
		<getLocalTranslation public="1" get="inline" set="null" line="674"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></getLocalTranslation>
		<createOrUpdateSubmeshesOctree public="1" get="inline" set="null" line="683"><f a="?maxCapacity:?maxDepth" v="64:2">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c>
</f></createOrUpdateSubmeshesOctree>
		<intersectsMesh public="1" get="inline" set="null" line="699"><f a="mesh:precise">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></intersectsMesh>
		<intersectsPoint public="1" get="inline" set="null" line="709"><f a="point">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Bool"/>
</f></intersectsPoint>
		<intersects public="1" set="method" line="717"><f a="ray:?fastCheck" v=":false">
	<c path="com.gamestudiohx.babylonhx.tools.math.Ray"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.collisions.PickingInfo"/>
</f></intersects>
		<clone public="1" set="method" line="770"><f a="name:?newParent:?doNotCloneChildren" v=":null:false">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Node"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
</f></clone>
		<releaseSubMeshes public="1" set="method" line="775"><f a=""><x path="Void"/></f></releaseSubMeshes>
		<dispose public="1" set="method" line="791"><f a="?doNotRecurse" v="false">
	<x path="Bool"/>
	<x path="Void"/>
</f></dispose>
		<new public="1" set="method" line="126"><f a="name:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":expose"><e>"BABYLON.AbstractMesh"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.IGetSetVerticesData" params="" file="../../com/gamestudiohx/babylonhx/mesh/VertexData.hx" module="com.gamestudiohx.babylonhx.mesh.VertexData" interface="1">
		<isVerticesDataPresent public="1" set="method"><f a="kind">
	<c path="String"/>
	<x path="Bool"/>
</f></isVerticesDataPresent>
		<getVerticesData public="1" set="method"><f a="kind">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
</f></getVerticesData>
		<getIndices public="1" set="method"><f a=""><c path="Array"><x path="Int"/></c></f></getIndices>
		<setVerticesData public="1" set="method"><f a="kind:data:?updatable">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Bool"/>
	<x path="Void"/>
</f></setVerticesData>
		<updateVerticesData public="1" set="method"><f a="kind:data:?updateExtends:?makeItUnique">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></updateVerticesData>
		<setIndices public="1" set="method"><f a="indices">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></setIndices>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.Geometry" params="" file="../../com/gamestudiohx/babylonhx/mesh/Geometry.hx">
		<implements path="com.gamestudiohx.babylonhx.mesh.IGetSetVerticesData"/>
		<ExtractFromMesh set="method" line="417" static="1"><f a="mesh:id">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Geometry"/>
</f></ExtractFromMesh>
		<RandomId public="1" set="method" line="430" static="1"><f a=""><c path="String"/></f></RandomId>
		<id public="1"><c path="String"/></id>
		<delayLoadState public="1"><x path="Int"/></delayLoadState>
		<delayLoadingFile public="1"><c path="String"/></delayLoadingFile>
		<_engine><c path="com.gamestudiohx.babylonhx.Engine"/></_engine>
		<_meshes><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.Mesh"/></c></_meshes>
		<_totalVertices><x path="Int"/></_totalVertices>
		<_indices><c path="Array"><x path="Int"/></c></_indices>
		<_vertexBuffers public="1"><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexBuffer"/>
</x></_vertexBuffers>
		<_delayInfo><c path="Array"><c path="String"/></c></_delayInfo>
		<_indexBuffer><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_indexBuffer>
		<_boundingInfo><c path="com.gamestudiohx.babylonhx.culling.BoundingInfo"/></_boundingInfo>
		<_delayLoadingFunction><f a=":">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Geometry"/>
	<x path="Void"/>
</f></_delayLoadingFunction>
		<getEngine public="1" set="method" line="59"><f a=""><c path="com.gamestudiohx.babylonhx.Engine"/></f></getEngine>
		<isReady public="1" set="method" line="63"><f a=""><x path="Bool"/></f></isReady>
		<setAllVerticesData public="1" set="method" line="67"><f a="vertexData:?updatable" v=":null">
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setAllVerticesData>
		<setVerticesData public="1" set="method" line="71"><f a="kind:data:?updatable" v="::null">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Bool"/>
	<x path="Void"/>
</f></setVerticesData>
		<updateVerticesData public="1" set="method" line="101"><f a="kind:data:?updateExtends:?makeItUnique" v="::null:null">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></updateVerticesData>
		<getTotalVertices public="1" set="method" line="131"><f a=""><x path="Int"/></f></getTotalVertices>
		<getVerticesData public="1" set="method" line="139"><f a="kind">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
</f></getVerticesData>
		<getVertexBuffer public="1" set="method" line="147"><f a="kind">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexBuffer"/>
</f></getVertexBuffer>
		<getVertexBuffers public="1" set="method" line="154"><f a=""><x path="Map">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexBuffer"/>
</x></f></getVertexBuffers>
		<isVerticesDataPresent public="1" set="method" line="161"><f a="kind">
	<c path="String"/>
	<x path="Bool"/>
</f></isVerticesDataPresent>
		<getVerticesDataKinds public="1" set="method" line="172"><f a=""><c path="Array"><c path="String"/></c></f></getVerticesDataKinds>
		<setIndices public="1" set="method" line="187"><f a="indices">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></setIndices>
		<getTotalIndices public="1" set="method" line="207"><f a=""><x path="Int"/></f></getTotalIndices>
		<getIndices public="1" set="method" line="214"><f a=""><c path="Array"><x path="Int"/></c></f></getIndices>
		<getIndexBuffer public="1" set="method" line="222"><f a=""><d/></f></getIndexBuffer>
		<releaseForMesh public="1" set="method" line="229"><f a="mesh">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Void"/>
</f></releaseForMesh>
		<applyToMesh public="1" set="method" line="249"><f a="mesh">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Void"/>
</f></applyToMesh>
		<_applyToMesh set="method" line="275"><f a="mesh">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Void"/>
</f></_applyToMesh>
		<load public="1" set="method" line="303"><f a="scene:?onLoaded" v=":null">
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<d/>
	<x path="Void"/>
</f></load>
		<dispose public="1" set="method" line="340"><f a=""><x path="Void"/></f></dispose>
		<copy public="1" set="method" line="370"><f a="id">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Geometry"/>
</f></copy>
		<new public="1" set="method" line="39"><f a="id:engine:?vertexData:?updatable:?mesh" v="::null:null:null">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Engine"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Geometry"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.Mesh" params="" file="../../com/gamestudiohx/babylonhx/mesh/Mesh.hx">
		<extends path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
		<implements path="com.gamestudiohx.babylonhx.mesh.IGetSetVerticesData"/>
		<CreateBox public="1" set="method" line="873" static="1"><f a="name:size:scene:?updatable" v=":::null">
	<c path="String"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
</f></CreateBox>
		<CreateSphere public="1" set="method" line="882" static="1"><f a="name:segments:diameter:scene:?updatable" v="::::null">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
</f></CreateSphere>
		<CreateCylinder public="1" set="method" line="893" static="1"><f a="name:height:diameterTop:diameterBottom:tessellation:subdivisions:scene:?updatable" v=":::::::null">
	<c path="String"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
</f></CreateCylinder>
		<CreateTorus public="1" set="method" line="904" static="1"><f a="name:diameter:thickness:tessellation:scene:?updatable" v=":::::null">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
</f></CreateTorus>
		<CreateTorusKnot public="1" set="method" line="913" static="1"><f a="name:radius:tube:radialSegments:tubularSegments:p:q:scene:?updatable" v="::::::::null">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
</f></CreateTorusKnot>
		<CreatePlane public="1" set="method" line="924" static="1"><f a="name:size:scene:?updatable" v=":::null">
	<c path="String"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
</f></CreatePlane>
		<CreateGround public="1" set="method" line="934" static="1"><f a="name:width:height:subdivisions:scene:?updatable" v=":::::null">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
</f></CreateGround>
		<MinMax public="1" set="method" line="992" static="1"><f a="meshes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c>
	<d/>
</f></MinMax>
		<Center public="1" set="method" line="1016" static="1"><f a="meshesOrMinMaxVector">
	<d/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Center>
		<delayLoadState public="1"><x path="Int"/></delayLoadState>
		<instances public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.InstancedMesh"/></c></instances>
		<delayLoadingFile public="1"><c path="String"/></delayLoadingFile>
		<_geometry public="1"><c path="com.gamestudiohx.babylonhx.mesh.Geometry"/></_geometry>
		<_onBeforeRenderCallbacks><c path="Array"><d/></c></_onBeforeRenderCallbacks>
		<_delayLoadingFunction><c path="String"/></_delayLoadingFunction>
		<_visibleInstances public="1"><d/></_visibleInstances>
		<_renderIdForInstances public="1"><x path="Int"/></_renderIdForInstances>
		<_preActivateId><x path="Int"/></_preActivateId>
		<_batchCache><c path="com.gamestudiohx.babylonhx.mesh.InstancesBatch"/></_batchCache>
		<_worldMatricesInstancesBuffer><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_worldMatricesInstancesBuffer>
		<_worldMatricesInstancesArray><t path="openfl.utils.Float32Array"/></_worldMatricesInstancesArray>
		<_instancesBufferSize><x path="Int"/></_instancesBufferSize>
		<getTotalVertices public="1" set="method" line="65" override="1"><f a=""><x path="Int"/></f></getTotalVertices>
		<getVerticesData public="1" set="method" line="72" override="1"><f a="kind">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
</f></getVerticesData>
		<getVertexBuffer public="1" set="method" line="79"><f a="kind">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexBuffer"/>
</f></getVertexBuffer>
		<isVerticesDataPresent public="1" set="method" line="86" override="1"><f a="kind">
	<c path="String"/>
	<x path="Bool"/>
</f></isVerticesDataPresent>
		<getVerticesDataKinds public="1" set="method" line="96"><f a=""><c path="Array"><c path="String"/></c></f></getVerticesDataKinds>
		<getTotalIndices public="1" set="method" line="112"><f a=""><x path="Int"/></f></getTotalIndices>
		<getIndices public="1" set="method" line="119" override="1"><f a=""><c path="Array"><x path="Int"/></c></f></getIndices>
		<isReady public="1" set="method" line="126" override="1"><f a=""><x path="Bool"/></f></isReady>
		<_preActivate public="1" set="method" line="140" override="1"><f a=""><x path="Void"/></f></_preActivate>
		<_registerInstanceForRenderId public="1" set="method" line="151"><f a="instance:renderId">
	<c path="com.gamestudiohx.babylonhx.mesh.InstancedMesh"/>
	<x path="Int"/>
	<x path="Void"/>
</f></_registerInstanceForRenderId>
		<refreshBoundingInfo public="1" set="method" line="165"><f a=""><x path="Void"/></f></refreshBoundingInfo>
		<_createGlobalSubMesh public="1" set="method" line="187"><f a=""><c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/></f></_createGlobalSubMesh>
		<subdivide public="1" set="method" line="199"><f a="count">
	<x path="Float"/>
	<x path="Void"/>
</f></subdivide>
		<setVerticesData public="1" set="method" line="230"><f a="kind:data:?updatable" v="::null">
	<d/>
	<d/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setVerticesData>
		<updateVerticesData public="1" set="method" line="251"><f a="kind:data:?updateExtends:?makeItUnique" v="::null:null">
	<c path="String"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></updateVerticesData>
		<makeGeometryUnique public="1" set="method" line="263"><f a=""><x path="Void"/></f></makeGeometryUnique>
		<setIndices public="1" set="method" line="271"><f a="indices">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></setIndices>
		<_bind public="1" set="method" line="283"><f a="subMesh:effect:?wireframe" v="::null">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></_bind>
		<_draw public="1" set="method" line="298"><f a="subMesh:useTriangles:?instancesCount" v="::null">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Void"/>
</f></_draw>
		<registerBeforeRender public="1" set="method" line="310"><f a="func">
	<d/>
	<x path="Void"/>
</f></registerBeforeRender>
		<unregisterBeforeRender public="1" set="method" line="314"><f a="func">
	<d/>
	<x path="Void"/>
</f></unregisterBeforeRender>
		<_getInstancesRenderList public="1" set="method" line="322"><f a=""><c path="com.gamestudiohx.babylonhx.mesh.InstancesBatch"/></f></_getInstancesRenderList>
		<_renderWithInstances public="1" set="method" line="356"><f a="subMesh:wireFrame:batch:effect:engine">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.InstancesBatch"/>
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<c path="com.gamestudiohx.babylonhx.Engine"/>
	<x path="Void"/>
</f></_renderWithInstances>
		<render public="1" set="method" line="411"><f a="subMesh">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<x path="Void"/>
</f></render>
		<getEmittedParticleSystems public="1" set="method" line="497"><f a=""><c path="Array"><c path="com.gamestudiohx.babylonhx.particles.ParticleSystem"/></c></f></getEmittedParticleSystems>
		<getHierarchyEmittedParticleSystems public="1" set="method" line="512"><f a=""><c path="Array"><c path="com.gamestudiohx.babylonhx.particles.ParticleSystem"/></c></f></getHierarchyEmittedParticleSystems>
		<getChildren public="1" set="method" line="529"><f a=""><c path="Array"><c path="com.gamestudiohx.babylonhx.Node"/></c></f></getChildren>
		<_checkDelayState public="1" set="method" line="544"><f a=""><x path="Void"/></f></_checkDelayState>
		<isInFrustum public="1" set="method" line="576" override="1"><f a="frustumPlanes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<x path="Bool"/>
</f></isInFrustum>
		<setMaterialByID public="1" set="method" line="590"><f a="id">
	<c path="String"/>
	<x path="Void"/>
</f></setMaterialByID>
		<getAnimatables public="1" set="method" line="615"><f a=""><c path="Array"><c path="com.gamestudiohx.babylonhx.tools.IAnimatable"/></c></f></getAnimatables>
		<bakeTransformIntoVertices public="1" set="method" line="627"><f a="transform">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></bakeTransformIntoVertices>
		<_generatePointsArray public="1" set="method" line="669" override="1"><f a=""><x path="Bool"/></f></_generatePointsArray>
		<clone public="1" set="method" line="694" override="1"><f a="name:?newParent:?doNotCloneChildren" v=":null:false">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Node"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
</f></clone>
		<dispose public="1" set="method" line="744" override="1"><f a="?doNotRecurse" v="false">
	<x path="Bool"/>
	<x path="Void"/>
</f></dispose>
		<convertToFlatShadedMesh public="1" set="method" line="766"><f a=""><x path="Void"/></f></convertToFlatShadedMesh>
		<createInstance public="1" set="method" line="857"><f a="name">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.InstancedMesh"/>
</f></createInstance>
		<synchronizeInstances public="1" set="method" line="861"><f a=""><x path="Void"/></f></synchronizeInstances>
		<new public="1" set="method" line="61"><f a="name:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":expose"><e>"BABYLON.Mesh"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.GroundMesh" params="" file="../../com/gamestudiohx/babylonhx/mesh/GroundMesh.hx">
		<extends path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
		<generateOctree public="1"><x path="Bool"/></generateOctree>
		<_worldInverse><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_worldInverse>
		<_subdivisions public="1"><x path="Float"/></_subdivisions>
		<subdivisions public="1" set="method" line="39"><f a=""><x path="Float"/></f></subdivisions>
		<optimize public="1" set="method" line="43"><f a="chunksCount">
	<x path="Int"/>
	<x path="Void"/>
</f></optimize>
		<getHeightAtCoordinates public="1" set="method" line="48"><f a="x:z">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getHeightAtCoordinates>
		<new public="1" set="method" line="35"><f a="name:scene">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.GroundMesh"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.InstancedMesh" params="" file="../../com/gamestudiohx/babylonhx/mesh/InstancedMesh.hx">
		<extends path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
		<_sourceMesh><c path="com.gamestudiohx.babylonhx.mesh.Mesh"/></_sourceMesh>
		<refreshBoundingInfo public="1" set="method" line="108"><f a=""><x path="Void"/></f></refreshBoundingInfo>
		<_activate public="1" set="method" line="119" override="1"><f a="renderId">
	<x path="Int"/>
	<x path="Void"/>
</f></_activate>
		<_syncSubMeshes public="1" set="method" line="123"><f a=""><x path="Void"/></f></_syncSubMeshes>
		<_generatePointsArray public="1" set="method" line="135" override="1"><f a=""><x path="Bool"/></f></_generatePointsArray>
		<clone public="1" set="method" line="141" override="1"><f a="name:?newParent:?doNotCloneChildren" v=":null:false">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Node"/>
	<x path="Bool"/>
	<c path="com.gamestudiohx.babylonhx.mesh.InstancedMesh"/>
</f></clone>
		<dispose public="1" set="method" line="178" override="1"><f a="?doNotRecurse" v="false">
	<x path="Bool"/>
	<x path="Void"/>
</f></dispose>
		<new public="1" set="method" line="30"><f a="name:source">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.InstancedMesh"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.InstancesBatch" params="" file="../../com/gamestudiohx/babylonhx/mesh/Mesh.hx" module="com.gamestudiohx.babylonhx.mesh.Mesh">
		<mustReturn public="1"><x path="Bool"/></mustReturn>
		<visibleInstances public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.InstancedMesh"/></c></visibleInstances>
		<renderSelf public="1"><x path="Bool"/></renderSelf>
		<new public="1" set="method" line="37"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.InstancesBatch"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.SubMesh" params="" file="../../com/gamestudiohx/babylonhx/mesh/SubMesh.hx">
		<CreateFromIndices public="1" set="method" line="192" static="1"><f a="materialIndex:startIndex:indexCount:mesh">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
</f></CreateFromIndices>
		<materialIndex public="1"><x path="Int"/></materialIndex>
		<verticesStart public="1"><x path="Int"/></verticesStart>
		<verticesCount public="1"><x path="Int"/></verticesCount>
		<indexStart public="1"><x path="Int"/></indexStart>
		<indexCount public="1"><x path="Int"/></indexCount>
		<_mesh><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></_mesh>
		<_renderingMesh><c path="com.gamestudiohx.babylonhx.mesh.Mesh"/></_renderingMesh>
		<_trianglePlanes public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c></_trianglePlanes>
		<_boundingInfo><c path="com.gamestudiohx.babylonhx.culling.BoundingInfo"/></_boundingInfo>
		<_linesIndexBuffer><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_linesIndexBuffer>
		<_distanceToCamera public="1"><x path="Float"/></_distanceToCamera>
		<linesIndexCount public="1"><x path="Int"/></linesIndexCount>
		<_lastColliderWorldVertices public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></c></_lastColliderWorldVertices>
		<_lastColliderTransformMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></_lastColliderTransformMatrix>
		<_renderId public="1"><x path="Int"/></_renderId>
		<getRenderingMesh public="1" set="method" line="60"><f a=""><c path="com.gamestudiohx.babylonhx.mesh.Mesh"/></f></getRenderingMesh>
		<getBoundingInfo public="1" set="method" line="64"><f a=""><c path="com.gamestudiohx.babylonhx.culling.BoundingInfo"/></f></getBoundingInfo>
		<getMesh public="1" set="method" line="68"><f a=""><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></f></getMesh>
		<getMaterial public="1" set="method" line="72"><f a=""><d/></f></getMaterial>
		<refreshBoundingInfo public="1" get="inline" set="null" line="86"><f a=""><x path="Void"/></f></refreshBoundingInfo>
		<_checkCollision public="1" get="inline" set="null" line="95"><f a="collider">
	<c path="com.gamestudiohx.babylonhx.collisions.Collider"/>
	<x path="Bool"/>
</f></_checkCollision>
		<updateBoundingInfo public="1" get="inline" set="null" line="99"><f a="world:scale">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Float"/>
	<x path="Void"/>
</f></updateBoundingInfo>
		<isInFrustrum public="1" get="inline" set="null" line="103"><f a="frustumPlanes">
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<x path="Bool"/>
</f></isInFrustrum>
		<render public="1" set="method" line="107"><f a=""><x path="Void"/></f></render>
		<getLinesIndexBuffer public="1" get="inline" set="null" line="111"><f a="indices:engine">
	<c path="Array"><x path="Int"/></c>
	<c path="com.gamestudiohx.babylonhx.Engine"/>
	<c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/>
</f></getLinesIndexBuffer>
		<canIntersects public="1" get="inline" set="null" line="133"><f a="ray">
	<c path="com.gamestudiohx.babylonhx.tools.math.Ray"/>
	<x path="Bool"/>
</f></canIntersects>
		<intersects public="1" get="inline" set="null" line="137"><f a="ray:positions:indices:?fastCheck" v=":::false">
	<c path="com.gamestudiohx.babylonhx.tools.math.Ray"/>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></c>
	<c path="Array"><x path="Int"/></c>
	<x path="Bool"/>
	<x path="Float"/>
</f></intersects>
		<clone public="1" set="method" line="173"><f a="newMesh:?newRenderingMesh" v=":null">
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
</f></clone>
		<dispose public="1" set="method" line="181"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="42"><f a="materialIndex:verticesStart:verticesCount:indexStart:indexCount:mesh:?renderingMesh:?createBoundingBox" v="::::::null:false">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.SubMesh"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.VertexBuffer" params="" file="../../com/gamestudiohx/babylonhx/mesh/VertexBuffer.hx">
		<PositionKind public="1" line="18" static="1"><c path="String"/></PositionKind>
		<NormalKind public="1" line="19" static="1"><c path="String"/></NormalKind>
		<UVKind public="1" line="20" static="1"><c path="String"/></UVKind>
		<UV2Kind public="1" line="21" static="1"><c path="String"/></UV2Kind>
		<ColorKind public="1" line="22" static="1"><c path="String"/></ColorKind>
		<MatricesIndicesKind public="1" line="23" static="1"><c path="String"/></MatricesIndicesKind>
		<MatricesWeightsKind public="1" line="24" static="1"><c path="String"/></MatricesWeightsKind>
		<_mesh public="1"><c path="com.gamestudiohx.babylonhx.mesh.Mesh"/></_mesh>
		<_engine public="1"><c path="com.gamestudiohx.babylonhx.Engine"/></_engine>
		<_updatable public="1"><x path="Bool"/></_updatable>
		<_buffer public="1"><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_buffer>
		<_data public="1"><c path="Array"><x path="Float"/></c></_data>
		<_kind public="1"><c path="String"/></_kind>
		<_strideSize public="1"><x path="Int"/></_strideSize>
		<getBuffer public="1" set="method" line="84"><f a=""><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></f></getBuffer>
		<isUpdatable public="1" set="method" line="88"><f a=""><x path="Bool"/></f></isUpdatable>
		<getData public="1" set="method" line="92"><f a=""><c path="Array"><x path="Float"/></c></f></getData>
		<getStrideSize public="1" set="method" line="96"><f a=""><x path="Int"/></f></getStrideSize>
		<create public="1" set="method" line="100"><f a="?data" v="null">
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></create>
		<update public="1" set="method" line="124"><f a="data">
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></update>
		<dispose public="1" set="method" line="133"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="37"><f a="mesh:data:kind:updatable:?postponeInternalCreation" v="::::false">
	<d/>
	<c path="Array"><x path="Float"/></c>
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.VertexBuffer"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.mesh.VertexData" params="" file="../../com/gamestudiohx/babylonhx/mesh/VertexData.hx">
		<ExtractFromMesh set="method" line="287" static="1"><f a="mesh">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></ExtractFromMesh>
		<ExtractFromGeometry set="method" line="291" static="1"><f a="geometry">
	<c path="com.gamestudiohx.babylonhx.mesh.Geometry"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></ExtractFromGeometry>
		<_ExtractFrom set="method" line="295" static="1"><f a="meshOrGeometry">
	<c path="com.gamestudiohx.babylonhx.mesh.IGetSetVerticesData"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></_ExtractFrom>
		<CreateBox public="1" set="method" line="331" static="1"><f a="?size" v="1">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></CreateBox>
		<CreateSphere public="1" set="method" line="415" static="1"><f a="?segments:?diameter" v="32:1">
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></CreateSphere>
		<CreateCylinder public="1" set="method" line="490" static="1"><f a="?height:?diameterTop:?diameterBottom:?tessellation:?subdivisions" v="1:0.5f:1:16:1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></CreateCylinder>
		<CreateTorus public="1" set="method" line="637" static="1"><f a="?diameter:?thickness:?tessellation" v="1:0.5f:16">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></CreateTorus>
		<CreateGround public="1" set="method" line="710" static="1"><f a="?width:?height:?subdivisions" v="1:1:1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></CreateGround>
		<CreatePlane public="1" set="method" line="850" static="1"><f a="?size" v="1">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></CreatePlane>
		<CreateTorusKnot public="1" set="method" line="918" static="1"><f a="?radius:?tube:?radialSegments:?tubularSegments:?p:?q" v="2:0.5f:32:32:2:3">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></CreateTorusKnot>
		<ComputeNormals public="1" set="method" line="1018" static="1"><f a="positions:indices:normals">
	<c path="Array"><x path="Float"/></c>
	<c path="Array"><x path="Int"/></c>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></ComputeNormals>
		<positions public="1"><c path="Array"><x path="Float"/></c></positions>
		<normals public="1"><c path="Array"><x path="Float"/></c></normals>
		<uvs public="1"><c path="Array"><x path="Float"/></c></uvs>
		<uv2s public="1"><c path="Array"><x path="Float"/></c></uv2s>
		<colors public="1"><c path="Array"><x path="Float"/></c></colors>
		<matricesIndices public="1"><c path="Array"><x path="Float"/></c></matricesIndices>
		<matricesWeights public="1"><c path="Array"><x path="Float"/></c></matricesWeights>
		<indices public="1"><c path="Array"><x path="Int"/></c></indices>
		<set public="1" set="method" line="49"><f a="data:kind">
	<c path="Array"><x path="Float"/></c>
	<c path="String"/>
	<x path="Void"/>
</f></set>
		<applyToMesh public="1" set="method" line="68"><f a="mesh:?updatable" v=":null">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></applyToMesh>
		<applyToGeometry public="1" set="method" line="72"><f a="geometry:?updatable" v=":null">
	<c path="com.gamestudiohx.babylonhx.mesh.Geometry"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></applyToGeometry>
		<updateMesh public="1" set="method" line="76"><f a="mesh:?updateExtends:?makeItUnique" v=":null:null">
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></updateMesh>
		<updateGeometry public="1" set="method" line="80"><f a="geometry:?updateExtends:?makeItUnique" v=":null:null">
	<c path="com.gamestudiohx.babylonhx.mesh.Geometry"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></updateGeometry>
		<_applyTo set="method" line="84"><f a="meshOrGeometry:?updatable" v=":null">
	<c path="com.gamestudiohx.babylonhx.mesh.IGetSetVerticesData"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></_applyTo>
		<_update set="method" line="111"><f a="meshOrGeometry:?updateExtends:?makeItUnique" v=":null:null">
	<c path="com.gamestudiohx.babylonhx.mesh.IGetSetVerticesData"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></_update>
		<transform public="1" set="method" line="145"><f a="matrix">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></transform>
		<merge public="1" set="method" line="179"><f a="other">
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
	<x path="Void"/>
</f></merge>
		<CreateGroundFromHeightMap public="1" set="method" line="773"><f a="width:height:subdivisions:minHeight:maxHeight:buffer:bufferWidth:bufferHeight">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<t path="openfl.utils.UInt8Array"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.mesh.VertexData"/>
</f></CreateGroundFromHeightMap>
		<new public="1" set="method" line="45"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.VertexData"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.particles.Particle" params="" file="../../com/gamestudiohx/babylonhx/particles/Particle.hx">
		<lifeTime public="1"><x path="Float"/></lifeTime>
		<age public="1"><x path="Float"/></age>
		<size public="1"><x path="Float"/></size>
		<angle public="1"><x path="Float"/></angle>
		<angularSpeed public="1"><x path="Float"/></angularSpeed>
		<position public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></position>
		<direction public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></direction>
		<color public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></color>
		<colorStep public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></colorStep>
		<new public="1" set="method" line="27"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Particle"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.particles.ParticleSystem" params="" file="../../com/gamestudiohx/babylonhx/particles/ParticleSystem.hx">
		<BLENDMODE_ONEONE public="1" line="26" static="1"><x path="Int"/></BLENDMODE_ONEONE>
		<BLENDMODE_STANDARD public="1" line="27" static="1"><x path="Int"/></BLENDMODE_STANDARD>
		<name public="1"><c path="String"/></name>
		<id public="1"><c path="String"/></id>
		<_capacity public="1"><x path="Int"/></_capacity>
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_effect public="1"><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_effect>
		<gravity public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></gravity>
		<direction1 public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></direction1>
		<direction2 public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></direction2>
		<minEmitBox public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></minEmitBox>
		<maxEmitBox public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></maxEmitBox>
		<color1 public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></color1>
		<color2 public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></color2>
		<colorDead public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></colorDead>
		<textureMask public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></textureMask>
		<particles public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.particles.Particle"/></c></particles>
		<_stockParticles public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.particles.Particle"/></c></_stockParticles>
		<_newPartsExcess public="1"><x path="Float"/></_newPartsExcess>
		<_alive><x path="Bool"/></_alive>
		<_started><x path="Bool"/></_started>
		<_stopped><x path="Bool"/></_stopped>
		<_actualFrame><x path="Float"/></_actualFrame>
		<_vertexDeclaration public="1"><c path="Array"><x path="Int"/></c></_vertexDeclaration>
		<_vertexStrideSize public="1"><x path="Int"/></_vertexStrideSize>
		<_vertexBuffer public="1"><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_vertexBuffer>
		<_indexBuffer public="1"><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_indexBuffer>
		<_vertices public="1"><t path="openfl.utils.Float32Array"/></_vertices>
		<_cachedDefines public="1"><c path="String"/></_cachedDefines>
		<_scaledUpdateSpeed public="1"><x path="Float"/></_scaledUpdateSpeed>
		<_scaledColorStep public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></_scaledColorStep>
		<_colorDiff public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></_colorDiff>
		<_scaledDirection public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_scaledDirection>
		<_scaledGravity public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_scaledGravity>
		<_currentRenderId public="1"><x path="Int"/></_currentRenderId>
		<renderingGroupId public="1"><x path="Int"/></renderingGroupId>
		<emitter public="1"><d/></emitter>
		<emitRate public="1"><x path="Int"/></emitRate>
		<manualEmitCount public="1"><x path="Int"/></manualEmitCount>
		<updateSpeed public="1"><x path="Float"/></updateSpeed>
		<targetStopDuration public="1"><x path="Float"/></targetStopDuration>
		<disposeOnStop public="1"><x path="Bool"/></disposeOnStop>
		<emitterId public="1" get="accessor" set="null"><d/></emitterId>
		<get_emitterId set="method" line="86"><f a=""><d/></f></get_emitterId>
		<minEmitPower public="1"><x path="Float"/></minEmitPower>
		<maxEmitPower public="1"><x path="Float"/></maxEmitPower>
		<minLifeTime public="1"><x path="Float"/></minLifeTime>
		<maxLifeTime public="1"><x path="Float"/></maxLifeTime>
		<minSize public="1"><x path="Float"/></minSize>
		<maxSize public="1"><x path="Float"/></maxSize>
		<minAngularSpeed public="1"><x path="Float"/></minAngularSpeed>
		<maxAngularSpeed public="1"><x path="Float"/></maxAngularSpeed>
		<particleTexture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></particleTexture>
		<onDispose public="1"><f a=""><x path="Void"/></f></onDispose>
		<blendMode public="1"><x path="Int"/></blendMode>
		<_engine><c path="com.gamestudiohx.babylonhx.Engine"/></_engine>
		<isAlive public="1" set="method" line="199"><f a=""><x path="Bool"/></f></isAlive>
		<start public="1" set="method" line="203"><f a=""><x path="Void"/></f></start>
		<stop public="1" set="method" line="209"><f a=""><x path="Void"/></f></stop>
		<_appendParticleVertex public="1" get="inline" set="null" line="213"><f a="index:particle:offsetX:offsetY">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.particles.Particle"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></_appendParticleVertex>
		<getParent public="1" set="method" line="228"><f a="id">
	<c path="String"/>
	<d/>
</f></getParent>
		<_update public="1" get="inline" set="null" line="237"><f a="newParticles">
	<x path="Int"/>
	<x path="Void"/>
</f></_update>
		<_getEffect public="1" set="method" line="336"><f a=""><c path="com.gamestudiohx.babylonhx.materials.Effect"/></f></_getEffect>
		<animate public="1" set="method" line="353"><f a=""><x path="Void"/></f></animate>
		<render public="1" set="method" line="424"><f a=""><x path="Int"/></f></render>
		<dispose public="1" set="method" line="462"><f a=""><x path="Void"/></f></dispose>
		<clone public="1" set="method" line="489"><f a="name:newEmitter">
	<c path="String"/>
	<d/>
	<c path="com.gamestudiohx.babylonhx.particles.ParticleSystem"/>
</f></clone>
		<new public="1" set="method" line="113"><f a="name:capacity:scene">
	<c path="String"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.ParticleSystem"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.postprocess.PostProcess" params="" file="../../com/gamestudiohx/babylonhx/postprocess/PostProcess.hx">
		<name public="1"><c path="String"/></name>
		<_camera public="1"><c path="com.gamestudiohx.babylonhx.cameras.Camera"/></_camera>
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_engine public="1"><c path="com.gamestudiohx.babylonhx.Engine"/></_engine>
		<_renderRatio public="1"><x path="Float"/></_renderRatio>
		<width public="1"><x path="Float"/></width>
		<height public="1"><x path="Float"/></height>
		<renderTargetSamplingMode public="1"><x path="Int"/></renderTargetSamplingMode>
		<_effect public="1"><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_effect>
		<_textures public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_textures>
		<_currentRenderTextureInd public="1"><x path="Int"/></_currentRenderTextureInd>
		<_reusable public="1"><x path="Bool"/></_reusable>
		<samplers public="1"><c path="Array"><c path="String"/></c></samplers>
		<onApply public="1"><f a="">
	<c path="com.gamestudiohx.babylonhx.materials.Effect"/>
	<x path="Void"/>
</f></onApply>
		<_onDispose public="1"><f a=""><x path="Void"/></f></_onDispose>
		<onSizeChanged public="1"><f a=""><x path="Void"/></f></onSizeChanged>
		<activate public="1" set="method" line="63"><f a="?camera" v="null">
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Void"/>
</f></activate>
		<apply public="1" set="method" line="101"><f a=""><c path="com.gamestudiohx.babylonhx.materials.Effect"/></f></apply>
		<dispose public="1" set="method" line="124"><f a="?camera" v="null">
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Void"/>
</f></dispose>
		<new public="1" set="method" line="38"><f a="name:fragmentUrl:?parameters:?samplers:ratio:?camera:?samplingMode:?engine:?reusable" v="::null:null::null:1:null:false">
	<c path="String"/>
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><c path="String"/></c>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.Engine"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.PostProcess"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.postprocess.BlackAndWhitePostProcess" params="" file="../../com/gamestudiohx/babylonhx/postprocess/BlackAndWhitePostProcess.hx">
		<extends path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
		<new public="1" set="method" line="14"><f a="name:ratio:camera:samplingMode">
	<c path="String"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.BlackAndWhitePostProcess"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.postprocess.BlurPostProcess" params="" file="../../com/gamestudiohx/babylonhx/postprocess/BlurPostProcess.hx">
		<extends path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
		<direction public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/></direction>
		<blurWidth public="1"><x path="Float"/></blurWidth>
		<new public="1" set="method" line="21"><f a="name:direction:blurWidth:ratio:camera:?samplingMode" v=":::::-1">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.BlurPostProcess"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.postprocess.ConvolutionPostProcess" params="" file="../../com/gamestudiohx/babylonhx/postprocess/ConvolutionPostProcess.hx">
		<extends path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
		<kernelMatrix public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></kernelMatrix>
		<new public="1" set="method" line="20"><f a="name:kernelMatrix:ratio:camera:?samplingMode" v="::::1">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.ConvolutionPostProcess"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.postprocess.FxaaPostProcess" params="" file="../../com/gamestudiohx/babylonhx/postprocess/FxaaPostProcess.hx">
		<extends path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
		<texelWidth public="1"><x path="Float"/></texelWidth>
		<texelHeight public="1"><x path="Float"/></texelHeight>
		<new public="1" set="method" line="18"><f a="name:ratio:camera:?samplingMode" v=":::1">
	<c path="String"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.FxaaPostProcess"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.postprocess.PassPostProcess" params="" file="../../com/gamestudiohx/babylonhx/postprocess/PassPostProcess.hx">
		<extends path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
		<new public="1" set="method" line="13"><f a="name:ratio:camera:?samplingMode" v=":::1">
	<c path="String"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.PassPostProcess"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.postprocess.PostProcessManager" params="" file="../../com/gamestudiohx/babylonhx/postprocess/PostProcessManager.hx">
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_vertexDeclaration public="1"><c path="Array"><x path="Int"/></c></_vertexDeclaration>
		<_vertexStrideSize public="1"><x path="Int"/></_vertexStrideSize>
		<_vertexBuffer public="1"><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_vertexBuffer>
		<_indexBuffer public="1"><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_indexBuffer>
		<_prepareFrame public="1" set="method" line="36"><f a=""><x path="Void"/></f></_prepareFrame>
		<_finalizeFrame public="1" set="method" line="48"><f a=""><x path="Void"/></f></_finalizeFrame>
		<dispose public="1" set="method" line="80"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="22"><f a="scene">
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.PostProcessManager"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.postprocess.RefractionPostProcess" params="" file="../../com/gamestudiohx/babylonhx/postprocess/RefractionPostProcess.hx">
		<extends path="com.gamestudiohx.babylonhx.postprocess.PostProcess"/>
		<color public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></color>
		<depth public="1"><x path="Float"/></depth>
		<colorLevel public="1"><x path="Float"/></colorLevel>
		<_refTexture public="1"><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></_refTexture>
		<new public="1" set="method" line="22"><f a="name:refractionTextureUrl:color:depth:colorLevel:ratio:camera:?samplingMode" v=":::::::1">
	<c path="String"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.cameras.Camera"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.RefractionPostProcess"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.rendering.BoundingBoxRenderer" params="" file="../../com/gamestudiohx/babylonhx/rendering/BoundingBoxRenderer.hx">
		<frontColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></frontColor>
		<backColor public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></backColor>
		<showBackLines public="1"><x path="Bool"/></showBackLines>
		<renderList public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></renderList>
		<_scene><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_colorShader><c path="com.gamestudiohx.babylonhx.materials.ShaderMaterial"/></_colorShader>
		<_vb><c path="com.gamestudiohx.babylonhx.mesh.VertexBuffer"/></_vb>
		<_ib><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_ib>
		<reset public="1" set="method" line="52"><f a=""><x path="Void"/></f></reset>
		<render public="1" set="method" line="56"><f a=""><x path="Void"/></f></render>
		<dispose public="1" set="method" line="108"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="37"><f a="scene">
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.BoundingBoxRenderer"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.rendering.RenderingGroup" params="" file="../../com/gamestudiohx/babylonhx/rendering/RenderingGroup.hx">
		<index public="1"><x path="Int"/></index>
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_opaqueSubMeshes><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_opaqueSubMeshes>
		<_transparentSubMeshes public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_transparentSubMeshes>
		<_alphaTestSubMeshes public="1"><c path="com.gamestudiohx.babylonhx.tools.SmartArray"/></_alphaTestSubMeshes>
		<_activeVertices public="1"><x path="Int"/></_activeVertices>
		<render public="1" set="method" line="39"><f a="?customRenderFunction:?beforeTransparents" v="null:null">
	<f a=":::">
		<c path="com.gamestudiohx.babylonhx.tools.SmartArray"/>
		<c path="com.gamestudiohx.babylonhx.tools.SmartArray"/>
		<c path="com.gamestudiohx.babylonhx.tools.SmartArray"/>
		<d/>
		<x path="Void"/>
	</f>
	<d/>
	<x path="Bool"/>
</f></render>
		<prepare public="1" set="method" line="108"><f a=""><x path="Void"/></f></prepare>
		<dispatch public="1" set="method" line="114"><f a="subMesh">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="28"><f a="index:scene">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.RenderingGroup"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.rendering.RenderingManager" params="" file="../../com/gamestudiohx/babylonhx/rendering/RenderingManager.hx">
		<MAX_RENDERINGGROUPS public="1" line="21" static="1"><x path="Int"/></MAX_RENDERINGGROUPS>
		<_scene public="1"><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_renderingGroups public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.rendering.RenderingGroup"/></c></_renderingGroups>
		<_depthBufferAlreadyCleaned public="1"><x path="Bool"/></_depthBufferAlreadyCleaned>
		<_renderParticles public="1" get="inline" set="null" line="34"><f a="index:activeMeshes">
	<x path="Int"/>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c>
	<x path="Void"/>
</f></_renderParticles>
		<_renderSprites public="1" set="method" line="54"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></_renderSprites>
		<_clearDepthBuffer public="1" set="method" line="72"><f a=""><x path="Void"/></f></_clearDepthBuffer>
		<render public="1" get="inline" set="null" line="81"><f a="customRenderFunction:activeMeshes:renderParticles:renderSprites">
	<f a=":::">
		<c path="com.gamestudiohx.babylonhx.tools.SmartArray"/>
		<c path="com.gamestudiohx.babylonhx.tools.SmartArray"/>
		<c path="com.gamestudiohx.babylonhx.tools.SmartArray"/>
		<d/>
		<x path="Bool"/>
	</f>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.mesh.AbstractMesh"/></c>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></render>
		<reset public="1" set="method" line="109"><f a=""><x path="Void"/></f></reset>
		<dispatch public="1" get="inline" set="null" line="115"><f a="subMesh">
	<c path="com.gamestudiohx.babylonhx.mesh.SubMesh"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="27"><f a="scene">
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.RenderingManager"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.sprites.Sprite" params="" file="../../com/gamestudiohx/babylonhx/sprites/Sprite.hx">
		<name public="1"><c path="String"/></name>
		<color public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></color>
		<position public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></position>
		<size public="1"><x path="Float"/></size>
		<angle public="1"><x path="Float"/></angle>
		<cellIndex public="1"><x path="Float"/></cellIndex>
		<invertU public="1"><x path="Bool"/></invertU>
		<invertV public="1"><x path="Bool"/></invertV>
		<disposeWhenFinishedAnimating public="1"><x path="Bool"/></disposeWhenFinishedAnimating>
		<_manager><c path="com.gamestudiohx.babylonhx.sprites.SpriteManager"/></_manager>
		<_animationStarted><x path="Bool"/></_animationStarted>
		<_loopAnimation><x path="Bool"/></_loopAnimation>
		<_fromIndex><x path="Float"/></_fromIndex>
		<_toIndex><x path="Float"/></_toIndex>
		<_delay><x path="Float"/></_delay>
		<_direction><x path="Int"/></_direction>
		<_time><x path="Float"/></_time>
		<_frameCount><x path="Int"/></_frameCount>
		<playAnimation public="1" set="method" line="51"><f a="from:to:loop:delay">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Float"/>
	<x path="Void"/>
</f></playAnimation>
		<stopAnimation public="1" set="method" line="64"><f a=""><x path="Void"/></f></stopAnimation>
		<animate public="1" set="method" line="68"><f a="deltaTime">
	<x path="Float"/>
	<x path="Void"/>
</f></animate>
		<dispose public="1" set="method" line="88"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="37"><f a="name:manager">
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.sprites.SpriteManager"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Sprite"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.sprites.SpriteManager" params="" file="../../com/gamestudiohx/babylonhx/sprites/SpriteManager.hx">
		<name public="1"><c path="String"/></name>
		<cellSize public="1"><x path="Int"/></cellSize>
		<index public="1"><x path="Int"/></index>
		<sprites public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.sprites.Sprite"/></c></sprites>
		<renderingGroupId public="1"><x path="Int"/></renderingGroupId>
		<_scene><c path="com.gamestudiohx.babylonhx.Scene"/></_scene>
		<_vertexDeclaration><c path="Array"><x path="Int"/></c></_vertexDeclaration>
		<_vertexStrideSize><x path="Int"/></_vertexStrideSize>
		<_epsilon><x path="Float"/></_epsilon>
		<_spriteTexture><c path="com.gamestudiohx.babylonhx.materials.textures.Texture"/></_spriteTexture>
		<_vertexBuffer><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_vertexBuffer>
		<_vertices><c path="Array"><x path="Float"/></c></_vertices>
		<_indexBuffer><c path="com.gamestudiohx.babylonhx.mesh.BabylonGLBuffer"/></_indexBuffer>
		<_effectBase><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_effectBase>
		<_effectFog public="1"><c path="com.gamestudiohx.babylonhx.materials.Effect"/></_effectFog>
		<_capacity public="1"><x path="Int"/></_capacity>
		<onDispose public="1" set="method" line="84"><f a=""><x path="Void"/></f></onDispose>
		<render public="1" set="method" line="88"><f a=""><x path="Int"/></f></render>
		<dispose public="1" set="method" line="155"><f a=""><x path="Void"/></f></dispose>
		<_appendSpriteVertex set="method" line="182"><f a="index:sprite:offsetX:offsetY:rowSize">
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.sprites.Sprite"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></_appendSpriteVertex>
		<new public="1" set="method" line="43"><f a="name:imgUrl:capacity:cellSize:scene:?epsilon" v=":::::0.01f">
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.SpriteManager"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.SceneLoader" params="" file="../../com/gamestudiohx/babylonhx/tools/SceneLoader.hx">
		<loadCubeTexture public="1" set="method" line="47" static="1"><f a="rootUrl:parsedTexture:scene">
	<c path="String"/>
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="com.gamestudiohx.babylonhx.materials.textures.CubeTexture"/>
</f></loadCubeTexture>
		<loadTexture public="1" set="method" line="58" static="1"><f a="rootUrl:parsedTexture:scene">
	<c path="String"/>
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<d/>
</f></loadTexture>
		<parseSkeleton public="1" set="method" line="109" static="1"><f a="parsedSkeleton:scene">
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="com.gamestudiohx.babylonhx.bones.Skeleton"/>
</f></parseSkeleton>
		<parseMaterial public="1" set="method" line="130" static="1"><f a="parsedMaterial:scene:rootUrl">
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.Material"/>
</f></parseMaterial>
		<parseMaterialById public="1" set="method" line="177" static="1"><f a="id:parsedData:scene:rootUrl">
	<c path="String"/>
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.materials.Material"/>
</f></parseMaterialById>
		<parseMultiMaterial public="1" set="method" line="187" static="1"><f a="parsedMultiMaterial:scene">
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="com.gamestudiohx.babylonhx.materials.MultiMaterial"/>
</f></parseMultiMaterial>
		<parseLensFlareSystem public="1" set="method" line="204" static="1"><f a="parsedLensFlareSystem:scene:rootUrl">
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.lensflare.LensFlareSystem"/>
</f></parseLensFlareSystem>
		<parseParticleSystem public="1" set="method" line="218" static="1"><f a="parsedParticleSystem:scene:rootUrl">
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.particles.ParticleSystem"/>
</f></parseParticleSystem>
		<parseShadowGenerator public="1" set="method" line="253" static="1"><f a="parsedShadowGenerator:scene">
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="com.gamestudiohx.babylonhx.lights.shadows.ShadowGenerator"/>
</f></parseShadowGenerator>
		<parseAnimation public="1" set="method" line="269" static="1"><f a="parsedAnimation">
	<d/>
	<c path="com.gamestudiohx.babylonhx.animations.Animation"/>
</f></parseAnimation>
		<parseLight public="1" set="method" line="307" static="1"><f a="parsedLight:scene">
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="com.gamestudiohx.babylonhx.lights.Light"/>
</f></parseLight>
		<parseCamera public="1" set="method" line="339" static="1"><f a="parsedCamera:scene">
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="com.gamestudiohx.babylonhx.cameras.FreeCamera"/>
</f></parseCamera>
		<parseMesh public="1" set="method" line="388" static="1"><f a="parsedMesh:scene:rootUrl">
	<d/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
</f></parseMesh>
		<isDescendantOf public="1" set="method" line="498" static="1"><f a="mesh:name:hierarchyIds">
	<d/>
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
	<x path="Bool"/>
</f></isDescendantOf>
		<_ImportGeometry public="1" set="method" line="512" static="1"><f a="parsedGeometry:mesh">
	<d/>
	<c path="com.gamestudiohx.babylonhx.mesh.Mesh"/>
	<x path="Void"/>
</f></_ImportGeometry>
		<ImportMesh public="1" set="method" line="577" static="1"><f a="?meshName:?rootUrl:?sceneFilename:?scene:?then:?progressCallBack" v="null:null:null:null:null:null">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Scene"/>
	<f a="::">
		<c path="Array"><d/></c>
		<c path="Array"><d/></c>
		<c path="Array"><d/></c>
		<x path="Void"/>
	</f>
	<f a="">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></ImportMesh>
		<Load public="1" set="method" line="662" static="1"><f a="rootUrl:sceneFilename:engine:?then" v=":::null">
	<c path="String"/>
	<c path="String"/>
	<c path="com.gamestudiohx.babylonhx.Engine"/>
	<f a="">
		<c path="com.gamestudiohx.babylonhx.Scene"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></Load>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.SceneLoader"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.SmartArray" params="" file="../../com/gamestudiohx/babylonhx/tools/SmartArray.hx">
		<data public="1"><c path="Array"><d/></c></data>
		<length public="1"><x path="Int"/></length>
		<push public="1" set="method" line="21"><f a="value">
	<d/>
	<x path="Void"/>
</f></push>
		<pushNoDuplicate public="1" set="method" line="29"><f a="value">
	<d/>
	<x path="Void"/>
</f></pushNoDuplicate>
		<sort public="1" set="method" line="35"><f a="compareFn">
	<f a=":">
		<d/>
		<d/>
		<x path="Int"/>
	</f>
	<x path="Void"/>
</f></sort>
		<reset public="1" set="method" line="39"><f a=""><x path="Void"/></f></reset>
		<concat public="1" set="method" line="44"><f a="array">
	<d/>
	<x path="Void"/>
</f></concat>
		<concatWithNoDuplicate public="1" set="method" line="56"><f a="array">
	<d/>
	<x path="Void"/>
</f></concatWithNoDuplicate>
		<indexOf public="1" set="method" line="74"><f a="value">
	<d/>
	<x path="Int"/>
</f></indexOf>
		<new public="1" set="method" line="16"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.SmartArray"</e></m></meta>
	</class>
	<typedef path="com.gamestudiohx.babylonhx.tools.BabylonMinMax" params="" file="../../com/gamestudiohx/babylonhx/tools/Tools.hx" module="com.gamestudiohx.babylonhx.tools.Tools"><a>
	<minimum><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></minimum>
	<maximum><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></maximum>
</a></typedef>
	<class path="com.gamestudiohx.babylonhx.tools.IAnimatable" params="" file="../../com/gamestudiohx/babylonhx/tools/Tools.hx" module="com.gamestudiohx.babylonhx.tools.Tools" interface="1"><animations public="1"><c path="Array"><c path="com.gamestudiohx.babylonhx.animations.Animation"/></c></animations></class>
	<enum path="com.gamestudiohx.babylonhx.tools.Space" params="" file="../../com/gamestudiohx/babylonhx/tools/Tools.hx" module="com.gamestudiohx.babylonhx.tools.Tools">
		<LOCAL/>
		<WORLD/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="com.gamestudiohx.babylonhx.tools.math.Vector3" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Vector3.hx">
		<Center public="1" set="method" line="54" static="1"><f a="value1:value2">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Center>
		<FromArray public="1" get="inline" set="null" line="198" static="1"><f a="array:?offset" v=":0">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></FromArray>
		<FromArrayToRef public="1" get="inline" set="null" line="202" static="1"><f a="array:?offset:result" v=":0:">
	<t path="openfl.utils.Float32Array"/>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></FromArrayToRef>
		<FromFloatsToRef public="1" get="inline" set="null" line="208" static="1"><f a="x:y:z:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></FromFloatsToRef>
		<Zero public="1" set="method" line="214" static="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></Zero>
		<Up public="1" set="method" line="218" static="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></Up>
		<TransformCoordinates public="1" get="inline" set="null" line="222" static="1"><f a="vector:transformation">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></TransformCoordinates>
		<TransformCoordinatesToRef public="1" get="inline" set="null" line="230" static="1"><f a="vector:transformation:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></TransformCoordinatesToRef>
		<TransformCoordinatesFromFloatsToRef public="1" get="inline" set="null" line="241" static="1"><f a="x:y:z:transformation:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></TransformCoordinatesFromFloatsToRef>
		<TransformNormal public="1" get="inline" set="null" line="254" static="1"><f a="vector:transformation">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></TransformNormal>
		<TransformNormalToRef public="1" get="inline" set="null" line="262" static="1"><f a="vector:transformation:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></TransformNormalToRef>
		<TransformNormalFromFloatsToRef public="1" get="inline" set="null" line="268" static="1"><f a="x:y:z:transformation:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></TransformNormalFromFloatsToRef>
		<CatmullRom public="1" get="inline" set="null" line="275" static="1"><f a="value1:value2:value3:value4:amount">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></CatmullRom>
		<Clamp public="1" get="inline" set="null" line="288" static="1"><f a="value:min:max">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Clamp>
		<Hermite public="1" get="inline" set="null" line="304" static="1"><f a="value1:tangent1:value2:tangent2:amount">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Hermite>
		<Lerp public="1" get="inline" set="null" line="319" static="1"><f a="start:end:amount">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Lerp>
		<Dot public="1" get="inline" set="null" line="327" static="1"><f a="left:right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
</f></Dot>
		<Cross public="1" get="inline" set="null" line="331" static="1"><f a="left:right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Cross>
		<CrossToRef public="1" get="inline" set="null" line="337" static="1"><f a="left:right:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></CrossToRef>
		<Normalize public="1" get="inline" set="null" line="343" static="1"><f a="vector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Normalize>
		<NormalizeToRef public="1" get="inline" set="null" line="349" static="1"><f a="vector:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></NormalizeToRef>
		<Project public="1" get="inline" set="null" line="354" static="1"><f a="vector:world:transform:viewport">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Viewport"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Project>
		<Unproject public="1" get="inline" set="null" line="367" static="1"><f a="source:viewportWidth:viewportHeight:world:view:projection">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Unproject>
		<Minimize public="1" get="inline" set="null" line="382" static="1"><f a="left:right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Minimize>
		<Maximize public="1" get="inline" set="null" line="389" static="1"><f a="left:right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></Maximize>
		<Distance public="1" get="inline" set="null" line="396" static="1"><f a="value1:value2">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
</f></Distance>
		<DistanceSquared public="1" get="inline" set="null" line="400" static="1"><f a="value1:value2">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
</f></DistanceSquared>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<z public="1"><x path="Float"/></z>
		<toString public="1" set="method" line="25"><f a=""><c path="String"/></f></toString>
		<asArray public="1" get="inline" set="null" line="29"><f a=""><c path="Array"><x path="Float"/></c></f></asArray>
		<toArray public="1" get="inline" set="null" line="35"><f a="array:?index" v=":0">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></toArray>
		<MinimizeInPlace public="1" set="method" line="42"><f a="other">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></MinimizeInPlace>
		<MaximizeInPlace public="1" set="method" line="48"><f a="other">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></MaximizeInPlace>
		<addInPlace public="1" get="inline" set="null" line="60"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></addInPlace>
		<add public="1" get="inline" set="null" line="66"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></add>
		<addToRef public="1" get="inline" set="null" line="70"><f a="otherVector:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></addToRef>
		<subtractInPlace public="1" get="inline" set="null" line="77"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></subtractInPlace>
		<subtract public="1" get="inline" set="null" line="83"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></subtract>
		<subtractToRef public="1" get="inline" set="null" line="87"><f a="otherVector:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></subtractToRef>
		<subtractFromFloats public="1" get="inline" set="null" line="93"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></subtractFromFloats>
		<subtractFromFloatsToRef public="1" get="inline" set="null" line="97"><f a="x:y:z:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></subtractFromFloatsToRef>
		<negate public="1" get="inline" set="null" line="103"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></negate>
		<scaleInPlace public="1" get="inline" set="null" line="107"><f a="scale">
	<x path="Float"/>
	<x path="Void"/>
</f></scaleInPlace>
		<scale public="1" get="inline" set="null" line="113"><f a="scale">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></scale>
		<scaleToRef public="1" get="inline" set="null" line="117"><f a="scale:result">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></scaleToRef>
		<equals public="1" get="inline" set="null" line="123"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Bool"/>
</f></equals>
		<equalsToFloats public="1" get="inline" set="null" line="127"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></equalsToFloats>
		<multiplyInPlace public="1" get="inline" set="null" line="131"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></multiplyInPlace>
		<multiply public="1" get="inline" set="null" line="137"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></multiply>
		<multiplyToRef public="1" get="inline" set="null" line="141"><f a="otherVector:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></multiplyToRef>
		<multiplyByFloats public="1" get="inline" set="null" line="147"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></multiplyByFloats>
		<divide public="1" get="inline" set="null" line="151"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
</f></divide>
		<divideToRef public="1" get="inline" set="null" line="155"><f a="otherVector:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></divideToRef>
		<length public="1" get="inline" set="null" line="161"><f a=""><x path="Float"/></f></length>
		<lengthSquared public="1" get="inline" set="null" line="165"><f a=""><x path="Float"/></f></lengthSquared>
		<normalize public="1" get="inline" set="null" line="169"><f a=""><x path="Void"/></f></normalize>
		<clone public="1" get="inline" set="null" line="181"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></clone>
		<copyFrom public="1" get="inline" set="null" line="185"><f a="source">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></copyFrom>
		<copyFromFloats public="1" get="inline" set="null" line="191"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></copyFromFloats>
		<new public="1" set="method" line="19"><f a="initialX:initialY:initialZ">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Vector3"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.Axis" params="" file="../../com/gamestudiohx/babylonhx/tools/Tools.hx" module="com.gamestudiohx.babylonhx.tools.Tools">
		<X public="1" line="34" static="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></X>
		<Y public="1" line="35" static="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></Y>
		<Z public="1" line="36" static="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></Z>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.Tools" params="" file="../../com/gamestudiohx/babylonhx/tools/Tools.hx">
		<isDebug public="1" line="48" static="1"><x path="Bool"/></isDebug>
		<timer public="1" static="1"><c path="openfl.utils.Timer"/></timer>
		<ExtractMinAndMax public="1" get="inline" set="null" line="51" static="1"><f a="positions:start:count">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<t path="com.gamestudiohx.babylonhx.tools.BabylonMinMax"/>
</f></ExtractMinAndMax>
		<randomNumber public="1" get="inline" set="null" line="67" static="1"><f a="min:max">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
</f></randomNumber>
		<WithinEpsilon public="1" get="inline" set="null" line="78" static="1"><f a="a:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></WithinEpsilon>
		<LoadFile public="1" set="method" line="83" static="1"><f a="url:?callbackFn:?progressCallBack:?database:?useArrayBuffer" v=":null:null:null:false">
	<c path="String"/>
	<f a="">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<d/>
	<d/>
	<x path="Bool"/>
	<x path="Void"/>
</f></LoadFile>
		<LoadImage public="1" set="method" line="142" static="1"><f a="url:onload">
	<c path="String"/>
	<f a="">
		<c path="openfl.display.BitmapData"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></LoadImage>
		<DeepCopy public="1" set="method" line="154" static="1"><f a="source:destination:?doNotCopyList:?mustCopyList" v="::null:null">
	<d/>
	<d/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></DeepCopy>
		<fpsRange public="1" line="206" static="1"><x path="Float"/></fpsRange>
		<previousFramesDuration public="1" line="207" static="1"><c path="Array"><x path="Float"/></c></previousFramesDuration>
		<fps public="1" line="208" static="1"><x path="Float"/></fps>
		<deltaTime public="1" line="209" static="1"><x path="Float"/></deltaTime>
		<GetFps public="1" set="method" line="211" static="1"><f a=""><x path="Float"/></f></GetFps>
		<GetDeltaTime public="1" set="method" line="215" static="1"><f a=""><x path="Float"/></f></GetDeltaTime>
		<_MeasureFps public="1" get="inline" set="null" line="219" static="1"><f a=""><x path="Void"/></f></_MeasureFps>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Tools"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.math.Color3" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Color3.hx">
		<FromArray public="1" get="inline" set="null" line="79" static="1"><f a="array">
	<c path="Array"><x path="Float"/></c>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
</f></FromArray>
		<r public="1"><x path="Float"/></r>
		<g public="1"><x path="Float"/></g>
		<b public="1"><x path="Float"/></b>
		<equals public="1" get="inline" set="null" line="22"><f a="otherColor">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<x path="Bool"/>
</f></equals>
		<toString public="1" set="method" line="26"><f a=""><c path="String"/></f></toString>
		<clone public="1" get="inline" set="null" line="30"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Color3"/></f></clone>
		<asArray public="1" get="inline" set="null" line="34"><f a=""><c path="Array"><x path="Float"/></c></f></asArray>
		<toArray public="1" get="inline" set="null" line="40"><f a="array:?index" v=":0">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></toArray>
		<multiply public="1" get="inline" set="null" line="46"><f a="otherColor">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
</f></multiply>
		<multiplyToRef public="1" get="inline" set="null" line="50"><f a="otherColor:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<x path="Void"/>
</f></multiplyToRef>
		<scale public="1" get="inline" set="null" line="56"><f a="scale">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
</f></scale>
		<scaleToRef public="1" get="inline" set="null" line="60"><f a="scale:result">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<x path="Void"/>
</f></scaleToRef>
		<copyFrom public="1" get="inline" set="null" line="66"><f a="source">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color3"/>
	<x path="Void"/>
</f></copyFrom>
		<copyFromFloats public="1" get="inline" set="null" line="72"><f a="r:g:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></copyFromFloats>
		<new public="1" set="method" line="16"><f a="?initialR:?initialG:?initialB" v="0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Color3"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.math.Color4" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Color4.hx">
		<Lerp public="1" get="inline" set="null" line="83" static="1"><f a="left:right:amount">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
</f></Lerp>
		<LerpToRef public="1" get="inline" set="null" line="88" static="1"><f a="left:right:amount:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
</f></LerpToRef>
		<FromArray public="1" get="inline" set="null" line="97" static="1"><f a="array:?offset" v=":0">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
</f></FromArray>
		<r public="1"><x path="Float"/></r>
		<g public="1"><x path="Float"/></g>
		<b public="1"><x path="Float"/></b>
		<a public="1"><x path="Float"/></a>
		<addInPlace public="1" get="inline" set="null" line="24"><f a="right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<x path="Void"/>
</f></addInPlace>
		<asArray public="1" get="inline" set="null" line="31"><f a=""><c path="Array"><x path="Float"/></c></f></asArray>
		<toArray public="1" get="inline" set="null" line="37"><f a="array:?index" v=":0">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></toArray>
		<add public="1" get="inline" set="null" line="44"><f a="right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
</f></add>
		<subtract public="1" get="inline" set="null" line="48"><f a="right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
</f></subtract>
		<subtractToRef public="1" get="inline" set="null" line="52"><f a="right:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
</f></subtractToRef>
		<scale public="1" get="inline" set="null" line="61"><f a="scale">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
</f></scale>
		<scaleToRef public="1" get="inline" set="null" line="65"><f a="scale:result">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Color4"/>
</f></scaleToRef>
		<toString public="1" set="method" line="74"><f a=""><c path="String"/></f></toString>
		<clone public="1" set="method" line="78"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Color4"/></f></clone>
		<new public="1" set="method" line="17"><f a="initialR:initialG:initialB:?initialA" v=":::1.0f">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Color4"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.math.Frustum" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Frustum.hx">
		<GetPlanes public="1" set="method" line="13" static="1"><f a="transform">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
</f></GetPlanes>
		<GetPlanesToRef public="1" get="inline" set="null" line="25" static="1"><f a="transform:frustumPlanes">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
	<c path="Array"><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></c>
</f></GetPlanesToRef>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Frustum"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.math.Matrix" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Matrix.hx">
		<FromArray public="1" get="inline" set="null" line="213" static="1"><f a="array:?offset" v=":0">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></FromArray>
		<FromArrayToRef public="1" get="inline" set="null" line="219" static="1"><f a="array:?offset:result" v=":0:">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></FromArrayToRef>
		<FromValues public="1" get="inline" set="null" line="226" static="1"><f a="m11:m12:m13:m14:m21:m22:m23:m24:m31:m32:m33:m34:m41:m42:m43:m44">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></FromValues>
		<FromValuesToRef public="1" get="inline" set="null" line="250" static="1"><f a="m11:m12:m13:m14:m21:m22:m23:m24:m31:m32:m33:m34:m41:m42:m43:m44:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></FromValuesToRef>
		<Identity public="1" get="inline" set="null" line="272" static="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></Identity>
		<IdentityToRef public="1" get="inline" set="null" line="276" static="1"><f a="result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></IdentityToRef>
		<Zero public="1" get="inline" set="null" line="282" static="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></Zero>
		<RotationX public="1" get="inline" set="null" line="286" static="1"><f a="angle">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></RotationX>
		<RotationXToRef public="1" get="inline" set="null" line="293" static="1"><f a="angle:result">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></RotationXToRef>
		<RotationY public="1" get="inline" set="null" line="319" static="1"><f a="angle">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></RotationY>
		<RotationYToRef public="1" get="inline" set="null" line="326" static="1"><f a="angle:result">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></RotationYToRef>
		<RotationZ public="1" get="inline" set="null" line="352" static="1"><f a="angle">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></RotationZ>
		<RotationZToRef public="1" get="inline" set="null" line="359" static="1"><f a="angle:result">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></RotationZToRef>
		<RotationAxis public="1" get="inline" set="null" line="385" static="1"><f a="axis:angle">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></RotationAxis>
		<RotationYawPitchRoll public="1" get="inline" set="null" line="413" static="1"><f a="yaw:pitch:roll">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></RotationYawPitchRoll>
		<RotationYawPitchRollToRef public="1" get="inline" set="null" line="420" static="1"><f a="yaw:pitch:roll:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></RotationYawPitchRollToRef>
		<Scaling public="1" get="inline" set="null" line="427" static="1"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></Scaling>
		<ScalingToRef public="1" get="inline" set="null" line="434" static="1"><f a="x:y:z:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></ScalingToRef>
		<Translation public="1" get="inline" set="null" line="455" static="1"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></Translation>
		<TranslationToRef public="1" get="inline" set="null" line="462" static="1"><f a="x:y:z:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></TranslationToRef>
		<LookAtLH public="1" get="inline" set="null" line="466" static="1"><f a="eye:target:up">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></LookAtLH>
		<LookAtLHToRef public="1" get="inline" set="null" line="473" static="1"><f a="eye:target:up:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></LookAtLHToRef>
		<OrthoLH public="1" get="inline" set="null" line="498" static="1"><f a="width:height:znear:zfar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></OrthoLH>
		<OrthoOffCenterLH public="1" get="inline" set="null" line="507" static="1"><f a="left:right:bottom:top:znear:zfar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></OrthoOffCenterLH>
		<OrthoOffCenterLHToRef public="1" get="inline" set="null" line="514" static="1"><f a="left:right:bottom:top:znear:zfar:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></OrthoOffCenterLHToRef>
		<PerspectiveLH public="1" get="inline" set="null" line="531" static="1"><f a="width:height:znear:zfar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></PerspectiveLH>
		<PerspectiveFovLH public="1" get="inline" set="null" line="547" static="1"><f a="fov:aspect:znear:zfar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></PerspectiveFovLH>
		<PerspectiveFovLHToRef public="1" get="inline" set="null" line="554" static="1"><f a="fov:aspect:znear:zfar:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></PerspectiveFovLHToRef>
		<GetFinalMatrix public="1" get="inline" set="null" line="575" static="1"><f a="viewport:world:view:projection:zmin:zmax">
	<c path="com.gamestudiohx.babylonhx.tools.math.Viewport"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></GetFinalMatrix>
		<Transpose public="1" get="inline" set="null" line="586" static="1"><f a="matrix">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></Transpose>
		<Reflection public="1" get="inline" set="null" line="612" static="1"><f a="plane">
	<c path="com.gamestudiohx.babylonhx.tools.math.Plane"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></Reflection>
		<ReflectionToRef public="1" get="inline" set="null" line="619" static="1"><f a="plane:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Plane"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></ReflectionToRef>
		<m public="1"><t path="openfl.utils.Float32Array"/></m>
		<isIdentity public="1" get="inline" set="null" line="29"><f a=""><x path="Bool"/></f></isIdentity>
		<determinant public="1" get="inline" set="null" line="40"><f a=""><x path="Float"/></f></determinant>
		<toArray public="1" get="inline" set="null" line="51"><f a=""><t path="openfl.utils.Float32Array"/></f></toArray>
		<copyToArray public="1" set="method" line="55"><f a="array:?offset" v=":0">
	<t path="openfl.utils.Float32Array"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyToArray>
		<invert public="1" get="inline" set="null" line="61"><f a=""><x path="Void"/></f></invert>
		<invertToRef public="1" get="inline" set="null" line="65"><f a="other">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></invertToRef>
		<setTranslation public="1" get="inline" set="null" line="124"><f a="vector3">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></setTranslation>
		<multiply public="1" get="inline" set="null" line="130"><f a="other">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></multiply>
		<copyFrom public="1" get="inline" set="null" line="136"><f a="other">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></copyFrom>
		<multiplyToRef public="1" get="inline" set="null" line="142"><f a="other:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Void"/>
</f></multiplyToRef>
		<multiplyToArray public="1" get="inline" set="null" line="146"><f a="other:result:offset">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<t path="openfl.utils.Float32Array"/>
	<x path="Int"/>
	<t path="openfl.utils.Float32Array"/>
</f></multiplyToArray>
		<equals public="1" get="inline" set="null" line="204"><f a="value">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<x path="Bool"/>
</f></equals>
		<clone public="1" get="inline" set="null" line="208"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/></f></clone>
		<new public="1" set="method" line="21"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Matrix"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.math.Plane" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Plane.hx">
		<FromArray public="1" get="inline" set="null" line="94" static="1"><f a="array">
	<c path="Array"><x path="Float"/></c>
	<c path="com.gamestudiohx.babylonhx.tools.math.Plane"/>
</f></FromArray>
		<FromPoints public="1" get="inline" set="null" line="98" static="1"><f a="point1:point2:point3">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Plane"/>
</f></FromPoints>
		<FromPositionAndNormal public="1" get="inline" set="null" line="105" static="1"><f a="origin:normal">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Plane"/>
</f></FromPositionAndNormal>
		<SignedDistanceToPlaneFromPositionAndNormal public="1" get="inline" set="null" line="115" static="1"><f a="origin:normal:point">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
</f></SignedDistanceToPlaneFromPositionAndNormal>
		<normal public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></normal>
		<d public="1"><x path="Float"/></d>
		<clone public="1" set="method" line="20"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Plane"/></f></clone>
		<normalize public="1" get="inline" set="null" line="24"><f a=""><x path="Void"/></f></normalize>
		<transform public="1" get="inline" set="null" line="39"><f a="transformation">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Plane"/>
</f></transform>
		<dotCoordinate public="1" get="inline" set="null" line="54"><f a="point">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
</f></dotCoordinate>
		<copyFromPoints public="1" get="inline" set="null" line="58"><f a="point1:point2:point3">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></copyFromPoints>
		<isFrontFacingTo public="1" get="inline" set="null" line="83"><f a="direction:epsilon">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></isFrontFacingTo>
		<signedDistanceTo public="1" get="inline" set="null" line="89"><f a="point">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
</f></signedDistanceTo>
		<new public="1" set="method" line="15"><f a="a:b:c:d">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Plane"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.math.Quaternion" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Quaternion.hx">
		<FromArray public="1" get="inline" set="null" line="137" static="1"><f a="array:?offset" v=":0">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></FromArray>
		<RotationYawPitchRoll public="1" get="inline" set="null" line="141" static="1"><f a="yaw:pitch:roll">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></RotationYawPitchRoll>
		<RotationYawPitchRollToRef public="1" get="inline" set="null" line="148" static="1"><f a="yaw:pitch:roll:result">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></RotationYawPitchRollToRef>
		<Slerp public="1" get="inline" set="null" line="168" static="1"><f a="left:right:amount">
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></Slerp>
		<RotationAxis public="1" get="inline" set="null" line="193" static="1"><f a="axis:angle">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></RotationAxis>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<z public="1"><x path="Float"/></z>
		<w public="1"><x path="Float"/></w>
		<toString public="1" set="method" line="17"><f a=""><c path="String"/></f></toString>
		<equals public="1" get="inline" set="null" line="28"><f a="otherQuaternion">
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<x path="Bool"/>
</f></equals>
		<clone public="1" get="inline" set="null" line="32"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/></f></clone>
		<copyFrom public="1" get="inline" set="null" line="36"><f a="other">
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<x path="Void"/>
</f></copyFrom>
		<add public="1" get="inline" set="null" line="43"><f a="other">
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></add>
		<scale public="1" get="inline" set="null" line="47"><f a="value">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></scale>
		<multiply public="1" get="inline" set="null" line="51"><f a="q1">
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></multiply>
		<multiplyToRef public="1" get="inline" set="null" line="58"><f a="q1:result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Quaternion"/>
</f></multiplyToRef>
		<length public="1" get="inline" set="null" line="67"><f a=""><x path="Float"/></f></length>
		<normalize public="1" get="inline" set="null" line="71"><f a=""><x path="Void"/></f></normalize>
		<toEulerAngles public="1" get="inline" set="null" line="79"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></f></toEulerAngles>
		<toRotationMatrix public="1" get="inline" set="null" line="105"><f a="result">
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
</f></toRotationMatrix>
		<new public="1" set="method" line="21"><f a="?initialX:?initialY:?initialZ:?initialW" v="0:0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Quaternion"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.math.Ray" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Ray.hx">
		<CreateNew public="1" set="method" line="165" static="1"><f a="x:y:viewportWidth:viewportHeight:world:view:projection">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Ray"/>
</f></CreateNew>
		<Transform public="1" get="inline" set="null" line="175" static="1"><f a="ray:matrix">
	<c path="com.gamestudiohx.babylonhx.tools.math.Ray"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Ray"/>
</f></Transform>
		<origin public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></origin>
		<direction public="1"><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></direction>
		<_edge1><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_edge1>
		<_edge2><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_edge2>
		<_pvec><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_pvec>
		<_tvec><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_tvec>
		<_qvec><c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/></_qvec>
		<intersectsBox public="1" set="method" line="29"><f a="box">
	<c path="com.gamestudiohx.babylonhx.culling.BoundingBox"/>
	<x path="Bool"/>
</f></intersectsBox>
		<intersectsSphere public="1" set="method" line="104"><f a="sphere">
	<c path="com.gamestudiohx.babylonhx.culling.BoundingSphere"/>
	<x path="Bool"/>
</f></intersectsSphere>
		<intersectsTriangle public="1" set="method" line="125"><f a="vertex0:vertex1:vertex2">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Float"/>
</f></intersectsTriangle>
		<new public="1" set="method" line="24"><f a="origin:direction">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector3"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Ray"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.math.Vector2" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Vector2.hx">
		<Zero public="1" get="inline" set="null" line="90" static="1"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/></f></Zero>
		<CatmullRom public="1" get="inline" set="null" line="94" static="1"><f a="value1:value2:value3:value4:amount">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></CatmullRom>
		<Clamp public="1" get="inline" set="null" line="105" static="1"><f a="value:min:max">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></Clamp>
		<Hermite public="1" get="inline" set="null" line="117" static="1"><f a="value1:tangent1:value2:tangent2:amount">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></Hermite>
		<Lerp public="1" get="inline" set="null" line="131" static="1"><f a="start:end:amount">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></Lerp>
		<Dot public="1" get="inline" set="null" line="138" static="1"><f a="left:right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<x path="Float"/>
</f></Dot>
		<Normalize public="1" get="inline" set="null" line="142" static="1"><f a="vector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></Normalize>
		<Minimize public="1" get="inline" set="null" line="148" static="1"><f a="left:right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></Minimize>
		<Maximize public="1" get="inline" set="null" line="155" static="1"><f a="left:right">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></Maximize>
		<Transform public="1" get="inline" set="null" line="162" static="1"><f a="vector:transformation">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Matrix"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></Transform>
		<Distance public="1" get="inline" set="null" line="169" static="1"><f a="value1:value2">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<x path="Float"/>
</f></Distance>
		<DistanceSquared public="1" get="inline" set="null" line="173" static="1"><f a="value1:value2">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<x path="Float"/>
</f></DistanceSquared>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<toString public="1" set="method" line="22"><f a=""><c path="String"/></f></toString>
		<add public="1" get="inline" set="null" line="28"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></add>
		<asArray public="1" get="inline" set="null" line="32"><f a=""><c path="Array"><x path="Float"/></c></f></asArray>
		<toArray public="1" get="inline" set="null" line="38"><f a="array:?index" v=":0">
	<c path="Array"><x path="Float"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></toArray>
		<subtract public="1" get="inline" set="null" line="43"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></subtract>
		<negate public="1" get="inline" set="null" line="47"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/></f></negate>
		<scaleInPlace public="1" get="inline" set="null" line="51"><f a="scale">
	<x path="Float"/>
	<x path="Void"/>
</f></scaleInPlace>
		<scale public="1" get="inline" set="null" line="56"><f a="scale">
	<x path="Float"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
</f></scale>
		<equals public="1" get="inline" set="null" line="60"><f a="otherVector">
	<c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/>
	<x path="Bool"/>
</f></equals>
		<length public="1" get="inline" set="null" line="64"><f a=""><x path="Float"/></f></length>
		<lengthSquared public="1" get="inline" set="null" line="68"><f a=""><x path="Float"/></f></lengthSquared>
		<normalize public="1" get="inline" set="null" line="72"><f a=""><x path="Void"/></f></normalize>
		<clone public="1" get="inline" set="null" line="83"><f a=""><c path="com.gamestudiohx.babylonhx.tools.math.Vector2"/></f></clone>
		<new public="1" set="method" line="17"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Vector2"</e></m></meta>
	</class>
	<class path="com.gamestudiohx.babylonhx.tools.math.Viewport" params="" file="../../com/gamestudiohx/babylonhx/tools/math/Viewport.hx">
		<width public="1"><x path="Float"/></width>
		<height public="1"><x path="Float"/></height>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<toGlobal public="1" get="inline" set="null" line="27"><f a="engine">
	<c path="com.gamestudiohx.babylonhx.Engine"/>
	<c path="com.gamestudiohx.babylonhx.tools.math.Viewport"/>
</f></toGlobal>
		<new public="1" set="method" line="20"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>* Port of BabylonJs project - http://www.babylonjs.com/
 * ...
 * @author Krtolica Vujadin / Brendon Smith #seacloud9</haxe_doc>
		<meta><m n=":expose"><e>"BABYLON.Viewport"</e></m></meta>
	</class>
	<typedef path="flash.Lib" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Lib.hx"><c path="openfl.Lib"/></typedef>
	<typedef path="flash.display.StageAlign" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/StageAlign.hx"><e path="openfl.display.StageAlign"/></typedef>
	<typedef path="flash.display.StageScaleMode" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/StageScaleMode.hx"><e path="openfl.display.StageScaleMode"/></typedef>
	<enum path="haxe.StackItem" params="" file="/usr/lib/haxe/lib/lime/2,0,1/haxe/CallStack.hx" module="haxe.CallStack">
		<CFunction/>
		<Module a="m"><c path="String"/></Module>
		<FilePos a="s:file:line">
			<t path="Null"><e path="haxe.StackItem"/></t>
			<c path="String"/>
			<x path="Int"/>
		</FilePos>
		<Method a="classname:method">
			<c path="String"/>
			<c path="String"/>
		</Method>
		<LocalFunction a="v"><x path="Int"/></LocalFunction>
		<haxe_doc>Elements return by `CallStack` methods.</haxe_doc>
	</enum>
	<class path="haxe.CallStack" params="" file="/usr/lib/haxe/lib/lime/2,0,1/haxe/CallStack.hx">
		<callStack public="1" set="method" line="43" static="1">
			<f a=""><c path="Array"><e path="haxe.StackItem"/></c></f>
			<haxe_doc>Return the call stack elements, or an empty array if not available.</haxe_doc>
		</callStack>
		<exceptionStack public="1" set="method" line="123" static="1">
			<f a=""><c path="Array"><e path="haxe.StackItem"/></c></f>
			<haxe_doc>Return the exception stack : this is the stack elements between
		the place the last exception was thrown and the place it was
		caught, or an empty array if not available.</haxe_doc>
		</exceptionStack>
		<toString public="1" set="method" line="189" static="1">
			<f a="stack">
				<c path="Array"><e path="haxe.StackItem"/></c>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a representation of the stack as a printable string.</haxe_doc>
		</toString>
		<itemToString set="method" line="202" static="1"><f a="b:s">
	<c path="StringBuf"/>
	<e path="haxe.StackItem"/>
	<x path="Void"/>
</f></itemToString>
		<makeStack set="method" line="229" static="1"><f a="s">
	<a><split set="null"><f a="">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></split></a>
	<c path="Array"><e path="haxe.StackItem"/></c>
</f></makeStack>
		<haxe_doc>Get informations about the call stack.</haxe_doc>
	</class>
	<abstract path="haxe.EnumFlags" params="T" file="/usr/lib/haxe/std/haxe/EnumFlags.hx">
		<this><x path="Int"/></this>
		<haxe_doc>A typed interface for bit flags. This is not a real object, only a typed
	interface for an actual Int. Each flag can be tested/set with the
	corresponding enum instance. Up to 32 flags can be stored that way.

	Enum constructor indices are preserved from haxe syntax, so the first
	declared is index 0, the next index 1 etc. The methods are optimized if the
	enum instance is passed directly, e.g. as has(EnumCtor). Otherwise
	Type.enumIndex() reflection is used.</haxe_doc>
		<impl><class path="haxe._EnumFlags.EnumFlags_Impl_" params="" file="/usr/lib/haxe/std/haxe/EnumFlags.hx" private="1" module="haxe.EnumFlags"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="haxe.EnumTools" params="" file="/usr/lib/haxe/std/haxe/EnumTools.hx" extern="1">
		<getName public="1" params="T" get="inline" set="null" line="41" static="1">
			<f a="e">
				<x path="Enum"><c path="getName.T"/></x>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the name of enum `e`, including its path.

		If `e` is inside a package, the package structure is returned dot-
		separated, with another dot separating the enum name:
			pack1.pack2.(...).packN.EnumName
		If `e` is a sub-type of a haxe module, that module is not part of the
		package structure.

		If `e` has no package, the enum name is returned.

		If `e` is null, the result is unspecified.

		The enum name does not include any type parameters.</haxe_doc>
		</getName>
		<createByName public="1" params="T" get="inline" set="null" line="54" static="1">
			<f a="e:constr:?params" v="::null">
				<x path="Enum"><c path="createByName.T"/></x>
				<c path="String"/>
				<c path="Array"><d/></c>
				<c path="createByName.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor `constr` with
		arguments `params`.

		If `e` or `constr` is null, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createByName>
		<createByIndex public="1" params="T" get="inline" set="null" line="70" static="1">
			<f a="e:index:?params" v="::null">
				<x path="Enum"><c path="createByIndex.T"/></x>
				<x path="Int"/>
				<c path="Array"><d/></c>
				<c path="createByIndex.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor number
		`index` with arguments `params`.

		The constructor indices are preserved from haxe syntax, so the first
		declared is index 0, the next index 1 etc.

		If `e` or `constr` is null, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createByIndex>
		<createAll public="1" params="T" get="inline" set="null" line="87" static="1">
			<f a="e">
				<x path="Enum"><c path="createAll.T"/></x>
				<c path="Array"><c path="createAll.T"/></c>
			</f>
			<haxe_doc>Returns a list of all constructors of enum `e` that require no
		arguments.

		This may return the empty Array [] if all constructors of `e` require
		arguments.

		Otherwise an instance of `e` constructed through each of its non-
		argument constructors is returned, in the order of the constructor
		declaration.

		If `e` is null, the result is unspecified.</haxe_doc>
		</createAll>
		<getConstructors public="1" params="T" get="inline" set="null" line="99" static="1">
			<f a="e">
				<x path="Enum"><c path="getConstructors.T"/></x>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns a list of the names of all constructors of enum `e`.

		The order of the constructor names in the returned Array is preserved
		from the original syntax.

		If `c` is null, the result is unspecified.</haxe_doc>
		</getConstructors>
	</class>
	<class path="haxe.EnumValueTools" params="" file="/usr/lib/haxe/std/haxe/EnumTools.hx" module="haxe.EnumTools" extern="1">
		<equals public="1" params="T" get="inline" set="null" line="114" static="1">
			<f a="a:b">
				<c path="equals.T"/>
				<c path="equals.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Recursively compares two enum instances `a` and `b` by value.

		Unlike `a == b`, this function performs a deep equality check on the
		arguments of the constructors, if exists.

		If `a` or `b` are null, the result is unspecified.</haxe_doc>
		</equals>
		<getName public="1" get="inline" set="null" line="125" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the constructor name of enum instance `e`.

		The result String does not contain any constructor arguments.

		If `e` is null, the result is unspecified.</haxe_doc>
		</getName>
		<getParameters public="1" get="inline" set="null" line="139" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="Array"><d/></c>
			</f>
			<haxe_doc>Returns a list of the constructor arguments of enum instance `e`.

		If `e` has no arguments, the result is [].

		Otherwise the result are the values that were used as arguments to `e`,
		in the order of their declaration.

		If `e` is null, the result is unspecified.</haxe_doc>
		</getParameters>
		<getIndex public="1" get="inline" set="null" line="151" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the index of enum instance `e`.

		This corresponds to the original syntactic position of `e`. The index of
		the first declared constructor is 0, the next one is 1 etc.

		If `e` is null, the result is unspecified.</haxe_doc>
		</getIndex>
	</class>
	<class path="haxe.Json" params="" file="/usr/lib/haxe/std/js/_std/haxe/Json.hx" extern="1">
		<parse public="1" set="method" static="1">
			<f a="text">
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[Parses given JSON-encoded `text` and returns the resulting object.

		JSON objects are parsed into anonymous structures and JSON arrays
		are parsed into Array<Dynamic>.

		If given `text` is not valid JSON, an exception will be thrown.]]></haxe_doc>
		</parse>
		<stringify public="1" set="method" static="1">
			<f a="value:?replacer:?space">
				<d/>
				<f a=":">
					<d/>
					<d/>
					<d/>
				</f>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Encodes given `value` and returns the resulting JSON string.

		If `replacer` is given and is not null, it is used to retrieve
		actual object to be encoded. The `replacer` function two parameters,
		the key and the value being encoded. Initial key value is an empty string.
		
		If `space` is given and is not null, the result will be pretty-printed.
		Successive levels will be indented by this string.</haxe_doc>
		</stringify>
		<haxe_doc>Crossplatform JSON API : it will automatically use the optimized native API if available.
	Use -D haxeJSON to force usage of the Haxe implementation even if a native API is found : this will provide
	extra encoding features such as enums (replaced by their index) and StringMaps.</haxe_doc>
		<meta>
			<m n=":coreApi"/>
			<m n=":native"><e>"JSON"</e></m>
		</meta>
	</class>
	<class path="haxe.Log" params="" file="/usr/lib/haxe/std/haxe/Log.hx">
		<trace public="1" set="dynamic" line="45" static="1">
			<f a="v:?infos" v=":null">
				<d/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Outputs `v` in a platform-dependent way.

		The second parameter `infos` is injected by the compiler and contains
		information about the position where the trace() call was made.

		This method can be rebound to a custom function:
			var oldTrace = haxe.Log.trace; // store old function
			haxe.Log.trace = function(v,infos) { // handle trace }
			...
			haxe.Log.trace = oldTrace;

		If it is bound to null, subsequent calls to trace() will cause an
		exception.</haxe_doc>
		</trace>
		<haxe_doc>Log primarily provides the trace() method, which is invoked upon a call to
	trace() in haxe code.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<typedef path="haxe.PosInfos" params="" file="/usr/lib/haxe/std/haxe/PosInfos.hx">
		<a>
			<methodName><c path="String"/></methodName>
			<lineNumber><x path="Int"/></lineNumber>
			<fileName><c path="String"/></fileName>
			<customParams>
				<c path="Array"><d/></c>
				<meta><m n=":optional"/></meta>
			</customParams>
			<className><c path="String"/></className>
		</a>
		<haxe_doc>PosInfos is a magic type which can be used to generate position information
	into the output for debugging use.

	If a function has a final optional argument of this type, i.e.
	(..., ?pos:haxe.PosInfos), each call to that function which does not assign
	a value to that argument has its position added as call argument.

	This can be used to track positions of calls in e.g. a unit testing
	framework.</haxe_doc>
	</typedef>
	<class path="haxe.Timer" params="" file="/usr/lib/haxe/lib/lime/2,0,1/haxe/Timer.hx">
		<delay public="1" set="method" line="131" static="1">
			<f a="f:time_ms">
				<f a=""><x path="Void"/></f>
				<x path="Int"/>
				<c path="haxe.Timer"/>
			</f>
			<haxe_doc>Invokes `f` after `time_ms` milliseconds.

		This is a convenience function for creating a new Timer instance with
		`time_ms` as argument, binding its run() method to `f` and then stopping
		`this` Timer upon the first invocation.

		If `f` is null, the result is unspecified.</haxe_doc>
		</delay>
		<measure public="1" params="T" set="method" line="153" static="1">
			<f a="f:?pos" v=":null">
				<f a=""><c path="measure.T"/></f>
				<t path="haxe.PosInfos"/>
				<c path="measure.T"/>
			</f>
			<haxe_doc>Measures the time it takes to execute `f`, in seconds with fractions.

		This is a convenience function for calculating the difference between
		Timer.stamp() before and after the invocation of `f`.

		The difference is passed as argument to Log.trace(), with "s" appended
		to denote the unit. The optional `pos` argument is passed through.

		If `f` is null, the result is unspecified.</haxe_doc>
		</measure>
		<stamp public="1" set="method" line="166" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns a timestamp, in seconds with fractions.

		The value itself might differ depending on platforms, only differences
		between two values make sense.</haxe_doc>
		</stamp>
		<id><t path="Null"><x path="Int"/></t></id>
		<stop public="1" set="method" line="88">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Stops `this` Timer.

		After calling this method, no additional invocations of `this.run`
		will occur.

		It is not possible to restart `this` Timer once stopped.</haxe_doc>
		</stop>
		<run public="1" set="dynamic" line="118">
			<f a=""><x path="Void"/></f>
			<haxe_doc>This method is invoked repeatedly on `this` Timer.

		It can be overridden in a subclass, or rebound directly to a custom
		function:
			var timer = new haxe.Timer(1000); // 1000ms delay
			timer.run = function() { ... }

		Once bound, it can still be rebound to different functions until `this`
		Timer is stopped through a call to `this.stop`.</haxe_doc>
		</run>
		<new public="1" set="method" line="64">
			<f a="time_ms">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new timer that will run every `time_ms` milliseconds.

		After creating the Timer instance, it calls `this].run` repeatedly,
		with delays of `time_ms` milliseconds, until `this.stop` is called.

		The first invocation occurs after `time_ms` milliseconds, not
		immediately.

		The accuracy of this may be platform-dependent.</haxe_doc>
		</new>
		<haxe_doc>The Timer class allows you to create asynchronous timers on platforms that
	support events.

	The intended usage is to create an instance of the Timer class with a given
	interval, set its run() method to a custom function to be invoked and
	eventually call stop() to stop the Timer.

	Note that a running Timer may or may not prevent the program to exit
	automatically when main() returns.

	It is also possible to extend this class and override its run() method in
	the child class.</haxe_doc>
	</class>
	<class path="haxe.crypto.BaseCode" params="" file="/usr/lib/haxe/std/haxe/crypto/BaseCode.hx">
		<base><c path="haxe.io.Bytes"/></base>
		<nbits><x path="Int"/></nbits>
		<encodeBytes public="1" set="method" line="44"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></encodeBytes>
		<new public="1" set="method" line="33"><f a="base">
	<c path="haxe.io.Bytes"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>Allows to encode/decode String and bytes using a power of two base dictionnary.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.ds.BalancedTree" params="K:V" file="/usr/lib/haxe/std/haxe/ds/BalancedTree.hx">
		<root><c path="haxe.ds.TreeNode">
	<c path="haxe.ds.BalancedTree.K"/>
	<c path="haxe.ds.BalancedTree.V"/>
</c></root>
		<set public="1" set="method" line="50">
			<f a="key:value">
				<c path="haxe.ds.BalancedTree.K"/>
				<c path="haxe.ds.BalancedTree.V"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Binds `key` to `value`.

		If `key` is already bound to a value, that binding disappears.

		If `key` is null, the result is unspecified.</haxe_doc>
		</set>
		<get public="1" set="method" line="61">
			<f a="key">
				<c path="haxe.ds.BalancedTree.K"/>
				<t path="Null"><c path="haxe.ds.BalancedTree.V"/></t>
			</f>
			<haxe_doc>Returns the value `key` is bound to.

		If `key` is not bound to any value, `null` is returned.

		If `key` is null, the result is unspecified.</haxe_doc>
		</get>
		<setLoop set="method" line="132"><f a="k:v:node">
	<c path="haxe.ds.BalancedTree.K"/>
	<c path="haxe.ds.BalancedTree.V"/>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
</f></setLoop>
		<balance set="method" line="187"><f a="l:k:v:r">
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.BalancedTree.K"/>
	<c path="haxe.ds.BalancedTree.V"/>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.BalancedTree.K"/>
		<c path="haxe.ds.BalancedTree.V"/>
	</c>
</f></balance>
		<compare set="method" line="201"><f a="k1:k2">
	<c path="haxe.ds.BalancedTree.K"/>
	<c path="haxe.ds.BalancedTree.K"/>
	<x path="Int"/>
</f></compare>
		<new public="1" set="method" line="41">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new BalancedTree, which is initially empty.</haxe_doc>
		</new>
		<haxe_doc>BalancedTree allows key-value mapping with arbitrary keys, as long as they
	can be ordered. By default, `Reflect.compare` is used in the `compare`
	method, which can be overridden in subclasses.

	Operations have a logarithmic average and worst-case cost.

	Iteration over keys and values, using `keys` and `iterator` respectively,
	are in-order.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.ds.TreeNode" params="K:V" file="/usr/lib/haxe/std/haxe/ds/BalancedTree.hx" module="haxe.ds.BalancedTree">
		<left public="1"><c path="haxe.ds.TreeNode">
	<c path="haxe.ds.TreeNode.K"/>
	<c path="haxe.ds.TreeNode.V"/>
</c></left>
		<right public="1"><c path="haxe.ds.TreeNode">
	<c path="haxe.ds.TreeNode.K"/>
	<c path="haxe.ds.TreeNode.V"/>
</c></right>
		<key public="1"><c path="haxe.ds.TreeNode.K"/></key>
		<value public="1"><c path="haxe.ds.TreeNode.V"/></value>
		<_height><x path="Int"/></_height>
		<new public="1" set="method" line="220"><f a="l:k:v:r:?h" v="::::-1">
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.TreeNode.K"/>
		<c path="haxe.ds.TreeNode.V"/>
	</c>
	<c path="haxe.ds.TreeNode.K"/>
	<c path="haxe.ds.TreeNode.V"/>
	<c path="haxe.ds.TreeNode">
		<c path="haxe.ds.TreeNode.K"/>
		<c path="haxe.ds.TreeNode.V"/>
	</c>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.ds.EnumValueMap" params="K:V" file="/usr/lib/haxe/std/haxe/ds/EnumValueMap.hx">
		<extends path="haxe.ds.BalancedTree">
			<c path="haxe.ds.EnumValueMap.K"/>
			<c path="haxe.ds.EnumValueMap.V"/>
		</extends>
		<implements path="IMap">
			<c path="haxe.ds.EnumValueMap.K"/>
			<c path="haxe.ds.EnumValueMap.V"/>
		</implements>
		<compare set="method" line="33" override="1"><f a="k1:k2">
	<x path="EnumValue"/>
	<x path="EnumValue"/>
	<x path="Int"/>
</f></compare>
		<compareArgs set="method" line="42"><f a="a1:a2">
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<x path="Int"/>
</f></compareArgs>
		<compareArg set="method" line="52"><f a="v1:v2">
	<d/>
	<d/>
	<x path="Int"/>
</f></compareArg>
		<new public="1" set="method" line="31"><f a=""><x path="Void"/></f></new>
		<haxe_doc>EnumValueMap allows mapping of enum value keys to arbitrary values.

	Keys are compared by value and recursively over their parameters. If any
	parameter is not an enum value, `Reflect.compare` is used to compare them.</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<abstract path="haxe.ds.HashMap" params="K:V" file="/usr/lib/haxe/std/haxe/ds/HashMap.hx">
		<this><a>
	<values><c path="haxe.ds.IntMap"><c path="haxe.ds.HashMap.V"/></c></values>
	<keys><c path="haxe.ds.IntMap"><c path="haxe.ds.HashMap.K"/></c></keys>
</a></this>
		<impl><class path="haxe.ds._HashMap.HashMap_Impl_" params="" file="/usr/lib/haxe/std/haxe/ds/HashMap.hx" private="1" module="haxe.ds.HashMap"><meta><m n=":keep"/></meta></class></impl>
	</abstract>
	<class path="haxe.ds.IntMap" params="T" file="/usr/lib/haxe/std/js/_std/haxe/ds/IntMap.hx">
		<implements path="IMap">
			<x path="Int"/>
			<c path="haxe.ds.IntMap.T"/>
		</implements>
		<h><d/></h>
		<new public="1" set="method" line="28">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new IntMap.</haxe_doc>
		</new>
		<haxe_doc>IntMap allows mapping of Int keys to arbitrary values.

	See `Map` for documentation details.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="haxe.ds.StringMap" params="T" file="/usr/lib/haxe/std/js/_std/haxe/ds/StringMap.hx">
		<implements path="IMap">
			<c path="String"/>
			<c path="haxe.ds.StringMap.T"/>
		</implements>
		<h><d/></h>
		<set public="1" set="method" line="32">
			<f a="key:value">
				<c path="String"/>
				<c path="haxe.ds.StringMap.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<get public="1" set="method" line="36">
			<f a="key">
				<c path="String"/>
				<t path="Null"><c path="haxe.ds.StringMap.T"/></t>
			</f>
			<haxe_doc>See `Map.get`</haxe_doc>
		</get>
		<exists public="1" set="method" line="40">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<remove public="1" set="method" line="44">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>See `Map.remove`</haxe_doc>
		</remove>
		<keys public="1" set="method" line="51">
			<f a=""><t path="Iterator"><c path="String"/></t></f>
			<haxe_doc>See `Map.keys`</haxe_doc>
		</keys>
		<iterator public="1" set="method" line="62">
			<f a=""><t path="Iterator"><c path="haxe.ds.StringMap.T"/></t></f>
			<haxe_doc>See `Map.iterator`</haxe_doc>
		</iterator>
		<new public="1" set="method" line="28">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new StringMap.</haxe_doc>
		</new>
		<haxe_doc>StringMap allows mapping of String keys to arbitrary values.

	See `Map` for documentation details.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<typedef path="haxe.ds._Vector.VectorData" params="T" file="/usr/lib/haxe/std/haxe/ds/Vector.hx" private="1" module="haxe.ds.Vector"><c path="Array"><c path="haxe.ds._Vector.VectorData.T"/></c></typedef>
	<abstract path="haxe.ds.Vector" params="T" file="/usr/lib/haxe/std/haxe/ds/Vector.hx">
		<this><t path="haxe.ds._Vector.VectorData"><c path="haxe.ds.Vector.T"/></t></this>
		<haxe_doc>A Vector is a storage of fixed size. It can be faster than Array on some
	targets, and is never slower.</haxe_doc>
		<impl><class path="haxe.ds._Vector.Vector_Impl_" params="" file="/usr/lib/haxe/std/haxe/ds/Vector.hx" private="1" module="haxe.ds.Vector">
	<blit public="1" params="T" set="method" line="127" static="1">
		<f a="src:srcPos:dest:destPos:len">
			<x path="haxe.ds.Vector"><c path="blit.T"/></x>
			<x path="Int"/>
			<x path="haxe.ds.Vector"><c path="blit.T"/></x>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<haxe_doc>Copies `length` of elements from `src` Vector, beginning at `srcPos` to
		`dest` Vector, beginning at `destPos`

		The results are unspecified if `length` results in out-of-bounds access,
		or if `src` or `dest` are null</haxe_doc>
	</blit>
	<toArray public="1" set="method" line="148" static="1">
		<f a="this">
			<t path="haxe.ds._Vector.VectorData"><c path="haxe.ds.Vector.T"/></t>
			<c path="Array"><c path="haxe.ds.Vector.T"/></c>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Creates a new Array, copy the content from the Vector to it, and returns it.</haxe_doc>
	</toArray>
	<meta><m n=":keep"/></meta>
</class></impl>
	</abstract>
	<class path="haxe.ds._Vector.Vector_Impl_" params="" file="/usr/lib/haxe/std/haxe/ds/Vector.hx" private="1" module="haxe.ds.Vector">
		<blit public="1" params="T" set="method" line="127" static="1">
			<f a="src:srcPos:dest:destPos:len">
				<x path="haxe.ds.Vector"><c path="blit.T"/></x>
				<x path="Int"/>
				<x path="haxe.ds.Vector"><c path="blit.T"/></x>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies `length` of elements from `src` Vector, beginning at `srcPos` to
		`dest` Vector, beginning at `destPos`

		The results are unspecified if `length` results in out-of-bounds access,
		or if `src` or `dest` are null</haxe_doc>
		</blit>
		<toArray public="1" set="method" line="148" static="1">
			<f a="this">
				<t path="haxe.ds._Vector.VectorData"><c path="haxe.ds.Vector.T"/></t>
				<c path="Array"><c path="haxe.ds.Vector.T"/></c>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Creates a new Array, copy the content from the Vector to it, and returns it.</haxe_doc>
		</toArray>
		<meta><m n=":keep"/></meta>
	</class>
	<class path="haxe.io.Bytes" params="" file="/usr/lib/haxe/std/haxe/io/Bytes.hx">
		<alloc public="1" set="method" line="357" static="1"><f a="length">
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></alloc>
		<ofString public="1" set="method" line="382" static="1"><f a="s">
	<c path="String"/>
	<c path="haxe.io.Bytes"/>
</f></ofString>
		<ofData public="1" set="method" line="435" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<c path="haxe.io.Bytes"/>
</f></ofData>
		<length public="1" set="null"><x path="Int"/></length>
		<b><t path="haxe.io.BytesData"/></b>
		<get public="1" get="inline" set="null" line="41"><f a="pos">
	<x path="Int"/>
	<x path="Int"/>
</f></get>
		<set public="1" get="inline" set="null" line="57"><f a="pos:v">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></set>
		<getString public="1" set="method" line="261"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<toString public="1" set="method" line="318"><f a=""><c path="String"/></f></toString>
		<new set="method" line="33"><f a="length:b">
	<x path="Int"/>
	<t path="haxe.io.BytesData"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":keep"/></meta>
	</class>
	<typedef path="haxe.io.BytesData" params="" file="/usr/lib/haxe/std/haxe/io/BytesData.hx"><c path="Array"><x path="Int"/></c></typedef>
	<class path="haxe.io.Eof" params="" file="/usr/lib/haxe/std/haxe/io/Eof.hx">
		<toString set="method" line="30">
			<f a=""><c path="String"/></f>
			<meta><m n=":keep"/></meta>
		</toString>
		<haxe_doc>This exception is raised when reading while data is no longer available in the [Input].</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<enum path="haxe.io.Error" params="" file="/usr/lib/haxe/std/haxe/io/Error.hx">
		<Blocked><haxe_doc>The IO is set into nonblocking mode and some data cannot be read or written</haxe_doc></Blocked>
		<Overflow><haxe_doc>An integer value is outside its allowed range</haxe_doc></Overflow>
		<OutsideBounds><haxe_doc>An operation on Bytes is outside of its valid range</haxe_doc></OutsideBounds>
		<Custom a="e">
			<d/>
			<haxe_doc>Other errors</haxe_doc>
		</Custom>
		<haxe_doc>The possible IO errors that can occur</haxe_doc>
	</enum>
	<class path="haxe.io.Path" params="" file="/usr/lib/haxe/std/haxe/io/Path.hx">
		<withoutExtension public="1" set="method" line="117" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the String representation of `path` without the file extension.

		If `path` is null, the result is unspecified.</haxe_doc>
		</withoutExtension>
		<dir public="1">
			<c path="String"/>
			<haxe_doc>The directory.

		This is the leading part of the path that is not part of the file name
		and the extension.

		Does not end with a `/` or `\` separator.

		If the path has no directory, the value is null.</haxe_doc>
		</dir>
		<file public="1">
			<c path="String"/>
			<haxe_doc>The file name.

		This is the part of the part between the directory and the extension.

		If there is no file name, e.g. for ".htaccess" or "/dir/", the value
		is the empty String "".</haxe_doc>
		</file>
		<ext public="1">
			<c path="String"/>
			<haxe_doc>The file extension.

		It is separated from the file name by a dot. This dot is not part of
		the extension.

		If the path has no extension, the value is null.</haxe_doc>
		</ext>
		<backslash public="1">
			<x path="Bool"/>
			<haxe_doc>True if the last directory separator is a backslash, false otherwise.</haxe_doc>
		</backslash>
		<toString public="1" set="method" line="108">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String representation of `this` path.

		If `this.backslash` is true, backslash is used as directory separator,
		otherwise slash is used. This only affects the separator between
		`this.dir` and `this.file`.

		If `this.directory` or `this.extension` is null, their representation
		is the empty String "".</haxe_doc>
		</toString>
		<new public="1" set="method" line="76">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new Path instance by parsing `path`.

		Path information can be retrieved by accessing the dir, file and ext
		properties.</haxe_doc>
		</new>
		<haxe_doc>This class provides a convenient way of working with paths. It supports the
	common path formats:

	- directory1/directory2/filename.extension
	- directory1\directory2\filename.excention</haxe_doc>
		<meta><m n=":keep"/></meta>
	</class>
	<typedef path="haxe.macro.Position" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<min><x path="Int"/></min>
	<max><x path="Int"/></max>
	<file><c path="String"/></file>
</a></typedef>
	<typedef path="haxe.macro.Expr" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx"><a>
	<pos><t path="haxe.macro.Position"/></pos>
	<expr><e path="haxe.macro.ExprDef"/></expr>
</a></typedef>
	<typedef path="haxe.macro.ExprOf" params="T" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><t path="haxe.macro.Expr"/></typedef>
	<typedef path="haxe.macro.Case" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<values><c path="Array"><t path="haxe.macro.Expr"/></c></values>
	<guard>
		<t path="Null"><t path="haxe.macro.Expr"/></t>
		<meta><m n=":optional"/></meta>
	</guard>
	<expr><t path="Null"><t path="haxe.macro.Expr"/></t></expr>
</a></typedef>
	<typedef path="haxe.macro.Var" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<type><t path="Null"><e path="haxe.macro.ComplexType"/></t></type>
	<name><c path="String"/></name>
	<expr><t path="Null"><t path="haxe.macro.Expr"/></t></expr>
</a></typedef>
	<typedef path="haxe.macro.Catch" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<type><e path="haxe.macro.ComplexType"/></type>
	<name><c path="String"/></name>
	<expr><t path="haxe.macro.Expr"/></expr>
</a></typedef>
	<typedef path="haxe.macro.TypePath" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<sub>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
	</sub>
	<params>
		<c path="Array"><e path="haxe.macro.TypeParam"/></c>
		<meta><m n=":optional"/></meta>
	</params>
	<pack><c path="Array"><c path="String"/></c></pack>
	<name><c path="String"/></name>
</a></typedef>
	<typedef path="haxe.macro.TypeParamDecl" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<params>
		<c path="Array"><t path="haxe.macro.TypeParamDecl"/></c>
		<meta><m n=":optional"/></meta>
	</params>
	<name><c path="String"/></name>
	<constraints>
		<c path="Array"><e path="haxe.macro.ComplexType"/></c>
		<meta><m n=":optional"/></meta>
	</constraints>
</a></typedef>
	<typedef path="haxe.macro.Function" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<ret><t path="Null"><e path="haxe.macro.ComplexType"/></t></ret>
	<params>
		<c path="Array"><t path="haxe.macro.TypeParamDecl"/></c>
		<meta><m n=":optional"/></meta>
	</params>
	<expr><t path="Null"><t path="haxe.macro.Expr"/></t></expr>
	<args><c path="Array"><t path="haxe.macro.FunctionArg"/></c></args>
</a></typedef>
	<typedef path="haxe.macro.FunctionArg" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<value>
		<t path="Null"><t path="haxe.macro.Expr"/></t>
		<meta><m n=":optional"/></meta>
	</value>
	<type><t path="Null"><e path="haxe.macro.ComplexType"/></t></type>
	<opt>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</opt>
	<name><c path="String"/></name>
</a></typedef>
	<typedef path="haxe.macro.MetadataEntry" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<pos><t path="haxe.macro.Position"/></pos>
	<params>
		<c path="Array"><t path="haxe.macro.Expr"/></c>
		<meta><m n=":optional"/></meta>
	</params>
	<name><c path="String"/></name>
</a></typedef>
	<typedef path="haxe.macro.Metadata" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><c path="Array"><t path="haxe.macro.MetadataEntry"/></c></typedef>
	<typedef path="haxe.macro.Field" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<pos><t path="haxe.macro.Position"/></pos>
	<name><c path="String"/></name>
	<meta>
		<t path="haxe.macro.Metadata"/>
		<meta><m n=":optional"/></meta>
	</meta>
	<kind><e path="haxe.macro.FieldType"/></kind>
	<doc>
		<t path="Null"><c path="String"/></t>
		<meta><m n=":optional"/></meta>
	</doc>
	<access>
		<c path="Array"><e path="haxe.macro.Access"/></c>
		<meta><m n=":optional"/></meta>
	</access>
</a></typedef>
	<typedef path="haxe.macro.TypeDefinition" params="" file="/usr/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr"><a>
	<pos><t path="haxe.macro.Position"/></pos>
	<params>
		<c path="Array"><t path="haxe.macro.TypeParamDecl"/></c>
		<meta><m n=":optional"/></meta>
	</params>
	<pack><c path="Array"><c path="String"/></c></pack>
	<name><c path="String"/></name>
	<meta>
		<t path="haxe.macro.Metadata"/>
		<meta><m n=":optional"/></meta>
	</meta>
	<kind><e path="haxe.macro.TypeDefKind"/></kind>
	<isExtern>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</isExtern>
	<fields><c path="Array"><t path="haxe.macro.Field"/></c></fields>
</a></typedef>
	<typedef path="haxe.macro.Ref" params="T" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<toString set="method"><f a=""><c path="String"/></f></toString>
	<get set="method"><f a=""><c path="haxe.macro.Ref.T"/></f></get>
</a></typedef>
	<typedef path="haxe.macro.AnonType" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<status><e path="haxe.macro.AnonStatus"/></status>
	<fields><c path="Array"><t path="haxe.macro.ClassField"/></c></fields>
</a></typedef>
	<typedef path="haxe.macro.TypeParameter" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<t><e path="haxe.macro.Type"/></t>
	<name><c path="String"/></name>
</a></typedef>
	<typedef path="haxe.macro.BaseType" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<pos><t path="haxe.macro.Position"/></pos>
	<params><c path="Array"><t path="haxe.macro.TypeParameter"/></c></params>
	<pack><c path="Array"><c path="String"/></c></pack>
	<name><c path="String"/></name>
	<module><c path="String"/></module>
	<meta><t path="haxe.macro.MetaAccess"/></meta>
	<isPrivate><x path="Bool"/></isPrivate>
	<isExtern><x path="Bool"/></isExtern>
	<exclude set="method"><f a=""><x path="Void"/></f></exclude>
	<doc><t path="Null"><c path="String"/></t></doc>
</a></typedef>
	<typedef path="haxe.macro.ClassField" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<type><e path="haxe.macro.Type"/></type>
	<pos><t path="haxe.macro.Position"/></pos>
	<params><c path="Array"><t path="haxe.macro.TypeParameter"/></c></params>
	<name><c path="String"/></name>
	<meta><t path="haxe.macro.MetaAccess"/></meta>
	<kind><e path="haxe.macro.FieldKind"/></kind>
	<isPublic><x path="Bool"/></isPublic>
	<expr set="method"><f a=""><t path="Null"><t path="haxe.macro.TypedExpr"/></t></f></expr>
	<doc><t path="Null"><c path="String"/></t></doc>
</a></typedef>
	<typedef path="haxe.macro.ClassType" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<superClass><t path="Null"><a>
	<t><t path="haxe.macro.Ref"><t path="haxe.macro.ClassType"/></t></t>
	<params><c path="Array"><e path="haxe.macro.Type"/></c></params>
</a></t></superClass>
	<statics><t path="haxe.macro.Ref"><c path="Array"><t path="haxe.macro.ClassField"/></c></t></statics>
	<pos><t path="haxe.macro.Position"/></pos>
	<params><c path="Array"><t path="haxe.macro.TypeParameter"/></c></params>
	<pack><c path="Array"><c path="String"/></c></pack>
	<overrides><c path="Array"><t path="haxe.macro.Ref"><t path="haxe.macro.ClassField"/></t></c></overrides>
	<name><c path="String"/></name>
	<module><c path="String"/></module>
	<meta><t path="haxe.macro.MetaAccess"/></meta>
	<kind><e path="haxe.macro.ClassKind"/></kind>
	<isPrivate><x path="Bool"/></isPrivate>
	<isInterface><x path="Bool"/></isInterface>
	<isExtern><x path="Bool"/></isExtern>
	<interfaces><c path="Array"><a>
	<t><t path="haxe.macro.Ref"><t path="haxe.macro.ClassType"/></t></t>
	<params><c path="Array"><e path="haxe.macro.Type"/></c></params>
</a></c></interfaces>
	<init><t path="Null"><t path="haxe.macro.TypedExpr"/></t></init>
	<fields><t path="haxe.macro.Ref"><c path="Array"><t path="haxe.macro.ClassField"/></c></t></fields>
	<exclude set="method"><f a=""><x path="Void"/></f></exclude>
	<doc><t path="Null"><c path="String"/></t></doc>
	<constructor><t path="Null"><t path="haxe.macro.Ref"><t path="haxe.macro.ClassField"/></t></t></constructor>
</a></typedef>
	<typedef path="haxe.macro.EnumField" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<type><e path="haxe.macro.Type"/></type>
	<pos><t path="haxe.macro.Position"/></pos>
	<params><c path="Array"><t path="haxe.macro.TypeParameter"/></c></params>
	<name><c path="String"/></name>
	<meta><t path="haxe.macro.MetaAccess"/></meta>
	<index><x path="Int"/></index>
	<doc><t path="Null"><c path="String"/></t></doc>
</a></typedef>
	<typedef path="haxe.macro.EnumType" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<pos><t path="haxe.macro.Position"/></pos>
	<params><c path="Array"><t path="haxe.macro.TypeParameter"/></c></params>
	<pack><c path="Array"><c path="String"/></c></pack>
	<names><c path="Array"><c path="String"/></c></names>
	<name><c path="String"/></name>
	<module><c path="String"/></module>
	<meta><t path="haxe.macro.MetaAccess"/></meta>
	<isPrivate><x path="Bool"/></isPrivate>
	<isExtern><x path="Bool"/></isExtern>
	<exclude set="method"><f a=""><x path="Void"/></f></exclude>
	<doc><t path="Null"><c path="String"/></t></doc>
	<constructs><c path="haxe.ds.StringMap"><t path="haxe.macro.EnumField"/></c></constructs>
</a></typedef>
	<typedef path="haxe.macro.DefType" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<type><e path="haxe.macro.Type"/></type>
	<pos><t path="haxe.macro.Position"/></pos>
	<params><c path="Array"><t path="haxe.macro.TypeParameter"/></c></params>
	<pack><c path="Array"><c path="String"/></c></pack>
	<name><c path="String"/></name>
	<module><c path="String"/></module>
	<meta><t path="haxe.macro.MetaAccess"/></meta>
	<isPrivate><x path="Bool"/></isPrivate>
	<isExtern><x path="Bool"/></isExtern>
	<exclude set="method"><f a=""><x path="Void"/></f></exclude>
	<doc><t path="Null"><c path="String"/></t></doc>
</a></typedef>
	<typedef path="haxe.macro.AbstractType" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<unops><c path="Array"><a>
	<postFix><x path="Bool"/></postFix>
	<op><e path="haxe.macro.Unop"/></op>
	<field><t path="haxe.macro.ClassField"/></field>
</a></c></unops>
	<type><e path="haxe.macro.Type"/></type>
	<to><c path="Array"><a>
	<t><e path="haxe.macro.Type"/></t>
	<field><t path="Null"><t path="haxe.macro.ClassField"/></t></field>
</a></c></to>
	<pos><t path="haxe.macro.Position"/></pos>
	<params><c path="Array"><t path="haxe.macro.TypeParameter"/></c></params>
	<pack><c path="Array"><c path="String"/></c></pack>
	<name><c path="String"/></name>
	<module><c path="String"/></module>
	<meta><t path="haxe.macro.MetaAccess"/></meta>
	<isPrivate><x path="Bool"/></isPrivate>
	<isExtern><x path="Bool"/></isExtern>
	<impl><t path="Null"><t path="haxe.macro.Ref"><t path="haxe.macro.ClassType"/></t></t></impl>
	<from><c path="Array"><a>
	<t><e path="haxe.macro.Type"/></t>
	<field><t path="Null"><t path="haxe.macro.ClassField"/></t></field>
</a></c></from>
	<exclude set="method"><f a=""><x path="Void"/></f></exclude>
	<doc><t path="Null"><c path="String"/></t></doc>
	<binops><c path="Array"><a>
	<op><e path="haxe.macro.Binop"/></op>
	<field><t path="haxe.macro.ClassField"/></field>
</a></c></binops>
	<array><c path="Array"><t path="haxe.macro.ClassField"/></c></array>
</a></typedef>
	<typedef path="haxe.macro.MetaAccess" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type">
		<a>
			<remove set="method">
				<f a="name">
					<c path="String"/>
					<x path="Void"/>
				</f>
				<haxe_doc>Removes all `name` metadata entries from the origin of `this`
		MetaAccess.

		This method might clear several metadata entries of the same name.

		If a `Metadata` array is obtained through a call to `get`, a subsequent
		call to `remove` has no effect on that array.

		If `name` is null, compilation fails with an error.</haxe_doc>
			</remove>
			<has set="method">
				<f a="name">
					<c path="String"/>
					<x path="Bool"/>
				</f>
				<haxe_doc>Tells if the origin of `this` MetaAccess has a `name` metadata entry.

		If `name` is null, compilation fails with an error.</haxe_doc>
			</has>
			<get set="method">
				<f a=""><t path="haxe.macro.Metadata"/></f>
				<haxe_doc>Return the wrapped `Metadata` array.

		Modifying this array has no effect on the origin of `this` MetaAccess.
		The `add` and `remove` methods can be used for that.</haxe_doc>
			</get>
			<add set="method">
				<f a="name:params:pos">
					<c path="String"/>
					<c path="Array"><t path="haxe.macro.Expr"/></c>
					<t path="haxe.macro.Position"/>
					<x path="Void"/>
				</f>
				<haxe_doc>Adds the metadata specified by `name`, `params` and `pos` to the origin
		of `this` MetaAccess.

		Metadata names are not unique during compilation, so this method never
		overwrites a previous metadata.

		If a `Metadata` array is obtained through a call to `get`, a subsequent
		call to `add` has no effect on that array.

		If any argument is null, compilation fails with an error.</haxe_doc>
			</add>
		</a>
		<haxe_doc>MetaAccess is a wrapper for the `Metadata` array. It can be used to add
	metadata to and remove metadata from its origin.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TVar" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<t><e path="haxe.macro.Type"/></t>
	<name><c path="String"/></name>
	<id><x path="Int"/></id>
	<extra><t path="Null"><a>
	<params><c path="Array"><t path="haxe.macro.TypeParameter"/></c></params>
	<expr><t path="Null"><t path="haxe.macro.TypedExpr"/></t></expr>
</a></t></extra>
	<capture><x path="Bool"/></capture>
</a></typedef>
	<typedef path="haxe.macro.TFunc" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<t><e path="haxe.macro.Type"/></t>
	<expr><t path="haxe.macro.TypedExpr"/></expr>
	<args><c path="Array"><a>
	<value><t path="Null"><e path="haxe.macro.TConstant"/></t></value>
	<v><t path="haxe.macro.TVar"/></v>
</a></c></args>
</a></typedef>
	<typedef path="haxe.macro.TypedExpr" params="" file="/usr/lib/haxe/std/haxe/macro/Type.hx" module="haxe.macro.Type"><a>
	<t><e path="haxe.macro.Type"/></t>
	<pos><t path="haxe.macro.Position"/></pos>
	<expr><e path="haxe.macro.TypedExprDef"/></expr>
</a></typedef>
	<class path="haxe.xml._Parser.S" params="" file="/usr/lib/haxe/std/haxe/xml/Parser.hx" private="1" module="haxe.xml.Parser" extern="1">
		<IGNORE_SPACES public="1" get="inline" set="null" line="28" static="1"><x path="Int"/></IGNORE_SPACES>
		<BEGIN public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></BEGIN>
		<BEGIN_NODE public="1" get="inline" set="null" line="30" static="1"><x path="Int"/></BEGIN_NODE>
		<TAG_NAME public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></TAG_NAME>
		<BODY public="1" get="inline" set="null" line="32" static="1"><x path="Int"/></BODY>
		<ATTRIB_NAME public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></ATTRIB_NAME>
		<EQUALS public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></EQUALS>
		<ATTVAL_BEGIN public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></ATTVAL_BEGIN>
		<ATTRIB_VAL public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></ATTRIB_VAL>
		<CHILDS public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></CHILDS>
		<CLOSE public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></CLOSE>
		<WAIT_END public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></WAIT_END>
		<WAIT_END_RET public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></WAIT_END_RET>
		<PCDATA public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></PCDATA>
		<HEADER public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></HEADER>
		<COMMENT public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></COMMENT>
		<DOCTYPE public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></DOCTYPE>
		<CDATA public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></CDATA>
		<ESCAPE public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></ESCAPE>
	</class>
	<class path="js.Boot" params="" file="/usr/lib/haxe/lib/lime/2,0,1/js/Boot.hx">
		<__unhtml set="method" line="26" static="1"><f a="s">
	<c path="String"/>
	<c path="String"/>
</f></__unhtml>
		<__trace set="method" line="30" static="1"><f a="v:i">
	<a>
		<toString set="null"><f a=""><c path="String"/></f></toString>
		<length set="null"><x path="Int"/></length>
		<hasOwnProperty set="null"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></hasOwnProperty>
		<__enum__ set="null"><x path="Bool"/></__enum__>
	</a>
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></__trace>
		<__clear_trace set="method" line="50" static="1"><f a=""><x path="Void"/></f></__clear_trace>
		<isClass get="inline" set="null" line="62" static="1"><f a="o">
	<d/>
	<x path="Bool"/>
</f></isClass>
		<isEnum get="inline" set="null" line="66" static="1"><f a="e">
	<d/>
	<x path="Bool"/>
</f></isEnum>
		<getClass get="inline" set="null" line="70" static="1"><f a="o">
	<d/>
	<d/>
</f></getClass>
		<__string_rec set="method" line="85" static="1">
			<f a="o:s">
				<a>
					<toString set="null"><f a=""><c path="String"/></f></toString>
					<length set="null"><x path="Int"/></length>
					<hasOwnProperty set="null"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></hasOwnProperty>
					<__enum__ set="null"><x path="Bool"/></__enum__>
				</a>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":ifFeature"><e>"may_print_enum"</e></m></meta>
		</__string_rec>
		<__interfLoop set="method" line="157" static="1"><f a="cc:cl">
	<d/>
	<d/>
	<x path="Bool"/>
</f></__interfLoop>
		<__instanceof set="method" line="172" static="1">
			<f a="o:cl">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":ifFeature"><e>"typed_catch"</e></m></meta>
		</__instanceof>
		<__cast set="method" line="211" static="1">
			<f a="o:t">
				<d/>
				<d/>
				<unknown/>
			</f>
			<meta><m n=":ifFeature"><e>"typed_cast"</e></m></meta>
		</__cast>
		<__toStr line="216" static="1"><a><call set="null"><f a="">
	<d/>
	<a><slice set="null"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<unknown/>
</f></slice></a>
</f></call></a></__toStr>
		<__nativeClassName set="method" line="218" static="1"><f a="o">
	<d/>
	<c path="String"/>
</f></__nativeClassName>
		<__isNativeObj set="method" line="228" static="1"><f a="o">
	<d/>
	<x path="Bool"/>
</f></__isNativeObj>
		<__resolveNativeClass set="method" line="233" static="1"><f a="name">
	<c path="String"/>
	<t path="Class<Array>"/>
</f></__resolveNativeClass>
	</class>
	<class path="js.html.EventTarget" params="" file="/usr/lib/haxe/std/js/html/EventTarget.hx" extern="1">
		<addEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<t path="js.html.EventListener"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></addEventListener>
		<dispatchEvent public="1" set="method"><f a="event">
	<c path="js.html.Event"/>
	<x path="Bool"/>
</f></dispatchEvent>
		<removeEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<t path="js.html.EventListener"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></removeEventListener>
		<haxe_doc><![CDATA[An <code>EventTarget</code> is a DOM interface implemented by objects that can receive DOM events and have listeners for them. The most common <code>EventTarget</code>s are <a rel="internal" href="/api/js/html/Element" title="en/DOM/element">DOM elements</a>, although other objects can be <code>EventTarget</code>s too, for example <a rel="internal" href="/api/js/html/Document" title="en/DOM/document">document</a>, <a rel="internal" href="/api/js/html/DOMWindow" title="en/DOM/window">window</a>, <a rel="internal" href="/api/js/html/XMLHttpRequest" title="en/XMLHttpRequest">XMLHttpRequest</a>, and others.
<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/EventTarget">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"EventTarget"</e></m></meta>
	</class>
	<class path="js.html.Node" params="" file="/usr/lib/haxe/std/js/html/Node.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<ATTRIBUTE_NODE public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></ATTRIBUTE_NODE>
		<CDATA_SECTION_NODE public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></CDATA_SECTION_NODE>
		<COMMENT_NODE public="1" get="inline" set="null" line="47" static="1"><x path="Int"/></COMMENT_NODE>
		<DOCUMENT_FRAGMENT_NODE public="1" get="inline" set="null" line="49" static="1"><x path="Int"/></DOCUMENT_FRAGMENT_NODE>
		<DOCUMENT_NODE public="1" get="inline" set="null" line="51" static="1"><x path="Int"/></DOCUMENT_NODE>
		<DOCUMENT_POSITION_CONTAINED_BY public="1" get="inline" set="null" line="53" static="1"><x path="Int"/></DOCUMENT_POSITION_CONTAINED_BY>
		<DOCUMENT_POSITION_CONTAINS public="1" get="inline" set="null" line="55" static="1"><x path="Int"/></DOCUMENT_POSITION_CONTAINS>
		<DOCUMENT_POSITION_DISCONNECTED public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></DOCUMENT_POSITION_DISCONNECTED>
		<DOCUMENT_POSITION_FOLLOWING public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></DOCUMENT_POSITION_FOLLOWING>
		<DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC public="1" get="inline" set="null" line="61" static="1"><x path="Int"/></DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC>
		<DOCUMENT_POSITION_PRECEDING public="1" get="inline" set="null" line="63" static="1"><x path="Int"/></DOCUMENT_POSITION_PRECEDING>
		<DOCUMENT_TYPE_NODE public="1" get="inline" set="null" line="65" static="1"><x path="Int"/></DOCUMENT_TYPE_NODE>
		<ELEMENT_NODE public="1" get="inline" set="null" line="67" static="1"><x path="Int"/></ELEMENT_NODE>
		<ENTITY_NODE public="1" get="inline" set="null" line="69" static="1"><x path="Int"/></ENTITY_NODE>
		<ENTITY_REFERENCE_NODE public="1" get="inline" set="null" line="71" static="1"><x path="Int"/></ENTITY_REFERENCE_NODE>
		<NOTATION_NODE public="1" get="inline" set="null" line="73" static="1"><x path="Int"/></NOTATION_NODE>
		<PROCESSING_INSTRUCTION_NODE public="1" get="inline" set="null" line="75" static="1"><x path="Int"/></PROCESSING_INSTRUCTION_NODE>
		<TEXT_NODE public="1" get="inline" set="null" line="77" static="1"><x path="Int"/></TEXT_NODE>
		<attributes public="1" set="null"><c path="js.html.NamedNodeMap"/></attributes>
		<baseURI public="1" set="null"><c path="String"/></baseURI>
		<childNodes public="1" set="null"><c path="js.html.NodeList"/></childNodes>
		<firstChild public="1" set="null"><c path="js.html.Node"/></firstChild>
		<lastChild public="1" set="null"><c path="js.html.Node"/></lastChild>
		<localName public="1" set="null"><c path="String"/></localName>
		<namespaceURI public="1" set="null"><c path="String"/></namespaceURI>
		<nextSibling public="1" set="null"><c path="js.html.Node"/></nextSibling>
		<nodeName public="1" set="null"><c path="String"/></nodeName>
		<nodeType public="1" set="null"><x path="Int"/></nodeType>
		<nodeValue public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</nodeValue>
		<ownerDocument public="1" set="null"><c path="js.html.Document"/></ownerDocument>
		<parentElement public="1" set="null"><c path="js.html.Element"/></parentElement>
		<parentNode public="1" set="null"><c path="js.html.Node"/></parentNode>
		<prefix public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</prefix>
		<previousSibling public="1" set="null"><c path="js.html.Node"/></previousSibling>
		<textContent public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</textContent>
		<appendChild public="1" set="method"><f a="newChild">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></appendChild>
		<cloneNode public="1" set="method"><f a="deep">
	<x path="Bool"/>
	<c path="js.html.Node"/>
</f></cloneNode>
		<compareDocumentPosition public="1" set="method"><f a="other">
	<c path="js.html.Node"/>
	<x path="Int"/>
</f></compareDocumentPosition>
		<contains public="1" set="method"><f a="other">
	<c path="js.html.Node"/>
	<x path="Bool"/>
</f></contains>
		<hasAttributes public="1" set="method"><f a=""><x path="Bool"/></f></hasAttributes>
		<hasChildNodes public="1" set="method"><f a=""><x path="Bool"/></f></hasChildNodes>
		<insertBefore public="1" set="method"><f a="newChild:refChild">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></insertBefore>
		<isDefaultNamespace public="1" set="method"><f a="?namespaceURI">
	<c path="String"/>
	<x path="Bool"/>
</f></isDefaultNamespace>
		<isEqualNode public="1" set="method"><f a="other">
	<c path="js.html.Node"/>
	<x path="Bool"/>
</f></isEqualNode>
		<isSameNode public="1" set="method"><f a="other">
	<c path="js.html.Node"/>
	<x path="Bool"/>
</f></isSameNode>
		<isSupported public="1" set="method"><f a="feature:?version">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></isSupported>
		<lookupNamespaceURI public="1" set="method"><f a="?prefix">
	<c path="String"/>
	<c path="String"/>
</f></lookupNamespaceURI>
		<lookupPrefix public="1" set="method"><f a="?namespaceURI">
	<c path="String"/>
	<c path="String"/>
</f></lookupPrefix>
		<normalize public="1" set="method"><f a=""><x path="Void"/></f></normalize>
		<removeChild public="1" set="method"><f a="oldChild">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></removeChild>
		<replaceChild public="1" set="method"><f a="newChild:oldChild">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></replaceChild>
		<haxe_doc><![CDATA[A <code>Node</code> is an interface from which a number of DOM types inherit, and allows these various types to be treated (or tested) similarly.<br> The following all inherit this interface and its methods and properties (though they may return null in particular cases where not relevant; or throw an exception when adding children to a node type for which no children can exist): <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Element">Element</a></code>
, <code><a rel="custom" href="/api/js/html/Attr">Attr</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/CharacterData">CharacterData</a></code>
 (which <code><a rel="custom" href="/api/js/html/Text">Text</a></code>
, <code><a rel="custom" href="/api/js/html/Comment">Comment</a></code>
, and <code><a rel="custom" href="/api/js/html/CDATASection">CDATASection</a></code>
 inherit), <code><a rel="custom" href="/api/js/html/ProcessingInstruction">ProcessingInstruction</a></code>
, <code><a rel="custom" href="/api/js/html/DocumentFragment">DocumentFragment</a></code>
, <code><a rel="custom" href="/api/js/html/DocumentType">DocumentType</a></code>
, <code><a rel="custom" href="/api/js/html/Notation">Notation</a></code>
, <code><a rel="custom" href="/api/js/html/Entity">Entity</a></code>
, <code><a rel="custom" href="/api/js/html/EntityReference">EntityReference</a></code><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Node">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Node"</e></m></meta>
	</class>
	<class path="js.html.Element" params="" file="/usr/lib/haxe/std/js/html/Element.hx" extern="1">
		<extends path="js.html.Node"/>
		<ALLOW_KEYBOARD_INPUT public="1" get="inline" set="null" line="90" static="1"><x path="Int"/></ALLOW_KEYBOARD_INPUT>
		<accessKey public="1"><c path="String"/></accessKey>
		<childElementCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of child nodes that are elements.</haxe_doc>
		</childElementCount>
		<children public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[A live <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/XPCOM_Interface_Reference/nsIDOMNodeList&amp;ident=nsIDOMNodeList" class="new">nsIDOMNodeList</a></code>
 of the current child elements.]]></haxe_doc>
		</children>
		<classList public="1" set="null">
			<c path="js.html.DOMTokenList"/>
			<haxe_doc>Token list of class attribute</haxe_doc>
		</classList>
		<className public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the class of the element.</haxe_doc>
		</className>
		<clientHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The inner height of an element.</haxe_doc>
		</clientHeight>
		<clientLeft public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The width of the left border of an element.</haxe_doc>
		</clientLeft>
		<clientTop public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The width of the top border of an element.</haxe_doc>
		</clientTop>
		<clientWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The inner width of an element.</haxe_doc>
		</clientWidth>
		<contentEditable public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets whether or not the element is editable. Setter throws DOMException.</haxe_doc>
		</contentEditable>
		<dataset public="1" set="null">
			<d><c path="String"/></d>
			<haxe_doc>Allows access to read and write custom data attributes on the element.</haxe_doc>
		</dataset>
		<dir public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the directionality of the element.</haxe_doc>
		</dir>
		<draggable public="1"><x path="Bool"/></draggable>
		<dropzone public="1"><c path="String"/></dropzone>
		<firstElementChild public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[The first direct child element of an element, or <code>null</code> if the element has no child elements.]]></haxe_doc>
		</firstElementChild>
		<hidden public="1"><x path="Bool"/></hidden>
		<id public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the id of the element.</haxe_doc>
		</id>
		<innerHTML public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the markup of the element's content. Setter throws DOMException.</haxe_doc>
		</innerHTML>
		<innerText public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</innerText>
		<isContentEditable public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether or not the content of the element can be edited. Read only.</haxe_doc>
		</isContentEditable>
		<lang public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the language of an element's attributes, text, and element contents.</haxe_doc>
		</lang>
		<lastElementChild public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[The last direct child element of an element, or <code>null</code> if the element has no child elements.]]></haxe_doc>
		</lastElementChild>
		<nextElementSibling public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[The element immediately following the given one in the tree, or <code>null</code> if there's no sibling node.]]></haxe_doc>
		</nextElementSibling>
		<offsetHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The height of an element, relative to the layout.</haxe_doc>
		</offsetHeight>
		<offsetLeft public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The distance from this element's left border to its <code>offsetParent</code>'s left border.]]></haxe_doc>
		</offsetLeft>
		<offsetParent public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>The element from which all offset calculations are currently computed.</haxe_doc>
		</offsetParent>
		<offsetTop public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The distance from this element's top border to its <code>offsetParent</code>'s top border.]]></haxe_doc>
		</offsetTop>
		<offsetWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The width of an element, relative to the layout.</haxe_doc>
		</offsetWidth>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onbeforecopy public="1"><t path="js.html.EventListener"/></onbeforecopy>
		<onbeforecut public="1"><t path="js.html.EventListener"/></onbeforecut>
		<onbeforepaste public="1"><t path="js.html.EventListener"/></onbeforepaste>
		<onblur public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the blur event.</haxe_doc>
		</onblur>
		<onchange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the change event.</haxe_doc>
		</onchange>
		<onclick public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the click event.</haxe_doc>
		</onclick>
		<oncontextmenu public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the contextmenu event.</haxe_doc>
		</oncontextmenu>
		<oncopy public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the copy event.</haxe_doc>
		</oncopy>
		<oncut public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the cut event.</haxe_doc>
		</oncut>
		<ondblclick public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the dblclick event.</haxe_doc>
		</ondblclick>
		<ondrag public="1"><t path="js.html.EventListener"/></ondrag>
		<ondragend public="1"><t path="js.html.EventListener"/></ondragend>
		<ondragenter public="1"><t path="js.html.EventListener"/></ondragenter>
		<ondragleave public="1"><t path="js.html.EventListener"/></ondragleave>
		<ondragover public="1"><t path="js.html.EventListener"/></ondragover>
		<ondragstart public="1"><t path="js.html.EventListener"/></ondragstart>
		<ondrop public="1"><t path="js.html.EventListener"/></ondrop>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onfocus public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the focus event.</haxe_doc>
		</onfocus>
		<onfullscreenchange public="1"><t path="js.html.EventListener"/></onfullscreenchange>
		<onfullscreenerror public="1"><t path="js.html.EventListener"/></onfullscreenerror>
		<oninput public="1"><t path="js.html.EventListener"/></oninput>
		<oninvalid public="1"><t path="js.html.EventListener"/></oninvalid>
		<onkeydown public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the keydown event.</haxe_doc>
		</onkeydown>
		<onkeypress public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the keypress event.</haxe_doc>
		</onkeypress>
		<onkeyup public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the keyup event.</haxe_doc>
		</onkeyup>
		<onload public="1"><t path="js.html.EventListener"/></onload>
		<onmousedown public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mousedown event.</haxe_doc>
		</onmousedown>
		<onmousemove public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mousemove event.</haxe_doc>
		</onmousemove>
		<onmouseout public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mouseout event.</haxe_doc>
		</onmouseout>
		<onmouseover public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mouseover event.</haxe_doc>
		</onmouseover>
		<onmouseup public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the mouseup event.</haxe_doc>
		</onmouseup>
		<onmousewheel public="1"><t path="js.html.EventListener"/></onmousewheel>
		<onpaste public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the paste event.</haxe_doc>
		</onpaste>
		<onreset public="1"><t path="js.html.EventListener"/></onreset>
		<onscroll public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>Returns the event handling code for the scroll event.</haxe_doc>
		</onscroll>
		<onsearch public="1"><t path="js.html.EventListener"/></onsearch>
		<onselect public="1"><t path="js.html.EventListener"/></onselect>
		<onselectstart public="1"><t path="js.html.EventListener"/></onselectstart>
		<onsubmit public="1"><t path="js.html.EventListener"/></onsubmit>
		<ontouchcancel public="1"><t path="js.html.EventListener"/></ontouchcancel>
		<ontouchend public="1"><t path="js.html.EventListener"/></ontouchend>
		<ontouchmove public="1"><t path="js.html.EventListener"/></ontouchmove>
		<ontouchstart public="1"><t path="js.html.EventListener"/></ontouchstart>
		<outerHTML public="1">
			<c path="String"/>
			<haxe_doc>Gets the markup of the element including its content. When used as a setter, replaces the element with nodes parsed from the given string. Setter throws DOMException.</haxe_doc>
		</outerHTML>
		<outerText public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</outerText>
		<previousElementSibling public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[The element immediately preceding the given one in the tree, or <code>null</code> if there is no sibling element.]]></haxe_doc>
		</previousElementSibling>
		<pseudo public="1"><c path="String"/></pseudo>
		<scrollHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The scroll view height of an element.</haxe_doc>
		</scrollHeight>
		<scrollLeft public="1">
			<x path="Int"/>
			<haxe_doc>Gets/sets the left scroll offset of an element.</haxe_doc>
		</scrollLeft>
		<scrollTop public="1">
			<x path="Int"/>
			<haxe_doc>Gets/sets the top scroll offset of an element.</haxe_doc>
		</scrollTop>
		<scrollWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The scroll view width of an element.</haxe_doc>
		</scrollWidth>
		<spellcheck public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Controls <a title="en/Controlling_spell_checking_in_HTML_forms" rel="internal" href="https://developer.mozilla.org/en/HTML/Controlling_spell_checking_in_HTML_forms">spell-checking</a> (present on all HTML&nbsp;elements)]]></haxe_doc>
		</spellcheck>
		<style public="1" set="null">
			<c path="js.html.CSSStyleDeclaration"/>
			<haxe_doc>An object representing the declarations of an element's style attributes.</haxe_doc>
		</style>
		<tabIndex public="1">
			<x path="Int"/>
			<haxe_doc>Gets/sets the position of the element in the tabbing order.</haxe_doc>
		</tabIndex>
		<tagName public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of the tag for the given element.</haxe_doc>
		</tagName>
		<title public="1">
			<c path="String"/>
			<haxe_doc>A string that appears in a popup box when mouse is over the element.</haxe_doc>
		</title>
		<translate public="1"><x path="Bool"/></translate>
		<blur public="1" set="method"><f a=""><x path="Void"/></f></blur>
		<click public="1" set="method"><f a=""><x path="Void"/></f></click>
		<focus public="1" set="method"><f a=""><x path="Void"/></f></focus>
		<getAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="String"/>
</f></getAttribute>
		<getAttributeNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></getAttributeNS>
		<getAttributeNode public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></getAttributeNode>
		<getAttributeNodeNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></getAttributeNodeNS>
		<getBoundingClientRect public="1" set="method"><f a=""><c path="js.html.ClientRect"/></f></getBoundingClientRect>
		<getClientRects public="1" set="method"><f a=""><c path="js.html.ClientRectList"/></f></getClientRects>
		<getElementsByClassName public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByClassName>
		<getElementsByTagName public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByTagName>
		<getElementsByTagNameNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByTagNameNS>
		<hasAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasAttribute>
		<hasAttributeNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></hasAttributeNS>
		<insertAdjacentElement public="1" set="method"><f a="where:element">
	<c path="String"/>
	<c path="js.html.Element"/>
	<c path="js.html.Element"/>
</f></insertAdjacentElement>
		<insertAdjacentHTML public="1" set="method"><f a="where:html">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></insertAdjacentHTML>
		<insertAdjacentText public="1" set="method"><f a="where:text">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></insertAdjacentText>
		<matchesSelector public="1" set="method"><f a="selectors">
	<c path="String"/>
	<x path="Bool"/>
</f></matchesSelector>
		<querySelector public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></querySelector>
		<querySelectorAll public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></querySelectorAll>
		<remove public="1" set="method"><f a=""><x path="Void"/></f></remove>
		<removeAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></removeAttribute>
		<removeAttributeNS public="1" set="method"><f a="namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></removeAttributeNS>
		<removeAttributeNode public="1" set="method"><f a="oldAttr">
	<c path="js.html.Attr"/>
	<c path="js.html.Attr"/>
</f></removeAttributeNode>
		<requestFullScreen public="1" set="method"><f a="flags">
	<x path="Int"/>
	<x path="Void"/>
</f></requestFullScreen>
		<requestFullscreen public="1" set="method"><f a=""><x path="Void"/></f></requestFullscreen>
		<requestPointerLock public="1" set="method"><f a=""><x path="Void"/></f></requestPointerLock>
		<scrollByLines public="1" set="method"><f a="lines">
	<x path="Int"/>
	<x path="Void"/>
</f></scrollByLines>
		<scrollByPages public="1" set="method"><f a="pages">
	<x path="Int"/>
	<x path="Void"/>
</f></scrollByPages>
		<scrollIntoView public="1" set="method"><f a="?alignWithTop">
	<x path="Bool"/>
	<x path="Void"/>
</f></scrollIntoView>
		<scrollIntoViewIfNeeded public="1" set="method"><f a="?centerIfNeeded">
	<x path="Bool"/>
	<x path="Void"/>
</f></scrollIntoViewIfNeeded>
		<setAttribute public="1" set="method"><f a="name:value">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setAttribute>
		<setAttributeNS public="1" set="method"><f a="?namespaceURI:qualifiedName:value">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setAttributeNS>
		<setAttributeNode public="1" set="method"><f a="newAttr">
	<c path="js.html.Attr"/>
	<c path="js.html.Attr"/>
</f></setAttributeNode>
		<setAttributeNodeNS public="1" set="method"><f a="newAttr">
	<c path="js.html.Attr"/>
	<c path="js.html.Attr"/>
</f></setAttributeNodeNS>
		<haxe_doc><![CDATA[<p>This chapter provides a brief reference for the general methods, properties, and events available to most HTML and XML elements in the Gecko DOM.</p>
<p>Various W3C specifications apply to elements:</p>
<ul> <li><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Core/" title="http://www.w3.org/TR/DOM-Level-2-Core/" target="_blank">DOM Core Specification</a>—describes the core interfaces shared by most DOM objects in HTML and XML documents</li> <li><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/" title="http://www.w3.org/TR/DOM-Level-2-HTML/" target="_blank">DOM HTML Specification</a>—describes interfaces for objects in HTML and XHTML documents that build on the core specification</li> <li><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Events/" title="http://www.w3.org/TR/DOM-Level-2-Events/" target="_blank">DOM Events Specification</a>—describes events shared by most DOM objects, building on the DOM Core and <a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Views/" title="http://www.w3.org/TR/DOM-Level-2-Views/" target="_blank">Views</a> specifications</li> <li><a class="external" title="http://www.w3.org/TR/ElementTraversal/" rel="external" href="http://www.w3.org/TR/ElementTraversal/" target="_blank">Element Traversal Specification</a>—describes the new attributes that allow traversal of elements in the DOM&nbsp;tree 
<span>New in <a rel="custom" href="https://developer.mozilla.org/en/Firefox_3.5_for_developers">Firefox 3.5</a></span>
</li>
</ul>
<p>The articles listed here span the above and include links to the appropriate W3C DOM specification.</p>
<p>While these interfaces are generally shared by most HTML and XML elements, there are more specialized interfaces for particular objects listed in the DOM HTML Specification. Note, however, that these HTML&nbsp;interfaces are "only for [HTML 4.01] and [XHTML 1.0] documents and are not guaranteed to work with any future version of XHTML." The HTML 5 draft does state it aims for backwards compatibility with these HTML&nbsp;interfaces but says of them that "some features that were formerly deprecated, poorly supported, rarely used or considered unnecessary have been removed." One can avoid the potential conflict by moving entirely to DOM&nbsp;XML attribute methods such as <code>getAttribute()</code>.</p>
<p><code><a rel="custom" href="https://developer.mozilla.org/en/DOM/HTMLHtmlElement">Html</a></code>
, <code><a rel="custom" href="/api/js/html/HeadElement">Head</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/HTMLLinkElement">Link</a></code>
, <code><a rel="custom" href="/api/js/html/TitleElement">Title</a></code>
, <code><a rel="custom" href="/api/js/html/MetaElement">Meta</a></code>
, <code><a rel="custom" href="/api/js/html/BaseElement">Base</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/HTMLIsIndexElement" class="new">IsIndex</a></code>
, <code><a rel="custom" href="/api/js/html/StyleElement">Style</a></code>
, <code><a rel="custom" href="/api/js/html/BodyElement">Body</a></code>
, <code><a rel="custom" href="/api/js/html/FormElement">Form</a></code>
, <code><a rel="custom" href="/api/js/html/SelectElement">Select</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/HTMLOptGroupElement" class="new">OptGroup</a></code>
, <a title="en/HTML/Element/HTMLOptionElement" rel="internal" href="https://developer.mozilla.org/en/HTML/Element/HTMLOptionElement" class="new ">Option</a>, <code><a rel="custom" href="/api/js/html/InputElement">Input</a></code>
, <code><a rel="custom" href="/api/js/html/TextAreaElement">TextArea</a></code>
, <code><a rel="custom" href="/api/js/html/ButtonElement">Button</a></code>
, <code><a rel="custom" href="/api/js/html/LabelElement">Label</a></code>
, <code><a rel="custom" href="/api/js/html/FieldSetElement">FieldSet</a></code>
, <code><a rel="custom" href="/api/js/html/LegendElement">Legend</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/HTMLUListElement" class="new">UList</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/OList" class="new">OList</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/DList" class="new">DList</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Directory" class="new">Directory</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Menu" class="new">Menu</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/LI" class="new">LI</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Div" class="new">Div</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Paragraph" class="new">Paragraph</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Heading" class="new">Heading</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Quote" class="new">Quote</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Pre" class="new">Pre</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/BR" class="new">BR</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/BaseFont" class="new">BaseFont</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Font" class="new">Font</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/HR" class="new">HR</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Mod" class="new">Mod</a></code>
, <code><a rel="custom" href="/api/js/html/AnchorElement">Anchor</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Image" class="new">Image</a></code>
, <code><a rel="custom" href="/api/js/html/ObjectElement">Object</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Param" class="new">Param</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Applet" class="new">Applet</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Map" class="new">Map</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Area" class="new">Area</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Script" class="new">Script</a></code>
, <code><a rel="custom" href="/api/js/html/TableElement">Table</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/TableCaption" class="new">TableCaption</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/TableCol" class="new">TableCol</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/TableSection" class="new">TableSection</a></code>
, <code><a rel="custom" href="/api/js/html/TableRowElement">TableRow</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/TableCell" class="new">TableCell</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/FrameSet" class="new">FrameSet</a></code>
, <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Frame" class="new">Frame</a></code>
, <code><a rel="custom" href="/api/js/html/IFrameElement">IFrame</a></code>
</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/element">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Element"</e></m></meta>
	</class>
	<class path="js.html.AnchorElement" params="" file="/usr/lib/haxe/std/js/html/AnchorElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<charset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The character encoding of the linked resource. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</charset>
		<coords public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Comma-separated list of coordinates. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</coords>
		<download public="1"><c path="String"/></download>
		<hash public="1">
			<c path="String"/>
			<haxe_doc>The fragment identifier (including the leading hash mark (#)), if any, in the referenced URL.</haxe_doc>
		</hash>
		<host public="1">
			<c path="String"/>
			<haxe_doc>The hostname and port (if it's not the default port) in the referenced URL.</haxe_doc>
		</host>
		<hostname public="1">
			<c path="String"/>
			<haxe_doc>The hostname in the referenced URL.</haxe_doc>
		</hostname>
		<href public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-href">href</a></code>
 HTML attribute, containing a valid URL of a linked resource.]]></haxe_doc>
		</href>
		<hreflang public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-hreflang">hreflang</a></code>
 HTML&nbsp;attribute, indicating the language of the linked resource.]]></haxe_doc>
		</hreflang>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Anchor name. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</name>
		<origin public="1" set="null"><c path="String"/></origin>
		<pathname public="1">
			<c path="String"/>
			<haxe_doc>The path name component, if any, of the referenced URL.</haxe_doc>
		</pathname>
		<ping public="1"><c path="String"/></ping>
		<port public="1">
			<c path="String"/>
			<haxe_doc>The port component, if any, of the referenced URL.</haxe_doc>
		</port>
		<protocol public="1">
			<c path="String"/>
			<haxe_doc>The protocol component (including trailing colon (:)), of the referenced URL.</haxe_doc>
		</protocol>
		<rel public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-rel">rel</a></code>
 HTML attribute, specifying the relationship of the target object to the link object.]]></haxe_doc>
		</rel>
		<rev public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reverse link type. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</rev>
		<search public="1">
			<c path="String"/>
			<haxe_doc>The search element (including leading question mark (?)), if any, of the referenced URL</haxe_doc>
		</search>
		<shape public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The shape of the active area. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</shape>
		<target public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflectst the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-target">target</a></code>
 HTML attribute, indicating where to display the linked resource.]]></haxe_doc>
		</target>
		<text public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Same as the <strong><a title="https://developer.mozilla.org/En/DOM/Node.textContent" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.textContent">textContent</a></strong> property.]]></haxe_doc>
		</text>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-type">type</a></code>
 HTML attribute, indicating the MIME type of the linked resource.]]></haxe_doc>
		</type>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<haxe_doc><![CDATA[DOM anchor elements expose the <a target="_blank" href="http://www.w3.org/TR/html5/text-level-semantics.html#htmlanchorelement" rel="external nofollow" class=" external" title="http://www.w3.org/TR/html5/text-level-semantics.html#htmlanchorelement">HTMLAnchorElement</a> (or <span><a href="https://developer.mozilla.org/en/HTML" rel="custom nofollow">HTML 4</a></span> <a target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-48250443" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-48250443" rel="external nofollow" class=" external"><code>HTMLAnchorElement</code></a>) interface, which provides special properties and methods (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of hyperlink elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLAnchorElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAnchorElement"</e></m></meta>
	</class>
	<class path="js.html.AppletElement" params="" file="/usr/lib/haxe/std/js/html/AppletElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute is used to position the applet on the page relative to content that might flow around it. The HTML 4.01 specification defines values of bottom, left, middle, right, and top, whereas Microsoft and Netscape also might support <strong>absbottom</strong>, <strong>absmiddle</strong>, <strong>baseline</strong>, <strong>center</strong>, and <strong>texttop</strong>.]]></haxe_doc>
		</align>
		<alt public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute causes a descriptive text alternate to be displayed on browsers that do not support Java. Page designers should also remember that content enclosed within the <code>&lt;applet&gt;</code> element may also be rendered as alternative text.]]></haxe_doc>
		</alt>
		<archive public="1">
			<c path="String"/>
			<haxe_doc>This attribute refers to an archived or compressed version of the applet and its associated class files, which might help reduce download time.</haxe_doc>
		</archive>
		<code public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the URL of the applet's class file to be loaded and executed. Applet filenames are identified by a .class filename extension. The URL specified by code might be relative to the <code>codebase</code> attribute.]]></haxe_doc>
		</code>
		<codeBase public="1"><c path="String"/></codeBase>
		<height public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies the height, in pixels, that the applet needs.</haxe_doc>
		</height>
		<hspace public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies additional horizontal space, in pixels, to be reserved on either side of the applet.</haxe_doc>
		</hspace>
		<name public="1">
			<c path="String"/>
			<haxe_doc>This attribute assigns a name to the applet so that it can be identified by other resources; particularly scripts.</haxe_doc>
		</name>
		<object public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies the URL of a serialized representation of an applet.</haxe_doc>
		</object>
		<vspace public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies additional vertical space, in pixels, to be reserved above and below the applet.</haxe_doc>
		</vspace>
		<width public="1">
			<c path="String"/>
			<haxe_doc>This attribute specifies in pixels the width that the applet needs.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[Obsolete<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/applet">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAppletElement"</e></m></meta>
	</class>
	<class path="js.html.AreaElement" params="" file="/usr/lib/haxe/std/js/html/AreaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<alt public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-alt">alt</a></code>
 HTML attribute, containing alternative text for the element.]]></haxe_doc>
		</alt>
		<coords public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-coords">coords</a></code>
 HTML attribute, containing coordinates to define the hot-spot region.]]></haxe_doc>
		</coords>
		<hash public="1" set="null">
			<c path="String"/>
			<haxe_doc>The fragment identifier (including the leading hash mark (#)), if any, in the referenced URL.</haxe_doc>
		</hash>
		<host public="1" set="null">
			<c path="String"/>
			<haxe_doc>The hostname and port (if it's not the default port) in the referenced URL.</haxe_doc>
		</host>
		<hostname public="1" set="null">
			<c path="String"/>
			<haxe_doc>The hostname in the referenced URL.</haxe_doc>
		</hostname>
		<href public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-href">href</a></code>
 HTML attribute, containing a valid URL&nbsp;of a linked resource.]]></haxe_doc>
		</href>
		<noHref public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates that this area is inactive. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</noHref>
		<pathname public="1" set="null">
			<c path="String"/>
			<haxe_doc>The path name component, if any, of the referenced URL.</haxe_doc>
		</pathname>
		<ping public="1"><c path="String"/></ping>
		<port public="1" set="null">
			<c path="String"/>
			<haxe_doc>The port component, if any, of the referenced URL.</haxe_doc>
		</port>
		<protocol public="1" set="null">
			<c path="String"/>
			<haxe_doc>The protocol component (including trailing colon (:)), of the referenced URL.</haxe_doc>
		</protocol>
		<search public="1" set="null">
			<c path="String"/>
			<haxe_doc>The search element (including leading question mark (?)), if any, of the referenced URL</haxe_doc>
		</search>
		<shape public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-shape">shape</a></code>
 HTML&nbsp;attribute, indicating the shape of the hot-spot, limited to known values.]]></haxe_doc>
		</shape>
		<target public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area#attr-target">target</a></code>
 HTML&nbsp;attribute, indicating the browsing context in which to open the linked resource.]]></haxe_doc>
		</target>
		<haxe_doc><![CDATA[DOM area objects expose the <a class=" external" title="http://www.w3.org/TR/html5/the-map-element.html#htmlareaelement" rel="external" href="http://www.w3.org/TR/html5/the-map-element.html#htmlareaelement" target="_blank">HTMLAreaElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26019118" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26019118" target="_blank"><code>HTMLAreaElement</code></a>) interface, which provides special properties and methods (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of area elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLAreaElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAreaElement"</e></m></meta>
	</class>
	<class path="js.html.ArrayBuffer" params="" file="/usr/lib/haxe/std/js/html/ArrayBuffer.hx" extern="1">
		<byteLength public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The size, in bytes, of the array. This is established when the array is constructed and cannot be changed. <strong>Read only.</strong>]]></haxe_doc>
		</byteLength>
		<slice public="1" set="method"><f a="begin:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBuffer"/>
</f></slice>
		<new public="1" set="method"><f a="?arg0">
	<d/>
	<x path="Void"/>
</f></new>
		<haxe_doc><![CDATA[The <code>ArrayBuffer</code> is a data type that is used to represent a generic, fixed-length binary data buffer. You can't directly manipulate the contents of an <code>ArrayBuffer</code>; instead, you create an <a title="en/JavaScript typed arrays/ArrayBufferView" rel="internal" href="/api/js/html/ArrayBufferView"><code>ArrayBufferView</code></a> object which represents the buffer in a specific format, and use that to read and write the contents of the buffer.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ArrayBuffer"</e></m></meta>
	</class>
	<class path="js.html.ArrayBufferView" params="" file="/usr/lib/haxe/std/js/html/ArrayBufferView.hx" extern="1">
		<buffer public="1" set="null">
			<c path="js.html.ArrayBuffer"/>
			<haxe_doc><![CDATA[The buffer this view references. <strong>Read only.</strong>]]></haxe_doc>
		</buffer>
		<byteLength public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The length, in bytes, of the view. <strong>Read only.</strong>]]></haxe_doc>
		</byteLength>
		<byteOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The offset, in bytes, to the first byte of the view within the <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>.]]></haxe_doc>
		</byteOffset>
		<haxe_doc><![CDATA[<p>The <code>ArrayBufferView</code> type describes a particular view on the contents of an <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="/api/js/html/ArrayBuffer"><code>ArrayBuffer</code></a>'s data.</p>
<p>Of note is that you may create multiple views into the same buffer, each looking at the buffer's contents starting at a particular offset. This makes it possible to set up views of different data types to read the contents of a buffer based on the types of data at specific offsets into the buffer.</p>
<div class="note"><strong>Note:</strong> Typically, you'll instantiate one of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">subclasses</a> of this object instead of this base class. Those provide access to the data formatted using specific data types.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ArrayBufferView"</e></m></meta>
	</class>
	<class path="js.html.Attr" params="" file="/usr/lib/haxe/std/js/html/Attr.hx" extern="1">
		<extends path="js.html.Node"/>
		<isId public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the attribute is an "ID attribute". An "ID attribute" being an attribute which value is expected to be unique across a DOM Document. In HTML DOM, "id" is the only ID attribute, but XML documents could define others. Whether or not an attribute is unique is often determined by a DTD or other schema description.</haxe_doc>
		</isId>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>The attribute's name.</haxe_doc>
		</name>
		<ownerElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>This property has been deprecated and will be removed in the future. Since you can only get Attr objects from elements, you should already know th</haxe_doc>
		</ownerElement>
		<specified public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This property has been deprecated and will be removed in the future; it now always returns <code>true</code>.]]></haxe_doc>
		</specified>
		<value public="1">
			<c path="String"/>
			<haxe_doc>The attribute's value. Setter throws DOMException.</haxe_doc>
		</value>
		<haxe_doc><![CDATA[<p>This type represents a DOM&nbsp;element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Element.getAttribute">Element.getAttribute()</a></code>
, but certain functions (e.g., <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Element.getAttributeNode">Element.getAttributeNode()</a></code>
)&nbsp;or means of iterating give <code>Attr</code> types.</p>
<div class="warning"><strong>Warning:</strong> In DOM Core 1, 2 and 3, Attr inherited from Node. This is no longer the case in <a class="external" rel="external" href="http://www.w3.org/TR/dom/" title="http://www.w3.org/TR/dom/" target="_blank">DOM4</a>. In order to bring the implementation of <code>Attr</code> up to specification, work is underway to change it to no longer inherit from <code><a rel="custom" href="/api/js/html/Node">Node</a></code>
. You should not be using any <code><a rel="custom" href="/api/js/html/Node">Node</a></code>
 properties or methods on <code>Attr</code> objects. Starting in Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, the ones that are going to be removed output warning messages to the console. You should revise your code accordingly. See <a rel="custom" href="https://developer.mozilla.org/en/DOM/Attr#Deprecated_properties_and_methods">Deprecated properties and methods</a> for a complete list.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Attr">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Attr"</e></m></meta>
	</class>
	<class path="js.html.MediaElement" params="" file="/usr/lib/haxe/std/js/html/MediaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<HAVE_CURRENT_DATA public="1" get="inline" set="null" line="34" static="1">
			<x path="Int"/>
			<haxe_doc>Data is available for the current playback position, but not enough to actually play more than one frame.</haxe_doc>
		</HAVE_CURRENT_DATA>
		<HAVE_ENOUGH_DATA public="1" get="inline" set="null" line="37" static="1">
			<x path="Int"/>
			<haxe_doc>Enough data is available—and the download rate is high enough—that the media can be played through to the end without interruption.</haxe_doc>
		</HAVE_ENOUGH_DATA>
		<HAVE_FUTURE_DATA public="1" get="inline" set="null" line="40" static="1">
			<x path="Int"/>
			<haxe_doc>Data for the current playback position as well as for at least a little bit of time into the future is available (in other words, at least two frames of video, for example).</haxe_doc>
		</HAVE_FUTURE_DATA>
		<HAVE_METADATA public="1" get="inline" set="null" line="43" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Enough of the media resource has been retrieved that the metadata attributes are initialized.&nbsp; Seeking will no longer raise an exception.]]></haxe_doc>
		</HAVE_METADATA>
		<HAVE_NOTHING public="1" get="inline" set="null" line="46" static="1">
			<x path="Int"/>
			<haxe_doc>No information is available about the media resource.</haxe_doc>
		</HAVE_NOTHING>
		<NETWORK_EMPTY public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></NETWORK_EMPTY>
		<NETWORK_IDLE public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></NETWORK_IDLE>
		<NETWORK_LOADING public="1" get="inline" set="null" line="52" static="1"><x path="Int"/></NETWORK_LOADING>
		<NETWORK_NO_SOURCE public="1" get="inline" set="null" line="54" static="1"><x path="Int"/></NETWORK_NO_SOURCE>
		<audioDecodedByteCount public="1" set="null"><x path="Int"/></audioDecodedByteCount>
		<autoplay public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-autoplay">autoplay</a></code>
 HTML&nbsp;attribute, indicating whether to begin playing as soon as enough media is available.]]></haxe_doc>
		</autoplay>
		<buffered public="1" set="null">
			<c path="js.html.TimeRanges"/>
			<haxe_doc>The ranges of the media source that the browser has buffered, if any.</haxe_doc>
		</buffered>
		<closedCaptionsVisible public="1"><x path="Bool"/></closedCaptionsVisible>
		<controller public="1"><c path="js.html.MediaController"/></controller>
		<controls public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-controls">controls</a></code>
 HTML attribute, indicating whether user interface items for controlling the resource should be displayed.]]></haxe_doc>
		</controls>
		<currentSrc public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The absolute URL of the chosen media resource (if, for example, the server selects a media file based on the resolution of the user's display), or an empty string if the <code>networkState</code> is <code>EMPTY</code>.]]></haxe_doc>
		</currentSrc>
		<currentTime public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The current playback time, in seconds.&nbsp; Setting this value seeks the media to the new time. Setter throws DOMException.]]></haxe_doc>
		</currentTime>
		<defaultMuted public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-muted">muted</a></code>
 HTML attribute, indicating whether the media element's audio output should be muted by default. Changing the value dynamically will not unmute the audio (it only controls the default state).]]></haxe_doc>
		</defaultMuted>
		<defaultPlaybackRate public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The default playback rate for the media.&nbsp; The Ogg backend does not support this.&nbsp; 1.0 is "normal speed," values lower than 1.0 make the media play slower than normal, higher values make it play faster.&nbsp; The value 0.0 is invalid and throws a <code>NOT_SUPPORTED_ERR</code>&nbsp;exception.]]></haxe_doc>
		</defaultPlaybackRate>
		<duration public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[The length of the media in seconds, or zero if no media data is available.&nbsp; If the media data is available but the length is unknown, this value is <code>NaN</code>.&nbsp; If the media is streamed and has no predefined length, the value is <code>Inf</code>.]]></haxe_doc>
		</duration>
		<ended public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the media element has ended playback.</haxe_doc>
		</ended>
		<error public="1" set="null">
			<c path="js.html.MediaError"/>
			<haxe_doc>The media error object for the most recent error, or null if there has not been an error.</haxe_doc>
		</error>
		<hasClosedCaptions public="1" set="null"><x path="Bool"/></hasClosedCaptions>
		<initialTime public="1" set="null"><x path="Float"/></initialTime>
		<loop public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-loop">loop</a></code>
 HTML&nbsp;attribute, indicating whether the media element should start over when it reaches the end.]]></haxe_doc>
		</loop>
		<mediaGroup public="1"><c path="String"/></mediaGroup>
		<muted public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the audio is muted, and <code>false</code> otherwise.]]></haxe_doc>
		</muted>
		<networkState public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[<p>The current state of fetching the media over the network.</p> <table class="standard-table"> <tbody> <tr> <td class="header">Constant</td> <td class="header">Value</td> <td class="header">Description</td> </tr> <tr> <td><code>EMPTY</code></td> <td>0</td> <td>There is no data yet.&nbsp; The <code>readyState</code> is also <code>HAVE_NOTHING</code>.</td> </tr> <tr> <td><code>LOADING</code></td> <td>1</td> <td>The media is loading.</td> </tr> <tr> <td><code>LOADED_METADATA</code></td> <td>2</td> <td>The media's metadata has been loaded.</td> </tr> <tr> <td><code>LOADED_FIRST_FRAME</code></td> <td>3</td> <td>The media's first frame has been loaded.</td> </tr> <tr> <td><code>LOADED</code></td> <td>4</td> <td>The media has been fully loaded.</td> </tr> </tbody> </table>]]></haxe_doc>
		</networkState>
		<onkeyadded public="1"><t path="js.html.EventListener"/></onkeyadded>
		<onkeyerror public="1"><t path="js.html.EventListener"/></onkeyerror>
		<onkeymessage public="1"><t path="js.html.EventListener"/></onkeymessage>
		<onneedkey public="1"><t path="js.html.EventListener"/></onneedkey>
		<paused public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the media element is paused.</haxe_doc>
		</paused>
		<playbackRate public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The current rate at which the media is being played back. This is used to implement user controls for fast forward, slow motion, and so forth. The normal playback rate is multiplied by this value to obtain the current rate, so a value of 1.0 indicates normal speed.&nbsp; Not supported by the Ogg backend.]]></haxe_doc>
		</playbackRate>
		<played public="1" set="null">
			<c path="js.html.TimeRanges"/>
			<haxe_doc>The ranges of the media source that the browser has played, if any.</haxe_doc>
		</played>
		<preload public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-preload">preload</a></code>
 HTML attribute, indicating what data should be preloaded at page-load time, if any.]]></haxe_doc>
		</preload>
		<preservesPitch public="1"><x path="Bool"/></preservesPitch>
		<readyState public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[<p>The readiness state of the media:</p> <table class="standard-table"> <tbody> <tr> <td class="header">Constant</td> <td class="header">Value</td> <td class="header">Description</td> </tr> <tr> <td><code>HAVE_NOTHING</code></td> <td>0</td> <td>No information is available about the media resource.</td> </tr> <tr> <td><code>HAVE_METADATA</code></td> <td>1</td> <td>Enough of the media resource has been retrieved that the metadata attributes are initialized.&nbsp; Seeking will no longer raise an exception.</td> </tr> <tr> <td><code>HAVE_CURRENT_DATA</code></td> <td>2</td> <td>Data is available for the current playback position, but not enough to actually play more than one frame.</td> </tr> <tr> <td><code>HAVE_FUTURE_DATA</code></td> <td>3</td> <td>Data for the current playback position as well as for at least a little bit of time into the future is available (in other words, at least two frames of video, for example).</td> </tr> <tr> <td><code>HAVE_ENOUGH_DATA</code></td> <td>4</td> <td>Enough data is available—and the download rate is high enough—that the media can be played through to the end without interruption.</td> </tr> </tbody> </table>]]></haxe_doc>
		</readyState>
		<seekable public="1" set="null">
			<c path="js.html.TimeRanges"/>
			<haxe_doc>The time ranges that the user is able to seek to, if any.</haxe_doc>
		</seekable>
		<seeking public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the media is in the process of seeking to a new position.</haxe_doc>
		</seeking>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-src">src</a></code>
 HTML attribute, containing the URL of a media resource to use.]]></haxe_doc>
		</src>
		<startTime public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The earliest possible position in the media, in seconds.</haxe_doc>
		</startTime>
		<textTracks public="1" set="null"><c path="js.html.TextTrackList"/></textTracks>
		<videoDecodedByteCount public="1" set="null"><x path="Int"/></videoDecodedByteCount>
		<volume public="1">
			<x path="Float"/>
			<haxe_doc>The audio volume, from 0.0 (silent) to 1.0 (loudest). Setter throws DOMException.</haxe_doc>
		</volume>
		<addKey public="1" set="method"><f a="keySystem:key:?initData:sessionId">
	<c path="String"/>
	<c path="js.html.Uint8Array"/>
	<c path="js.html.Uint8Array"/>
	<c path="String"/>
	<x path="Void"/>
</f></addKey>
		<addTextTrack public="1" set="method"><f a="kind:?label:?language">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.TextTrack"/>
</f></addTextTrack>
		<canPlayType public="1" set="method"><f a="type:?keySystem">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></canPlayType>
		<cancelKeyRequest public="1" set="method"><f a="keySystem:sessionId">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></cancelKeyRequest>
		<generateKeyRequest public="1" set="method"><f a="keySystem:?initData">
	<c path="String"/>
	<c path="js.html.Uint8Array"/>
	<x path="Void"/>
</f></generateKeyRequest>
		<load public="1" set="method"><f a=""><x path="Void"/></f></load>
		<pause public="1" set="method"><f a=""><x path="Void"/></f></pause>
		<play public="1" set="method"><f a=""><x path="Void"/></f></play>
		<haxe_doc><![CDATA[HTML media elements (such as <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/audio">&lt;audio&gt;</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
) expose the <code>HTMLMediaElement</code> interface which provides special properties and methods (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of media elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLMediaElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMediaElement"</e></m></meta>
	</class>
	<class path="js.html.AudioElement" params="" file="/usr/lib/haxe/std/js/html/AudioElement.hx" extern="1">
		<extends path="js.html.MediaElement"/>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<haxe_doc><![CDATA[<p>The <code>HTMLAudioElement</code> interface provides access to the properties of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/audio">&lt;audio&gt;</a></code>
&nbsp;elements, as well as methods to manipulate them. It's derived from the <a title="en/DOM/HTMLMediaElement" rel="internal" href="/api/js/html/MediaElement" class=" new"><code>HTMLMediaElement</code></a> interface; it's implemented by <code><a rel="custom" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIDOMHTMLMediaElement">nsIDOMHTMLMediaElement</a></code>
.</p>
<p>For details on how to use the audio streaming features exposed by this interface, please see <a title="en/Introducing the Audio API Extension" rel="internal" href="/api/js/html/audio/AudioBuffer">Introducing the Audio API Extension</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/HTMLAudioElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAudioElement"</e></m></meta>
	</class>
	<class path="js.html.Audio" params="" file="/usr/lib/haxe/std/js/html/Audio.hx" extern="1">
		<extends path="js.html.AudioElement"/>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":native"><e>"Audio"</e></m></meta>
	</class>
	<class path="js.html.BRElement" params="" file="/usr/lib/haxe/std/js/html/BRElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<clear public="1">
			<c path="String"/>
			<haxe_doc>Indicates flow of text around floating objects.</haxe_doc>
		</clear>
		<haxe_doc><![CDATA[DOM break elements expose the <a class="external" href="http://www.w3.org/TR/html5/text-level-semantics.html#the-br-element" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/html5/text-level-semantics.html#the-br-element">HTMLBRElement</a> (or <span><a href="https://developer.mozilla.org/en/HTML" rel="custom nofollow">HTML 4</a></span> <a class="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-56836063" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-56836063"><code>HTMLBRElement</code></a>) interface which inherits from HTMLElement, but defines no additional members in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>. The introduced additional property is also deprecated in 
<span>HTML 4.01</span>.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLBRElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBRElement"</e></m></meta>
	</class>
	<class path="js.html.BarInfo" params="" file="/usr/lib/haxe/std/js/html/BarInfo.hx" extern="1">
		<visible public="1" set="null"><x path="Bool"/></visible>
		<meta><m n=":native"><e>"BarInfo"</e></m></meta>
	</class>
	<class path="js.html.BaseElement" params="" file="/usr/lib/haxe/std/js/html/BaseElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<href public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/base#attr-href">href</a></code>
 HTML attribute, containing a base URL for relative URLs in the document.]]></haxe_doc>
		</href>
		<target public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/base#attr-target">target</a></code>
 HTML attribute, containing a default target browsing context or frame for elements that do not have a target reference specified.]]></haxe_doc>
		</target>
		<haxe_doc><![CDATA[The <code>base</code> object exposes the <a class=" external" title="http://www.w3.org/TR/html5/semantics.html#htmlbaseelement" rel="external" href="http://www.w3.org/TR/html5/semantics.html#htmlbaseelement" target="_blank">HTMLBaseElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class="external" target="_blank" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-73629039" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-73629039">HTMLBaseElement</a>) interface which contains the base URI&nbsp;for a document.&nbsp; This object inherits all of the properties and methods as described in the <a class="internal" title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> section.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLBaseElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBaseElement"</e></m></meta>
	</class>
	<class path="js.html.BaseFontElement" params="" file="/usr/lib/haxe/std/js/html/BaseFontElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<color public="1">
			<c path="String"/>
			<haxe_doc>This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.</haxe_doc>
		</color>
		<face public="1">
			<c path="String"/>
			<haxe_doc>This attribute contains a list of one or more font names. The document text in the default style is rendered in the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.</haxe_doc>
		</face>
		<size public="1">
			<x path="Int"/>
			<haxe_doc>This attribute specifies the font size as either a numeric or relative value. Numeric values range from 1 to 7 with 1 being the smallest and 3 the default.</haxe_doc>
		</size>
		<haxe_doc><![CDATA[Obsolete<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/basefont">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBaseFontElement"</e></m></meta>
	</class>
	<class path="js.html.BatteryManager" params="" file="/usr/lib/haxe/std/js/html/BatteryManager.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<charging public="1" set="null"><x path="Bool"/></charging>
		<chargingTime public="1" set="null"><x path="Float"/></chargingTime>
		<dischargingTime public="1" set="null"><x path="Float"/></dischargingTime>
		<level public="1" set="null"><x path="Float"/></level>
		<onchargingchange public="1"><t path="js.html.EventListener"/></onchargingchange>
		<onchargingtimechange public="1"><t path="js.html.EventListener"/></onchargingtimechange>
		<ondischargingtimechange public="1"><t path="js.html.EventListener"/></ondischargingtimechange>
		<onlevelchange public="1"><t path="js.html.EventListener"/></onlevelchange>
		<meta><m n=":native"><e>"BatteryManager"</e></m></meta>
	</class>
	<class path="js.html.Blob" params="" file="/usr/lib/haxe/std/js/html/Blob.hx" extern="1">
		<size public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The size, in bytes, of the data contained in the <code>Blob</code> object. <strong>Read only.</strong>]]></haxe_doc>
		</size>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[An ASCII-encoded string, in all lower case, indicating the MIME&nbsp;type of the data contained in the <code>Blob</code>. If the type is unknown, this string is empty. <strong>Read only.</strong>]]></haxe_doc>
		</type>
		<slice public="1" set="method"><f a="?start:?end:?contentType">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<c path="js.html.Blob"/>
</f></slice>
		<new public="1" set="method"><f a="?arg0:?arg1">
	<d/>
	<d/>
	<x path="Void"/>
</f></new>
		<haxe_doc><![CDATA[<div><p><strong>This is an experimental feature</strong><br>Because this feature is still in development in some browsers, check the <a href="#AutoCompatibilityTable">compatibility table</a> for the proper prefixes to use in various browsers.</p></div>
<p></p>
<p>A <code>Blob</code> object represents a file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The <code><a rel="custom" href="/api/js/html/File">File</a></code>
 interface is based on <code>Blob</code>, inheriting blob functionality and expanding it to support files on the user's system.</p>
<p>An easy way to construct a <code>Blob</code> is by using the <code><a rel="custom" href="/api/js/html/BlobBuilder">BlobBuilder</a></code>
 interface, which lets you iteratively append data to a blob, then retrieve the completed blob when you're ready to use it for something. Another way is to use the <code>slice()</code> method to create a blob that contains a subset of another blob's data.</p>
<div class="note"><strong>Note:</strong> The <code>slice()</code> method has vendor prefixes: <code>blob.mozSlice()</code> for Firefox and <code>blob.webkitSlice()</code> for Chrome. An old version of the <code>slice()</code> method, without vendor prefixes, had different semantics, as described below.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Blob">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Blob"</e></m></meta>
	</class>
	<class path="js.html.BodyElement" params="" file="/usr/lib/haxe/std/js/html/BodyElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<aLink public="1">
			<c path="String"/>
			<haxe_doc>Color of active hyperlinks.</haxe_doc>
		</aLink>
		<background public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>URI for a background image resource.</p> <div class="note"><strong>Note:</strong> Starting in Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, this value is no longer resolved as a URI; instead, it's treated as a simple string.</div>]]></haxe_doc>
		</background>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>Background color for the document.</haxe_doc>
		</bgColor>
		<link public="1">
			<c path="String"/>
			<haxe_doc>Color of unvisited links.</haxe_doc>
		</link>
		<onbeforeunload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onbeforeunload">onbeforeunload</a></code>
 HTML&nbsp;attribute value for a function to call when the document is about to be unloaded.]]></haxe_doc>
		</onbeforeunload>
		<onhashchange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onhashchange">onhashchange</a></code>
 HTML&nbsp;attribute value for a function to call when the fragment identifier in the address of the document changes.]]></haxe_doc>
		</onhashchange>
		<onmessage public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onmessage">onmessage</a></code>
 HTML&nbsp;attribute value for a function to call when the document receives a message.]]></haxe_doc>
		</onmessage>
		<onoffline public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onoffline">onoffline</a></code>
 HTML&nbsp;attribute value for a function to call when network communication fails.]]></haxe_doc>
		</onoffline>
		<ononline public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-ononline">ononline</a></code>
 HTML&nbsp;attribute value for a function to call when network communication is restored.]]></haxe_doc>
		</ononline>
		<onpopstate public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onpopstate">onpopstate</a></code>
 HTML&nbsp;attribute value for a function to call when the user has navigated session history.]]></haxe_doc>
		</onpopstate>
		<onresize public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onresize">onresize</a></code>
 HTML&nbsp;attribute value for a function to call when the document has been resized.]]></haxe_doc>
		</onresize>
		<onstorage public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onpopstate">onpopstate</a></code>
 HTML&nbsp;attribute value for a function to call when the storage area has changed.]]></haxe_doc>
		</onstorage>
		<onunload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body#attr-onunload">onunload</a></code>
 HTML&nbsp;attribute value for a function to call when when the document is going away.]]></haxe_doc>
		</onunload>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Foreground color of text.</haxe_doc>
		</text>
		<vLink public="1">
			<c path="String"/>
			<haxe_doc>Color of visited links.</haxe_doc>
		</vLink>
		<haxe_doc><![CDATA[DOM body elements expose the <a href="http://www.w3.org/TR/html5/sections.html#the-body-element" target="_blank" rel="external nofollow" class=" external" title="http://www.w3.org/TR/html5/sections.html#the-body-element">HTMLBodyElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-48250443" target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-48250443" rel="external nofollow" class=" external"><code>HTMLBodyElement</code></a>) interface, which provides special properties (beyond the regular <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 object interface they also have available to them by inheritance) for manipulating body elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLBodyElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBodyElement"</e></m></meta>
	</class>
	<class path="js.html.ButtonElement" params="" file="/usr/lib/haxe/std/js/html/ButtonElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc>The control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified.</haxe_doc>
		</autofocus>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>The control is disabled, meaning that it does not accept any clicks.</haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[<p>The form that this button is associated with. If the button is a descendant of a form element, then this attribute is the ID of that form element.</p> <p>If the button is not a descendant of a form element, then:</p> <ul> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> The attribute can be the ID of any form element in the same document.</li> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> The attribute is null.</li> </ul>]]></haxe_doc>
		</form>
		<formAction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The URI&nbsp;of a program that processes information submitted by the button. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-action">action</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formAction>
		<formEnctype public="1"><c path="String"/></formEnctype>
		<formMethod public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The HTTP&nbsp;method that the browser uses to submit the form. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-method">method</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formMethod>
		<formNoValidate public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates that the form is not to be validated when it is submitted. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-enctype">enctype</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formNoValidate>
		<formTarget public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[A name or keyword indicating where to display the response that is received after submitting the form. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-target">target</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formTarget>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc><![CDATA[A list of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/label">&lt;label&gt;</a></code>
 elements that are labels for this button.]]></haxe_doc>
		</labels>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The name of the object when submitted with a form. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> If specified, it must not be the empty string.]]></haxe_doc>
		</name>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>Indicates the behavior of the button. This is an enumerated attribute with the following possible values:</p> <ul> <li><code>submit</code>:&nbsp;The button submits the form. This is the default value if the attribute is not specified, 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> or if it is dynamically changed to an empty or invalid value.</li> <li><code>reset</code>:&nbsp;The button resets the form.</li> <li><code>button</code>:&nbsp;The button does nothing.</li> </ul>]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this button is in.</haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The current form control value of the button.&nbsp;]]></haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the button is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.</haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[DOM&nbsp;<code>Button </code>objects expose the <a class=" external" title="http://www.w3.org/TR/html5/the-button-element.html#the-button-element" rel="external" href="http://www.w3.org/TR/html5/the-button-element.html#the-button-element" target="_blank">HTMLButtonElement</a> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>&nbsp;(or <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-34812697" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-34812697" target="_blank">HTMLButtonElement</a> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>) interface, which provides properties and methods (beyond the <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of button elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLButtonElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLButtonElement"</e></m></meta>
	</class>
	<class path="js.html.CharacterData" params="" file="/usr/lib/haxe/std/js/html/CharacterData.hx" extern="1">
		<extends path="js.html.Node"/>
		<data public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</data>
		<length public="1" set="null"><x path="Int"/></length>
		<appendData public="1" set="method"><f a="data">
	<c path="String"/>
	<x path="Void"/>
</f></appendData>
		<deleteData public="1" set="method"><f a="offset:length">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></deleteData>
		<insertData public="1" set="method"><f a="offset:data">
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></insertData>
		<remove public="1" set="method"><f a=""><x path="Void"/></f></remove>
		<replaceData public="1" set="method"><f a="offset:length:data">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></replaceData>
		<substringData public="1" set="method"><f a="offset:length">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></substringData>
		<haxe_doc><![CDATA[<code><a title="En/DOM/Text" rel="internal" href="https://developer.mozilla.org/En/DOM/Text">Text</a></code>, <code><a title="En/DOM/Comment" rel="internal" href="https://developer.mozilla.org/En/DOM/Comment">Comment</a></code>, and <code><a title="en/DOM/CDATASection" rel="internal" href="/api/js/html/CDATASection">CDATASection</a></code> all implement CharacterData, which in turn also implements <code><a class="internal" title="En/DOM/Node" rel="internal" href="/api/js/html/Node">Node</a></code>. See <code>Node</code> for the remaining methods, properties, and constants.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/En/DOM/CharacterData">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CharacterData"</e></m></meta>
	</class>
	<class path="js.html.Text" params="" file="/usr/lib/haxe/std/js/html/Text.hx" extern="1">
		<extends path="js.html.CharacterData"/>
		<wholeText public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns all text of all Text nodes logically adjacent to this node, concatenated in document order.</haxe_doc>
		</wholeText>
		<replaceWholeText public="1" set="method"><f a="content">
	<c path="String"/>
	<c path="js.html.Text"/>
</f></replaceWholeText>
		<splitText public="1" set="method"><f a="offset">
	<x path="Int"/>
	<c path="js.html.Text"/>
</f></splitText>
		<haxe_doc><![CDATA[<p>In the <a title="en/DOM" rel="internal" href="https://developer.mozilla.org/en/DOM">DOM</a>, the Text interface represents the textual content of an <a class="internal" title="En/DOM/Element" rel="internal" href="/api/js/html/Element">Element</a> or <a class="internal" title="En/DOM/Attr" rel="internal" href="https://developer.mozilla.org/En/DOM/Attr">Attr</a>.&nbsp; If an element has no markup within its content, it has a single child implementing Text that contains the element's text.&nbsp; However, if the element contains markup, it is parsed into information items and Text nodes that form its children.</p>
<p>New documents have a single Text node for each block of text.&nbsp; Over time, more Text nodes may be created as the document's content changes.&nbsp; The <code>Node.normalize()</code>&nbsp;method merges adjacent Text objects back into a single node for each block of text.</p>
<p>Text also implements the <a title="En/DOM/CharacterData" rel="internal" href="/api/js/html/CharacterData">CharacterData</a> interface (which implements the Node interface).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Text">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Text"</e></m></meta>
	</class>
	<class path="js.html.CDATASection" params="" file="/usr/lib/haxe/std/js/html/CDATASection.hx" extern="1">
		<extends path="js.html.Text"/>
		<haxe_doc><![CDATA[<p>A CDATA Section can be used within XML to include extended portions of unescaped text, such that the symbols &lt; and &amp; do not need escaping as they normally do within XML when used as text.</p>
<p>It takes the form:</p>
<pre class="eval">&lt;![CDATA[  ... ]]&gt;
</pre>
<p>For example:</p>
<pre class="eval">&lt;foo&gt;Here is a CDATA section: &lt;![CDATA[  &lt; &gt; &amp; ]]&gt; with all kinds of unescaped text. &lt;/foo&gt;
</pre>
<p>The only sequence which is not allowed within a CDATA section is the closing sequence of a CDATA section itself:</p>
<pre class="eval">&lt;![CDATA[  ]]&gt; will cause an error   ]]&gt;
</pre>
<p>Note that CDATA sections should not be used (without hiding) within HTML.</p>
<p>As a CDATASection has no properties or methods unique to itself and only directly implements the Text interface, one can refer to <a title="En/DOM/Text" rel="internal" href="https://developer.mozilla.org/En/DOM/Text">Text</a> to find its properties and methods.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CDATASection">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CDATASection"</e></m></meta>
	</class>
	<class path="js.html.CSSRule" params="" file="/usr/lib/haxe/std/js/html/CSSRule.hx" extern="1">
		<CHARSET_RULE public="1" get="inline" set="null" line="32" static="1"><x path="Int"/></CHARSET_RULE>
		<FONT_FACE_RULE public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></FONT_FACE_RULE>
		<IMPORT_RULE public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></IMPORT_RULE>
		<KEYFRAMES_RULE public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></KEYFRAMES_RULE>
		<KEYFRAME_RULE public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></KEYFRAME_RULE>
		<MEDIA_RULE public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></MEDIA_RULE>
		<PAGE_RULE public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></PAGE_RULE>
		<STYLE_RULE public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></STYLE_RULE>
		<UNKNOWN_RULE public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></UNKNOWN_RULE>
		<cssText public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Returns the textual representation of the rule, e.g. <code>"h1,h2 { font-size: 16pt }"</code> Setter throws DOMException.]]></haxe_doc>
		</cssText>
		<parentRule public="1" set="null">
			<c path="js.html.CSSRule"/>
			<haxe_doc><![CDATA[Returns the containing rule, otherwise <code>null</code>. E.g. if this rule is a style rule inside an <code><a title="en/CSS/@media" rel="internal" href="https://developer.mozilla.org/en/CSS/@media">@media</a></code> block, the parent rule would be that <code><a title="en/DOM/CSSMediaRule" rel="internal" href="https://developer.mozilla.org/en/DOM/CSSMediaRule">CSSMediaRule</a></code>.]]></haxe_doc>
		</parentRule>
		<parentStyleSheet public="1" set="null">
			<c path="js.html.CSSStyleSheet"/>
			<haxe_doc><![CDATA[Returns the <code><a title="en/DOM/CSSStyleSheet" rel="internal" href="https://developer.mozilla.org/en/DOM/CSSStyleSheet">CSSStyleSheet</a></code> object for the style sheet that contains this rule]]></haxe_doc>
		</parentStyleSheet>
		<type public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[One of the <a rel="custom" href="https://developer.mozilla.org/en/DOM/cssRule#Type_constants">Type constants</a>&nbsp;indicating the type of CSS&nbsp;rule.]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[<p>An object implementing the <code>CSSRule</code> DOM interface represents a single CSS rule. References to a <code>CSSRule</code>-implementing object may be obtained by looking at a <a title="en/DOM/stylesheet" rel="internal" href="/api/js/html/CSSStyleSheet">CSS style sheet's</a> <code><a title="en/DOM/CSSStyleSheet/cssRules" rel="internal" href="/api/js/html/CSSStyleSheet">cssRules</a></code> list.</p>
<p>There are several kinds of rules. The <code>CSSRule</code> interface specifies the properties common to all rules, while properties unique to specific rule types are specified in the more specialized interfaces for those rules' respective types.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/cssRule">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CSSRule"</e></m></meta>
	</class>
	<class path="js.html.CSSRuleList" params="" file="/usr/lib/haxe/std/js/html/CSSRuleList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.CSSRule"/>
</f></item>
		<haxe_doc><![CDATA[A <code>CSSRuleList</code> is an array-like object containing an ordered collection of <code><a title="en/DOM/cssRule" rel="internal" href="/api/js/html/CSSKeyframeRule">CSSRule</a></code> objects.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CSSRuleList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CSSRuleList"</e></m></meta>
	</class>
	<class path="js.html.CSSStyleDeclaration" params="" file="/usr/lib/haxe/std/js/html/CSSStyleDeclaration.hx" extern="1">
		<cssText public="1">
			<c path="String"/>
			<haxe_doc>Textual representation of the declaration block. Setting this attribute changes the style. Setter throws DOMException.</haxe_doc>
		</cssText>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of properties. See the <strong>item</strong> method below.]]></haxe_doc>
		</length>
		<parentRule public="1" set="null">
			<c path="js.html.CSSRule"/>
			<haxe_doc><![CDATA[The containing <code><a href="https://developer.mozilla.org/en/DOM/cssRule" rel="internal" title="en/DOM/cssRule">cssRule</a>.</code>]]></haxe_doc>
		</parentRule>
		<animation public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property for <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-name">animation-name</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-duration">animation-duration</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-timing-function">animation-timing-function</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-delay">animation-delay</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-iteration-count">animation-iteration-count</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/animation-direction">animation-direction</a></code>
.]]></haxe_doc>
		</animation>
		<animationDelay public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-delay</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies when the animation should start. This lets the animation sequence begin some time after it's applied to an element.]]></haxe_doc>
		</animationDelay>
		<animationDirection public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-direction</code> CSS property indicates whether the animation should play in reverse on alternate cycles.]]></haxe_doc>
		</animationDirection>
		<animationDuration public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-duration</code> CSS property specifies the length of time that an animation should take to complete one cycle.]]></haxe_doc>
		</animationDuration>
		<animationIterationCount public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-iteration-count</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property defines the number of times an animation cycle should be played before stopping.]]></haxe_doc>
		</animationIterationCount>
		<animationName public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-name</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies a list of animations that should be applied to the selected element. Each name indicates a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/@keyframes">@keyframes</a></code>
 at-rule that defines the property values for the animation sequence.]]></haxe_doc>
		</animationName>
		<animationPlayState public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-play-state</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines whether an animation is running or paused. You can query this property's value to determine whether or not the animation is currently running; in addition, you can set its value to pause and resume playback of an animation.]]></haxe_doc>
		</animationPlayState>
		<animationTimingFunction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>animation-timing-function</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies how a CSS animation should progress over the duration of each cycle. The possible values are one or several <span class="lang lang-en"><code><a rel="custom" href="https://developer.mozilla.org/en/CSS/timing-function">&lt;timing-function&gt;</a></code>
 </span>.]]></haxe_doc>
		</animationTimingFunction>
		<azimuth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[In combination with<code> elevation</code>, <code>azimuth</code> enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.]]></haxe_doc>
		</azimuth>
		<backfaceVisibility public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>backface-visibility</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines whether or not the back face of the element is visible when facing the user. The back face of an element always is a transparent background, letting, when visible, a mirror image of the front face be displayed.]]></haxe_doc>
		</backfaceVisibility>
		<background public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background </code>CSS property is a shorthand for setting the individual background values in a single place in the style sheet.<code> background </code>can be used to set the values for one or more of: <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-color">background-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-image">background-image</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-position">background-position</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-repeat">background-repeat</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-size">background-size</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-attachment">background-attachment</a></code>
.]]></haxe_doc>
		</background>
		<backgroundAttachment public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[If a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-image">background-image</a></code>
 is specified, the <code>background-attachment</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines whether that image's position is fixed within the viewport, or scrolls along with its containing block.]]></haxe_doc>
		</backgroundAttachment>
		<backgroundClip public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-clip </code>CSS property specifies whether an element's background, either the color or image, extends underneath its border.]]></haxe_doc>
		</backgroundClip>
		<backgroundColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>background-color</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the background color of an element, either through a color value or the keyword <code>transparent</code>.]]></haxe_doc>
		</backgroundColor>
		<backgroundImage public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-image </code>CSS property sets the background images for an element. The images are drawn on successive stacking context layers, with the first specified being drawn as if it is the closest to the user. The <a title="border" rel="internal" href="https://developer.mozilla.org/cn/CSS/border">borders</a> of the element are then drawn on top of them, and the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-color">background-color</a></code>
 is drawn beneath them.]]></haxe_doc>
		</backgroundImage>
		<backgroundOrigin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-origin </code>CSS property determines the background positioning area, that is the position of the origin of an image specified using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-image">background-image</a></code>
 CSS property.]]></haxe_doc>
		</backgroundOrigin>
		<backgroundPosition public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-position </code>CSS property sets the initial position, relative to the background position layer defined by <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/background-origin">background-origin</a></code>
 for each defined background image.]]></haxe_doc>
		</backgroundPosition>
		<backgroundRepeat public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>background-repeat</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property defines how background images are repeated. A background image can be repeated along the horizontal axis, the vertical axis, both, or not repeated at all. When the repetition of the image tiles doesn't let them exactly cover the background, the way adjustments are done can be controlled by the author: by default, the last image is clipped, but the different tiles can instead be re-sized, or space can be inserted between the tiles.]]></haxe_doc>
		</backgroundRepeat>
		<backgroundSize public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> background-size </code>CSS property specifies the size of the background images.]]></haxe_doc>
		</backgroundSize>
		<bleed public="1">
			<c path="String"/>
			<haxe_doc>This property specifies the extent of the page bleed area outside the page box. This property only has effect if crop marks are enabled.</haxe_doc>
		</bleed>
		<border public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property for setting the individual border property values in a single place in the style sheet. <code>border</code> can be used to set the values for one or more of: <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-width">border-width</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-style">border-style</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
.]]></haxe_doc>
		</border>
		<borderBottom public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand that sets the values of <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom-color">border-bottom-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom-style">border-bottom-style</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom-width">border-bottom-width</a></code>
. These properties describe the bottom border of elements.]]></haxe_doc>
		</borderBottom>
		<borderBottomColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-bottom-color </code>CSS property sets the color of the bottom border of an element. Note that in many cases the shorthand CSS properties&nbsp; <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom">border-bottom</a></code>
 are more convenient and preferable.]]></haxe_doc>
		</borderBottomColor>
		<borderBottomLeftRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom-left-radius</code> CSS property sets the rounding of the bottom-left corner of the element. The rounding can be a circle or an ellipse, or if one of the value is <code>0</code> no rounding is done and the corner is square.]]></haxe_doc>
		</borderBottomLeftRadius>
		<borderBottomRightRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom-right-radius</code> CSS property sets the rounding of the bottom-right corner of the element. The rounding can be a circle or an ellipse, or if one of the value is <code>0</code> no rounding is done and the corner is square.]]></haxe_doc>
		</borderBottomRightRadius>
		<borderBottomStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the line style of the bottom border of a box.]]></haxe_doc>
		</borderBottomStyle>
		<borderBottomWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-bottom-width</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the width of the bottom border of a box.]]></haxe_doc>
		</borderBottomWidth>
		<borderCollapse public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-collapse </code>CSS property selects a table's border model. This has a big influence on the look and style of the table cells.]]></haxe_doc>
		</borderCollapse>
		<borderColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-color </code>CSS property is a shorthand for setting the color of the four sides of an element's border: <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top-color">border-top-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right-color">border-right-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-bottom-color">border-bottom-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left-color">border-left-color</a></code>]]></haxe_doc>
		</borderColor>
		<borderImage public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-image </code>CSS property allows drawing an image on the borders of elements. This makes drawing complex looking widgets much simpler than it has been and removes the need for nine boxes in some cases.]]></haxe_doc>
		</borderImage>
		<borderImageOutset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-image-outset </code>property describes, by which amount <dfn id="border-image-area">border image area</dfn> extends beyond the border box.]]></haxe_doc>
		</borderImageOutset>
		<borderImageRepeat public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-image-repeat</code> CSS property defines how the middle part of a border image is handled to match the size of the border. It has a one-value syntax which describes the behavior for all sides, and a two-value syntax that sets a different value for the horizontal and vertical behavior.]]></haxe_doc>
		</borderImageRepeat>
		<borderImageSource public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-image-source</code> CSS property defines the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/image">&lt;image&gt;</a></code>
 to use instead of the style of the border. If this property is set to <code>none</code>, the style defined by <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-style">border-style</a></code>
 is used instead.]]></haxe_doc>
		</borderImageSource>
		<borderImageWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-image-width</code> CSS property defines the offset to use for dividing the border image in nine parts, the top-left corner, central top edge, top-right-corner, central right edge, bottom-right corner, central bottom edge, bottom-left corner, and central right edge. They represent inward distance from the top, right, bottom and right edges.]]></haxe_doc>
		</borderImageWidth>
		<borderLeft public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-left</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand that sets the values of <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left-color">border-left-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left-style">border-left-style</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left-width">border-left-width</a></code>
. These properties describe the left border of elements.]]></haxe_doc>
		</borderLeft>
		<borderLeftColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-left-color </code>CSS property sets the color of the bottom border of an element. Note that in many cases the shorthand CSS properties&nbsp; <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-left">border-left</a></code>
 are more convenient and preferable.]]></haxe_doc>
		</borderLeftColor>
		<borderLeftStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-left-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the line style of the left border of a box.]]></haxe_doc>
		</borderLeftStyle>
		<borderLeftWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-left-width</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the width of the left border of a box.]]></haxe_doc>
		</borderLeftWidth>
		<borderRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-radius</code> CSS property allows Web authors to define how rounded border corners are. The curve of each corner is defined using one or two radii, defining its shape: circle or ellipse.]]></haxe_doc>
		</borderRadius>
		<borderRight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-right</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand that sets the values of <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right-color">border-right-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right-style">border-right-style</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right-width">border-right-width</a></code>
. These properties describe the right border of elements.]]></haxe_doc>
		</borderRight>
		<borderRightColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-right-color </code>CSS property sets the color of the bottom border of an element. Note that in many cases the shorthand CSS properties&nbsp; <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-right">border-right</a></code>
 are more convenient and preferable.]]></haxe_doc>
		</borderRightColor>
		<borderRightStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-right-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the line style of the right border of a box.]]></haxe_doc>
		</borderRightStyle>
		<borderRightWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-right-width</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the width of the right border of a box.]]></haxe_doc>
		</borderRightWidth>
		<borderSpacing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-spacing</code> CSS property specifies the distance between the borders of adjacent cells (only for the <a title="en/CSS/border-collapse" rel="internal" href="https://developer.mozilla.org/en/CSS/border-collapse">separated borders model</a>). This is equivalent to the <code>cellspacing</code> attribute in presentational HTML, but an optional second value can be used to set different horizontal and vertical spacing.]]></haxe_doc>
		</borderSpacing>
		<borderStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property for setting the line style for all four sides of the elements border.]]></haxe_doc>
		</borderStyle>
		<borderTop public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand that sets the values of <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top-color">border-top-color</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top-style">border-top-style</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top-width">border-top-width</a></code>
. These properties describe the top border of elements.]]></haxe_doc>
		</borderTop>
		<borderTopColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-top-color </code>CSS property sets the color of the top border of an element. Note that in many cases the shorthand CSS properties&nbsp; <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-color">border-color</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-top">border-top</a></code>
 are more convenient and preferable.]]></haxe_doc>
		</borderTopColor>
		<borderTopLeftRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top-left-radius</code> CSS property sets the rounding of the top-left corner of the element. The rounding can be a circle or an ellipse, or if one of the value is <code>0</code> no rounding is done and the corner is square.]]></haxe_doc>
		</borderTopLeftRadius>
		<borderTopRightRadius public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top-right-radius</code> CSS property sets the rounding of the top-right corner of the element. The rounding can be a circle or an ellipse, or if one of the value is <code>0</code> no rounding is done and the corner is square.]]></haxe_doc>
		</borderTopRightRadius>
		<borderTopStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the line style of the top border of a box.]]></haxe_doc>
		</borderTopStyle>
		<borderTopWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>border-top-width</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property sets the width of the top border of a box.]]></haxe_doc>
		</borderTopWidth>
		<borderWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> border-width </code>CSS property sets the width of the border of a box. Using the shorthand property <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border">border</a></code>
 is often more convenient.]]></haxe_doc>
		</borderWidth>
		<bottom public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>bottom</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property participates in specifying the position of <em>positioned elements</em>.]]></haxe_doc>
		</bottom>
		<boxShadow public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>box-shadow</code> CSS property accepts one or more shadow effects as a comma-separated list. It allows casting a drop shadow from the frame of almost any element. If a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/border-radius">border-radius</a></code>
 is specified on the element with a box shadow, the box shadow takes on the same rounded corners. The z-ordering of multiple box shadows is the same as multiple <a title="text-shadow" rel="internal" href="https://developer.mozilla.org/en/CSS/text-shadow">text shadows</a> (the first specified shadow is on top).]]></haxe_doc>
		</boxShadow>
		<boxSizing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> box-sizing </code>CSS property is used to alter the default CSS box model used to calculate widths and heights of elements. It is possible to use this property to emulate the behavior of browsers that do not correctly support the CSS box model specification.]]></haxe_doc>
		</boxSizing>
		<captionSide public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>caption-side</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property positions the content of a table's <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/caption">&lt;caption&gt;</a></code>
 on the specified side.]]></haxe_doc>
		</captionSide>
		<clear public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>clear</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies whether an element can be next to <a title="en/CSS/float" rel="internal" href="https://developer.mozilla.org/en/CSS/float">floating</a> elements that precede it or must be moved down (cleared) below them.]]></haxe_doc>
		</clear>
		<clip public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>clip</code> CSS property defines what portion of an element is visible. The <code>clip</code> property applies only to elements with <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/position">position:absolute</a></code>
.]]></haxe_doc>
		</clip>
		<color public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>color</code> CSS property sets the foreground color of an element's text content]]></haxe_doc>
		</color>
		<columnCount public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-count </code>CSS property describes the number of columns of the element.]]></haxe_doc>
		</columnCount>
		<columnFill public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-fill</code> CSS property controls how contents are partitioned into columns. Contents are either balanced, which means that contents in all columns will have the same height or, when using <code>auto</code>, just take up the room the content needs.]]></haxe_doc>
		</columnFill>
		<columnGap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-gap</code> CSS property sets the size of the gap between columns for elements which are specified to display as a multi-column element.]]></haxe_doc>
		</columnGap>
		<columnRule public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[In multi-column layouts, the <code>column-rule</code> CSS property specifies a straight line, or "rule", to be drawn between each column. It is a convenient shorthand to avoid setting each of the individual <code>column-rule-*</code> properties separately : <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-rule-width">column-rule-width</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-rule-style">column-rule-style</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-rule-color">column-rule-color</a></code>
.]]></haxe_doc>
		</columnRule>
		<columnRuleColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> column-rule-color </code>CSS property lets you set the color of the rule drawn between columns in multi-column layouts.]]></haxe_doc>
		</columnRuleColor>
		<columnRuleStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> column-rule-style </code>CSS property lets you set the style of the rule drawn between columns in multi-column layouts.]]></haxe_doc>
		</columnRuleStyle>
		<columnRuleWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> column-rule-width </code>CSS property lets you set the width of the rule drawn between columns in multi-column layouts.]]></haxe_doc>
		</columnRuleWidth>
		<columnSpan public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-span</code> CSS property makes it possible for an element to span across all columns when its value is set to <code>all</code>. An element that spans more than one column is called a <strong>spanning element</strong>.]]></haxe_doc>
		</columnSpan>
		<columnWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>column-width</code> CSS property suggests an optimal column width. This is not a absolute value but a mere hint. Browser will adjust the width of the column around that suggested value, allowing to achieve scalable designs that fit different screen size. Especially in presence of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-count">column-count</a></code>
 CSS property which has precedence, to set an exact column width, all length values must be specified. In horizontal text these are <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/width">width</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-width">column-width</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-gap">column-gap</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-rule-width">column-rule-width</a></code>
.]]></haxe_doc>
		</columnWidth>
		<columns public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>columns</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property allowing to set both the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-width">column-width</a></code>
 and the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/column-count">column-count</a></code>
 properties at the same time.]]></haxe_doc>
		</columns>
		<content public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> content </code>CSS property is used with the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/%3Abefore">:before</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/%3Aafter">:after</a></code>
 pseudo-elements to generate content in an element.]]></haxe_doc>
		</content>
		<counterIncrement public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>counter-increment</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is used to increase the value of <a title="en/CSS_Counters" rel="internal" href="https://developer.mozilla.org/en/CSS_Counters">CSS Counters</a> by a given value. The counter's value can be reset using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/counter-reset">counter-reset</a></code>
 CSS property.]]></haxe_doc>
		</counterIncrement>
		<counterReset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>counter-reset</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is used to reset <a title="en/CSS_Counters" rel="internal" href="https://developer.mozilla.org/en/CSS_Counters">CSS Counters</a> to a given value.]]></haxe_doc>
		</counterReset>
		<cursor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> cursor </code>CSS property specifies the mouse cursor displayed when the mouse pointer is over an element.]]></haxe_doc>
		</cursor>
		<direction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>direction</code> CSS property should be set to match the direction of the text: <code>rtl</code> for Hebrew or Arabic text and <code>ltr</code> for other scripts. This should normally be done as part of the document (e.g., using the <code>dir</code> attribute in HTML) rather than through direct use of CSS.]]></haxe_doc>
		</direction>
		<display public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>display</code> CSS property specifies the type of rendering box used for an element. In HTML, default <code>display</code> property values are taken from behaviors described in the HTML specifications or from the browser/user default stylesheet. The default value in XML is <code>inline</code>.]]></haxe_doc>
		</display>
		<emptyCells public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>empty-cells </code>CSS property specifies how user agent should render borders and backgrounds around cells that have no visible content.]]></haxe_doc>
		</emptyCells>
		<float public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>float</code> CSS property specifies that an element should be taken from the normal flow and placed along the left or right side of its container, where text and inline elements will wrap around it.]]></haxe_doc>
		</float>
		<font public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>font</code> CSS property is either a shorthand property for setting <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-style">font-style</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-variant">font-variant</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-weight">font-weight</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-size">font-size</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/line-height">line-height</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-family">font-family</a></code>
, or a way to set the element's font to a system font, using specific keywords.]]></haxe_doc>
		</font>
		<fontFamily public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-family </code>CSS property allows for a prioritized list of font family names and/or generic family names to be specified for the selected element. Unlike most other CSS properties, values are separated by a comma to indicate that they are alternatives. The browser will select the first font on the list that is installed on the computer, or that can be downloaded using the information provided by a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/@font-face">@font-face</a></code>
 at-rule.]]></haxe_doc>
		</fontFamily>
		<fontSize public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>font-size</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the size of the font. The font size may, in turn, change the size of other items, since it is used to compute the value of <code>em</code> and <code>ex</code> length units.]]></haxe_doc>
		</fontSize>
		<fontSizeAdjust public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-size-adjust </code>CSS property specifies that font size should be chosen based on the height of lowercase letters rather than the height of capital letters.]]></haxe_doc>
		</fontSizeAdjust>
		<fontStretch public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-stretch </code>CSS property selects a normal, condensed, or extended face from a font family.]]></haxe_doc>
		</fontStretch>
		<fontStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-style </code>CSS property allows<code> italic </code>or<code> oblique </code>faces to be selected within a <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-family">font-family</a></code>
.<br>]]></haxe_doc>
		</fontStyle>
		<fontVariant public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> font-variant </code>CSS property selects a<code> normal</code>, or<code> small-caps </code>face from a font family. Setting<code> font-variant </code>is also possible by using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font">font</a></code>
 shorthand.]]></haxe_doc>
		</fontVariant>
		<fontWeight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/font-weight">font-weight</a></code>
 <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the weight or boldness of the font. However, some fonts are not available in all weights; some are available only on <code>normal</code> and <code>bold</code>.]]></haxe_doc>
		</fontWeight>
		<height public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> height </code>CSS property specifies the height of the content area of an element. The <a title="en/CSS/Box_model#content" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#content">content area</a> is <em>inside</em> the padding, border, and margin of the element.]]></haxe_doc>
		</height>
		<hyphens public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>hyphens</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property tells the browser how to go about splitting words to improve the layout of text when line-wrapping.]]></haxe_doc>
		</hyphens>
		<imageRendering public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>image-rendering</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property provides a hint to the user agent about how to handle its image rendering.<br> <code>image-rendering </code>applies to scaled images (and other elements, see below). For example, if the natural size of the image is<em> 100×100px </em>but the page author specifies the dimensions to <code>200×200px</code> (or<code>50×50px</code>), then the image will be upscaled (or downscaled) to the new dimensions using the specified algorithm. Scaling may also apply due to user interaction (zooming).]]></haxe_doc>
		</imageRendering>
		<left public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>left</code> CSS property specifies part of the position of positioned elements.]]></haxe_doc>
		</left>
		<letterSpacing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> letter-spacing </code>CSS property specifies spacing behavior between text characters.]]></haxe_doc>
		</letterSpacing>
		<lineHeight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[On inline elements, the<code> line-height </code>CSS property specifies the height that is used in the calculation of the line box height.<br>
On block level elements,<code> line-height </code>specifies the minimal height of line boxes within the element.]]></haxe_doc>
		</lineHeight>
		<listStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> list-style </code>CSS property is a shorthand property for setting <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-image">list-style-image</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-position">list-style-position</a></code>
.]]></haxe_doc>
		</listStyle>
		<listStyleImage public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> list-style-image </code>CSS property sets the image that will be used as the list item marker. It is often more convenient to use the shortcut <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style">list-style</a></code>
.]]></haxe_doc>
		</listStyleImage>
		<listStylePosition public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> list-style-position </code>CSS property specifies the position of the marker box in the principal block box. It is often more convenient to use the shortcut <span class="lang lang-en"><code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style">list-style</a></code>
</span>.]]></haxe_doc>
		</listStylePosition>
		<listStyleType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> list-style-type </code>CSS property specifies appearance of a list item element. As it is the only one who defaults to <code>display:list-item</code>, this is usually a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/li">&lt;li&gt;</a></code>
 element, but can be any element with this <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/display">display</a></code>
 value.]]></haxe_doc>
		</listStyleType>
		<margin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> margin </code>CSS property sets the margin for all four sides. It is a shorthand to avoid setting each side separately with the other margin properties:<br>
<code><a rel="custom" href="https://developer.mozilla.org/en/CSS/margin-top">margin-top</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/margin-right">margin-right</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/margin-bottom">margin-bottom</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/margin-left">margin-left</a></code>
.<br>
Negative value are also allowed.]]></haxe_doc>
		</margin>
		<marginBottom public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>margin-bottom</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the margin space required on the bottom of an element. A negative value is also allowed.]]></haxe_doc>
		</marginBottom>
		<marginLeft public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>margin-left</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the margin space required on the left side of an element. A negative value is also allowed.]]></haxe_doc>
		</marginLeft>
		<marginRight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>margin-right</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the margin space required on the right side of an element. A negative value is also allowed.]]></haxe_doc>
		</marginRight>
		<marginTop public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> margin-top </code>CSS property of an element sets the margin space required on the top of an element. A negative value is also allowed.]]></haxe_doc>
		</marginTop>
		<markerOffset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[&nbsp;]]></haxe_doc>
		</markerOffset>
		<marks public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>marks</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property adds crop and/or cross marks to the presentation of the document. <em>Crop marks</em> indicate where the page should be cut. <em>Cross marks</em> are used to align sheets.]]></haxe_doc>
		</marks>
		<maxHeight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> max-height </code>CSS property is used to set the maximum height of a given element. It prevents the used value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/height">height</a></code>
 property from becoming larger than the value specified for<code> max-height</code>.]]></haxe_doc>
		</maxHeight>
		<maxWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> max-width </code>CSS property is used to set the maximum width of a given element. It prevents the used value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/width">width</a></code>
 property from becoming larger than the value specified for<code> max-width</code>.]]></haxe_doc>
		</maxWidth>
		<minHeight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> min-height </code>CSS property is used to set the minimum height of a given element. It prevents the used value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/height">height</a></code>
 property from becoming smaller than the value specified for<code> min-height</code>.]]></haxe_doc>
		</minHeight>
		<minWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> min-width </code>CSS property is used to set the minimum width of a given element. It prevents the used value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/width">width</a></code>
 property from becoming smaller than the value specified for<code> min-width</code>.]]></haxe_doc>
		</minWidth>
		<opacity public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>opacity</code> CSS property specifies the transparency of an element, that is, the degree to which the background behind the element is overlaid.]]></haxe_doc>
		</opacity>
		<orphans public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>orphans</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property refers to the <em>minimum</em> number of lines in a block container that must be left at the bottom of the page.&nbsp; This property is normally used to control how page breaks occur.]]></haxe_doc>
		</orphans>
		<outline public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline </code>CSS property is a shorthand property for setting one or more of the individual outline properties <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/outline-style">outline-style</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/outline-width">outline-width</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/outline-color">outline-color</a></code>
 in a single rule. In most cases the use of this shortcut is preferable and more convenient.]]></haxe_doc>
		</outline>
		<outlineColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline-color </code>CSS property sets the color of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.]]></haxe_doc>
		</outlineColor>
		<outlineOffset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline-offset </code>CSS property is used to set space between an <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/outline">outline</a></code>
 and the edge or border of an element. An outline is a line that is drawn around elements, outside the border edge.]]></haxe_doc>
		</outlineOffset>
		<outlineStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline-style </code>CSS property is used to set the style of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out.]]></haxe_doc>
		</outlineStyle>
		<outlineWidth public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> outline-width </code>CSS property is used to set the width of the outline of an element. An outline is a line that is drawn around elements, outside the border edge, to make the element stand out:]]></haxe_doc>
		</outlineWidth>
		<overflow public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> overflow </code>CSS property specifies whether to clip content, render scroll bars or display overflow content of a block-level element.]]></haxe_doc>
		</overflow>
		<overflowX public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>overflow-x </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies whether to clip content, render a scroll bar, or display overflow content of a block-level element, when it overflows at the left and right edges.]]></haxe_doc>
		</overflowX>
		<overflowY public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>overflow-y </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies whether to clip content, render a scroll bar, or display overflow content of a block-level element, when it overflows at the top and bottom edges.]]></haxe_doc>
		</overflowY>
		<padding public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> padding </code>CSS property sets the required padding space on all sides of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/Box_model#padding">padding area</a> is the space between the content of the element and its border. Negative values are not allowed.]]></haxe_doc>
		</padding>
		<paddingBottom public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>padding-bottom</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the padding space required on the bottom of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#padding">padding area</a> is the space between the content of the element and it's border. A negative value is not allowed.]]></haxe_doc>
		</paddingBottom>
		<paddingLeft public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>padding-left</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the padding space required on the left side of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#padding">padding area</a> is the space between the content of the element and it's border. A negative value is not allowed.]]></haxe_doc>
		</paddingLeft>
		<paddingRight public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>padding-right</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the padding space required on the right side of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#padding">padding area</a> is the space between the content of the element and its border. Negative values are not allowed.]]></haxe_doc>
		</paddingRight>
		<paddingTop public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>padding-top</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property of an element sets the padding space required on the top of an element. The <a title="http://developer.mozilla.org/en/CSS/Box_model#padding" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#padding">padding area</a> is the space between the content of the element and it's border. A negative values is not allowed.]]></haxe_doc>
		</paddingTop>
		<pageBreakAfter public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>page-break-after</code> CSS property adjusts page breaks <em>after</em> the current element.]]></haxe_doc>
		</pageBreakAfter>
		<pageBreakBefore public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>page-break-before</code> CSS property adjusts page breaks <em>before</em> the current element.]]></haxe_doc>
		</pageBreakBefore>
		<pageBreakInside public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>page-break-inside</code> CSS property adjusts page breaks <em>inside</em> the current element.]]></haxe_doc>
		</pageBreakInside>
		<perspective public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>perspective</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines the distance between the z=0 plane and the user in order to give to the 3D-positioned element some perspective. Each 3D element that is placed between the z=0 and the user is enlarged, each 3D-element with z&lt;0 is shrinked. How much deformation is defined by the value of this property.]]></haxe_doc>
		</perspective>
		<perspectiveOrigin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>perspective-origin</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines the position the viewer is looking at. It is used as the <em>vanishing point</em> by the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/perspective">perspective</a></code>
 property.]]></haxe_doc>
		</perspectiveOrigin>
		<position public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> position </code>CSS property chooses alternative rules for positioning elements, designed to be useful for scripted animation effects.]]></haxe_doc>
		</position>
		<quotes public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>quotes</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property indicates how user agents should render quotation marks.]]></haxe_doc>
		</quotes>
		<resize public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>resize</code> CSS property lets you control the resizability of an element.]]></haxe_doc>
		</resize>
		<right public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>right</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies part of the position of positioned elements.]]></haxe_doc>
		</right>
		<tabSize public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>tab-size</code> CSS property is used to customize the width of a tab (<code>U+0009</code>) character.]]></haxe_doc>
		</tabSize>
		<tableLayout public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>table-layout</code> CSS property defines the algorithm to be used to layout the table cells, rows, and columns.]]></haxe_doc>
		</tableLayout>
		<textAlign public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> text-align </code>CSS property describes how inline content like text is aligned in its parent block element.<code> text-align </code>does not control the alignment of block elements itself, only their inline content.]]></haxe_doc>
		</textAlign>
		<textAlignLast public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-align-last</code> CSS property describes how the last line of a block or a line right before a forced line break is aligned.]]></haxe_doc>
		</textAlignLast>
		<textDecoration public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> text-decoration </code>CSS property is used to set the text formattings <code>underline, overline, line-through</code> and <code>blink</code>.]]></haxe_doc>
		</textDecoration>
		<textDecorationColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-decoration-color</code> CSS property sets the color used when drawing underlines, overlines, or strike-throughs specified by <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-decoration-line">text-decoration-line</a></code>
. This is the preferred way to color these text decorations, rather than using combinations of other HTML&nbsp;elements.]]></haxe_doc>
		</textDecorationColor>
		<textDecorationLine public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-decoration-line</code> CSS property sets what kind of line decorations are added to an element.]]></haxe_doc>
		</textDecorationLine>
		<textDecorationStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-decoration-style</code> CSS property defines the style of the lines specified by <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-decoration-line">text-decoration-line</a></code>
. The style applies to all lines, there is no way to define different style for each of the line defined by <code>text-decoration-line</code>.]]></haxe_doc>
		</textDecorationStyle>
		<textIndent public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> text-indent </code>CSS property specifies how much horizontal space should be left before beginning of the first line of the text content of an element. Horizontal spacing is with respect to the left (or right, for right-to-left layout) edge of the containing block element's box.]]></haxe_doc>
		</textIndent>
		<textShadow public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> text-shadow </code>CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-decoration">text-decorations</a></code>
 of the element.]]></haxe_doc>
		</textShadow>
		<textTransform public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>text-transform</code> CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized.]]></haxe_doc>
		</textTransform>
		<top public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>top</code> CSS property specifies part of the position of positioned elements. It has no effect on non-positioned elements.]]></haxe_doc>
		</top>
		<transform public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>transform</code> CSS property lets you modify the coordinate space of the CSS visual formatting model. Using it, elements can be translated, rotated, scaled, and skewed according to the values set.]]></haxe_doc>
		</transform>
		<transformOrigin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>transform-origin</code> CSS property lets you modify the origin for transformations of an element. For example, the transform-origin of the <code>rotate()</code> function is the centre of rotation. (This property is applied by first translating the element by the negated value of the property, then applying the element's transform, then translating by the property value.)]]></haxe_doc>
		</transformOrigin>
		<transformStyle public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>transform-style</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property determines if the children of the element are positioned in the 3D-space or are flattened in the plane of the element.]]></haxe_doc>
		</transformStyle>
		<transition public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> transition </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is a shorthand property for <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/transition-property">transition-property</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/transition-duration">transition-duration</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/transition-timing-function">transition-timing-function</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/transition-delay">transition-delay</a></code>
.]]></haxe_doc>
		</transition>
		<transitionDelay public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> transition-delay </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the amount of time to wait between a change being requested to a property that is to be transitioned and the start of the <a title="en/CSS/CSS transitions" rel="internal" href="https://developer.mozilla.org/en/CSS/CSS_transitions">transition effect</a>.]]></haxe_doc>
		</transitionDelay>
		<transitionDuration public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> transition-duration </code><a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the number of seconds or milliseconds a transition animation should take to complete. By default, the value is 0s, meaning that no animation will occur.]]></haxe_doc>
		</transitionDuration>
		<transitionProperty public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>transition-property</code> CSS property is used to specify the names of CSS properties to which a <a title="en/CSS/CSS transitions" rel="internal" href="https://developer.mozilla.org/en/CSS/CSS_transitions">transition effect</a> should be applied.]]></haxe_doc>
		</transitionProperty>
		<transitionTimingFunction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> transition-timing-function </code>CSS property is used to describe how the intermediate values of the CSS&nbsp;properties being affected by a <a title="en/CSS/CSS transitions" rel="internal" href="https://developer.mozilla.org/en/CSS/CSS_transitions">transition effect</a> are calculated. This in essence lets you establish an acceleration curve, so that the speed of the transition can vary over its duration.]]></haxe_doc>
		</transitionTimingFunction>
		<verticalAlign public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>vertical-align</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property specifies the vertical alignment of an inline or table-cell element.]]></haxe_doc>
		</verticalAlign>
		<visibility public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> visibility </code>CSS property is used for two things:]]></haxe_doc>
		</visibility>
		<whiteSpace public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> white-space </code>CSS property is used to to describe how whitespace inside the element is handled.]]></haxe_doc>
		</whiteSpace>
		<widows public="1">
			<c path="String"/>
			<haxe_doc>where:</haxe_doc>
		</widows>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> width </code>CSS property specifies the width of the content area of an element. The <a title="en/CSS/box_model#content" rel="internal" href="https://developer.mozilla.org/en/CSS/box_model#content">content area</a> is <em>inside</em> the padding, border, and margin of the element.]]></haxe_doc>
		</width>
		<wordSpacing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> word-spacing </code>CSS property specifies spacing behavior between tags and words.]]></haxe_doc>
		</wordSpacing>
		<wordWrap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The <code>word-wrap</code> <a title="CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property is used to to specify whether or not the browser is allowed to break lines within words in order to prevent overflow when an otherwise unbreakable string is too long to fit.]]></haxe_doc>
		</wordWrap>
		<zIndex public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The<code> z-index </code>CSS property specifies the z-order of an element and its descendants. When elements overlap, z-order determines which one covers the other. An element with a larger z-index generally covers an element with a lower one.]]></haxe_doc>
		</zIndex>
		<getPropertyCSSValue public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="js.html.CSSValue"/>
</f></getPropertyCSSValue>
		<getPropertyPriority public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="String"/>
</f></getPropertyPriority>
		<getPropertyShorthand public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="String"/>
</f></getPropertyShorthand>
		<getPropertyValue public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="String"/>
</f></getPropertyValue>
		<isPropertyImplicit public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<x path="Bool"/>
</f></isPropertyImplicit>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<removeProperty public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<c path="String"/>
</f></removeProperty>
		<setProperty public="1" set="method"><f a="propertyName:?value:priority">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setProperty>
		<haxe_doc><![CDATA[<p>A CSSStyleDeclaration is an interface to the <a class="external" rel="external" href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#block" title="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#block" target="_blank">declaration block</a> returned by the <code><a href="https://developer.mozilla.org/en/DOM/cssRule.style" rel="internal" title="en/DOM/cssRule.style">style</a></code> property of a <code><a href="/api/js/html/CSSKeyframeRule" rel="internal" title="en/DOM/cssRule">cssRule</a></code> in a <a href="/api/js/html/StyleSheet" rel="internal" title="en/DOM/stylesheet">stylesheet</a>, when the&nbsp;rule is a <a title="en/DOM/cssRule#CSSStyleRule" rel="internal" href="https://developer.mozilla.org/en/DOM/cssRule#CSSStyleRule">CSSStyleRule</a>.</p>
<p>CSSStyleDeclaration is also a <strong>read-only </strong>interface to the result of <a title="en/DOM/window.getComputedStyle" rel="internal" href="https://developer.mozilla.org/en/DOM/window.getComputedStyle">getComputedStyle</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CSSStyleDeclaration">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CSSStyleDeclaration"</e></m></meta>
	</class>
	<class path="js.html.StyleSheet" params="" file="/usr/lib/haxe/std/js/html/StyleSheet.hx" extern="1">
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>This property indicates whether the current stylesheet has been applied or not.</haxe_doc>
		</disabled>
		<href public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the location of the stylesheet.</haxe_doc>
		</href>
		<media public="1" set="null">
			<c path="js.html.MediaList"/>
			<haxe_doc>Specifies the intended destination medium for style information.</haxe_doc>
		</media>
		<ownerNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the node that associates this style sheet with the document.</haxe_doc>
		</ownerNode>
		<parentStyleSheet public="1" set="null">
			<c path="js.html.StyleSheet"/>
			<haxe_doc>Returns the stylesheet that is including this one, if any.</haxe_doc>
		</parentStyleSheet>
		<title public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the advisory title of the current style sheet.</haxe_doc>
		</title>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>Specifies the style sheet language for this style sheet.</haxe_doc>
		</type>
		<haxe_doc><![CDATA[An object implementing the <code>StyleSheet</code> interface represents a single style sheet.&nbsp; CSS style sheets will further implement the more specialized <code><a title="en/DOM/CSSStyleSheet" rel="internal" href="/api/js/html/CSSStyleSheet">CSSStyleSheet</a></code> interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/stylesheet">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"StyleSheet"</e></m></meta>
	</class>
	<class path="js.html.CSSStyleSheet" params="" file="/usr/lib/haxe/std/js/html/CSSStyleSheet.hx" extern="1">
		<extends path="js.html.StyleSheet"/>
		<cssRules public="1" set="null">
			<c path="js.html.CSSRuleList"/>
			<haxe_doc><![CDATA[Returns a <code><a title="en/DOM/CSSRuleList" rel="internal" href="https://developer.mozilla.org/en/DOM/CSSRuleList">CSSRuleList</a></code> of the CSS rules in the style sheet.]]></haxe_doc>
		</cssRules>
		<ownerRule public="1" set="null">
			<c path="js.html.CSSRule"/>
			<haxe_doc><![CDATA[If this style sheet is imported into the document using an <code><a title="en/CSS/@import" rel="internal" href="https://developer.mozilla.org/en/CSS/@import">@import</a></code> rule, the <code>ownerRule</code> property will return that <code><a title="en/DOM/CSSImportRule" rel="internal" href="https://developer.mozilla.org/en/DOM/CSSImportRule" class="new ">CSSImportRule</a></code>, otherwise it returns <code>null</code>.]]></haxe_doc>
		</ownerRule>
		<rules public="1" set="null"><c path="js.html.CSSRuleList"/></rules>
		<addRule public="1" set="method"><f a="selector:style:?index">
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
</f></addRule>
		<deleteRule public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteRule>
		<insertRule public="1" set="method"><f a="rule:index">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
</f></insertRule>
		<removeRule public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></removeRule>
		<haxe_doc><![CDATA[<p>An object implementing the <code>CSSStyleSheet</code> interface represents a single <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> style sheet.</p>
<p>A CSS style sheet consists of CSS rules, each of which can be manipulated through an object that corresponds to that rule and that implements the <code><a title="en/DOM/cssRule" rel="internal" href="/api/js/html/CSSKeyframeRule">CSSRule</a></code> interface. The <code>CSSStyleSheet</code> itself lets you examine and modify its corresponding style sheet, including its list of rules.</p>
<p>In practice, every <code>CSSStyleSheet</code> also implements the more generic <code><a title="en/DOM/StyleSheet" rel="internal" href="/api/js/html/StyleSheet">StyleSheet</a></code> interface. A list of <code>CSSStyleSheet</code>-implementing objects corresponding to the style sheets for a given document can be reached by the <code><a title="en/DOM/document.styleSheets" rel="internal" href="/api/js/html/StyleSheetList">document.styleSheets</a></code> property, if the document is styled by an external CSS style sheet or an inline <code><a title="en/HTML/element/style" rel="internal" href="https://developer.mozilla.org/en/HTML/Element/style">style</a></code> element.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CSSStyleSheet">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CSSStyleSheet"</e></m></meta>
	</class>
	<class path="js.html.CSSValue" params="" file="/usr/lib/haxe/std/js/html/CSSValue.hx" extern="1">
		<CSS_CUSTOM public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></CSS_CUSTOM>
		<CSS_INHERIT public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></CSS_INHERIT>
		<CSS_PRIMITIVE_VALUE public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></CSS_PRIMITIVE_VALUE>
		<CSS_VALUE_LIST public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></CSS_VALUE_LIST>
		<cssText public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</cssText>
		<cssValueType public="1" set="null"><x path="Int"/></cssValueType>
		<meta><m n=":native"><e>"CSSValue"</e></m></meta>
	</class>
	<class path="js.html.CanvasElement" params="" file="/usr/lib/haxe/std/js/html/CanvasElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<height public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas#attr-height">height</a></code>
 HTML attribute, specifying the height of the coordinate space in CSS pixels.]]></haxe_doc>
		</height>
		<width public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas#attr-width">width</a></code>
 HTML attribute, specifying the width of the coordinate space in CSS pixels.]]></haxe_doc>
		</width>
		<getContext public="1" set="method"><f a="contextId">
	<c path="String"/>
	<d/>
</f></getContext>
		<toDataURL public="1" set="method"><f a="?type">
	<c path="String"/>
	<c path="String"/>
</f></toDataURL>
		<getContext2d public="1" get="inline" set="null" line="49">
			<f a=""><c path="js.html.CanvasRenderingContext2D"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>getContext("2d")</code>.]]></haxe_doc>
		</getContext2d>
		<getContextWebGL public="1" get="inline" set="null" line="51"><f a="?attribs" v="null">
	<t path="js.html.webgl.ContextAttributes"/>
	<c path="js.html.webgl.RenderingContext"/>
</f></getContextWebGL>
		<haxe_doc><![CDATA[DOM&nbsp;canvas elements expose the <code><a class="external" href="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement">HTMLCanvasElement</a></code> interface, which provides properties and methods for manipulating the layout and presentation of canvas elements. The <code>HTMLCanvasElement</code> interface inherits the properties and methods of the <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 object interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLCanvasElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLCanvasElement"</e></m></meta>
	</class>
	<class path="js.html.CanvasGradient" params="" file="/usr/lib/haxe/std/js/html/CanvasGradient.hx" extern="1">
		<addColorStop public="1" set="method"><f a="offset:color">
	<x path="Float"/>
	<c path="String"/>
	<x path="Void"/>
</f></addColorStop>
		<haxe_doc><![CDATA[This is an opaque object representing a gradient and returned by <a title="en/DOM/CanvasRenderingContext2D" rel="internal" href="/api/js/html/CanvasRenderingContext2D">CanvasRenderingContext2D</a>'s <a title="en/DOM/CanvasRenderingContext2D.createLinearGradient" rel="internal" href="/api/js/html/CanvasRenderingContext2D">createLinearGradient</a> or <a title="en/DOM/CanvasRenderingContext2D.createRadialGradient" rel="internal" href="/api/js/html/CanvasRenderingContext2D">createRadialGradient</a> methods.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CanvasGradient">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CanvasGradient"</e></m></meta>
	</class>
	<class path="js.html.CanvasPattern" params="" file="/usr/lib/haxe/std/js/html/CanvasPattern.hx" extern="1">
		<haxe_doc><![CDATA[This is an opaque object created by <a title="en/DOM/CanvasRenderingContext2D" rel="internal" href="/api/js/html/CanvasRenderingContext2D">CanvasRenderingContext2D</a>'s <a title="en/DOM/CanvasRenderingContext2D.createPattern" rel="internal" href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D.createPattern" class="new ">createPattern</a> method (whether based on a image, canvas, or video).<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CanvasPattern">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CanvasPattern"</e></m></meta>
	</class>
	<class path="js.html.CanvasRenderingContext" params="" file="/usr/lib/haxe/std/js/html/CanvasRenderingContext.hx" extern="1">
		<canvas public="1" set="null"><c path="js.html.CanvasElement"/></canvas>
		<meta><m n=":native"><e>"CanvasRenderingContext"</e></m></meta>
	</class>
	<class path="js.html.CanvasRenderingContext2D" params="" file="/usr/lib/haxe/std/js/html/CanvasRenderingContext2D.hx" extern="1">
		<extends path="js.html.CanvasRenderingContext"/>
		<backingStorePixelRatio public="1" set="null"><x path="Float"/></backingStorePixelRatio>
		<fillStyle public="1">
			<d/>
			<haxe_doc><![CDATA[Color or style to use inside shapes. Default <code>#000</code> (black).]]></haxe_doc>
		</fillStyle>
		<font public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Default value <code>10px sans-serif</code>.]]></haxe_doc>
		</font>
		<globalAlpha public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[Alpha value that is applied to shapes and images before they are composited onto the canvas. Default <code>1.0</code> (opaque).]]></haxe_doc>
		</globalAlpha>
		<globalCompositeOperation public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[With <code>globalAplpha</code> applied this sets how shapes and images are drawn onto the existing bitmap. Possible values: <ul> <li><code>source-atop</code></li> <li><code>source-in</code></li> <li><code>source-out</code></li> <li><code>source-over</code> (default)</li> <li><code>destination-atop</code></li> <li><code>destination-in</code></li> <li><code>destination-out</code></li> <li><code>destination-over</code></li> <li><code>lighter</code></li> <li><code>xor</code></li> </ul>]]></haxe_doc>
		</globalCompositeOperation>
		<imageSmoothingEnabled public="1"><x path="Bool"/></imageSmoothingEnabled>
		<lineCap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Type of endings on the end of lines. Possible values: <code>butt</code> (default), <code>round</code>, <code>square</code>]]></haxe_doc>
		</lineCap>
		<lineDash public="1"><c path="Array"><d/></c></lineDash>
		<lineDashOffset public="1"><x path="Float"/></lineDashOffset>
		<lineJoin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Defines the type of corners where two lines meet. Possible values: <code>round</code>, <code>bevel</code>, <code>miter</code> (default)]]></haxe_doc>
		</lineJoin>
		<lineWidth public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[Width of lines. Default <code>1.0</code>]]></haxe_doc>
		</lineWidth>
		<miterLimit public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[Default <code>10</code>.]]></haxe_doc>
		</miterLimit>
		<shadowBlur public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[Specifies the blurring effect. Default <code>0</code>]]></haxe_doc>
		</shadowBlur>
		<shadowColor public="1">
			<c path="String"/>
			<haxe_doc>Color of the shadow. Default fully-transparent black.</haxe_doc>
		</shadowColor>
		<shadowOffsetX public="1">
			<x path="Float"/>
			<haxe_doc>Horizontal distance the shadow will be offset. Default 0.</haxe_doc>
		</shadowOffsetX>
		<shadowOffsetY public="1">
			<x path="Float"/>
			<haxe_doc>Vertical distance the shadow will be offset. Default 0.</haxe_doc>
		</shadowOffsetY>
		<strokeStyle public="1">
			<d/>
			<haxe_doc><![CDATA[Color or style to use for the lines around shapes. Default <code>#000</code> (black).]]></haxe_doc>
		</strokeStyle>
		<textAlign public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Possible values: <code>start</code> (default), <code>end</code>, <code>left</code>, <code>right</code> or <code>center</code>.]]></haxe_doc>
		</textAlign>
		<textBaseline public="1"><c path="String"/></textBaseline>
		<arc public="1" set="method"><f a="x:y:radius:startAngle:endAngle:anticlockwise">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></arc>
		<arcTo public="1" set="method"><f a="x1:y1:x2:y2:radius">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></arcTo>
		<beginPath public="1" set="method"><f a=""><x path="Void"/></f></beginPath>
		<bezierCurveTo public="1" set="method"><f a="cp1x:cp1y:cp2x:cp2y:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bezierCurveTo>
		<clearRect public="1" set="method"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearRect>
		<clearShadow public="1" set="method"><f a=""><x path="Void"/></f></clearShadow>
		<clip public="1" set="method"><f a=""><x path="Void"/></f></clip>
		<closePath public="1" set="method"><f a=""><x path="Void"/></f></closePath>
		<createImageData public="1" set="method">
			<f a="sw:sh">
				<x path="Float"/>
				<x path="Float"/>
				<c path="js.html.ImageData"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><createImageData public="1" set="method">
	<f a="imagedata">
		<c path="js.html.ImageData"/>
		<c path="js.html.ImageData"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</createImageData></overloads>
		</createImageData>
		<createLinearGradient public="1" set="method"><f a="x0:y0:x1:y1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.CanvasGradient"/>
</f></createLinearGradient>
		<createPattern public="1" set="method">
			<f a="image:repetitionType">
				<c path="js.html.ImageElement"/>
				<c path="String"/>
				<c path="js.html.CanvasPattern"/>
			</f>
			<haxe_doc><![CDATA[<div id="section_31"><span id="Parameters_10"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>A DOM <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/element">element</a></code>
 to use as the source image for the pattern. This can be any element, although typically you'll use an <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Image" class="new">Image</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
.</dd> <dt><code>repetition</code></dt> <dd>?</dd>
</dl>
</div><div id="section_32"><span id="Return_value_3"></span><h6 class="editable">Return value</h6>
<p>A new DOM canvas pattern object for use in pattern-based operations.</p>
</div><div id="section_33"><span id="Exceptions_thrown"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>NS_ERROR_DOM_INVALID_STATE_ERR</code> 
<span title="(Firefox 10.0 / Thunderbird 10.0)
">Requires Gecko 10.0</span>
</dt> <dd>The specified <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 element for the <code>image</code> parameter is zero-sized (that is, one or both of its dimensions are 0 pixels).</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
			<overloads><createPattern public="1" set="method">
	<f a="canvas:repetitionType">
		<c path="js.html.CanvasElement"/>
		<c path="String"/>
		<c path="js.html.CanvasPattern"/>
	</f>
	<haxe_doc><![CDATA[<div id="section_31"><span id="Parameters_10"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>A DOM <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/element">element</a></code>
 to use as the source image for the pattern. This can be any element, although typically you'll use an <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Image" class="new">Image</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
.</dd> <dt><code>repetition</code></dt> <dd>?</dd>
</dl>
</div><div id="section_32"><span id="Return_value_3"></span><h6 class="editable">Return value</h6>
<p>A new DOM canvas pattern object for use in pattern-based operations.</p>
</div><div id="section_33"><span id="Exceptions_thrown"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>NS_ERROR_DOM_INVALID_STATE_ERR</code> 
<span title="(Firefox 10.0 / Thunderbird 10.0)
">Requires Gecko 10.0</span>
</dt> <dd>The specified <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 element for the <code>image</code> parameter is zero-sized (that is, one or both of its dimensions are 0 pixels).</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
</createPattern></overloads>
		</createPattern>
		<createRadialGradient public="1" set="method"><f a="x0:y0:r0:x1:y1:r1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.CanvasGradient"/>
</f></createRadialGradient>
		<drawImage public="1" set="method">
			<f a="video:sx:sy:sw:sh:dx:dy:dw:dh">
				<c path="js.html.VideoElement"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
			<overloads>
				<drawImage public="1" set="method">
					<f a="image:x:y">
						<c path="js.html.ImageElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="image:x:y:width:height">
						<c path="js.html.ImageElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="image:sx:sy:sw:sh:dx:dy:dw:dh">
						<c path="js.html.ImageElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="canvas:x:y">
						<c path="js.html.CanvasElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="canvas:x:y:width:height">
						<c path="js.html.CanvasElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="canvas:sx:sy:sw:sh:dx:dy:dw:dh">
						<c path="js.html.CanvasElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="video:x:y">
						<c path="js.html.VideoElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="video:x:y:width:height">
						<c path="js.html.VideoElement"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Draws the specified image. This method is available in multiple formats, providing a great deal of flexibility in its use.</p>

<div id="section_41"><span id="Parameters_13"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>image</code></dt> <dd>An element to draw into the context; the specification permits any image element (that is, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img">&lt;img&gt;</a></code>
, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
, and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
). Some browsers, including Firefox, let you use any arbitrary element.</dd> <dt><code>dx</code></dt> <dd>The X coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dy</code></dt> <dd>The Y coordinate in the destination canvas at which to place the top-left corner of the source <code>image</code>.</dd> <dt><code>dw</code></dt> <dd>The width to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</dd> <dt><code>dh</code></dt> <dd>The height to draw the <code>image</code> in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</dd> <dt><code>sx</code></dt> <dd>The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sy</code></dt> <dd>The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</dd> <dt><code>sw</code></dt> <dd>The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by <code>sx</code> and <code>sy</code> to the bottom-right corner of the image is used. If you specify a negative value, the image is flipped horizontally when drawn.</dd> <dt><code>sh</code></dt> <dd>The height of the sub-rectangle of the source image to draw into the destination context. If you specify a negative value, the image is flipped vertically when drawn.</dd>
</dl>
<p>The diagram below illustrates the meanings of the various parameters.</p>
<p><img alt="drawImage.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/5494/=drawImage.png"></p>
</div><div id="section_42"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>If the canvas or source rectangle width or height is zero.</dd> <dt><code>INVALID_STATE_ERR</code></dt> <dd>The image has no image data.</dd> <dt><code>TYPE_MISMATCH_ERR</code></dt> <dd>The specified source element isn't supported. This is not thrown by Firefox, since any element may be used as a source image.</dd>
</dl>
</div><div id="section_43"><span id="Compatibility_notes"></span><h6 class="editable">Compatibility notes</h6>
<ul> <li>Prior to Gecko 7.0 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
, Firefox threw an exception if any of the coordinate values was non-finite or zero. As per the specification, this no longer happens.</li> <li>Support for flipping the image by using negative values for <code>sw</code> and <code>sh</code> was added in Gecko 5.0 (Firefox 5.0 / Thunderbird 5.0 / SeaMonkey 2.2)
.</li> <li>Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
 now correctly supports CORS for drawing images across domains without <a title="en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F" rel="internal" href="https://developer.mozilla.org/en/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F">tainting the canvas</a>.</li>
</ul>
</div> Throws DOMException.]]></haxe_doc>
				</drawImage>
			</overloads>
		</drawImage>
		<drawImageFromRect public="1" set="method"><f a="image:?sx:?sy:?sw:?sh:?dx:?dy:?dw:?dh:?compositeOperation">
	<c path="js.html.ImageElement"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="String"/>
	<x path="Void"/>
</f></drawImageFromRect>
		<fill public="1" set="method"><f a=""><x path="Void"/></f></fill>
		<fillRect public="1" set="method"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></fillRect>
		<fillText public="1" set="method"><f a="text:x:y:?maxWidth">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></fillText>
		<getImageData public="1" set="method"><f a="sx:sy:sw:sh">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.ImageData"/>
</f></getImageData>
		<getImageDataHD public="1" set="method"><f a="sx:sy:sw:sh">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.ImageData"/>
</f></getImageDataHD>
		<getLineDash public="1" set="method"><f a=""><c path="Array"><x path="Float"/></c></f></getLineDash>
		<isPointInPath public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></isPointInPath>
		<lineTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></lineTo>
		<measureText public="1" set="method"><f a="text">
	<c path="String"/>
	<c path="js.html.TextMetrics"/>
</f></measureText>
		<moveTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<putImageData public="1" set="method">
			<f a="imagedata:dx:dy:dirtyX:dirtyY:dirtyWidth:dirtyHeight">
				<c path="js.html.ImageData"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<h6 class="editable">Compatibility notes</h6>
<ul> <li>Starting in Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0)
, non-finite values to any of these parameters causes the call to putImageData() to be silently ignored, rather than throwing an exception.</li>
</ul> Throws DOMException.]]></haxe_doc>
			<overloads><putImageData public="1" set="method">
	<f a="imagedata:dx:dy">
		<c path="js.html.ImageData"/>
		<x path="Float"/>
		<x path="Float"/>
		<x path="Void"/>
	</f>
	<haxe_doc><![CDATA[<h6 class="editable">Compatibility notes</h6>
<ul> <li>Starting in Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0)
, non-finite values to any of these parameters causes the call to putImageData() to be silently ignored, rather than throwing an exception.</li>
</ul> Throws DOMException.]]></haxe_doc>
</putImageData></overloads>
		</putImageData>
		<putImageDataHD public="1" set="method">
			<f a="imagedata:dx:dy:dirtyX:dirtyY:dirtyWidth:dirtyHeight">
				<c path="js.html.ImageData"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><putImageDataHD public="1" set="method">
	<f a="imagedata:dx:dy">
		<c path="js.html.ImageData"/>
		<x path="Float"/>
		<x path="Float"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</putImageDataHD></overloads>
		</putImageDataHD>
		<quadraticCurveTo public="1" set="method"><f a="cpx:cpy:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></quadraticCurveTo>
		<rect public="1" set="method"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></rect>
		<restore public="1" set="method"><f a=""><x path="Void"/></f></restore>
		<rotate public="1" set="method"><f a="angle">
	<x path="Float"/>
	<x path="Void"/>
</f></rotate>
		<save public="1" set="method"><f a=""><x path="Void"/></f></save>
		<scale public="1" set="method"><f a="sx:sy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scale>
		<setAlpha public="1" set="method"><f a="alpha">
	<x path="Float"/>
	<x path="Void"/>
</f></setAlpha>
		<setCompositeOperation public="1" set="method"><f a="compositeOperation">
	<c path="String"/>
	<x path="Void"/>
</f></setCompositeOperation>
		<setFillColor public="1" set="method">
			<f a="c:m:y:k:a">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<setFillColor public="1" set="method"><f a="color:?alpha">
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFillColor>
				<setFillColor public="1" set="method"><f a="grayLevel:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFillColor>
				<setFillColor public="1" set="method"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFillColor>
			</overloads>
		</setFillColor>
		<setLineCap public="1" set="method"><f a="cap">
	<c path="String"/>
	<x path="Void"/>
</f></setLineCap>
		<setLineDash public="1" set="method"><f a="dash">
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></setLineDash>
		<setLineJoin public="1" set="method"><f a="join">
	<c path="String"/>
	<x path="Void"/>
</f></setLineJoin>
		<setLineWidth public="1" set="method"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></setLineWidth>
		<setMiterLimit public="1" set="method"><f a="limit">
	<x path="Float"/>
	<x path="Void"/>
</f></setMiterLimit>
		<setShadow public="1" set="method">
			<f a="width:height:blur:c:m:y:k:a">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<setShadow public="1" set="method"><f a="width:height:blur:?color:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setShadow>
				<setShadow public="1" set="method"><f a="width:height:blur:grayLevel:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setShadow>
				<setShadow public="1" set="method"><f a="width:height:blur:r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setShadow>
			</overloads>
		</setShadow>
		<setStrokeColor public="1" set="method">
			<f a="c:m:y:k:a">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<setStrokeColor public="1" set="method"><f a="color:?alpha">
	<c path="String"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setStrokeColor>
				<setStrokeColor public="1" set="method"><f a="grayLevel:?alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setStrokeColor>
				<setStrokeColor public="1" set="method"><f a="r:g:b:a">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setStrokeColor>
			</overloads>
		</setStrokeColor>
		<setTransform public="1" set="method"><f a="m11:m12:m21:m22:dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTransform>
		<stroke public="1" set="method"><f a=""><x path="Void"/></f></stroke>
		<strokeRect public="1" set="method"><f a="x:y:width:height:?lineWidth">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></strokeRect>
		<strokeText public="1" set="method"><f a="text:x:y:?maxWidth">
	<c path="String"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></strokeText>
		<transform public="1" set="method"><f a="m11:m12:m21:m22:dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></transform>
		<translate public="1" set="method"><f a="tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></translate>
		<haxe_doc><![CDATA[The bulk of the operations available at present with <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 are available through this interface, returned by a call to <code>getContext()</code> on the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 element, with "2d" as its argument.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"CanvasRenderingContext2D"</e></m></meta>
	</class>
	<class path="js.html.ClientRect" params="" file="/usr/lib/haxe/std/js/html/ClientRect.hx" extern="1">
		<bottom public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[Y-coordinate, relative to the viewport origin, of the bottom of the rectangle box. <strong>Read only.</strong>]]></haxe_doc>
		</bottom>
		<height public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[Height of the rectangle box (This is identical to <code>bottom</code> minus <code>top</code>). <strong>Read only.</strong>]]></haxe_doc>
		</height>
		<left public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[X-coordinate, relative to the viewport origin, of the left of the rectangle box. <strong>Read only.</strong>]]></haxe_doc>
		</left>
		<right public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[X-coordinate, relative to the viewport origin, of the right of the rectangle box. <strong>Read only.</strong>]]></haxe_doc>
		</right>
		<top public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[Y-coordinate, relative to the viewport origin, of the top of the rectangle box. <strong>Read only.</strong>]]></haxe_doc>
		</top>
		<width public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[Width of the rectangle box (This is identical to <code>right</code> minus <code>left</code>). <strong>Read only.</strong> 
<span title="(Firefox 3.5 / Thunderbird 3.0 / SeaMonkey 2.0)
">Requires Gecko 1.9.1</span>]]></haxe_doc>
		</width>
		<haxe_doc><![CDATA[<div>

<a rel="custom" href="http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/base/nsIDOMClientRect.idl"><code>dom/interfaces/base/nsIDOMClientRect.idl</code></a><span><a rel="internal" href="https://developer.mozilla.org/en/Interfaces/About_Scriptable_Interfaces" title="en/Interfaces/About_Scriptable_Interfaces">Scriptable</a></span></div><span>Represents a rectangular box. The type of box is specified by the method that returns such an object. It is returned by functions like <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/element.getBoundingClientRect">element.getBoundingClientRect</a></code>
.</span><div><div>1.0</div><div>11.0</div><div></div><div>Introduced</div><div>Gecko 1.9</div><div title="Introduced in Gecko 1.9 (Firefox 3)
"></div><div title="Last changed in Gecko 1.9.1 (Firefox 3)
"></div></div>
<div>Inherits from: <code><a rel="custom" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsISupports">nsISupports</a></code>
<span>Last changed in Gecko 1.9.1 (Firefox 3.5 / Thunderbird 3.0 / SeaMonkey 2.0)
</span></div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIDOMClientRect">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ClientRect"</e></m></meta>
	</class>
	<class path="js.html.ClientRectList" params="" file="/usr/lib/haxe/std/js/html/ClientRectList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.ClientRect"/>
</f></item>
		<meta><m n=":native"><e>"ClientRectList"</e></m></meta>
	</class>
	<class path="js.html.Clipboard" params="" file="/usr/lib/haxe/std/js/html/Clipboard.hx" extern="1">
		<dropEffect public="1"><c path="String"/></dropEffect>
		<effectAllowed public="1"><c path="String"/></effectAllowed>
		<files public="1" set="null"><c path="js.html.FileList"/></files>
		<items public="1" set="null"><c path="js.html.DataTransferItemList"/></items>
		<types public="1" set="null"><c path="Array"><d/></c></types>
		<clearData public="1" set="method"><f a="?type">
	<c path="String"/>
	<x path="Void"/>
</f></clearData>
		<getData public="1" set="method"><f a="type">
	<c path="String"/>
	<c path="String"/>
</f></getData>
		<setData public="1" set="method"><f a="type:data">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></setData>
		<setDragImage public="1" set="method"><f a="image:x:y">
	<c path="js.html.ImageElement"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setDragImage>
		<haxe_doc><![CDATA[<div>

<a rel="custom" href="http://mxr.mozilla.org/mozilla-central/source/widget/public/nsIClipboard.idl"><code>widget/public/nsIClipboard.idl</code></a><span><a rel="internal" href="https://developer.mozilla.org/en/Interfaces/About_Scriptable_Interfaces" title="en/Interfaces/About_Scriptable_Interfaces">Scriptable</a></span></div><span>This interface supports basic clipboard operations such as: setting, retrieving, emptying, matching and supporting clipboard data.</span><div>Inherits from: <code><a rel="custom" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsISupports">nsISupports</a></code>
<span>Last changed in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)
</span></div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIClipboard">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Clipboard"</e></m></meta>
	</class>
	<class path="js.html.Comment" params="" file="/usr/lib/haxe/std/js/html/Comment.hx" extern="1">
		<extends path="js.html.CharacterData"/>
		<haxe_doc><![CDATA[<p>A comment is used to add notations within markup; although it is generally not displayed, it is still available to be read in the source view (in Firefox:&nbsp;View -&gt; Page Source).&nbsp; These are represented in HTML and XML as content between <code>&lt;!--</code> and&nbsp; <code>--&gt; . </code>In XML, the character sequence "--" cannot be used within a comment.</p>
<p>A comment has no special properties or methods of its own, but inherits those of <a title="En/DOM/CharacterData" rel="internal" href="/api/js/html/CharacterData">CharacterData</a> (which inherits from <a title="en/DOM/Node" rel="internal" href="/api/js/html/Node">Node</a>).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Comment">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Comment"</e></m></meta>
	</class>
	<class path="js.html.Console" params="" file="/usr/lib/haxe/std/js/html/Console.hx" extern="1">
		<memory public="1" set="null"><c path="js.html.MemoryInfo"/></memory>
		<profiles public="1" set="null"><c path="Array"><c path="js.html.ScriptProfile"/></c></profiles>
		<assert public="1" set="method"><f a="condition:?p1:?p2:?p3:?p4:?p5">
	<x path="Bool"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></assert>
		<clear public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></clear>
		<count public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></count>
		<debug public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></debug>
		<dir public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></dir>
		<dirxml public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></dirxml>
		<error public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></error>
		<group public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></group>
		<groupCollapsed public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></groupCollapsed>
		<groupEnd public="1" set="method"><f a=""><x path="Void"/></f></groupEnd>
		<info public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></info>
		<log public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></log>
		<markTimeline public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></markTimeline>
		<profile public="1" set="method"><f a="title">
	<c path="String"/>
	<x path="Void"/>
</f></profile>
		<profileEnd public="1" set="method"><f a="title">
	<c path="String"/>
	<x path="Void"/>
</f></profileEnd>
		<time public="1" set="method"><f a="title">
	<c path="String"/>
	<x path="Void"/>
</f></time>
		<timeEnd public="1" set="method"><f a="title:?p1:?p2:?p3:?p4:?p5">
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></timeEnd>
		<timeStamp public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></timeStamp>
		<trace public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></trace>
		<warn public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<x path="Void"/>
</f></warn>
		<haxe_doc><![CDATA[<p>Beginning with Firefox 4, the old <a title="en/Error Console" rel="internal" href="https://developer.mozilla.org/en/Error_Console">Error Console</a> has been deprecated in favor of the new, improved Web&nbsp;Console. The Web Console is something of a heads-up display for the web, letting you view error messages and other logged information. In addition, there are methods you can call to output information to the console, making it a useful debugging aid, and you can evaluate JavaScript on the fly.</p>
<p><a title="webconsole.png" rel="internal" href="https://developer.mozilla.org/@api/deki/files/4748/=webconsole.png"><img alt="webconsole.png" class="internal default" src="https://developer.mozilla.org/@api/deki/files/4748/=webconsole.png"></a></p>
<p>The Web Console won't replace more advanced debugging tools like <a class="external" title="http://getfirebug.com/" rel="external" href="http://getfirebug.com/" target="_blank">Firebug</a>; what it does give you, however, is a way to let remote users of your site or web application gather and report console logs and other information to you. It also provides a lightweight way to debug content if you don't happen to have Firebug installed when something goes wrong.</p>
<div class="note"><strong>Note:</strong> The Error Console is still available; you can re-enable it by changing the <code>devtools.errorconsole.enabled</code> preference to <code>true</code> and restarting the browser.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Using_the_Web_Console">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Console"</e></m></meta>
	</class>
	<class path="js.html.ContentElement" params="" file="/usr/lib/haxe/std/js/html/ContentElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<resetStyleInheritance public="1"><x path="Bool"/></resetStyleInheritance>
		<select public="1"><c path="String"/></select>
		<getDistributedNodes public="1" set="method"><f a=""><c path="js.html.NodeList"/></f></getDistributedNodes>
		<meta><m n=":native"><e>"HTMLContentElement"</e></m></meta>
	</class>
	<class path="js.html.Coordinates" params="" file="/usr/lib/haxe/std/js/html/Coordinates.hx" extern="1">
		<accuracy public="1" set="null"><x path="Float"/></accuracy>
		<altitude public="1" set="null"><x path="Float"/></altitude>
		<altitudeAccuracy public="1" set="null"><x path="Float"/></altitudeAccuracy>
		<heading public="1" set="null"><x path="Float"/></heading>
		<latitude public="1" set="null"><x path="Float"/></latitude>
		<longitude public="1" set="null"><x path="Float"/></longitude>
		<speed public="1" set="null"><x path="Float"/></speed>
		<meta><m n=":native"><e>"Coordinates"</e></m></meta>
	</class>
	<class path="js.html.Crypto" params="" file="/usr/lib/haxe/std/js/html/Crypto.hx" extern="1">
		<getRandomValues public="1" set="method"><f a="array">
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></getRandomValues>
		<haxe_doc><![CDATA[Non-standard<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_crypto">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Crypto"</e></m></meta>
	</class>
	<class path="js.html.DListElement" params="" file="/usr/lib/haxe/std/js/html/DListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc>Indicates that spacing between list items should be reduced.</haxe_doc>
		</compact>
		<haxe_doc><![CDATA[DOM&nbsp;definition list elements expose the <a title="http://www.w3.org/TR/html5/grouping-content.html#htmldlistelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/grouping-content.html#htmldlistelement" target="_blank">HTMLDListElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-52368974" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-52368974" target="_blank"><code>HTMLDListElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating definition list elements. In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLDListElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDListElement"</e></m></meta>
	</class>
	<class path="js.html.DOMApplicationCache" params="" file="/usr/lib/haxe/std/js/html/DOMApplicationCache.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<CHECKING public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></CHECKING>
		<DOWNLOADING public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></DOWNLOADING>
		<IDLE public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></IDLE>
		<OBSOLETE public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></OBSOLETE>
		<UNCACHED public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></UNCACHED>
		<UPDATEREADY public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></UPDATEREADY>
		<oncached public="1"><t path="js.html.EventListener"/></oncached>
		<onchecking public="1"><t path="js.html.EventListener"/></onchecking>
		<ondownloading public="1"><t path="js.html.EventListener"/></ondownloading>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onnoupdate public="1"><t path="js.html.EventListener"/></onnoupdate>
		<onobsolete public="1"><t path="js.html.EventListener"/></onobsolete>
		<onprogress public="1"><t path="js.html.EventListener"/></onprogress>
		<onupdateready public="1"><t path="js.html.EventListener"/></onupdateready>
		<status public="1" set="null"><x path="Int"/></status>
		<abort public="1" set="method"><f a=""><x path="Void"/></f></abort>
		<swapCache public="1" set="method"><f a=""><x path="Void"/></f></swapCache>
		<update public="1" set="method"><f a=""><x path="Void"/></f></update>
		<meta><m n=":native"><e>"DOMApplicationCache"</e></m></meta>
	</class>
	<class path="js.html.DOMCoreException" params="" file="/usr/lib/haxe/std/js/html/DOMCoreException.hx" extern="1">
		<ABORT_ERR public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></ABORT_ERR>
		<DATA_CLONE_ERR public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></DATA_CLONE_ERR>
		<DOMSTRING_SIZE_ERR public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></DOMSTRING_SIZE_ERR>
		<HIERARCHY_REQUEST_ERR public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></HIERARCHY_REQUEST_ERR>
		<INDEX_SIZE_ERR public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></INDEX_SIZE_ERR>
		<INUSE_ATTRIBUTE_ERR public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></INUSE_ATTRIBUTE_ERR>
		<INVALID_ACCESS_ERR public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></INVALID_ACCESS_ERR>
		<INVALID_CHARACTER_ERR public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></INVALID_CHARACTER_ERR>
		<INVALID_MODIFICATION_ERR public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></INVALID_MODIFICATION_ERR>
		<INVALID_NODE_TYPE_ERR public="1" get="inline" set="null" line="47" static="1"><x path="Int"/></INVALID_NODE_TYPE_ERR>
		<INVALID_STATE_ERR public="1" get="inline" set="null" line="49" static="1"><x path="Int"/></INVALID_STATE_ERR>
		<NAMESPACE_ERR public="1" get="inline" set="null" line="51" static="1"><x path="Int"/></NAMESPACE_ERR>
		<NETWORK_ERR public="1" get="inline" set="null" line="53" static="1"><x path="Int"/></NETWORK_ERR>
		<NOT_FOUND_ERR public="1" get="inline" set="null" line="55" static="1"><x path="Int"/></NOT_FOUND_ERR>
		<NOT_SUPPORTED_ERR public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></NOT_SUPPORTED_ERR>
		<NO_DATA_ALLOWED_ERR public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></NO_DATA_ALLOWED_ERR>
		<NO_MODIFICATION_ALLOWED_ERR public="1" get="inline" set="null" line="61" static="1"><x path="Int"/></NO_MODIFICATION_ALLOWED_ERR>
		<QUOTA_EXCEEDED_ERR public="1" get="inline" set="null" line="63" static="1"><x path="Int"/></QUOTA_EXCEEDED_ERR>
		<SECURITY_ERR public="1" get="inline" set="null" line="65" static="1"><x path="Int"/></SECURITY_ERR>
		<SYNTAX_ERR public="1" get="inline" set="null" line="67" static="1"><x path="Int"/></SYNTAX_ERR>
		<TIMEOUT_ERR public="1" get="inline" set="null" line="69" static="1"><x path="Int"/></TIMEOUT_ERR>
		<TYPE_MISMATCH_ERR public="1" get="inline" set="null" line="71" static="1"><x path="Int"/></TYPE_MISMATCH_ERR>
		<URL_MISMATCH_ERR public="1" get="inline" set="null" line="73" static="1"><x path="Int"/></URL_MISMATCH_ERR>
		<VALIDATION_ERR public="1" get="inline" set="null" line="75" static="1"><x path="Int"/></VALIDATION_ERR>
		<WRONG_DOCUMENT_ERR public="1" get="inline" set="null" line="77" static="1"><x path="Int"/></WRONG_DOCUMENT_ERR>
		<code public="1" set="null"><x path="Int"/></code>
		<message public="1" set="null"><c path="String"/></message>
		<name public="1" set="null"><c path="String"/></name>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<meta><m n=":native"><e>"DOMException"</e></m></meta>
	</class>
	<class path="js.html.DOMError" params="" file="/usr/lib/haxe/std/js/html/DOMError.hx" extern="1">
		<name public="1" set="null"><c path="String"/></name>
		<meta><m n=":native"><e>"DOMError"</e></m></meta>
	</class>
	<class path="js.html.DOMFormData" params="" file="/usr/lib/haxe/std/js/html/DOMFormData.hx" extern="1">
		<append public="1" set="method"><f a="name:value:filename">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></append>
		<new public="1" set="method"><f a="?arg0">
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"FormData"</e></m></meta>
	</class>
	<class path="js.html.DOMImplementation" params="" file="/usr/lib/haxe/std/js/html/DOMImplementation.hx" extern="1">
		<createCSSStyleSheet public="1" set="method"><f a="title:media">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.CSSStyleSheet"/>
</f></createCSSStyleSheet>
		<createDocument public="1" set="method"><f a="?namespaceURI:?qualifiedName:?doctype">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.DocumentType"/>
	<c path="js.html.Document"/>
</f></createDocument>
		<createDocumentType public="1" set="method"><f a="?qualifiedName:?publicId:?systemId">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.DocumentType"/>
</f></createDocumentType>
		<createHTMLDocument public="1" set="method"><f a="title">
	<c path="String"/>
	<c path="js.html.Document"/>
</f></createHTMLDocument>
		<hasFeature public="1" set="method"><f a="feature:?version">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></hasFeature>
		<haxe_doc><![CDATA[Provides methods which are not dependent on any particular DOM instances. Returned by <code><a title="En/DOM/Document.implementation" class="internal" rel="internal" href="https://developer.mozilla.org/en/DOM/document.implementation">document.implementation</a></code>.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/DOMImplementation">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DOMImplementation"</e></m></meta>
	</class>
	<class path="js.html.DOMMimeType" params="" file="/usr/lib/haxe/std/js/html/DOMMimeType.hx" extern="1">
		<description public="1" set="null"><c path="String"/></description>
		<enabledPlugin public="1" set="null"><c path="js.html.DOMPlugin"/></enabledPlugin>
		<suffixes public="1" set="null"><c path="String"/></suffixes>
		<type public="1" set="null"><c path="String"/></type>
		<meta><m n=":native"><e>"MimeType"</e></m></meta>
	</class>
	<class path="js.html.DOMMimeTypeArray" params="" file="/usr/lib/haxe/std/js/html/DOMMimeTypeArray.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.DOMMimeType"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.DOMMimeType"/>
</f></namedItem>
		<meta><m n=":native"><e>"MimeTypeArray"</e></m></meta>
	</class>
	<class path="js.html.DOMPlugin" params="" file="/usr/lib/haxe/std/js/html/DOMPlugin.hx" extern="1">
		<description public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A human readable description of the plugin. <strong>Read only.</strong>]]></haxe_doc>
		</description>
		<filename public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The filename of the plugin file. <strong>Read only.</strong>]]></haxe_doc>
		</filename>
		<length public="1" set="null"><x path="Int"/></length>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The name of the plugin. <strong>Read only.</strong>]]></haxe_doc>
		</name>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.DOMMimeType"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.DOMMimeType"/>
</f></namedItem>
		<haxe_doc><![CDATA[The <code>Plugin</code> interface provides information about a browser plugin.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Plugin">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Plugin"</e></m></meta>
	</class>
	<class path="js.html.DOMPluginArray" params="" file="/usr/lib/haxe/std/js/html/DOMPluginArray.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.DOMPlugin"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.DOMPlugin"/>
</f></namedItem>
		<refresh public="1" set="method"><f a="reload">
	<x path="Bool"/>
	<x path="Void"/>
</f></refresh>
		<meta><m n=":native"><e>"PluginArray"</e></m></meta>
	</class>
	<class path="js.html.DOMSelection" params="" file="/usr/lib/haxe/std/js/html/DOMSelection.hx" extern="1">
		<anchorNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the node in which the selection begins.</haxe_doc>
		</anchorNode>
		<anchorOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of characters that the selection's anchor is offset within the anchorNode.</haxe_doc>
		</anchorOffset>
		<baseNode public="1" set="null"><c path="js.html.Node"/></baseNode>
		<baseOffset public="1" set="null"><x path="Int"/></baseOffset>
		<extentNode public="1" set="null"><c path="js.html.Node"/></extentNode>
		<extentOffset public="1" set="null"><x path="Int"/></extentOffset>
		<focusNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the node in which the selection ends.</haxe_doc>
		</focusNode>
		<focusOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of characters that the selection's focus is offset within the focusNode.</haxe_doc>
		</focusOffset>
		<isCollapsed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a Boolean indicating whether the selection's start and end points are at the same position.</haxe_doc>
		</isCollapsed>
		<rangeCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of ranges in the selection.</haxe_doc>
		</rangeCount>
		<type public="1" set="null"><c path="String"/></type>
		<addRange public="1" set="method"><f a="range">
	<c path="js.html.Range"/>
	<x path="Void"/>
</f></addRange>
		<collapse public="1" set="method"><f a="node:index">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></collapse>
		<collapseToEnd public="1" set="method"><f a=""><x path="Void"/></f></collapseToEnd>
		<collapseToStart public="1" set="method"><f a=""><x path="Void"/></f></collapseToStart>
		<containsNode public="1" set="method"><f a="node:allowPartial">
	<c path="js.html.Node"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></containsNode>
		<deleteFromDocument public="1" set="method"><f a=""><x path="Void"/></f></deleteFromDocument>
		<empty public="1" set="method"><f a=""><x path="Void"/></f></empty>
		<extend public="1" set="method"><f a="node:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></extend>
		<getRangeAt public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Range"/>
</f></getRangeAt>
		<modify public="1" set="method"><f a="alter:direction:granularity">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></modify>
		<removeAllRanges public="1" set="method"><f a=""><x path="Void"/></f></removeAllRanges>
		<selectAllChildren public="1" set="method"><f a="node">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></selectAllChildren>
		<setBaseAndExtent public="1" set="method"><f a="baseNode:baseOffset:extentNode:extentOffset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setBaseAndExtent>
		<setPosition public="1" set="method"><f a="node:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setPosition>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<haxe_doc><![CDATA[<p>Selection is the class of the object returned by <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.getSelection">window.getSelection()</a></code>
 and other methods. It represents the text selection in the greater page, possibly spanning multiple elements, when the user drags over static text and other parts of the page. For information about text selection in an individual text editing element, see <code><a rel="custom" href="/api/js/html/InputElement">Input</a></code>
, <code><a rel="custom" href="/api/js/html/TextAreaElement">TextArea</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/document.activeElement">document.activeElement</a></code>
 which typically return the parent object returned from <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.getSelection">window.getSelection()</a></code>
.</p>
<p>A selection object represents the <code><a rel="custom" href="/api/js/html/Range">ranges</a></code>
 that the user has selected. Typically, it holds only one range, accessed as follows:</p>

          <pre name="code" class="js">var selObj = window.getSelection();
var range  = selObj.getRangeAt(0);</pre>
        
<ul> <li><code>selObj</code> is a Selection object</li> <li><code>range</code> is a <a title="en/DOM/Range" rel="internal" href="/api/js/html/Range">Range</a> object</li>
</ul>
<p>Calling the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Selection/toString">Selection/toString()</a></code>
 method returns the text contained in the selection, e.g</p>

          <pre name="code" class="js">var selObj = window.getSelection();
window.alert(selObj);</pre>
        
<p>Note that using a selection object as the argument to <code>window.alert</code> will call the object's <code>toString</code> method.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Selection">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Selection"</e></m></meta>
	</class>
	<class path="js.html.DOMTokenList" params="" file="/usr/lib/haxe/std/js/html/DOMTokenList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<add public="1" set="method"><f a="tokens">
	<c path="String"/>
	<x path="Void"/>
</f></add>
		<contains public="1" set="method"><f a="token">
	<c path="String"/>
	<x path="Bool"/>
</f></contains>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<remove public="1" set="method"><f a="tokens">
	<c path="String"/>
	<x path="Void"/>
</f></remove>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<toggle public="1" set="method"><f a="token:?force">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></toggle>
		<haxe_doc><![CDATA[This type represents a set of space-separated tokens. Commonly returned by <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/element.classList">HTMLElement.classList</a></code>
, HTMLLinkElement.relList, HTMLAnchorElement.relList or HTMLAreaElement.relList. It is indexed beginning with 0 as with JavaScript arrays. DOMTokenList is always case-sensitive.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/DOMTokenList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DOMTokenList"</e></m></meta>
	</class>
	<class path="js.html.DOMSettableTokenList" params="" file="/usr/lib/haxe/std/js/html/DOMSettableTokenList.hx" extern="1">
		<extends path="js.html.DOMTokenList"/>
		<value public="1"><c path="String"/></value>
		<meta><m n=":native"><e>"DOMSettableTokenList"</e></m></meta>
	</class>
	<class path="js.html.DOMStringList" params="" file="/usr/lib/haxe/std/js/html/DOMStringList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<contains public="1" set="method"><f a="string">
	<c path="String"/>
	<x path="Bool"/>
</f></contains>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<meta><m n=":native"><e>"DOMStringList"</e></m></meta>
	</class>
	<class path="js.html.DOMWindow" params="" file="/usr/lib/haxe/std/js/html/DOMWindow.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<PERSISTENT public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></PERSISTENT>
		<TEMPORARY public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></TEMPORARY>
		<applicationCache public="1" set="null">
			<c path="js.html.DOMApplicationCache"/>
			<haxe_doc><![CDATA[An <code><a rel="custom" href="https://developer.mozilla.org/en/nsIDOMOfflineResourceList">nsIDOMOfflineResourceList</a></code>
 object providing access to the offline resources for the window.]]></haxe_doc>
		</applicationCache>
		<clientInformation public="1" set="null"><c path="js.html.Navigator"/></clientInformation>
		<closed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<dd>This property indicates whether the current window is closed or not.</dd> <dt><a title="en/Components_object" rel="internal" href="https://developer.mozilla.org/en/Components_object">window.Components</a></dt> <dd>The entry point to many <a title="en/XPCOM" rel="internal" href="https://developer.mozilla.org/en/XPCOM">XPCOM</a> features. Some properties, e.g. <a title="en/Components.classes" rel="internal" href="https://developer.mozilla.org/en/Components.classes">classes</a>, are only available to sufficiently privileged code.</dd>]]></haxe_doc>
		</closed>
		<console public="1" set="null"><c path="js.html.Console"/></console>
		<crypto public="1" set="null">
			<c path="js.html.Crypto"/>
			<haxe_doc>Returns the browser crypto object.</haxe_doc>
		</crypto>
		<defaultStatus public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the status bar text for the given window.</haxe_doc>
		</defaultStatus>
		<defaultstatus public="1"><c path="String"/></defaultstatus>
		<devicePixelRatio public="1" set="null"><x path="Float"/></devicePixelRatio>
		<document public="1" set="null">
			<c path="js.html.Document"/>
			<haxe_doc>Returns a reference to the document that the window contains.</haxe_doc>
		</document>
		<event public="1" set="null"><c path="js.html.Event"/></event>
		<frameElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the element in which the window is embedded, or null if the window is not embedded.</haxe_doc>
		</frameElement>
		<frames public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns an array of the subframes in the current window.</haxe_doc>
		</frames>
		<history public="1" set="null">
			<c path="js.html.History"/>
			<haxe_doc>Returns a reference to the history object.</haxe_doc>
		</history>
		<indexedDB public="1" set="null"><c path="js.html.idb.Factory"/></indexedDB>
		<innerHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the height of the content area of the browser window including, if rendered, the horizontal scrollbar.</haxe_doc>
		</innerHeight>
		<innerWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the width of the content area of the browser window including, if rendered, the vertical scrollbar.</haxe_doc>
		</innerWidth>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Returns the number of frames in the window. See also <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.frames">window.frames</a></code>
.]]></haxe_doc>
		</length>
		<localStorage public="1" set="null">
			<c path="js.html.Storage"/>
			<haxe_doc>Returns a reference to the local storage object used to store data that may only be accessed by the origin that created it. Getter throws DOMException.</haxe_doc>
		</localStorage>
		<location public="1">
			<c path="js.html.Location"/>
			<haxe_doc>Gets/sets the location, or current URL, of the window object.</haxe_doc>
		</location>
		<locationbar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the locationbar object, whose visibility can be toggled in the window.</haxe_doc>
		</locationbar>
		<menubar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the menubar object, whose visibility can be toggled in the window.</haxe_doc>
		</menubar>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the name of the window.</haxe_doc>
		</name>
		<navigator public="1" set="null">
			<c path="js.html.Navigator"/>
			<haxe_doc>Returns a reference to the navigator object.</haxe_doc>
		</navigator>
		<notifications public="1" set="null"><c path="js.html.NotificationCenter"/></notifications>
		<offscreenBuffering public="1" set="null"><x path="Bool"/></offscreenBuffering>
		<onabort public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for abort events on the window.</haxe_doc>
		</onabort>
		<onanimationend public="1"><t path="js.html.EventListener"/></onanimationend>
		<onanimationiteration public="1"><t path="js.html.EventListener"/></onanimationiteration>
		<onanimationstart public="1"><t path="js.html.EventListener"/></onanimationstart>
		<onbeforeunload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for before-unload events on the window.</haxe_doc>
		</onbeforeunload>
		<onblur public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for blur events on the window.</haxe_doc>
		</onblur>
		<oncanplay public="1"><t path="js.html.EventListener"/></oncanplay>
		<oncanplaythrough public="1"><t path="js.html.EventListener"/></oncanplaythrough>
		<onchange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for change events on the window.</haxe_doc>
		</onchange>
		<onclick public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for click events on the window.</haxe_doc>
		</onclick>
		<oncontextmenu public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for right-click events on the window.</haxe_doc>
		</oncontextmenu>
		<ondblclick public="1"><t path="js.html.EventListener"/></ondblclick>
		<ondevicemotion public="1"><t path="js.html.EventListener"/></ondevicemotion>
		<ondeviceorientation public="1"><t path="js.html.EventListener"/></ondeviceorientation>
		<ondrag public="1"><t path="js.html.EventListener"/></ondrag>
		<ondragend public="1"><t path="js.html.EventListener"/></ondragend>
		<ondragenter public="1"><t path="js.html.EventListener"/></ondragenter>
		<ondragleave public="1"><t path="js.html.EventListener"/></ondragleave>
		<ondragover public="1"><t path="js.html.EventListener"/></ondragover>
		<ondragstart public="1"><t path="js.html.EventListener"/></ondragstart>
		<ondrop public="1"><t path="js.html.EventListener"/></ondrop>
		<ondurationchange public="1"><t path="js.html.EventListener"/></ondurationchange>
		<onemptied public="1"><t path="js.html.EventListener"/></onemptied>
		<onended public="1"><t path="js.html.EventListener"/></onended>
		<onerror public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for errors raised on the window.</haxe_doc>
		</onerror>
		<onfocus public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for focus events on the window.</haxe_doc>
		</onfocus>
		<onhashchange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for hash change events on the window; called when the part of the URL after the hash mark ("#") changes.</haxe_doc>
		</onhashchange>
		<oninput public="1"><t path="js.html.EventListener"/></oninput>
		<oninvalid public="1"><t path="js.html.EventListener"/></oninvalid>
		<onkeydown public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for keydown events on the window.</haxe_doc>
		</onkeydown>
		<onkeypress public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for keypress events on the window.</haxe_doc>
		</onkeypress>
		<onkeyup public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for keyup events on the window.</haxe_doc>
		</onkeyup>
		<onload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for window loading.</haxe_doc>
		</onload>
		<onloadeddata public="1"><t path="js.html.EventListener"/></onloadeddata>
		<onloadedmetadata public="1"><t path="js.html.EventListener"/></onloadedmetadata>
		<onloadstart public="1"><t path="js.html.EventListener"/></onloadstart>
		<onmessage public="1"><t path="js.html.EventListener"/></onmessage>
		<onmousedown public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mousedown events on the window.</haxe_doc>
		</onmousedown>
		<onmousemove public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mousemove events on the window.</haxe_doc>
		</onmousemove>
		<onmouseout public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mouseout events on the window.</haxe_doc>
		</onmouseout>
		<onmouseover public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mouseover events on the window.</haxe_doc>
		</onmouseover>
		<onmouseup public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for mouseup events on the window.</haxe_doc>
		</onmouseup>
		<onmousewheel public="1"><t path="js.html.EventListener"/></onmousewheel>
		<onoffline public="1"><t path="js.html.EventListener"/></onoffline>
		<ononline public="1"><t path="js.html.EventListener"/></ononline>
		<onpagehide public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for pagehide events on the window.</haxe_doc>
		</onpagehide>
		<onpageshow public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for pageshow events on the window.</haxe_doc>
		</onpageshow>
		<onpause public="1"><t path="js.html.EventListener"/></onpause>
		<onplay public="1"><t path="js.html.EventListener"/></onplay>
		<onplaying public="1"><t path="js.html.EventListener"/></onplaying>
		<onpopstate public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for popstate events, which are fired when navigating to a session history entry representing a state object.</haxe_doc>
		</onpopstate>
		<onprogress public="1"><t path="js.html.EventListener"/></onprogress>
		<onratechange public="1"><t path="js.html.EventListener"/></onratechange>
		<onreset public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for reset events on the window.</haxe_doc>
		</onreset>
		<onresize public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for window resizing.</haxe_doc>
		</onresize>
		<onscroll public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for window scrolling.</haxe_doc>
		</onscroll>
		<onsearch public="1"><t path="js.html.EventListener"/></onsearch>
		<onseeked public="1"><t path="js.html.EventListener"/></onseeked>
		<onseeking public="1"><t path="js.html.EventListener"/></onseeking>
		<onselect public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for window selection.</haxe_doc>
		</onselect>
		<onstalled public="1"><t path="js.html.EventListener"/></onstalled>
		<onstorage public="1"><t path="js.html.EventListener"/></onstorage>
		<onsubmit public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for submits on window forms.</haxe_doc>
		</onsubmit>
		<onsuspend public="1"><t path="js.html.EventListener"/></onsuspend>
		<ontimeupdate public="1"><t path="js.html.EventListener"/></ontimeupdate>
		<ontouchcancel public="1"><t path="js.html.EventListener"/></ontouchcancel>
		<ontouchend public="1"><t path="js.html.EventListener"/></ontouchend>
		<ontouchmove public="1"><t path="js.html.EventListener"/></ontouchmove>
		<ontouchstart public="1"><t path="js.html.EventListener"/></ontouchstart>
		<ontransitionend public="1"><t path="js.html.EventListener"/></ontransitionend>
		<onunload public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>An event handler property for unload events on the window.</haxe_doc>
		</onunload>
		<onvolumechange public="1"><t path="js.html.EventListener"/></onvolumechange>
		<onwaiting public="1"><t path="js.html.EventListener"/></onwaiting>
		<opener public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns a reference to the window that opened this current window.</haxe_doc>
		</opener>
		<outerHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the height of the outside of the browser window.</haxe_doc>
		</outerHeight>
		<outerWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the width of the outside of the browser window.</haxe_doc>
		</outerWidth>
		<pagePopupController public="1" set="null"><c path="js.html.PagePopupController"/></pagePopupController>
		<pageXOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[An alias for <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.scrollX">window.scrollX</a></code>
.]]></haxe_doc>
		</pageXOffset>
		<pageYOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[An alias for <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.scrollY">window.scrollY</a></code>]]></haxe_doc>
		</pageYOffset>
		<parent public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns a reference to the parent of the current window or subframe.</haxe_doc>
		</parent>
		<performance public="1" set="null"><c path="js.html.Performance"/></performance>
		<personalbar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the personalbar object, whose visibility can be toggled in the window.</haxe_doc>
		</personalbar>
		<screen public="1" set="null">
			<c path="js.html.Screen"/>
			<haxe_doc>Returns a reference to the screen object associated with the window.</haxe_doc>
		</screen>
		<screenLeft public="1" set="null"><x path="Int"/></screenLeft>
		<screenTop public="1" set="null"><x path="Int"/></screenTop>
		<screenX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the horizontal distance of the left border of the user's browser from the left side of the screen.</haxe_doc>
		</screenX>
		<screenY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the vertical distance of the top border of the user's browser from the top side of the screen.</haxe_doc>
		</screenY>
		<scrollX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of pixels that the document has already been scrolled horizontally.</haxe_doc>
		</scrollX>
		<scrollY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of pixels that the document has already been scrolled vertically.</haxe_doc>
		</scrollY>
		<scrollbars public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the scrollbars object, whose visibility can be toggled in the window.</haxe_doc>
		</scrollbars>
		<self public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns an object reference to the window object itself.</haxe_doc>
		</self>
		<sessionStorage public="1" set="null">
			<c path="js.html.Storage"/>
			<haxe_doc>A storage object for storing data within a single page session. Getter throws DOMException.</haxe_doc>
		</sessionStorage>
		<status public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the text in the statusbar at the bottom of the browser.</haxe_doc>
		</status>
		<statusbar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the statusbar object, whose visibility can be toggled in the window.</haxe_doc>
		</statusbar>
		<storageInfo public="1" set="null"><c path="js.html.StorageInfo"/></storageInfo>
		<styleMedia public="1" set="null"><c path="js.html.StyleMedia"/></styleMedia>
		<toolbar public="1" set="null">
			<c path="js.html.BarInfo"/>
			<haxe_doc>Returns the toolbar object, whose visibility can be toggled in the window.</haxe_doc>
		</toolbar>
		<top public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc><![CDATA[<dd>Returns a reference to the topmost window in the window hierarchy. This property is read only.</dd> <dt><code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.URL">window.URL</a></code>
 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>
</dt> <dd>A DOM&nbsp;URL&nbsp;object, which provides the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.URL.createObjectURL">window.URL.createObjectURL()</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.URL.revokeObjectURL">window.URL.revokeObjectURL()</a></code>
 methods.</dd>]]></haxe_doc>
		</top>
		<window public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc><![CDATA[<dd>Returns a reference to the current window.</dd> <dt>window[0], window[1], etc.</dt> <dd>Returns a reference to the <code>window</code> object in the frames. See <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.frames">window.frames</a></code>
 for more details.</dd>]]></haxe_doc>
		</window>
		<alert public="1" set="method"><f a="message">
	<c path="String"/>
	<x path="Void"/>
</f></alert>
		<atob public="1" set="method"><f a="?string">
	<c path="String"/>
	<c path="String"/>
</f></atob>
		<blur public="1" set="method"><f a=""><x path="Void"/></f></blur>
		<btoa public="1" set="method"><f a="?string">
	<c path="String"/>
	<c path="String"/>
</f></btoa>
		<cancelAnimationFrame public="1" set="method">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<overloads><cancelAnimationFrame public="1" set="method"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></cancelAnimationFrame></overloads>
		</cancelAnimationFrame>
		<cancelRequestAnimationFrame public="1" set="method"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></cancelRequestAnimationFrame>
		<captureEvents public="1" set="method"><f a=""><x path="Void"/></f></captureEvents>
		<clearInterval public="1" set="method"><f a="handle">
	<x path="Int"/>
	<x path="Void"/>
</f></clearInterval>
		<clearTimeout public="1" set="method"><f a="handle">
	<x path="Int"/>
	<x path="Void"/>
</f></clearTimeout>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<confirm public="1" set="method"><f a="message">
	<c path="String"/>
	<x path="Bool"/>
</f></confirm>
		<convertPointFromNodeToPage public="1" set="method"><f a="node:p">
	<c path="js.html.Node"/>
	<c path="js.html.Point"/>
	<c path="js.html.Point"/>
</f></convertPointFromNodeToPage>
		<convertPointFromPageToNode public="1" set="method"><f a="node:p">
	<c path="js.html.Node"/>
	<c path="js.html.Point"/>
	<c path="js.html.Point"/>
</f></convertPointFromPageToNode>
		<find public="1" set="method"><f a="string:caseSensitive:backwards:wrap:wholeWord:searchInFrames:showDialog">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></find>
		<focus public="1" set="method"><f a=""><x path="Void"/></f></focus>
		<getComputedStyle public="1" set="method"><f a="element:?pseudoElement">
	<c path="js.html.Element"/>
	<c path="String"/>
	<c path="js.html.CSSStyleDeclaration"/>
</f></getComputedStyle>
		<getMatchedCSSRules public="1" set="method"><f a="element:?pseudoElement">
	<c path="js.html.Element"/>
	<c path="String"/>
	<c path="js.html.CSSRuleList"/>
</f></getMatchedCSSRules>
		<getSelection public="1" set="method"><f a=""><c path="js.html.DOMSelection"/></f></getSelection>
		<matchMedia public="1" set="method"><f a="query">
	<c path="String"/>
	<c path="js.html.MediaQueryList"/>
</f></matchMedia>
		<moveBy public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveBy>
		<moveTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<open public="1" set="method"><f a="url:name:?options">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.DOMWindow"/>
</f></open>
		<openDatabase public="1" set="method"><f a="name:version:displayName:estimatedSize:?creationCallback">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<t path="js.html.sql.DatabaseCallback"/>
	<c path="js.html.sql.Database"/>
</f></openDatabase>
		<postMessage public="1" set="method">
			<f a="message:targetOrigin:messagePorts">
				<d/>
				<c path="String"/>
				<c path="Array"><d/></c>
				<x path="Void"/>
			</f>
			<haxe_doc>Provides a secure means for one window to send a string of data to another window, which need not be within the same domain as the first, in a secure manner. Throws DOMException.</haxe_doc>
			<overloads><postMessage public="1" set="method">
	<f a="message:targetOrigin">
		<d/>
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Provides a secure means for one window to send a string of data to another window, which need not be within the same domain as the first, in a secure manner. Throws DOMException.</haxe_doc>
</postMessage></overloads>
		</postMessage>
		<print public="1" set="method"><f a=""><x path="Void"/></f></print>
		<prompt public="1" set="method"><f a="message:?defaultValue">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></prompt>
		<releaseEvents public="1" set="method"><f a=""><x path="Void"/></f></releaseEvents>
		<requestAnimationFrame public="1" set="method">
			<f a="callback_">
				<t path="js.html.RequestAnimationFrameCallback"/>
				<x path="Int"/>
			</f>
			<overloads><requestAnimationFrame public="1" set="method"><f a="callback_">
	<t path="js.html.RequestAnimationFrameCallback"/>
	<x path="Int"/>
</f></requestAnimationFrame></overloads>
		</requestAnimationFrame>
		<requestFileSystem public="1" set="method"><f a="type:size:successCallback:?errorCallback">
	<x path="Int"/>
	<x path="Int"/>
	<t path="js.html.fs.FileSystemCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></requestFileSystem>
		<resizeBy public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></resizeBy>
		<resizeTo public="1" set="method"><f a="width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></resizeTo>
		<resolveLocalFileSystemURL public="1" set="method"><f a="url:successCallback:?errorCallback">
	<c path="String"/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></resolveLocalFileSystemURL>
		<scroll public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scroll>
		<scrollBy public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scrollBy>
		<scrollTo public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scrollTo>
		<setInterval public="1" set="method"><f a="handler:timeout">
	<f a=""><x path="Void"/></f>
	<x path="Int"/>
	<x path="Int"/>
</f></setInterval>
		<setTimeout public="1" set="method"><f a="handler:timeout">
	<f a=""><x path="Void"/></f>
	<x path="Int"/>
	<x path="Int"/>
</f></setTimeout>
		<showModalDialog public="1" set="method"><f a="url:?dialogArgs:?featureArgs">
	<c path="String"/>
	<d/>
	<c path="String"/>
	<d/>
</f></showModalDialog>
		<stop public="1" set="method"><f a=""><x path="Void"/></f></stop>
		<haxe_doc><![CDATA[<p>This section provides a brief reference for all of the methods, properties, and events available through the DOM <code>window</code> object. The <code>window</code> object implements the <code>Window</code> interface, which in turn inherits from the <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-AbstractView" title="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-AbstractView" target="_blank">AbstractView</a></code> interface. Some additional global functions, namespaces objects, and constructors, not typically associated with the window, but available on it, are listed in the <a title="https://developer.mozilla.org/en/JavaScript/Reference" rel="internal" href="https://developer.mozilla.org/en/JavaScript/Reference">JavaScript Reference</a>.</p>
<p>The <code>window</code> object represents the window itself. The <code>document</code> property of a <code>window</code> points to the <a title="en/DOM/document" rel="internal" href="/api/js/html/Document">DOM document</a> loaded in that window. A window for a given document can be obtained using the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/document.defaultView">document.defaultView</a></code>
 property.</p>
<p>In a tabbed browser, such as Firefox, each tab contains its own <code>window</code> object (and if you're writing an extension, the browser window itself is a separate window too - see <a title="en/Working_with_windows_in_chrome_code#Content_windows" rel="internal" href="https://developer.mozilla.org/en/Working_with_windows_in_chrome_code#Content_windows">Working with windows in chrome code</a> for more information). That is, the <code>window</code> object is not shared between tabs in the same window. Some methods, namely <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.resizeTo">window.resizeTo</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/window.resizeBy">window.resizeBy</a></code>
 apply to the whole window and not to the specific tab the <code>window</code> object belongs to. Generally, anything that can't reasonably pertain to a tab pertains to the window instead.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Window"</e></m></meta>
	</class>
	<class path="js.html.DataListElement" params="" file="/usr/lib/haxe/std/js/html/DataListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<options public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>A collection of the contained option elements.</haxe_doc>
		</options>
		<haxe_doc><![CDATA[DOM Datalist objects expose the <a class=" external" title="http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#the-datalist-element" rel="external" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#the-datalist-element" target="_blank">HTMLDataListElement</a> interface, which provides special properties (beyond the <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) to manipulate <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/datalist">&lt;datalist&gt;</a></code>
 elements and their content.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLDataListElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDataListElement"</e></m></meta>
	</class>
	<class path="js.html.DataTransferItem" params="" file="/usr/lib/haxe/std/js/html/DataTransferItem.hx" extern="1">
		<kind public="1" set="null"><c path="String"/></kind>
		<type public="1" set="null"><c path="String"/></type>
		<getAsEntry public="1" set="method"><f a=""><c path="js.html.fs.Entry"/></f></getAsEntry>
		<getAsFile public="1" set="method"><f a=""><c path="js.html.Blob"/></f></getAsFile>
		<getAsString public="1" set="method"><f a="callback_">
	<t path="js.html.StringCallback"/>
	<x path="Void"/>
</f></getAsString>
		<meta><m n=":native"><e>"DataTransferItem"</e></m></meta>
	</class>
	<class path="js.html.DataTransferItemList" params="" file="/usr/lib/haxe/std/js/html/DataTransferItemList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<add public="1" set="method">
			<f a="data:type">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<overloads><add public="1" set="method"><f a="file">
	<c path="js.html.File"/>
	<x path="Void"/>
</f></add></overloads>
		</add>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.DataTransferItem"/>
</f></item>
		<meta><m n=":native"><e>"DataTransferItemList"</e></m></meta>
	</class>
	<class path="js.html.DataView" params="" file="/usr/lib/haxe/std/js/html/DataView.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<getFloat32 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Float"/>
</f></getFloat32>
		<getFloat64 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Float"/>
</f></getFloat64>
		<getInt16 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getInt16>
		<getInt32 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getInt32>
		<getInt8 public="1" set="method">
			<f a="byteOffset">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc><![CDATA[<p>Gets a signed 8-bit integer at the specified byte offset from the start of the view.</p>

<div id="section_11"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>offset</code></dt> <dd>The offset, in byte, from the start of the view where to read the data.</dd>
</dl>
</div><div id="section_12"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>The <code>byteOffset</code> is set such as it would read beyond the end of the view</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
			<overloads><getInt8 public="1" set="method">
	<f a=""><d/></f>
	<haxe_doc><![CDATA[<p>Gets a signed 8-bit integer at the specified byte offset from the start of the view.</p>

<div id="section_11"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>offset</code></dt> <dd>The offset, in byte, from the start of the view where to read the data.</dd>
</dl>
</div><div id="section_12"><span id="Exceptions_thrown_2"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>The <code>byteOffset</code> is set such as it would read beyond the end of the view</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
</getInt8></overloads>
		</getInt8>
		<getUint16 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getUint16>
		<getUint32 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getUint32>
		<getUint8 public="1" set="method">
			<f a="byteOffset">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc><![CDATA[<p>Gets an unsigned 8-bit integer at the specified byte offset from the start of the view.</p>

<div id="section_14"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>offset</code></dt> <dd>The offset, in byte, from the start of the view where to read the data.</dd>
</dl>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>The <code>byteOffset</code> is set such as it would read beyond the end of the view</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
			<overloads><getUint8 public="1" set="method">
	<f a=""><d/></f>
	<haxe_doc><![CDATA[<p>Gets an unsigned 8-bit integer at the specified byte offset from the start of the view.</p>

<div id="section_14"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>offset</code></dt> <dd>The offset, in byte, from the start of the view where to read the data.</dd>
</dl>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>The <code>byteOffset</code> is set such as it would read beyond the end of the view</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
</getUint8></overloads>
		</getUint8>
		<setFloat32 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setFloat32>
		<setFloat64 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setFloat64>
		<setInt16 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setInt16>
		<setInt32 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setInt32>
		<setInt8 public="1" set="method">
			<f a="byteOffset:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><setInt8 public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</setInt8></overloads>
		</setInt8>
		<setUint16 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setUint16>
		<setUint32 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setUint32>
		<setUint8 public="1" set="method">
			<f a="byteOffset:value">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><setUint8 public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</setUint8></overloads>
		</setUint8>
		<new public="1" set="method">
			<f a="?arg0:?arg1:?arg2">
				<d/>
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[DataView DataView(<a title="en/JavaScript_typed_arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a> buffer, optional unsigned long byteOffset, optional unsigned long byteLength);<p>Returns a new <code>DataView</code> object using the passed <a title="en/JavaScript_typed_arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a> for its storage.</p>
<pre>DataView DataView(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long byteLength
);
</pre>
<div id="section_6"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript_typed_arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>DataView</code> object.</dd> <dt><code>byteOffset</code> 
<span title="">Optional</span>
</dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the view of the buffer will start with the first byte.</dd> <dt><code>byteLength</code> 
<span title="">Optional</span>
</dt> <dd>The number of elements in the byte array. If unspecified, length of the view will match the buffer's length.</dd>
</dl>
</div><div id="section_7"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>DataView</code> object representing the specified data buffer.</p>
</div><div id="section_8"><span id="Exceptions_thrown"></span><h6 class="editable">Exceptions thrown</h6>
<dl> <dt><code>INDEX_SIZE_ERR</code></dt> <dd>The <code>byteOffset</code> and <code>byteLength</code> result in the specified view extending past the end of the buffer.</dd>
</dl>
</div>]]></haxe_doc>
		</new>
		<haxe_doc><![CDATA[<div><strong>DRAFT</strong>
<div>This page is not complete.</div>
</div>

<p></p>
<div class="note"><strong>Note:</strong> <code>DataView</code> is not yet implemented in Gecko. It is implemented in Chrome 9.</div>
<p>An <code>ArrayBuffer</code> is a useful object for representing an arbitrary chunk of data. In many cases, such data will be read from disk or from the network, and will not follow the alignment restrictions that are imposed on the <a title="en/JavaScript_typed_arrays/ArrayBufferView" rel="internal" href="/api/js/html/ArrayBufferView">Typed Array Views</a> described earlier. In addition, the data will often be heterogeneous in nature and have a defined byte order.</p>
<p>The <code>DataView</code> view provides a low-level interface for reading such data from and writing it to an <code><a title="en/JavaScript_typed_arrays/ArrayBuffer" rel="internal" href="/api/js/html/ArrayBuffer">ArrayBuffer</a></code>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/DataView">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DataView"</e></m></meta>
	</class>
	<class path="js.html.DetailsElement" params="" file="/usr/lib/haxe/std/js/html/DetailsElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<open public="1">
			<x path="Bool"/>
			<haxe_doc>This Boolean attribute indicates whether the details will be shown to the user on page load. If omitted the details will be hidden.</haxe_doc>
		</open>
		<haxe_doc><![CDATA[The HTML <em>details</em> element (<code>&lt;details&gt;</code>) is used as a disclosure widget from which the user the retrieve additional information.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/details">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDetailsElement"</e></m></meta>
	</class>
	<class path="js.html.DirectoryElement" params="" file="/usr/lib/haxe/std/js/html/DirectoryElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn't work in all browsers. <div class="note"><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it has been deprecated: the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/dir">&lt;dir&gt;</a></code>
 element should be styled using <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a>. To give a similar effect than the <span>compact</span> attribute, the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property <a title="en/CSS/line-height" rel="internal" href="https://developer.mozilla.org/en/CSS/line-height">line-height</a> can be used with a value of <span>80%</span>.</div>]]></haxe_doc>
		</compact>
		<haxe_doc><![CDATA[Obsolete<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/dir">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDirectoryElement"</e></m></meta>
	</class>
	<class path="js.html.DivElement" params="" file="/usr/lib/haxe/std/js/html/DivElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Enumerated attribute indicating alignment of the element's contents with respect to the surrounding context.</haxe_doc>
		</align>
		<haxe_doc><![CDATA[DOM&nbsp;div (document division) objects expose the <a title="http://www.w3.org/TR/html5/grouping-content.html#htmldivelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/grouping-content.html#htmldivelement" target="_blank">HTMLDivElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-22445964" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-22445964" target="_blank"><code>HTMLDivElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating div elements. In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLDivElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDivElement"</e></m></meta>
	</class>
	<class path="js.html.Document" params="" file="/usr/lib/haxe/std/js/html/Document.hx" extern="1">
		<extends path="js.html.Node"/>
		<URL public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a string containing the URL of the current document.</haxe_doc>
		</URL>
		<activeElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the currently focused element</haxe_doc>
		</activeElement>
		<alinkColor public="1">
			<c path="String"/>
			<haxe_doc>Returns or sets the color of active links in the document body.</haxe_doc>
		</alinkColor>
		<all public="1"><c path="js.html.HTMLAllCollection"/></all>
		<anchors public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of all of the anchors in the document.</haxe_doc>
		</anchors>
		<applets public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns an ordered list of the applets within a document.</haxe_doc>
		</applets>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the background color of the current document.</haxe_doc>
		</bgColor>
		<body public="1">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the BODY node of the current document. Setter throws DOMException.</haxe_doc>
		</body>
		<characterSet public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the character set being used by the document.</haxe_doc>
		</characterSet>
		<charset public="1"><c path="String"/></charset>
		<compatMode public="1" set="null">
			<c path="String"/>
			<haxe_doc>Indicates whether the document is rendered in Quirks or Strict mode.</haxe_doc>
		</compatMode>
		<cookie public="1">
			<c path="String"/>
			<haxe_doc>Returns a semicolon-separated list of the cookies for that document or sets a single cookie. Getter throws DOMException. Setter throws DOMException.</haxe_doc>
		</cookie>
		<currentFullScreenElement public="1" set="null"><c path="js.html.Element"/></currentFullScreenElement>
		<defaultCharset public="1" set="null"><c path="String"/></defaultCharset>
		<defaultView public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>Returns a reference to the window object.</haxe_doc>
		</defaultView>
		<designMode public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Gets/sets WYSYWIG editing capability of <a title="en/Midas" rel="internal" href="https://developer.mozilla.org/en/Midas">Midas</a>. It can only be used for HTML documents.]]></haxe_doc>
		</designMode>
		<dir public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets directionality (rtl/ltr) of the document</haxe_doc>
		</dir>
		<doctype public="1" set="null">
			<c path="js.html.DocumentType"/>
			<haxe_doc>Returns the Document Type Definition (DTD) of the current document.</haxe_doc>
		</doctype>
		<documentElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the Element that is a direct child of document. For HTML documents, this is normally the HTML element.</haxe_doc>
		</documentElement>
		<documentURI public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the document location.</haxe_doc>
		</documentURI>
		<domain public="1">
			<c path="String"/>
			<haxe_doc>Returns the domain of the current document. Setter throws DOMException.</haxe_doc>
		</domain>
		<embeds public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of the embedded OBJECTS within the current document.</haxe_doc>
		</embeds>
		<fgColor public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the foreground color, or text color, of the current document.</haxe_doc>
		</fgColor>
		<forms public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of the FORM elements within the current document.</haxe_doc>
		</forms>
		<fullScreenKeyboardInputAllowed public="1" set="null"><x path="Bool"/></fullScreenKeyboardInputAllowed>
		<fullscreenElement public="1" set="null"><c path="js.html.Element"/></fullscreenElement>
		<fullscreenEnabled public="1" set="null"><x path="Bool"/></fullscreenEnabled>
		<head public="1" set="null">
			<c path="js.html.HeadElement"/>
			<haxe_doc>Returns the HEAD node of the current document.</haxe_doc>
		</head>
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets/sets the height of the current document.</haxe_doc>
		</height>
		<hidden public="1" set="null"><x path="Bool"/></hidden>
		<images public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of the images in the current document.</haxe_doc>
		</images>
		<implementation public="1" set="null">
			<c path="js.html.DOMImplementation"/>
			<haxe_doc>Returns the DOM implementation associated with the current document.</haxe_doc>
		</implementation>
		<inputEncoding public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the encoding used when the document was parsed.</haxe_doc>
		</inputEncoding>
		<isFullScreen public="1" set="null"><x path="Bool"/></isFullScreen>
		<lastModified public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the date on which the document was last modified.</haxe_doc>
		</lastModified>
		<linkColor public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the color of hyperlinks in the document.</haxe_doc>
		</linkColor>
		<links public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of all the hyperlinks in the document.</haxe_doc>
		</links>
		<location public="1">
			<c path="js.html.Location"/>
			<haxe_doc>Returns the URI of the current document.</haxe_doc>
		</location>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onbeforecopy public="1"><t path="js.html.EventListener"/></onbeforecopy>
		<onbeforecut public="1"><t path="js.html.EventListener"/></onbeforecut>
		<onbeforepaste public="1"><t path="js.html.EventListener"/></onbeforepaste>
		<onblur public="1"><t path="js.html.EventListener"/></onblur>
		<onchange public="1"><t path="js.html.EventListener"/></onchange>
		<onclick public="1"><t path="js.html.EventListener"/></onclick>
		<oncontextmenu public="1"><t path="js.html.EventListener"/></oncontextmenu>
		<oncopy public="1"><t path="js.html.EventListener"/></oncopy>
		<oncut public="1"><t path="js.html.EventListener"/></oncut>
		<ondblclick public="1"><t path="js.html.EventListener"/></ondblclick>
		<ondrag public="1"><t path="js.html.EventListener"/></ondrag>
		<ondragend public="1"><t path="js.html.EventListener"/></ondragend>
		<ondragenter public="1"><t path="js.html.EventListener"/></ondragenter>
		<ondragleave public="1"><t path="js.html.EventListener"/></ondragleave>
		<ondragover public="1"><t path="js.html.EventListener"/></ondragover>
		<ondragstart public="1"><t path="js.html.EventListener"/></ondragstart>
		<ondrop public="1"><t path="js.html.EventListener"/></ondrop>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onfocus public="1"><t path="js.html.EventListener"/></onfocus>
		<onfullscreenchange public="1"><t path="js.html.EventListener"/></onfullscreenchange>
		<onfullscreenerror public="1"><t path="js.html.EventListener"/></onfullscreenerror>
		<oninput public="1"><t path="js.html.EventListener"/></oninput>
		<oninvalid public="1"><t path="js.html.EventListener"/></oninvalid>
		<onkeydown public="1"><t path="js.html.EventListener"/></onkeydown>
		<onkeypress public="1"><t path="js.html.EventListener"/></onkeypress>
		<onkeyup public="1"><t path="js.html.EventListener"/></onkeyup>
		<onload public="1"><t path="js.html.EventListener"/></onload>
		<onmousedown public="1"><t path="js.html.EventListener"/></onmousedown>
		<onmousemove public="1"><t path="js.html.EventListener"/></onmousemove>
		<onmouseout public="1"><t path="js.html.EventListener"/></onmouseout>
		<onmouseover public="1"><t path="js.html.EventListener"/></onmouseover>
		<onmouseup public="1"><t path="js.html.EventListener"/></onmouseup>
		<onmousewheel public="1"><t path="js.html.EventListener"/></onmousewheel>
		<onpaste public="1"><t path="js.html.EventListener"/></onpaste>
		<onpointerlockchange public="1"><t path="js.html.EventListener"/></onpointerlockchange>
		<onpointerlockerror public="1"><t path="js.html.EventListener"/></onpointerlockerror>
		<onreadystatechange public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[<dl><dd>Returns the event handling code for the <code>readystatechange</code> event.</dd>
</dl>
<div class="geckoVersionNote"> <p>
</p><div class="geckoVersionHeading">Gecko 9.0 note<div>(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
</div></div>
<p></p> <p>Starting in Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
, you can now use the syntax <code>if ("onabort" in document)</code> to determine whether or not a given event handler property exists. This is because event handler interfaces have been updated to be proper web IDL interfaces. See <a title="en/DOM/DOM event handlers" rel="internal" href="https://developer.mozilla.org/en/DOM/DOM_event_handlers">DOM event handlers</a> for details.</p>
</div>]]></haxe_doc>
		</onreadystatechange>
		<onreset public="1"><t path="js.html.EventListener"/></onreset>
		<onscroll public="1"><t path="js.html.EventListener"/></onscroll>
		<onsearch public="1"><t path="js.html.EventListener"/></onsearch>
		<onselect public="1"><t path="js.html.EventListener"/></onselect>
		<onselectionchange public="1"><t path="js.html.EventListener"/></onselectionchange>
		<onselectstart public="1"><t path="js.html.EventListener"/></onselectstart>
		<onsubmit public="1"><t path="js.html.EventListener"/></onsubmit>
		<ontouchcancel public="1"><t path="js.html.EventListener"/></ontouchcancel>
		<ontouchend public="1"><t path="js.html.EventListener"/></ontouchend>
		<ontouchmove public="1"><t path="js.html.EventListener"/></ontouchmove>
		<ontouchstart public="1"><t path="js.html.EventListener"/></ontouchstart>
		<plugins public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a list of the available plugins.</haxe_doc>
		</plugins>
		<pointerLockElement public="1" set="null"><c path="js.html.Element"/></pointerLockElement>
		<preferredStylesheetSet public="1" set="null"><c path="String"/></preferredStylesheetSet>
		<readyState public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns loading status of the document</haxe_doc>
		</readyState>
		<referrer public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the URI of the page that linked to this page.</haxe_doc>
		</referrer>
		<scripts public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[Returns all the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/script">&lt;script&gt;</a></code>
 elements on the document.]]></haxe_doc>
		</scripts>
		<selectedStylesheetSet public="1"><c path="String"/></selectedStylesheetSet>
		<styleSheets public="1" set="null">
			<c path="js.html.StyleSheetList"/>
			<haxe_doc>Returns a list of the stylesheet objects on the current document.</haxe_doc>
		</styleSheets>
		<title public="1">
			<c path="String"/>
			<haxe_doc>Returns the title of the current document.</haxe_doc>
		</title>
		<visibilityState public="1" set="null"><c path="String"/></visibilityState>
		<vlinkColor public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the color of visited hyperlinks.</haxe_doc>
		</vlinkColor>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the width of the current document.</haxe_doc>
		</width>
		<xmlEncoding public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Returns the encoding as determined by the XML declaration.<br> <div class="note">Firefox 10 and later don't implement it anymore.</div>]]></haxe_doc>
		</xmlEncoding>
		<xmlStandalone public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Returns <code>true</code> if the XML declaration specifies the document is standalone (<em>e.g.,</em> An external part of the DTD affects the document's content), else <code>false</code>. Setter throws DOMException.]]></haxe_doc>
		</xmlStandalone>
		<xmlVersion public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Returns the version number as specified in the XML declaration or <code>"1.0"</code> if the declaration is absent. Setter throws DOMException.]]></haxe_doc>
		</xmlVersion>
		<adoptNode public="1" set="method"><f a="source">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></adoptNode>
		<cancelFullScreen public="1" set="method"><f a=""><x path="Void"/></f></cancelFullScreen>
		<captureEvents public="1" set="method"><f a=""><x path="Void"/></f></captureEvents>
		<caretRangeFromPoint public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Range"/>
</f></caretRangeFromPoint>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<createAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></createAttribute>
		<createAttributeNS public="1" set="method"><f a="?namespaceURI:?qualifiedName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></createAttributeNS>
		<createCDATASection public="1" set="method"><f a="data">
	<c path="String"/>
	<c path="js.html.CDATASection"/>
</f></createCDATASection>
		<createComment public="1" set="method"><f a="data">
	<c path="String"/>
	<c path="js.html.Comment"/>
</f></createComment>
		<createDocumentFragment public="1" set="method"><f a=""><c path="js.html.DocumentFragment"/></f></createDocumentFragment>
		<createElement public="1" set="method"><f a="?tagName">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></createElement>
		<createElementNS public="1" set="method"><f a="?namespaceURI:?qualifiedName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Element"/>
</f></createElementNS>
		<createEntityReference public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.EntityReference"/>
</f></createEntityReference>
		<createEvent public="1" set="method"><f a="eventType">
	<c path="String"/>
	<c path="js.html.Event"/>
</f></createEvent>
		<createExpression public="1" set="method"><f a="expression:resolver">
	<c path="String"/>
	<c path="js.html.XPathNSResolver"/>
	<c path="js.html.XPathExpression"/>
</f></createExpression>
		<createNSResolver public="1" set="method"><f a="nodeResolver">
	<c path="js.html.Node"/>
	<c path="js.html.XPathNSResolver"/>
</f></createNSResolver>
		<createNodeIterator public="1" set="method"><f a="root:whatToShow:filter:expandEntityReferences">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<c path="js.html.NodeFilter"/>
	<x path="Bool"/>
	<c path="js.html.NodeIterator"/>
</f></createNodeIterator>
		<createProcessingInstruction public="1" set="method"><f a="target:data">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.ProcessingInstruction"/>
</f></createProcessingInstruction>
		<createRange public="1" set="method"><f a=""><c path="js.html.Range"/></f></createRange>
		<createTextNode public="1" set="method"><f a="data">
	<c path="String"/>
	<c path="js.html.Text"/>
</f></createTextNode>
		<createTouch public="1" set="method"><f a="window:target:identifier:pageX:pageY:screenX:screenY:radiusX:radiusY:rotationAngle:force">
	<c path="js.html.DOMWindow"/>
	<c path="js.html.EventTarget"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.Touch"/>
</f></createTouch>
		<createTouchList public="1" set="method"><f a=""><c path="js.html.TouchList"/></f></createTouchList>
		<createTreeWalker public="1" set="method"><f a="root:whatToShow:filter:expandEntityReferences">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<c path="js.html.NodeFilter"/>
	<x path="Bool"/>
	<c path="js.html.TreeWalker"/>
</f></createTreeWalker>
		<elementFromPoint public="1" set="method"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Element"/>
</f></elementFromPoint>
		<evaluate public="1" set="method"><f a="expression:contextNode:resolver:type:inResult">
	<c path="String"/>
	<c path="js.html.Node"/>
	<c path="js.html.XPathNSResolver"/>
	<x path="Int"/>
	<c path="js.html.XPathResult"/>
	<c path="js.html.XPathResult"/>
</f></evaluate>
		<execCommand public="1" set="method"><f a="command:userInterface:?value">
	<c path="String"/>
	<x path="Bool"/>
	<c path="String"/>
	<x path="Bool"/>
</f></execCommand>
		<exitFullscreen public="1" set="method"><f a=""><x path="Void"/></f></exitFullscreen>
		<exitPointerLock public="1" set="method"><f a=""><x path="Void"/></f></exitPointerLock>
		<getCSSCanvasContext public="1" set="method"><f a="contextId:name:width:height">
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.CanvasRenderingContext"/>
</f></getCSSCanvasContext>
		<getElementById public="1" set="method"><f a="elementId">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></getElementById>
		<getElementsByClassName public="1" set="method"><f a="tagname">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByClassName>
		<getElementsByName public="1" set="method"><f a="elementName">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByName>
		<getElementsByTagName public="1" set="method"><f a="tagname">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByTagName>
		<getElementsByTagNameNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByTagNameNS>
		<getOverrideStyle public="1" set="method"><f a="element:pseudoElement">
	<c path="js.html.Element"/>
	<c path="String"/>
	<c path="js.html.CSSStyleDeclaration"/>
</f></getOverrideStyle>
		<getSelection public="1" set="method"><f a=""><c path="js.html.DOMSelection"/></f></getSelection>
		<hasFocus public="1" set="method"><f a=""><x path="Bool"/></f></hasFocus>
		<importNode public="1" set="method"><f a="importedNode:?deep">
	<c path="js.html.Node"/>
	<x path="Bool"/>
	<c path="js.html.Node"/>
</f></importNode>
		<open public="1" set="method"><f a=""><x path="Void"/></f></open>
		<queryCommandEnabled public="1" set="method"><f a="command">
	<c path="String"/>
	<x path="Bool"/>
</f></queryCommandEnabled>
		<queryCommandIndeterm public="1" set="method"><f a="command">
	<c path="String"/>
	<x path="Bool"/>
</f></queryCommandIndeterm>
		<queryCommandState public="1" set="method"><f a="command">
	<c path="String"/>
	<x path="Bool"/>
</f></queryCommandState>
		<queryCommandSupported public="1" set="method"><f a="command">
	<c path="String"/>
	<x path="Bool"/>
</f></queryCommandSupported>
		<queryCommandValue public="1" set="method"><f a="command">
	<c path="String"/>
	<c path="String"/>
</f></queryCommandValue>
		<querySelector public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></querySelector>
		<querySelectorAll public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></querySelectorAll>
		<releaseEvents public="1" set="method"><f a=""><x path="Void"/></f></releaseEvents>
		<write public="1" set="method"><f a="text">
	<c path="String"/>
	<x path="Void"/>
</f></write>
		<writeln public="1" set="method"><f a="text">
	<c path="String"/>
	<x path="Void"/>
</f></writeln>
		<createTableCellElement public="1" get="inline" set="null" line="398">
			<f a=""><c path="js.html.TableCellElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("td")</code>.]]></haxe_doc>
		</createTableCellElement>
		<createHRElement public="1" get="inline" set="null" line="400">
			<f a=""><c path="js.html.HRElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("hr")</code>.]]></haxe_doc>
		</createHRElement>
		<createMarqueeElement public="1" get="inline" set="null" line="402">
			<f a=""><c path="js.html.MarqueeElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("marquee")</code>.]]></haxe_doc>
		</createMarqueeElement>
		<createBaseFontElement public="1" get="inline" set="null" line="404">
			<f a=""><c path="js.html.BaseFontElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("basefont")</code>.]]></haxe_doc>
		</createBaseFontElement>
		<createSelectElement public="1" get="inline" set="null" line="406">
			<f a=""><c path="js.html.SelectElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("select")</code>.]]></haxe_doc>
		</createSelectElement>
		<createMapElement public="1" get="inline" set="null" line="408">
			<f a=""><c path="js.html.MapElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("map")</code>.]]></haxe_doc>
		</createMapElement>
		<createFormElement public="1" get="inline" set="null" line="410">
			<f a=""><c path="js.html.FormElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("form")</code>.]]></haxe_doc>
		</createFormElement>
		<createOptionElement public="1" get="inline" set="null" line="412">
			<f a=""><c path="js.html.OptionElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("option")</code>.]]></haxe_doc>
		</createOptionElement>
		<createLabelElement public="1" get="inline" set="null" line="414">
			<f a=""><c path="js.html.LabelElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("label")</code>.]]></haxe_doc>
		</createLabelElement>
		<createMetaElement public="1" get="inline" set="null" line="416">
			<f a=""><c path="js.html.MetaElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("meta")</code>.]]></haxe_doc>
		</createMetaElement>
		<createImageElement public="1" get="inline" set="null" line="418">
			<f a=""><c path="js.html.ImageElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("img")</code>.]]></haxe_doc>
		</createImageElement>
		<createDListElement public="1" get="inline" set="null" line="420">
			<f a=""><c path="js.html.DListElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("dl")</code>.]]></haxe_doc>
		</createDListElement>
		<createFrameElement public="1" get="inline" set="null" line="422">
			<f a=""><c path="js.html.FrameElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("frame")</code>.]]></haxe_doc>
		</createFrameElement>
		<createModElement public="1" get="inline" set="null" line="424">
			<f a=""><c path="js.html.ModElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("mod")</code>.]]></haxe_doc>
		</createModElement>
		<createUListElement public="1" get="inline" set="null" line="426">
			<f a=""><c path="js.html.UListElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("ul")</code>.]]></haxe_doc>
		</createUListElement>
		<createOutputElement public="1" get="inline" set="null" line="428">
			<f a=""><c path="js.html.OutputElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("output")</code>.]]></haxe_doc>
		</createOutputElement>
		<createOListElement public="1" get="inline" set="null" line="430">
			<f a=""><c path="js.html.OListElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("ol")</code>.]]></haxe_doc>
		</createOListElement>
		<createShadowElement public="1" get="inline" set="null" line="432">
			<f a=""><c path="js.html.ShadowElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("shadow")</code>.]]></haxe_doc>
		</createShadowElement>
		<createLIElement public="1" get="inline" set="null" line="434">
			<f a=""><c path="js.html.LIElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("li")</code>.]]></haxe_doc>
		</createLIElement>
		<createDataListElement public="1" get="inline" set="null" line="436">
			<f a=""><c path="js.html.DataListElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("datalist")</code>.]]></haxe_doc>
		</createDataListElement>
		<createParamElement public="1" get="inline" set="null" line="438">
			<f a=""><c path="js.html.ParamElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("param")</code>.]]></haxe_doc>
		</createParamElement>
		<createFontElement public="1" get="inline" set="null" line="440">
			<f a=""><c path="js.html.FontElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("font")</code>.]]></haxe_doc>
		</createFontElement>
		<createTrackElement public="1" get="inline" set="null" line="442">
			<f a=""><c path="js.html.TrackElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("track")</code>.]]></haxe_doc>
		</createTrackElement>
		<createAppletElement public="1" get="inline" set="null" line="444">
			<f a=""><c path="js.html.AppletElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("applet")</code>.]]></haxe_doc>
		</createAppletElement>
		<createAreaElement public="1" get="inline" set="null" line="446">
			<f a=""><c path="js.html.AreaElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("area")</code>.]]></haxe_doc>
		</createAreaElement>
		<createLinkElement public="1" get="inline" set="null" line="448">
			<f a=""><c path="js.html.LinkElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("link")</code>.]]></haxe_doc>
		</createLinkElement>
		<createDivElement public="1" get="inline" set="null" line="450">
			<f a=""><c path="js.html.DivElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("div")</code>.]]></haxe_doc>
		</createDivElement>
		<createTitleElement public="1" get="inline" set="null" line="452">
			<f a=""><c path="js.html.TitleElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("title")</code>.]]></haxe_doc>
		</createTitleElement>
		<createStyleElement public="1" get="inline" set="null" line="454">
			<f a=""><c path="js.html.StyleElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("style")</code>.]]></haxe_doc>
		</createStyleElement>
		<createProgressElement public="1" get="inline" set="null" line="456">
			<f a=""><c path="js.html.ProgressElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("progress")</code>.]]></haxe_doc>
		</createProgressElement>
		<createButtonElement public="1" get="inline" set="null" line="458">
			<f a=""><c path="js.html.ButtonElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("button")</code>.]]></haxe_doc>
		</createButtonElement>
		<createFieldSetElement public="1" get="inline" set="null" line="460">
			<f a=""><c path="js.html.FieldSetElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("fieldset")</code>.]]></haxe_doc>
		</createFieldSetElement>
		<createAnchorElement public="1" get="inline" set="null" line="462">
			<f a=""><c path="js.html.AnchorElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("a")</code>.]]></haxe_doc>
		</createAnchorElement>
		<createIFrameElement public="1" get="inline" set="null" line="464">
			<f a=""><c path="js.html.IFrameElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("iframe")</code>.]]></haxe_doc>
		</createIFrameElement>
		<createSpanElement public="1" get="inline" set="null" line="466">
			<f a=""><c path="js.html.SpanElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("span")</code>.]]></haxe_doc>
		</createSpanElement>
		<createDetailsElement public="1" get="inline" set="null" line="468">
			<f a=""><c path="js.html.DetailsElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("details")</code>.]]></haxe_doc>
		</createDetailsElement>
		<createBodyElement public="1" get="inline" set="null" line="470">
			<f a=""><c path="js.html.BodyElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("body")</code>.]]></haxe_doc>
		</createBodyElement>
		<createInputElement public="1" get="inline" set="null" line="472">
			<f a=""><c path="js.html.InputElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("input")</code>.]]></haxe_doc>
		</createInputElement>
		<createEmbedElement public="1" get="inline" set="null" line="474">
			<f a=""><c path="js.html.EmbedElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("embed")</code>.]]></haxe_doc>
		</createEmbedElement>
		<createMeterElement public="1" get="inline" set="null" line="476">
			<f a=""><c path="js.html.MeterElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("meter")</code>.]]></haxe_doc>
		</createMeterElement>
		<createPreElement public="1" get="inline" set="null" line="478">
			<f a=""><c path="js.html.PreElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("pre")</code>.]]></haxe_doc>
		</createPreElement>
		<createTableSectionElement public="1" get="inline" set="null" line="480">
			<f a=""><c path="js.html.TableSectionElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("thead")</code>.]]></haxe_doc>
		</createTableSectionElement>
		<createHeadElement public="1" get="inline" set="null" line="482">
			<f a=""><c path="js.html.HeadElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("head")</code>.]]></haxe_doc>
		</createHeadElement>
		<createBaseElement public="1" get="inline" set="null" line="484">
			<f a=""><c path="js.html.BaseElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("base")</code>.]]></haxe_doc>
		</createBaseElement>
		<createOptGroupElement public="1" get="inline" set="null" line="486">
			<f a=""><c path="js.html.OptGroupElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("optgroup")</code>.]]></haxe_doc>
		</createOptGroupElement>
		<createQuoteElement public="1" get="inline" set="null" line="488">
			<f a=""><c path="js.html.QuoteElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("quote")</code>.]]></haxe_doc>
		</createQuoteElement>
		<createAudioElement public="1" get="inline" set="null" line="490">
			<f a=""><c path="js.html.AudioElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("audio")</code>.]]></haxe_doc>
		</createAudioElement>
		<createVideoElement public="1" get="inline" set="null" line="492">
			<f a=""><c path="js.html.VideoElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("video")</code>.]]></haxe_doc>
		</createVideoElement>
		<createLegendElement public="1" get="inline" set="null" line="494">
			<f a=""><c path="js.html.LegendElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("legend")</code>.]]></haxe_doc>
		</createLegendElement>
		<createMenuElement public="1" get="inline" set="null" line="496">
			<f a=""><c path="js.html.MenuElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("menu")</code>.]]></haxe_doc>
		</createMenuElement>
		<createFrameSetElement public="1" get="inline" set="null" line="498">
			<f a=""><c path="js.html.FrameSetElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("frameset")</code>.]]></haxe_doc>
		</createFrameSetElement>
		<createCanvasElement public="1" get="inline" set="null" line="500">
			<f a=""><c path="js.html.CanvasElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("canvas")</code>.]]></haxe_doc>
		</createCanvasElement>
		<createKeygenElement public="1" get="inline" set="null" line="502">
			<f a=""><c path="js.html.KeygenElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("keygen")</code>.]]></haxe_doc>
		</createKeygenElement>
		<createTableColElement public="1" get="inline" set="null" line="504">
			<f a=""><c path="js.html.TableColElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("col")</code>.]]></haxe_doc>
		</createTableColElement>
		<createDirectoryElement public="1" get="inline" set="null" line="506">
			<f a=""><c path="js.html.DirectoryElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("dir")</code>.]]></haxe_doc>
		</createDirectoryElement>
		<createTableElement public="1" get="inline" set="null" line="508">
			<f a=""><c path="js.html.TableElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("table")</code>.]]></haxe_doc>
		</createTableElement>
		<createTableRowElement public="1" get="inline" set="null" line="510">
			<f a=""><c path="js.html.TableRowElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("tr")</code>.]]></haxe_doc>
		</createTableRowElement>
		<createScriptElement public="1" get="inline" set="null" line="512">
			<f a=""><c path="js.html.ScriptElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("script")</code>.]]></haxe_doc>
		</createScriptElement>
		<createSourceElement public="1" get="inline" set="null" line="514">
			<f a=""><c path="js.html.SourceElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("source")</code>.]]></haxe_doc>
		</createSourceElement>
		<createParagraphElement public="1" get="inline" set="null" line="516">
			<f a=""><c path="js.html.ParagraphElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("p")</code>.]]></haxe_doc>
		</createParagraphElement>
		<createContentElement public="1" get="inline" set="null" line="518">
			<f a=""><c path="js.html.ContentElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("content")</code>.]]></haxe_doc>
		</createContentElement>
		<createBRElement public="1" get="inline" set="null" line="520">
			<f a=""><c path="js.html.BRElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("br")</code>.]]></haxe_doc>
		</createBRElement>
		<createHtmlElement public="1" get="inline" set="null" line="522">
			<f a=""><c path="js.html.HtmlElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("html")</code>.]]></haxe_doc>
		</createHtmlElement>
		<createTextAreaElement public="1" get="inline" set="null" line="524">
			<f a=""><c path="js.html.TextAreaElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("textarea")</code>.]]></haxe_doc>
		</createTextAreaElement>
		<createMediaElement public="1" get="inline" set="null" line="526">
			<f a=""><c path="js.html.MediaElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("media")</code>.]]></haxe_doc>
		</createMediaElement>
		<createObjectElement public="1" get="inline" set="null" line="528">
			<f a=""><c path="js.html.ObjectElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("object")</code>.]]></haxe_doc>
		</createObjectElement>
		<createTableCaptionElement public="1" get="inline" set="null" line="530">
			<f a=""><c path="js.html.TableCaptionElement"/></f>
			<haxe_doc><![CDATA[A typed shortcut for <code>createElement("caption")</code>.]]></haxe_doc>
		</createTableCaptionElement>
		<haxe_doc><![CDATA[<p>Each web page loaded in the browser has its own <strong>document</strong> object. This object serves as an entry point to the web page's content (the <a title="en/Using_the_W3C_DOM_Level_1_Core" rel="internal" href="https://developer.mozilla.org/en/Using_the_W3C_DOM_Level_1_Core">DOM tree</a>, including elements such as <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/body">&lt;body&gt;</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/table">&lt;table&gt;</a></code>
) and provides functionality global to the document (such as obtaining the page's URL and creating new elements in the document).</p>
<p>A document object can be obtained from various APIs:</p>
<ul> <li>Most commonly, you work with the document the script is running in by using <code>document</code> in document's <a title="en/HTML/Element/Script" rel="internal" href="/api/js/html/ScriptElement">scripts</a>. (The same document can also be referred to as <a title="window.document" rel="internal" href="https://developer.mozilla.org/en/DOM/window.document"><code>window.document</code></a>.)</li> <li>The document of an iframe via the iframe's <code><a title="en/DOM/HTMLIFrameElement#Properties" rel="internal" href="https://developer.mozilla.org/en/DOM/HTMLIFrameElement#Properties">contentDocument</a></code> property.</li> <li>The <a title="en/XMLHttpRequest#Attributes" rel="internal" href="https://developer.mozilla.org/en/nsIXMLHttpRequest#Attributes"><code>responseXML</code> of an <code>XMLHttpRequest</code> object</a>.</li> <li>The document, that given node or element belongs to, can be retrieved using the node's <code><a title="en/DOM/Node.ownerDocument" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.ownerDocument">ownerDocument</a></code> property.</li> <li>...and more.</li>
</ul>
<p>Depending on the kind of the document (e.g. <a title="en/HTML" rel="internal" href="https://developer.mozilla.org/en/HTML">HTML</a> or <a title="en/XML" rel="internal" href="https://developer.mozilla.org/en/XML">XML</a>) different APIs may be available on the document object. This theoretical availability of APIs is usually described in terms of <em>implementing interfaces</em> defined in the relevant W3C DOM specifications:</p>
<ul> <li>All document objects implement the DOM Core <a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#i-Document" title="http://www.w3.org/TR/DOM-Level-2-Core/core.html#i-Document" target="_blank"><code>Document</code></a> and <code><a title="en/DOM/Node" rel="internal" href="/api/js/html/Node">Node</a></code> interfaces, meaning that the "core" properties and methods are available for all kinds of documents.</li> <li>In addition to the generalized DOM Core document interface, HTML documents also implement the <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268" target="_blank">HTMLDocument</a></code> interface, which is a more specialized interface for dealing with HTML documents (e.g., <a title="en/DOM/document.cookie" rel="internal" href="https://developer.mozilla.org/en/DOM/document.cookie">document.cookie</a>, <a title="en/DOM/document.alinkColor" rel="internal" href="https://developer.mozilla.org/en/DOM/document.alinkColor">document.alinkColor</a>).</li> <li><a title="en/XUL" rel="internal" href="https://developer.mozilla.org/en/XUL">XUL</a> documents (available to Mozilla add-on and application developers) implement their own additions to the core Document functionality.</li>
</ul>
<p>Methods or properties listed here that are part of a more specialized interface have an asterisk (*) next to them and have additional information in the&nbsp; Availability column.</p>
<p>Note that some APIs listed below are not available in all browsers for various reasons:</p>
<ul> <li><strong>Obsolete</strong>: on its way of being removed from supporting browsers.</li> <li><strong>Non-standard</strong>: either an experimental feature not (yet?) agreed upon by all vendors, or a feature targeted specifically at the code running in a specific browser (e.g. Mozilla has a few DOM APIs created for its add-ons and application development).</li> <li>Part of a completed or an emerging standard, but not (yet?) implemented in all browsers or implemented in the newest versions of the browsers.</li>
</ul>
<p>Detailed browser compatibility tables are located at the pages describing each property or method.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/document">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Document"</e></m></meta>
	</class>
	<class path="js.html.DocumentFragment" params="" file="/usr/lib/haxe/std/js/html/DocumentFragment.hx" extern="1">
		<extends path="js.html.Node"/>
		<querySelector public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></querySelector>
		<querySelectorAll public="1" set="method"><f a="selectors">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></querySelectorAll>
		<haxe_doc><![CDATA[<p>DocumentFragment has no properties or methods of its own, but inherits from <a title="En/DOM/Node" class="internal" rel="internal" href="https://developer.mozilla.org/En/DOM/Node"><code>Node</code></a>. </p>
<p>A <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-B63ED1A3" title="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-B63ED1A3" target="_blank">DocumentFragment</a></code> is a minimal document object that has no parent. It is used as a light-weight version of document to store well-formed or potentially non-well-formed fragments of XML.</p>
<p>See <a title="En/DOM/Node" class="internal" rel="internal" href="https://developer.mozilla.org/En/DOM/Node"><code>Node</code></a> for a listing of its properties, constants and methods.</p>
<p>Various other methods can take a document fragment as an argument (e.g., any <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1950641247" title="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1950641247" target="_blank">Node</a></code> interface methods such as <code><a title="En/DOM/Node.appendChild" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.appendChild">appendChild</a></code> and <code><a title="En/DOM/Node.insertBefore" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.insertBefore">insertBefore</a></code>), in which case the children of the fragment are appended or inserted, not the fragment itself.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/DocumentFragment">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DocumentFragment"</e></m></meta>
	</class>
	<class path="js.html.DocumentType" params="" file="/usr/lib/haxe/std/js/html/DocumentType.hx" extern="1">
		<extends path="js.html.Node"/>
		<entities public="1" set="null"><c path="js.html.NamedNodeMap"/></entities>
		<internalSubset public="1" set="null"><c path="String"/></internalSubset>
		<name public="1" set="null"><c path="String"/></name>
		<notations public="1" set="null"><c path="js.html.NamedNodeMap"/></notations>
		<publicId public="1" set="null"><c path="String"/></publicId>
		<systemId public="1" set="null"><c path="String"/></systemId>
		<remove public="1" set="method"><f a=""><x path="Void"/></f></remove>
		<haxe_doc><![CDATA[<p><span>NOTE:&nbsp;This interface is not fully supported in Mozilla at present, including for indicating internalSubset information which Gecko generally does otherwise support.</span></p>
<p><code>DocumentType</code> inherits <a title="en/DOM/Node" rel="internal" href="/api/js/html/Node">Node</a>'s properties, methods, and constants as well as the following properties of its own:</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/DocumentType">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DocumentType"</e></m></meta>
	</class>
	<class path="js.html.EmbedElement" params="" file="/usr/lib/haxe/std/js/html/EmbedElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1"><c path="String"/></align>
		<height public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/embed#attr-height">height</a></code>
 HTML&nbsp;attribute, containing the displayed height of the resource.]]></haxe_doc>
		</height>
		<name public="1"><c path="String"/></name>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/embed#attr-src">src</a></code>
 HTML&nbsp;attribute, containing the address of the resource.]]></haxe_doc>
		</src>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/embed#attr-type">type</a></code>
 HTML&nbsp;attribute, containing the type of the resource.]]></haxe_doc>
		</type>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/embed#attr-width">width</a></code>
 HTML&nbsp;attribute, containing the displayed width of the resource.]]></haxe_doc>
		</width>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.svg.Document"/></f></getSVGDocument>
		<haxe_doc><![CDATA[<strong>Note:</strong>&nbsp;This topic describes the HTMLEmbedElement interface as defined in the HTML5 standard. It does not address earlier, non-standardized version of the interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLEmbedElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLEmbedElement"</e></m></meta>
	</class>
	<class path="js.html.EntityReference" params="" file="/usr/lib/haxe/std/js/html/EntityReference.hx" extern="1">
		<extends path="js.html.Node"/>
		<haxe_doc><![CDATA[<p><span>NOTE:&nbsp;This is not implemented in Mozilla</span></p>
<p>Read-only reference to an entity reference in the DOM tree. Has no properties or methods of its own but inherits from <a class="internal" title="En/DOM/Node" rel="internal" href="/api/js/html/Node"><code>Node</code></a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/EntityReference">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"EntityReference"</e></m></meta>
	</class>
	<class path="js.html.Event" params="" file="/usr/lib/haxe/std/js/html/Event.hx" extern="1">
		<AT_TARGET public="1" get="inline" set="null" line="32" static="1"><x path="Int"/></AT_TARGET>
		<BLUR public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></BLUR>
		<BUBBLING_PHASE public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></BUBBLING_PHASE>
		<CAPTURING_PHASE public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></CAPTURING_PHASE>
		<CHANGE public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></CHANGE>
		<CLICK public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></CLICK>
		<DBLCLICK public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></DBLCLICK>
		<DRAGDROP public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></DRAGDROP>
		<FOCUS public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></FOCUS>
		<KEYDOWN public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></KEYDOWN>
		<KEYPRESS public="1" get="inline" set="null" line="52" static="1"><x path="Int"/></KEYPRESS>
		<KEYUP public="1" get="inline" set="null" line="54" static="1"><x path="Int"/></KEYUP>
		<MOUSEDOWN public="1" get="inline" set="null" line="56" static="1"><x path="Int"/></MOUSEDOWN>
		<MOUSEDRAG public="1" get="inline" set="null" line="58" static="1"><x path="Int"/></MOUSEDRAG>
		<MOUSEMOVE public="1" get="inline" set="null" line="60" static="1"><x path="Int"/></MOUSEMOVE>
		<MOUSEOUT public="1" get="inline" set="null" line="62" static="1"><x path="Int"/></MOUSEOUT>
		<MOUSEOVER public="1" get="inline" set="null" line="64" static="1"><x path="Int"/></MOUSEOVER>
		<MOUSEUP public="1" get="inline" set="null" line="66" static="1"><x path="Int"/></MOUSEUP>
		<NONE public="1" get="inline" set="null" line="68" static="1"><x path="Int"/></NONE>
		<SELECT public="1" get="inline" set="null" line="70" static="1"><x path="Int"/></SELECT>
		<bubbles public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A boolean indicating whether the event bubbles up through the DOM or not.</haxe_doc>
		</bubbles>
		<cancelBubble public="1">
			<x path="Bool"/>
			<haxe_doc>A boolean indicating whether the bubbling of the event has been canceled or not.</haxe_doc>
		</cancelBubble>
		<cancelable public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A boolean indicating whether the event is cancelable.</haxe_doc>
		</cancelable>
		<clipboardData public="1" set="null"><c path="js.html.Clipboard"/></clipboardData>
		<currentTarget public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>A reference to the currently registered target for the event.</haxe_doc>
		</currentTarget>
		<defaultPrevented public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates whether or not <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/event.preventDefault">event.preventDefault()</a></code>
 has been called on the event.]]></haxe_doc>
		</defaultPrevented>
		<eventPhase public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Indicates which phase of the event flow is being processed.</haxe_doc>
		</eventPhase>
		<returnValue public="1"><x path="Bool"/></returnValue>
		<srcElement public="1" set="null"><c path="js.html.EventTarget"/></srcElement>
		<target public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>A reference to the target to which the event was originally dispatched.</haxe_doc>
		</target>
		<timeStamp public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The time that the event was created.</haxe_doc>
		</timeStamp>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of the event (case-insensitive).</haxe_doc>
		</type>
		<initEvent public="1" set="method"><f a="eventTypeArg:canBubbleArg:cancelableArg">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></initEvent>
		<preventDefault public="1" set="method"><f a=""><x path="Void"/></f></preventDefault>
		<stopImmediatePropagation public="1" set="method"><f a=""><x path="Void"/></f></stopImmediatePropagation>
		<stopPropagation public="1" set="method"><f a=""><x path="Void"/></f></stopPropagation>
		<new public="1" set="method"><f a="type:?canBubble:?cancelable">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<haxe_doc><![CDATA[<p>This chapter describes the DOM Event Model. The <a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event" title="http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event" target="_blank">Event</a> interface itself is described, as well as the interfaces for event registration on nodes in the DOM, and <a title="en/DOM/element.addEventListener" rel="internal" href="https://developer.mozilla.org/en/DOM/element.addEventListener">event listeners</a>, and several longer examples that show how the various event interfaces relate to one another.</p>
<p>There is an excellent diagram that clearly explains the three phases of event flow through the DOM in the <a class="external" title="http://www.w3.org/TR/DOM-Level-3-Events/#dom-event-architecture" rel="external" href="http://www.w3.org/TR/DOM-Level-3-Events/#dom-event-architecture" target="_blank">DOM Level 3 Events draft</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/event">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Event"</e></m></meta>
	</class>
	<typedef path="js.html.EventListener" params="" file="/usr/lib/haxe/std/js/html/EventListener.hx"><f a="">
	<d/>
	<x path="Void"/>
</f></typedef>
	<class path="js.html.FieldSetElement" params="" file="/usr/lib/haxe/std/js/html/FieldSetElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/fieldset#attr-disabled">disabled</a></code>
 HTML&nbsp;attribute, indicating whether the user can interact with the control.]]></haxe_doc>
		</disabled>
		<elements public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>The elements belonging to this field set.</haxe_doc>
		</elements>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[The containing form element, if this element is in a form. Otherwise, the element the <a title="en/HTML/Element/fieldset#attr-name" rel="internal" href="https://developer.mozilla.org/en/HTML/Element/fieldset#attr-name">name content attribute</a> points to 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>. (<code>null</code> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>.)]]></haxe_doc>
		</form>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/fieldset#attr-name">name</a></code>
 HTML&nbsp;attribute, containing the name of the field set, used for submitting the form.]]></haxe_doc>
		</name>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Must be the string <code>fieldset</code>.]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the element does not satisfy (if any). This is the empty string if the element&nbsp; is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Always false because <code>fieldset</code> objects are never candidates for constraint validation.]]></haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[DOM&nbsp;<code>fieldset</code> elements expose the <a class=" external" title="http://dev.w3.org/html5/spec/forms.html#htmlfieldsetelement" rel="external" href="http://dev.w3.org/html5/spec/forms.html#htmlfieldsetelement" target="_blank">HTMLFieldSetElement</a>&nbsp; (
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7365882" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7365882" target="_blank">HTMLFieldSetElement</a>) interface, which provides special properties and methods (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of field-set elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLFieldSetElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFieldSetElement"</e></m></meta>
	</class>
	<class path="js.html.File" params="" file="/usr/lib/haxe/std/js/html/File.hx" extern="1">
		<extends path="js.html.Blob"/>
		<lastModifiedDate public="1" set="null"><c path="Date"/></lastModifiedDate>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The name of the file referenced by the <code>File</code> object. <strong>Read only.</strong> 
<span title="(Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)
">Requires Gecko 1.9.2</span>]]></haxe_doc>
		</name>
		<relativePath public="1" set="null"><c path="String"/></relativePath>
		<haxe_doc><![CDATA[<p>The <code>File</code> object provides information about -- and access to the contents of -- files. These are generally retrieved from a <code><a rel="custom" href="/api/js/html/FileList">FileList</a></code>
 object returned as a result of a user selecting files using the <code>input</code> element, or from a drag and drop operation's <a title="En/DragDrop/DataTransfer" rel="internal" href="https://developer.mozilla.org/En/DragDrop/DataTransfer"><code>DataTransfer</code></a> object.</p>
<div class="geckoVersionNote">
<p>
</p><div class="geckoVersionHeading">Gecko 2.0 note<div>(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
</div></div>
<p></p>
<p>Starting in Gecko 2.0&nbsp;(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
, the File object inherits from the <code><a rel="custom" href="/api/js/html/Blob">Blob</a></code>
&nbsp;interface, which provides methods and properties providing further information about the file.</p>
</div>
<p>The file reference can be saved when the form is submitted while the user is offline, so that the data can be retrieved and uploaded when the Internet connection is restored.</p>
<div class="note"><strong>Note:</strong> The <code>File</code> object as implemented by Gecko offers several non-standard methods for reading the contents of the file. These should <em>not</em> be used, as they will prevent your web application from being used in other browsers, as well as in future versions of Gecko, which will likely remove these methods.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/File">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"File"</e></m></meta>
	</class>
	<class path="js.html.FileList" params="" file="/usr/lib/haxe/std/js/html/FileList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>A read-only value indicating the number of files in the list.</haxe_doc>
		</length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.File"/>
</f></item>
		<haxe_doc><![CDATA[<p>An object of this type is returned by the <code>files</code> property of the HTML&nbsp;input element; this lets you access the list of files selected with the <code>&lt;input type="file"&gt;</code> element. It's also used for a list of files dropped into web content when using the drag and drop API; see the <a title="En/DragDrop/DataTransfer" rel="internal" href="https://developer.mozilla.org/En/DragDrop/DataTransfer"><code>DataTransfer</code></a> object for details on this usage.</p>
<p>

</p><div><p>Gecko 1.9.2 note</p><p>Prior to Gecko 1.9.2, the input element only supported a single file being selected at a time, meaning that the FileList would contain only one file. Starting with Gecko 1.9.2, if the input element's multiple attribute is true, the FileList may contain multiple files.</p></div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/FileList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"FileList"</e></m></meta>
	</class>
	<class path="js.html.Float32Array" params="" file="/usr/lib/haxe/std/js/html/Float32Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The size, in bytes, of each array element.</haxe_doc>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of entries in the array. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
			<overloads>
				<set public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
				<set public="1" set="method">
					<f a="array:?offset">
						<c path="js.html.Float32Array"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
			</overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Float32Array <a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array()">Float32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Float32Array</code> object.</p>
<pre>Float32Array Float32Array(
&nbsp; unsigned long length
);

Float32Array Float32Array(
&nbsp; <em>TypedArray</em> array
);

Float32Array Float32Array(
&nbsp; sequence&lt;type&gt; array
);

Float32Array Float32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <span>Uint8</span><code>Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit floating point number before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Float32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Float32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Float32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Float32Array <a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array()">Float32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Float32Array</code> object.</p>
<pre>Float32Array Float32Array(
&nbsp; unsigned long length
);

Float32Array Float32Array(
&nbsp; <em>TypedArray</em> array
);

Float32Array Float32Array(
&nbsp; sequence&lt;type&gt; array
);

Float32Array Float32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <span>Uint8</span><code>Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit floating point number before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Float32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Float32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Float32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Float"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Float32Array <a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array()">Float32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Float32Array</code> object.</p>
<pre>Float32Array Float32Array(
&nbsp; unsigned long length
);

Float32Array Float32Array(
&nbsp; <em>TypedArray</em> array
);

Float32Array Float32Array(
&nbsp; sequence&lt;type&gt; array
);

Float32Array Float32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <span>Uint8</span><code>Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit floating point number before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Float32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Float32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Float32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Float32Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Float32Array <a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array()">Float32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Float32Array </code><code><a title="en/JavaScript typed arrays/Float32Array#Float32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array#Float32Array%28%29">Float32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Float32Array</code> object.</p>
<pre>Float32Array Float32Array(
&nbsp; unsigned long length
);

Float32Array Float32Array(
&nbsp; <em>TypedArray</em> array
);

Float32Array Float32Array(
&nbsp; sequence&lt;type&gt; array
);

Float32Array Float32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <span>Uint8</span><code>Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit floating point number before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Float32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Float32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Float32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[<p>The <code>Float32Array</code> type represents an array of 32-bit floating point numbers (corresponding to the C <code>float</code> data type).</p>
<p>Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Float32Array">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Float32Array"</e></m></meta>
	</class>
	<class path="js.html.FontElement" params="" file="/usr/lib/haxe/std/js/html/FontElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<color public="1">
			<c path="String"/>
			<haxe_doc>This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.</haxe_doc>
		</color>
		<face public="1">
			<c path="String"/>
			<haxe_doc>This attribute contains a comma-sperated list of one or more font names. The document text in the default style is rendered in the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.</haxe_doc>
		</face>
		<size public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the font size as either a numeric or relative value. Numeric values range from <span>1</span> to <span>7</span> with <span>1</span> being the smallest and <span>3</span> the default. It can be defined using a relative value, like <span>+2</span> or <span>-3</span>, which set it relative to the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/basefont#attr-size">size</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/basefont">&lt;basefont&gt;</a></code>
 element, or relative to <span>3</span>, the default value, if none does exist.]]></haxe_doc>
		</size>
		<haxe_doc><![CDATA[Obsolete<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/font">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFontElement"</e></m></meta>
	</class>
	<class path="js.html.FormElement" params="" file="/usr/lib/haxe/std/js/html/FormElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<acceptCharset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-accept-charset">accept-charset</a></code>
&nbsp;HTML&nbsp;attribute, containing a list of character encodings that the server accepts.]]></haxe_doc>
		</acceptCharset>
		<action public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-action">action</a></code>
&nbsp;HTML&nbsp;attribute, containing the URI&nbsp;of a program that processes the information submitted by the form.]]></haxe_doc>
		</action>
		<autocomplete public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-autocomplete">autocomplete</a></code>
 HTML&nbsp;attribute, containing a string that indicates whether the controls in this form can have their values automatically populated by the browser.]]></haxe_doc>
		</autocomplete>
		<elements public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>All the form controls belonging to this form element.</haxe_doc>
		</elements>
		<encoding public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Synonym for <strong>enctype</strong>.]]></haxe_doc>
		</encoding>
		<enctype public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-enctype">enctype</a></code>
&nbsp;HTML&nbsp;attribute, indicating the type of content that is used to transmit the form to the server. Only specified values can be set.]]></haxe_doc>
		</enctype>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of controls in the form.</haxe_doc>
		</length>
		<method public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-method">method</a></code>
&nbsp;HTML&nbsp;attribute, indicating the HTTP&nbsp;method used to submit the form. Only specified values can be set.]]></haxe_doc>
		</method>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-name">name</a></code>
&nbsp;HTML&nbsp;attribute, containing the name of the form.]]></haxe_doc>
		</name>
		<noValidate public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-novalidate">novalidate</a></code>
 HTML attribute, indicating that the form should not be validated.]]></haxe_doc>
		</noValidate>
		<target public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-target">target</a></code>
 HTML attribute, indicating where to display the results received from submitting the form.]]></haxe_doc>
		</target>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<reset public="1" set="method"><f a=""><x path="Void"/></f></reset>
		<submit public="1" set="method"><f a=""><x path="Void"/></f></submit>
		<haxe_doc><![CDATA[<p><code>FORM</code> elements share all of the properties and methods of other HTML elements described in the <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> section.</p>
<p>This interface provides methods to create and modify <code>FORM</code> elements using the DOM.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLFormElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFormElement"</e></m></meta>
	</class>
	<class path="js.html.FrameElement" params="" file="/usr/lib/haxe/std/js/html/FrameElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<contentDocument public="1" set="null"><c path="js.html.Document"/></contentDocument>
		<contentWindow public="1" set="null"><c path="js.html.DOMWindow"/></contentWindow>
		<frameBorder public="1"><c path="String"/></frameBorder>
		<height public="1" set="null"><x path="Int"/></height>
		<location public="1"><c path="String"/></location>
		<longDesc public="1"><c path="String"/></longDesc>
		<marginHeight public="1"><c path="String"/></marginHeight>
		<marginWidth public="1"><c path="String"/></marginWidth>
		<name public="1">
			<c path="String"/>
			<haxe_doc>This attribute is used to labeling frames. Without labeling all links will open in the frame that they are in.</haxe_doc>
		</name>
		<noResize public="1"><x path="Bool"/></noResize>
		<scrolling public="1">
			<c path="String"/>
			<haxe_doc>This attribute defines existence of scrollbar. If this attribute is not used, browser put a scrollbar when necessary. There are two choices; "yes" for showing a scrollbar even when it is not necessary and "no" for do not showing a scrollbar even when it is necessary.</haxe_doc>
		</scrolling>
		<src public="1">
			<c path="String"/>
			<haxe_doc>This attribute is specify document which will be displayed by frame.</haxe_doc>
		</src>
		<width public="1" set="null"><x path="Int"/></width>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.svg.Document"/></f></getSVGDocument>
		<haxe_doc><![CDATA[<p><code>&lt;frame&gt;</code> is an HTML element which defines a particular area in which another HTML document can be displayed. A frame should be used within a <code><a rel="custom" href="/api/js/html/FrameSetElement">&lt;frameset&gt;</a></code>
.</p>
<p>Using the <code>&lt;frame&gt;</code> element is not encouraged because of certain disadvantages such as performance problems and lack of accessibility for users with screen readers. Instead of the <code>&lt;frame&gt;</code> element, <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe">&lt;iframe&gt;</a></code>
&nbsp;may be preferred.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/frame">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFrameElement"</e></m></meta>
	</class>
	<class path="js.html.FrameSetElement" params="" file="/usr/lib/haxe/std/js/html/FrameSetElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<cols public="1"><c path="String"/></cols>
		<onbeforeunload public="1"><t path="js.html.EventListener"/></onbeforeunload>
		<onhashchange public="1"><t path="js.html.EventListener"/></onhashchange>
		<onmessage public="1"><t path="js.html.EventListener"/></onmessage>
		<onoffline public="1"><t path="js.html.EventListener"/></onoffline>
		<ononline public="1"><t path="js.html.EventListener"/></ononline>
		<onpopstate public="1"><t path="js.html.EventListener"/></onpopstate>
		<onresize public="1"><t path="js.html.EventListener"/></onresize>
		<onstorage public="1"><t path="js.html.EventListener"/></onstorage>
		<onunload public="1"><t path="js.html.EventListener"/></onunload>
		<rows public="1"><c path="String"/></rows>
		<haxe_doc><![CDATA[<code>&lt;frameset&gt;</code> is an HTML element which is used to contain <code><a rel="custom" href="/api/js/html/FrameElement">&lt;frame&gt;</a></code>
 elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/frameset">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFrameSetElement"</e></m></meta>
	</class>
	<class path="js.html.Gamepad" params="" file="/usr/lib/haxe/std/js/html/Gamepad.hx" extern="1">
		<axes public="1" set="null"><c path="Array"><x path="Float"/></c></axes>
		<buttons public="1" set="null"><c path="Array"><x path="Float"/></c></buttons>
		<id public="1" set="null"><c path="String"/></id>
		<index public="1" set="null"><x path="Int"/></index>
		<timestamp public="1" set="null"><x path="Int"/></timestamp>
		<meta><m n=":native"><e>"Gamepad"</e></m></meta>
	</class>
	<class path="js.html.GamepadList" params="" file="/usr/lib/haxe/std/js/html/GamepadList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Gamepad"/>
</f></item>
		<meta><m n=":native"><e>"GamepadList"</e></m></meta>
	</class>
	<class path="js.html.Geolocation" params="" file="/usr/lib/haxe/std/js/html/Geolocation.hx" extern="1">
		<clearWatch public="1" set="method"><f a="watchId">
	<x path="Int"/>
	<x path="Void"/>
</f></clearWatch>
		<getCurrentPosition public="1" set="method"><f a="successCallback:?errorCallback:?options">
	<t path="js.html.PositionCallback"/>
	<t path="js.html.PositionErrorCallback"/>
	<d/>
	<x path="Void"/>
</f></getCurrentPosition>
		<watchPosition public="1" set="method"><f a="successCallback:?errorCallback:?options">
	<t path="js.html.PositionCallback"/>
	<t path="js.html.PositionErrorCallback"/>
	<d/>
	<x path="Int"/>
</f></watchPosition>
		<meta><m n=":native"><e>"Geolocation"</e></m></meta>
	</class>
	<class path="js.html.Geoposition" params="" file="/usr/lib/haxe/std/js/html/Geoposition.hx" extern="1">
		<coords public="1" set="null"><c path="js.html.Coordinates"/></coords>
		<timestamp public="1" set="null"><x path="Int"/></timestamp>
		<meta><m n=":native"><e>"Geoposition"</e></m></meta>
	</class>
	<class path="js.html.HRElement" params="" file="/usr/lib/haxe/std/js/html/HRElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Enumerated attribute indicating alignment of the rule with respect to the surrounding context.</haxe_doc>
		</align>
		<noShade public="1"><x path="Bool"/></noShade>
		<size public="1">
			<c path="String"/>
			<haxe_doc>The height of the rule.</haxe_doc>
		</size>
		<width public="1">
			<c path="String"/>
			<haxe_doc>The width of the rule on the page.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[DOM <code>hr</code> elements expose the <a target="_blank" rel="external nofollow" class=" external" title="http://www.w3.org/TR/html5/grouping-content.html#htmlhrelement" href="http://www.w3.org/TR/html5/grouping-content.html#htmlhrelement">HTMLHRElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-68228811" rel="external nofollow" class=" external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-68228811"><code>HTMLHRElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating <code>hr</code> elements. In <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML/HTML5">HTML 5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLHRElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLHRElement"</e></m></meta>
	</class>
	<class path="js.html.HTMLAllCollection" params="" file="/usr/lib/haxe/std/js/html/HTMLAllCollection.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></namedItem>
		<tags public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></tags>
		<meta><m n=":native"><e>"HTMLAllCollection"</e></m></meta>
	</class>
	<class path="js.html.HTMLCollection" params="" file="/usr/lib/haxe/std/js/html/HTMLCollection.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of items in the collection. <strong>Read only</strong>.]]></haxe_doc>
		</length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></namedItem>
		<haxe_doc><![CDATA[<p><code>HTMLCollection</code> is an interface representing a generic collection of elements (in document order) and offers methods and properties for traversing the list.</p>
<div class="note"><strong>Note:</strong> This interface is called <code>HTMLCollection</code> for historical reasons (before DOM4, collections implementing this interface could only have HTML elements as their items).</div>
<p><code>HTMLCollection</code>s in the HTML DOM are live; they are automatically updated when the underlying document is changed.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLCollection">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLCollection"</e></m></meta>
	</class>
	<class path="js.html.HTMLOptionsCollection" params="" file="/usr/lib/haxe/std/js/html/HTMLOptionsCollection.hx" extern="1">
		<extends path="js.html.HTMLCollection"/>
		<selectedIndex public="1"><x path="Int"/></selectedIndex>
		<add public="1" set="method"><f a="option:?index">
	<c path="js.html.OptionElement"/>
	<x path="Int"/>
	<x path="Void"/>
</f></add>
		<remove public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></remove>
		<haxe_doc><![CDATA[HTMLOptionsCollection is an interface representing a collection of HTML option elements (in document order)&nbsp;and offers methods and properties for traversing the list as well as optionally altering its items. This type is returned solely by the "options" property of <a title="En/DOM/select" rel="internal" href="/api/js/html/SelectElement">select</a>.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLOptionsCollection">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOptionsCollection"</e></m></meta>
	</class>
	<class path="js.html.HeadElement" params="" file="/usr/lib/haxe/std/js/html/HeadElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<profile public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The URIs of one or more metadata profiles (white space separated). 

<span class="deprecatedInlineTemplate" title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Deprecated since Gecko 2.0</span>

 

<span title="(Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)
">Obsolete since Gecko 7.0</span>]]></haxe_doc>
		</profile>
		<haxe_doc><![CDATA[The DOM <code>head</code> element exposes the <a title="http://www.w3.org/TR/html5/semantics.html#htmlheadelement" class=" external" rel="external" href="http://www.w3.org/TR/html5/semantics.html#htmlheadelement" target="_blank">HTMLHeadElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>&nbsp; <a class=" external" target="_blank" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-77253168" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-77253168">HTMLHeadElement</a>) interface, which contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 section. In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLHeadElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLHeadElement"</e></m></meta>
	</class>
	<class path="js.html.History" params="" file="/usr/lib/haxe/std/js/html/History.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Read-only. Returns the number of elements in the session history, including the currently loaded page. For example, for a page loaded in a new tab this property returns <code>1</code>.]]></haxe_doc>
		</length>
		<state public="1" set="null">
			<d/>
			<haxe_doc><![CDATA[Returns the state at the top of the history stack. This is a way to look at the state without having to wait for a <code>popstate</code> event. <strong>Read only.</strong>]]></haxe_doc>
		</state>
		<back public="1" set="method"><f a=""><x path="Void"/></f></back>
		<forward public="1" set="method"><f a=""><x path="Void"/></f></forward>
		<go public="1" set="method"><f a="distance">
	<x path="Int"/>
	<x path="Void"/>
</f></go>
		<pushState public="1" set="method"><f a="data:title:?url">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></pushState>
		<replaceState public="1" set="method"><f a="data:title:?url">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></replaceState>
		<haxe_doc><![CDATA[Returns a reference to the <code>History</code> object, which provides an interface for manipulating the browser <em>session history</em> (pages visited in the tab or frame that the current page is loaded in).<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window.history">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"History"</e></m></meta>
	</class>
	<class path="js.html.HtmlElement" params="" file="/usr/lib/haxe/std/js/html/HtmlElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<manifest public="1"><c path="String"/></manifest>
		<version public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Version of the HTML&nbsp;Document Type Definition that governs this document.]]></haxe_doc>
		</version>
		<haxe_doc><![CDATA[<p>The <code>html</code> object exposes the <a class=" external" title="http://www.w3.org/TR/html5/semantics.html#htmlhtmlelement" rel="external" href="http://www.w3.org/TR/html5/semantics.html#htmlhtmlelement" target="_blank">HTMLHtmlElement</a> (
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a target="_blank" class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-33759296" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-33759296">HTMLHtmlElement</a>) interface and serves as the root node for a given HTML&nbsp;document.&nbsp; This object inherits the properties and methods described in the <a title="en/DOM/element" class="internal" rel="internal" href="/api/js/html/Element">element</a> section.&nbsp; In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but provides no other members.</p>
<p>You can retrieve the <code>html</code> object for a document by obtaining the value of the <a class="internal" title="en/DOM/document.documentElement" rel="internal" href="https://developer.mozilla.org/en/DOM/document.documentElement"><code>document.documentElement</code></a> property.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/En/DOM/Html">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLHtmlElement"</e></m></meta>
	</class>
	<class path="js.html.IFrameElement" params="" file="/usr/lib/haxe/std/js/html/IFrameElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Specifies the alignment of the frame with respect to the surrounding context.</haxe_doc>
		</align>
		<contentDocument public="1" set="null">
			<c path="js.html.Document"/>
			<haxe_doc>The active document in the inline frame's nested browsing context.</haxe_doc>
		</contentDocument>
		<contentWindow public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc>The window proxy for the nested browsing context.</haxe_doc>
		</contentWindow>
		<frameBorder public="1"><c path="String"/></frameBorder>
		<height public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-height">height</a></code>
 HTML&nbsp;attribute, indicating the height of the frame.]]></haxe_doc>
		</height>
		<longDesc public="1">
			<c path="String"/>
			<haxe_doc>URI of a long description of the frame.</haxe_doc>
		</longDesc>
		<marginHeight public="1">
			<c path="String"/>
			<haxe_doc>Height of the frame margin.</haxe_doc>
		</marginHeight>
		<marginWidth public="1">
			<c path="String"/>
			<haxe_doc>Width of the frame margin.</haxe_doc>
		</marginWidth>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-name">name</a></code>
 HTML&nbsp;attribute, containing a name by which to refer to the frame.]]></haxe_doc>
		</name>
		<sandbox public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-sandbox">sandbox</a></code>
 HTML&nbsp;attribute, indicating extra restrictions on the behavior of the nested content.]]></haxe_doc>
		</sandbox>
		<scrolling public="1">
			<c path="String"/>
			<haxe_doc>Indicates whether the browser should provide scrollbars for the frame.</haxe_doc>
		</scrolling>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-src">src</a></code>
 HTML&nbsp;attribute, containing the address of the content to be embedded.]]></haxe_doc>
		</src>
		<srcdoc public="1">
			<c path="String"/>
			<haxe_doc>The content to display in the frame.</haxe_doc>
		</srcdoc>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/iframe#attr-width">width</a></code>
&nbsp;HTML&nbsp;attribute, indicating the width of the frame.]]></haxe_doc>
		</width>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.svg.Document"/></f></getSVGDocument>
		<haxe_doc><![CDATA[DOM iframe objects expose the <a class="external" href="http://www.w3.org/TR/html5/the-iframe-element.html#htmliframeelement" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/html5/the-iframe-element.html#htmliframeelement">HTMLIFrameElement</a> (or <span><a href="https://developer.mozilla.org/en/HTML" rel="custom nofollow">HTML 4</a></span> <a class="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-50708718" rel="external nofollow" target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-50708718"><code>HTMLIFrameElement</code></a>) interface, which provides special properties and methods (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of inline frame elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLIFrameElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLIFrameElement"</e></m></meta>
	</class>
	<class path="js.html.ImageElement" params="" file="/usr/lib/haxe/std/js/html/ImageElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Indicates the alignment of the image with respect to the surrounding context.</haxe_doc>
		</align>
		<alt public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-alt">alt</a></code>
 HTML attribute, indicating fallback context for the image.]]></haxe_doc>
		</alt>
		<border public="1">
			<c path="String"/>
			<haxe_doc>Width of the border around the image.</haxe_doc>
		</border>
		<complete public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[True if the browser has fetched the image, and it is in a <a title="en/HTML/Element/Img#Image Format" rel="internal" href="https://developer.mozilla.org/En/HTML/Element/Img#Image_Format">supported image type</a> that was decoded without errors.]]></haxe_doc>
		</complete>
		<crossOrigin public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The CORS setting for this image element. See <a title="en/HTML/CORS settings attributes" rel="internal" href="https://developer.mozilla.org/en/HTML/CORS_settings_attributes">CORS&nbsp;settings attributes</a> for details.]]></haxe_doc>
		</crossOrigin>
		<height public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-height">height</a></code>
 HTML attribute, indicating the rendered height of the image in CSS&nbsp;pixels.]]></haxe_doc>
		</height>
		<hspace public="1">
			<x path="Int"/>
			<haxe_doc>Space to the left and right of the image.</haxe_doc>
		</hspace>
		<isMap public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-ismap">ismap</a></code>
 HTML attribute, indicating that the image is part of a server-side image map.]]></haxe_doc>
		</isMap>
		<longDesc public="1">
			<c path="String"/>
			<haxe_doc>URI of a long description of the image.</haxe_doc>
		</longDesc>
		<lowsrc public="1">
			<c path="String"/>
			<haxe_doc>A reference to a low-quality (but faster to load) copy of the image.</haxe_doc>
		</lowsrc>
		<name public="1"><c path="String"/></name>
		<naturalHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Intrinsic height of the image in CSS&nbsp;pixels, if it is available; otherwise, 0.]]></haxe_doc>
		</naturalHeight>
		<naturalWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Intrinsic width of the image in CSS&nbsp;pixels, if it is available; otherwise, 0.]]></haxe_doc>
		</naturalWidth>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element#attr-src">src</a></code>
 HTML attribute, containing the URL of the image.]]></haxe_doc>
		</src>
		<useMap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-usemap">usemap</a></code>
 HTML attribute, containing a partial URL of a map element.]]></haxe_doc>
		</useMap>
		<vspace public="1">
			<x path="Int"/>
			<haxe_doc>Space above and below the image.</haxe_doc>
		</vspace>
		<width public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/img#attr-width">width</a></code>
 HTML attribute, indicating the rendered width of the image in CSS&nbsp;pixels.]]></haxe_doc>
		</width>
		<x public="1" set="null"><x path="Int"/></x>
		<y public="1" set="null"><x path="Int"/></y>
		<haxe_doc><![CDATA[DOM image objects expose the <a title="http://www.w3.org/TR/html5/embedded-content-1.html#htmlimageelement" class=" external" rel="external" href="http://www.w3.org/TR/html5/embedded-content-1.html#htmlimageelement" target="_blank">HTMLImageElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-17701901" class=" external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-17701901" target="_blank"><code>HTMLImageElement</code></a>) interface, which provides special properties and methods (beyond the regular <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 object interface they also have available to them by inheritance) for manipulating the layout and presentation of input elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLImageElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLImageElement"</e></m></meta>
	</class>
	<class path="js.html.Image" params="" file="/usr/lib/haxe/std/js/html/Image.hx" extern="1">
		<extends path="js.html.ImageElement"/>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":native"><e>"Image"</e></m></meta>
	</class>
	<class path="js.html.ImageData" params="" file="/usr/lib/haxe/std/js/html/ImageData.hx" extern="1">
		<data public="1" set="null"><c path="js.html.Uint8ClampedArray"/></data>
		<height public="1" set="null"><x path="Int"/></height>
		<width public="1" set="null"><x path="Int"/></width>
		<haxe_doc><![CDATA[Used with the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/canvas">&lt;canvas&gt;</a></code>
 element. Returned by <a title="en/DOM/CanvasRenderingContext2D" rel="internal" href="/api/js/html/CanvasRenderingContext2D">CanvasRenderingContext2D</a>'s <a title="en/DOM/CanvasRenderingContext2D.createImageData" rel="internal" href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D.createImageData" class="new ">createImageData</a> and <a title="en/DOM/CanvasRenderingContext2D.getImageData" rel="internal" href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D.getImageData" class="new ">getImageData</a> (and accepted as first argument in <a title="en/DOM/CanvasRenderingContext2D.putImageData" rel="internal" href="https://developer.mozilla.org/en/DOM/CanvasRenderingContext2D.putImageData" class="new ">putImageData</a>)<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/ImageData">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ImageData"</e></m></meta>
	</class>
	<class path="js.html.InputElement" params="" file="/usr/lib/haxe/std/js/html/InputElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<accept public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-accept">accept</a></code>
 HTML&nbsp;attribute, containing comma-separated list of file types accepted by the server when <strong>type</strong> is <code>file</code>.]]></haxe_doc>
		</accept>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Alignment of the element.

<span title="">Obsolete</span>&nbsp;in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</align>
		<alt public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-alt">alt</a></code>
&nbsp;HTML attribute, containing alternative text to use when <strong>type</strong> is <code>image.</code>]]></haxe_doc>
		</alt>
		<autocomplete public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the {{htmlattrxref("autocomplete", "input)}} HTML attribute, indicating whether the value of the control can be automatically completed by the browser. Ignored if the value of the <strong>type</strong> attribute is <span>hidden</span>, <span>checkbox</span>, <span>radio</span>, <span>file</span>, or a button type (<span>button</span>, <span>submit</span>, <span>reset</span>, <span>image</span>). Possible values are: <ul> <li><span>off</span>: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.</li> <li><span>on</span>: The browser can automatically complete the value based on values that the user has entered during previous uses.</li> </ul>]]></haxe_doc>
		</autocomplete>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-autofocus">autofocus</a></code>
 HTML&nbsp;attribute, which specifies that a form control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the <strong>autofocus</strong> attribute. It cannot be applied if the <strong>type</strong> attribute is set to <code>hidden</code> (that is, you cannot automatically set focus to a hidden control).]]></haxe_doc>
		</autofocus>
		<checked public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The current state of the element when <strong>type</strong> is <code>checkbox</code> or <code>radio</code>.]]></haxe_doc>
		</checked>
		<defaultChecked public="1">
			<x path="Bool"/>
			<haxe_doc>The default state of a radio button or checkbox as originally specified in HTML that created this object.</haxe_doc>
		</defaultChecked>
		<defaultValue public="1">
			<c path="String"/>
			<haxe_doc>The default value as originally specified in HTML that created this object.</haxe_doc>
		</defaultValue>
		<dirName public="1"><c path="String"/></dirName>
		<directory public="1"><x path="Bool"/></directory>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-disabled">disabled</a></code>
 HTML attribute, indicating that the control is not available for interaction.]]></haxe_doc>
		</disabled>
		<entries public="1" set="null"><c path="js.html.fs.EntryArray"/></entries>
		<files public="1">
			<c path="js.html.FileList"/>
			<haxe_doc>A list of selected files.</haxe_doc>
		</files>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[<p>The containing form element, if this element is in a form. If this element is not contained in a form element:</p> <ul> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> this can be the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-id">id</a></code>
 attribute of any <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element in the same document. Even if the attribute is set on <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input">&lt;input&gt;</a></code>
, this property will be <code>null</code>, if it isn't the id of a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element.</li> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> this must be <code>null</code>.</li> </ul>]]></haxe_doc>
		</form>
		<formAction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-formaction">formaction</a></code>
 HTML attribute, containing the URI&nbsp;of a program that processes information submitted by the element. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-action">action</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formAction>
		<formEnctype public="1"><c path="String"/></formEnctype>
		<formMethod public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-formmethod">formmethod</a></code>
&nbsp;HTML&nbsp;attribute, containing the HTTP&nbsp;method that the browser uses to submit the form. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-method">method</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formMethod>
		<formNoValidate public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-formnovalidate">formnovalidate</a></code>
&nbsp;HTML&nbsp;attribute, indicating that the form is not to be validated when it is submitted. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-novalidate">novalidate</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formNoValidate>
		<formTarget public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-formtarget">formtarget</a></code>
 HTML&nbsp;attribute, containing a name or keyword indicating where to display the response that is received after submitting the form. If specified, this attribute overrides the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-target">target</a></code>
 attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element that owns this element.]]></haxe_doc>
		</formTarget>
		<grammar public="1"><x path="Bool"/></grammar>
		<height public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-height">height</a></code>
 HTML attribute, which defines the height of the image displayed for the button, if the value of <strong>type</strong> is <span>image</span>.]]></haxe_doc>
		</height>
		<incremental public="1"><x path="Bool"/></incremental>
		<indeterminate public="1">
			<x path="Bool"/>
			<haxe_doc>Indicates that a checkbox is neither on nor off.</haxe_doc>
		</indeterminate>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc><![CDATA[A list of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/label">&lt;label&gt;</a></code>
 elements that are labels for this element.]]></haxe_doc>
		</labels>
		<list public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc><![CDATA[Identifies a list of pre-defined options to suggest to the user. The value must be the <strong>id</strong> of a <code><a class="new" href="https://developer.mozilla.org/en/HTML/Element/datalist" rel="internal">&lt;datalist&gt;</a></code> element in the same document. The browser displays only options that are valid values for this input element. This attribute is ignored when the <strong>type</strong> attribute's value is <span>hidden</span>, <span>checkbox</span>, <span>radio</span>, <span>file</span>, or a button type.]]></haxe_doc>
		</list>
		<max public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-max">max</a></code>
 HTML&nbsp;attribute, containing the maximum (numeric or date-time) value for this item, which must not be less than its minimum (<strong>min</strong> attribute) value.]]></haxe_doc>
		</max>
		<maxLength public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[<p>Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-maxlength">maxlength</a></code>
&nbsp;HTML attribute, containing the maximum length of text (in Unicode code points) that the value can be changed to. The constraint is evaluated only when the value is changed</p> <div class="note"><strong>Note:</strong> If you set <code>maxlength</code> to a negative value programmatically, an exception will be thrown.</div> Setter throws DOMException.]]></haxe_doc>
		</maxLength>
		<min public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-min">min</a></code>
 HTML&nbsp;attribute, containing the minimum (numeric or date-time) value for this item, which must not be greater than its maximum (<strong>max</strong> attribute) value.]]></haxe_doc>
		</min>
		<multiple public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-multiple">multiple</a></code>
 HTML&nbsp;attribute, indicating whether more than one value is possible (e.g., multiple files).]]></haxe_doc>
		</multiple>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-name">name</a></code>
 HTML&nbsp;attribute, containing a name that identifies the element when submitting the form.]]></haxe_doc>
		</name>
		<onspeechchange public="1"><t path="js.html.EventListener"/></onspeechchange>
		<pattern public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-pattern">pattern</a></code>
 HTML&nbsp;attribute, containing a regular expression that the control's value is checked against. The pattern must match the entire value, not just some subset. Use the <strong>title</strong> attribute to describe the pattern to help the user. This attribute applies when the value of the <strong>type</strong> attribute is <span>text</span>, <span>search</span>, <span>tel</span>, <span>url</span> or <span>email</span>; otherwise it is ignored.]]></haxe_doc>
		</pattern>
		<placeholder public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-placeholder">placeholder</a></code>
 HTML&nbsp;attribute, containing a hint to the user of what can be entered in the control. The placeholder text must not contain carriage returns or line-feeds. This attribute applies when the value of the <strong>type</strong> attribute is <span>text</span>, <span>search</span>, <span>tel</span>, <span>url</span> or <span>email</span>; otherwise it is ignored.]]></haxe_doc>
		</placeholder>
		<readOnly public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<p>Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-readonly">readonly</a></code>
 HTML&nbsp;attribute, indicating that the user cannot modify the value of the control.</p> <p><span><a href="https://developer.mozilla.org/en/HTML/HTML5" rel="custom nofollow">HTML 5</a></span> This is ignored if the value of the <strong>type</strong> attribute is <span>hidden</span>, <span>range</span>, <span>color</span>, <span>checkbox</span>, <span>radio</span>, <span>file</span>, or a button type.</p>]]></haxe_doc>
		</readOnly>
		<required public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-required">required</a></code>
 HTML&nbsp;attribute, indicating that the user must fill in a value before submitting a form.]]></haxe_doc>
		</required>
		<selectionDirection public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The direction in which selection occurred. This is "forward" if selection was performed in the start-to-end direction of the current locale, or "backward" for the opposite direction. This can also be "none"&nbsp;if the direction is unknown."]]></haxe_doc>
		</selectionDirection>
		<selectionEnd public="1">
			<x path="Int"/>
			<haxe_doc>The index of the end of selected text.</haxe_doc>
		</selectionEnd>
		<selectionStart public="1">
			<x path="Int"/>
			<haxe_doc>The index of the beginning of selected text.</haxe_doc>
		</selectionStart>
		<size public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-size">size</a></code>
 HTML&nbsp;attribute, containing size of the control. This value is in pixels unless the value of <strong>type</strong> is <span>text</span> or <span>password</span>, in which case, it is an integer number of characters. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> Applies only when <strong>type</strong> is set to <span>text</span>, <span>search</span>, <span>tel</span>, <span>url</span>, <span>email</span>, or <span>password</span>; otherwise it is ignored. Setter throws DOMException.]]></haxe_doc>
		</size>
		<speech public="1"><x path="Bool"/></speech>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-src">src</a></code>
 HTML&nbsp;attribute, which specifies a URI for the location of an image to display on the graphical submit button, if the value of <strong>type</strong> is <span>image</span>; otherwise it is ignored.]]></haxe_doc>
		</src>
		<step public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-step">step</a></code>
 HTML&nbsp;attribute, which works with<strong> min</strong> and <strong>max</strong> to limit the increments at which a numeric or date-time value can be set. It can be the string <span>any</span> or a positive floating point number. If this is not set to <span>any</span>, the control accepts only values at multiples of the step value greater than the minimum.]]></haxe_doc>
		</step>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-type">type</a></code>
 HTML&nbsp;attribute, indicating the type of control to display. See 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-type">type</a></code>
 attribute of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input">&lt;input&gt;</a></code>
 for possible values.]]></haxe_doc>
		</type>
		<useMap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[A client-side image map. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</useMap>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc><![CDATA[The validity states that this element is in.&nbsp;]]></haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc>Current value in the control. Setter throws DOMException.</haxe_doc>
		</value>
		<valueAsDate public="1">
			<c path="Date"/>
			<haxe_doc><![CDATA[The value of the element, interpreted as a date, or <code>null</code> if conversion is not possible. Setter throws DOMException.]]></haxe_doc>
		</valueAsDate>
		<valueAsNumber public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value of the element, interpreted as one of the following in order:</p> <ol> <li>a time value</li> <li>a number</li> <li><code>null</code> if conversion is not possible</li> </ol> Setter throws DOMException.]]></haxe_doc>
		</valueAsNumber>
		<width public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-width">width</a></code>
 HTML&nbsp;attribute, which defines the width of the image displayed for the button, if the value of <strong>type</strong> is <span>image</span>.]]></haxe_doc>
		</width>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.</haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<select public="1" set="method"><f a=""><x path="Void"/></f></select>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<setRangeText public="1" set="method">
			<f a="replacement:start:end:selectionMode">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><setRangeText public="1" set="method">
	<f a="replacement">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</setRangeText></overloads>
		</setRangeText>
		<setSelectionRange public="1" set="method"><f a="start:end:?direction">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></setSelectionRange>
		<stepDown public="1" set="method"><f a="?n">
	<x path="Int"/>
	<x path="Void"/>
</f></stepDown>
		<stepUp public="1" set="method"><f a="?n">
	<x path="Int"/>
	<x path="Void"/>
</f></stepUp>
		<haxe_doc><![CDATA[DOM <code>Input</code> objects expose the <a title="http://dev.w3.org/html5/spec/the-input-element.html#htmlinputelement" class=" external" rel="external" href="http://dev.w3.org/html5/spec/the-input-element.html#htmlinputelement" target="_blank">HTMLInputElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6043025" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6043025" target="_blank"><code>HTMLInputElement</code></a>) interface, which provides special properties and methods (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of input elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLInputElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLInputElement"</e></m></meta>
	</class>
	<class path="js.html.Int16Array" params="" file="/usr/lib/haxe/std/js/html/Int16Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The size, in bytes, of each array element.</haxe_doc>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of entries in the array. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
			<overloads>
				<set public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
				<set public="1" set="method">
					<f a="array:?offset">
						<c path="js.html.Int16Array"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
			</overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Int16Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int16Array <a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array()">Int16Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int16Array</code> object.</p>
<pre>Int16Array Int16Array(
&nbsp; unsigned long length
);

Int16Array Int16Array(
&nbsp; <em>TypedArray</em> array
);

Int16Array Int16Array(
&nbsp; sequence&lt;type&gt; array
);

Int16Array Int16Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 16-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int16Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int16Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int16Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int16Array <a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array()">Int16Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int16Array</code> object.</p>
<pre>Int16Array Int16Array(
&nbsp; unsigned long length
);

Int16Array Int16Array(
&nbsp; <em>TypedArray</em> array
);

Int16Array Int16Array(
&nbsp; sequence&lt;type&gt; array
);

Int16Array Int16Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 16-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int16Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int16Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int16Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Int"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int16Array <a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array()">Int16Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int16Array</code> object.</p>
<pre>Int16Array Int16Array(
&nbsp; unsigned long length
);

Int16Array Int16Array(
&nbsp; <em>TypedArray</em> array
);

Int16Array Int16Array(
&nbsp; sequence&lt;type&gt; array
);

Int16Array Int16Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 16-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int16Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int16Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int16Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Int16Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int16Array <a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array()">Int16Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int16Array </code><code><a title="en/JavaScript typed arrays/Int16Array#Int16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array#Int16Array%28%29">Int16Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int16Array</code> object.</p>
<pre>Int16Array Int16Array(
&nbsp; unsigned long length
);

Int16Array Int16Array(
&nbsp; <em>TypedArray</em> array
);

Int16Array Int16Array(
&nbsp; sequence&lt;type&gt; array
);

Int16Array Int16Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 16-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int16Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int16Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int16Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[<p>The <code>Int16Array</code> type represents an array of twos-complement 16-bit signed integers.</p>
<p>Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int16Array">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Int16Array"</e></m></meta>
	</class>
	<class path="js.html.Int32Array" params="" file="/usr/lib/haxe/std/js/html/Int32Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The size, in bytes, of each array element.</haxe_doc>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of entries in the array. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="js.html.Int32Array"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
			<overloads>
				<set public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
				<set public="1" set="method">
					<f a="array:?offset">
						<c path="Array"><x path="Int"/></c>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
			</overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Int32Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int32Array <a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array()">Int32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int32Array</code> object.</p>
<pre>Int32Array Int32Array(
&nbsp; unsigned long length
);

Int32Array Int32Array(
&nbsp; <em>TypedArray</em> array
);

Int32Array Int32Array(
&nbsp; sequence&lt;type&gt; array
);

Int32Array Int32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int16Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int32Array <a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array()">Int32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int32Array</code> object.</p>
<pre>Int32Array Int32Array(
&nbsp; unsigned long length
);

Int32Array Int32Array(
&nbsp; <em>TypedArray</em> array
);

Int32Array Int32Array(
&nbsp; sequence&lt;type&gt; array
);

Int32Array Int32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int16Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Int"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int32Array <a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array()">Int32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int32Array</code> object.</p>
<pre>Int32Array Int32Array(
&nbsp; unsigned long length
);

Int32Array Int32Array(
&nbsp; <em>TypedArray</em> array
);

Int32Array Int32Array(
&nbsp; sequence&lt;type&gt; array
);

Int32Array Int32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int16Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Int32Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Int32Array <a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array()">Int32Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Int32Array </code><code><a title="en/JavaScript typed arrays/Int32Array#Int32Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array#Int32Array%28%29">Int32Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Int32Array</code> object.</p>
<pre>Int32Array Int32Array(
&nbsp; unsigned long length
);

Int32Array Int32Array(
&nbsp; <em>TypedArray</em> array
);

Int32Array Int32Array(
&nbsp; sequence&lt;type&gt; array
);

Int32Array Int32Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int16Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 32-bit signed integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Int32Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Int32Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Int32Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[<p>The <code>Int32Array</code> type represents an array of twos-complement 32-bit signed integers.</p>
<p>Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Int32Array">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Int32Array"</e></m></meta>
	</class>
	<class path="js.html.UIEvent" params="" file="/usr/lib/haxe/std/js/html/UIEvent.hx" extern="1">
		<extends path="js.html.Event"/>
		<charCode public="1" set="null"><x path="Int"/></charCode>
		<detail public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Detail about the event, depending on the type of event. <strong>Read only.</strong>]]></haxe_doc>
		</detail>
		<keyCode public="1" set="null"><x path="Int"/></keyCode>
		<layerX public="1" set="null"><x path="Int"/></layerX>
		<layerY public="1" set="null"><x path="Int"/></layerY>
		<pageX public="1" set="null"><x path="Int"/></pageX>
		<pageY public="1" set="null"><x path="Int"/></pageY>
		<view public="1" set="null">
			<c path="js.html.DOMWindow"/>
			<haxe_doc><![CDATA[A view which generated the event. <strong>Read only.</strong>]]></haxe_doc>
		</view>
		<which public="1" set="null"><x path="Int"/></which>
		<initUIEvent public="1" set="method"><f a="type:canBubble:cancelable:view:detail">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="js.html.DOMWindow"/>
	<x path="Int"/>
	<x path="Void"/>
</f></initUIEvent>
		<haxe_doc><![CDATA[<div><div>

<a rel="custom" href="http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMUIEvent.idl"><code>dom/interfaces/events/nsIDOMUIEvent.idl</code></a><span><a rel="internal" href="https://developer.mozilla.org/en/Interfaces/About_Scriptable_Interfaces" title="en/Interfaces/About_Scriptable_Interfaces">Scriptable</a></span></div><span>A basic event interface for all user interface events</span><div><div>1.0</div><div>11.0</div><div title="Introduced in Gecko 1.0 
"></div><div title="Last changed in Gecko 9.0 
"></div></div>
<div>Inherits from: <code><a rel="custom" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIDOMEvent">nsIDOMEvent</a></code>
<span>Last changed in Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
</span></div></div>
<p></p>
<p>The DOM <code>UIEvent</code> represents simple user interface events.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/UIEvent">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"UIEvent"</e></m></meta>
	</class>
	<class path="js.html.KeyboardEvent" params="" file="/usr/lib/haxe/std/js/html/KeyboardEvent.hx" extern="1">
		<extends path="js.html.UIEvent"/>
		<altGraphKey public="1" set="null"><x path="Bool"/></altGraphKey>
		<altKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the Alt (or Option, on Mac) key was active when the key event was generated. <strong>Read only.</strong>]]></haxe_doc>
		</altKey>
		<ctrlKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the Control key was active when the key event was generated. <strong>Read only.</strong>]]></haxe_doc>
		</ctrlKey>
		<keyIdentifier public="1" set="null"><c path="String"/></keyIdentifier>
		<keyLocation public="1" set="null"><x path="Int"/></keyLocation>
		<metaKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the Meta (or Command, on Mac) key was active when the key event was generated. <strong>Read only.</strong>]]></haxe_doc>
		</metaKey>
		<shiftKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the Shift key was active when the key event was generated. <strong>Read only.</strong>]]></haxe_doc>
		</shiftKey>
		<initKeyboardEvent public="1" set="method"><f a="type:canBubble:cancelable:view:keyIdentifier:keyLocation:ctrlKey:altKey:shiftKey:metaKey:altGraphKey">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="js.html.DOMWindow"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></initKeyboardEvent>
		<haxe_doc><![CDATA[<div class="deprecatedHeaderTemplate"><p>Deprecated</p></div>
<p></p>
<p><code>KeyboardEvent</code> objects describe a user interaction with the keyboard. Each event describes a key; the event type (<code>keydown</code>, <code>keypress</code>, or <code>keyup</code>) identifies what kind of activity was performed.</p>
<div class="note"><strong>Note:</strong> The <code>KeyboardEvent</code> interface is deprecated in DOM&nbsp;Level 3 in favor of the new <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/TextInput" class="new">TextInput</a></code>
 interface and the corresponding <code>textinput</code> event, which have improved support for alternate input methods.&nbsp; However, DOM Level 3 <code>textinput</code> events are <a title="https://bugzilla.mozilla.org/show_bug.cgi?id=622245" class=" link-https" rel="external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=622245" target="_blank">not yet implemented</a> in Gecko (as of version 6.0), so code written for Gecko browsers should continue to use <code>KeyboardEvent</code> for now.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/KeyboardEvent">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"KeyboardEvent"</e></m></meta>
	</class>
	<class path="js.html.KeygenElement" params="" file="/usr/lib/haxe/std/js/html/KeygenElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-autofocus">autofocus</a></code>
&nbsp;HTML attribute, indicating that the form control should have input focus when the page loads.]]></haxe_doc>
		</autofocus>
		<challenge public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-challenge">challenge</a></code>
 HTML&nbsp;attribute, containing a challenge string that is packaged with the submitted key.]]></haxe_doc>
		</challenge>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-disabled">disabled</a></code>
&nbsp;HTML attribute, indicating that the control is not available for interaction.]]></haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[Indicates the control's form owner, reflecting the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-form">form</a></code>
&nbsp;HTML&nbsp;attribute if it is defined.]]></haxe_doc>
		</form>
		<keytype public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-keytype">keytype</a></code>
 HTML&nbsp;attribute, containing the type of key used.]]></haxe_doc>
		</keytype>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc>A list of label elements associated with this keygen element.</haxe_doc>
		</labels>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/keygen#attr-name">name</a></code>
 HTML attribute, containing the name for the control that is submitted with form data.]]></haxe_doc>
		</name>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Must be the value <code>keygen</code>.]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Always false because <code>keygen</code> objects are never candidates for constraint validation.]]></haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[<strong>Note:</strong>&nbsp;This page describes the Keygen Element interface as specified, not as currently implemented by Gecko. See <a rel="external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=101019" class="external" title="">
bug 101019</a>
 for details and status.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLKeygenElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLKeygenElement"</e></m></meta>
	</class>
	<class path="js.html.LIElement" params="" file="/usr/lib/haxe/std/js/html/LIElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This character attributes indicates the numbering type: <ul> <li><code>a</code>: lowercase letters</li> <li><code>A</code>: uppercase letters</li> <li><code>i</code>: lowercase Roman numerals</li> <li><code>I</code>: uppercase Roman numerals</li> <li><code>1</code>: numbers</li> </ul> This type overrides the one used by its parent <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ol">&lt;ol&gt;</a></code>
 element, if any.<br> <div class="note"><strong>Usage note:</strong> This attribute has been deprecated: use the CSS <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property instead.</div>]]></haxe_doc>
		</type>
		<value public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[This integer attributes indicates the current ordinal value of the item in the list as defined by the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ol">&lt;ol&gt;</a></code>
 element. The only allowed value for this attribute is a number, even if the list is displayed with Roman numerals or letters. List items that follow this one continue numbering from the value set. The <strong>value</strong> attribute has no meaning for unordered lists (<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ul">&lt;ul&gt;</a></code>
) or for menus (<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/menu">&lt;menu&gt;</a></code>
). <div class="note"><strong>Note</strong>: This attribute was deprecated in HTML4, but reintroduced in HTML5.</div> <div class="geckoVersionNote"> <p>
</p><div class="geckoVersionHeading">Gecko 9.0 note<div>(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
</div></div>
<p></p> <p>Prior to <span title="(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
">Gecko&nbsp;9.0</span>, negative values were incorrectly converted to 0. Starting in <span title="(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
">Gecko&nbsp;9.0</span> all integer values are correctly parsed.</p> </div>]]></haxe_doc>
		</value>
		<haxe_doc><![CDATA[The <em>HTML List item element</em> (<code>&lt;li&gt;</code>) is used to represent a list item. It should be contained in an ordered list (<code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
), an unordered list (<code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
) or a menu (<code><a rel="custom" href="/api/js/html/MenuElement">&lt;menu&gt;</a></code>
), where it represents a single entity in that list. In menus and unordered lists, list items are ordinarily displayed using bullet points. In order lists, they are usually displayed with some ascending counter on the left such as a number or letter<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/li">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLIElement"</e></m></meta>
	</class>
	<class path="js.html.LabelElement" params="" file="/usr/lib/haxe/std/js/html/LabelElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<control public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>The labeled control.</haxe_doc>
		</control>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc>The form owner of this label.</haxe_doc>
		</form>
		<htmlFor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The ID of the labeled control. Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/label#attr-for">for</a></code>
 attribute.]]></haxe_doc>
		</htmlFor>
		<haxe_doc><![CDATA[DOM Label objects inherit all of the properties and methods of DOM <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a>, and also expose the <a title="http://dev.w3.org/html5/spec/forms.html#htmllabelelement" class=" external" rel="external" href="http://dev.w3.org/html5/spec/forms.html#htmllabelelement" target="_blank">HTMLLabelElement</a>(or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-13691394" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-13691394" target="_blank">HTMLLabelElement</a>) interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLLabelElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLabelElement"</e></m></meta>
	</class>
	<class path="js.html.LegendElement" params="" file="/usr/lib/haxe/std/js/html/LegendElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Alignment relative to the form set. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, 

<span class="deprecatedInlineTemplate" title="">Deprecated</span>

 in 
<span>HTML 4.01</span>]]></haxe_doc>
		</align>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[The form that this legend belongs to. If the legend has a fieldset element as its parent, then this attribute returns the same value as the <strong>form</strong> attribute on the parent fieldset element. Otherwise, it returns null.]]></haxe_doc>
		</form>
		<haxe_doc><![CDATA[DOM&nbsp;Legend objects inherit all of the properties and methods of DOM <a href="https://developer.mozilla.org/en/DOM/HTMLElement" title="en/DOM/HTMLElement" rel="internal">HTMLElement</a>, and also expose the <a title="http://www.w3.org/TR/html5/forms.html#htmllegendelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/forms.html#htmllegendelement" target="_blank">HTMLLegendElement</a> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> (or <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-21482039" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-21482039" target="_blank">HTMLLegendElement</a> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>) interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLLegendElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLegendElement"</e></m></meta>
	</class>
	<class path="js.html.LinkElement" params="" file="/usr/lib/haxe/std/js/html/LinkElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<charset public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute defines the character encoding of the linked resource. The value is a space- and/or comma-delimited list of character sets as defined in <a class="external" title="http://tools.ietf.org/html/rfc2045" rel="external" href="http://tools.ietf.org/html/rfc2045" target="_blank">RFC 2045</a>. The default value is ISO-8859-1. <div class="note"><strong>Usage note: </strong>This attribute is obsolete in HTML5 and <span>must</span><strong> not be used by authors</strong>. To achieve its effect, use the <span>Content-Type:</span> HTTP header on the linked resource.</div>]]></haxe_doc>
		</charset>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This attribute is used to disable a link relationship. In conjunction with scripting, this attribute could be used to turn on and off various style sheet relationships. <div class="note"> <p><strong>Note: </strong>While there is no <code>disabled</code> attribute in the HTML standard, there <strong>is</strong> a <code>disabled</code> attribute on the <code>HTMLLinkElement</code> DOM object.</p> <p>The use of&nbsp;<code>disabled</code> as an HTML attribute is non-standard and only used by some Microsoft browsers. <span>Do not use it</span>. To achieve a similar effect, use one of the following techniques:</p> <ul> <li>If the <code>disabled</code> attribute has been added directly to the element on the page, do not include the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link">&lt;link&gt;</a></code>
 element instead;</li> <li>Set the <code>disabled</code> <strong>property</strong> of the DOM object via scripting.</li> </ul> </div>]]></haxe_doc>
		</disabled>
		<href public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the <a title="https://developer.mozilla.org/en/URIs_and_URLs" rel="internal" href="https://developer.mozilla.org/en/URIs_and_URLs">URL</a> of the linked resource. A URL might be absolute or relative.]]></haxe_doc>
		</href>
		<hreflang public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute indicates the language of the linked resource. It is purely advisory. Allowed values are determined by <a class="external" title="http://www.ietf.org/rfc/bcp/bcp47.txt" rel="external" href="http://www.ietf.org/rfc/bcp/bcp47.txt" target="_blank">BCP47</a> for HTML5 and by <a class="external" title="http://www.ietf.org/rfc/rfc1766.txt" rel="external" href="http://www.ietf.org/rfc/rfc1766.txt" target="_blank">RFC1766</a> for HTML 4. Use this attribute only if the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/a#attr-href">href</a></code>
 attribute is present.]]></haxe_doc>
		</hreflang>
		<media public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the media which the linked resource applies to. Its value must be a <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/en/CSS/Media_queries">media query</a>. This attribute is mainly useful when linking to external stylesheets by allowing the user agent to pick the best adapted one for the device it runs on.<br> <div class="note"><strong>Usage note:&nbsp;</strong> <p>&nbsp;</p> <ul> <li>In HTML 4, this can only be a simple white-space-separated list of media description literals, i.e., <a title="https://developer.mozilla.org/en/CSS/@media" rel="internal" href="https://developer.mozilla.org/en/CSS/@media">media types and groups</a>, where defined and allowed as values for this attribute, such as <span>print</span>, <span>screen</span>, <span>aural</span>, <span>braille.</span> HTML5 extended this to any kind of <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/en/CSS/Media_queries">media queries</a>, which are a superset of the allowed values of HTML 4.</li> <li>Browsers not supporting the <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/en/CSS/Media_queries">CSS3 Media Queries</a> won't necessary recognized the adequate link; do not forget to set fallback links,&nbsp; the restricted set of media queries defined in HTML 4.</li> </ul> </div>]]></haxe_doc>
		</media>
		<rel public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute names a relationship of the linked document to the current document. The attribute must be a space-separated list of the <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">link types values</a>. The most common use of this attribute is to specify a link to an external style sheet:&nbsp;the <strong>rel</strong> attribute is set to <code>stylesheet</code>, and the <strong>href</strong> attribute is set to the URL of an external style sheet to format the page. WebTV also supports the use of the value <code>next</code> for <strong>rel</strong> to preload the next page in a document series.]]></haxe_doc>
		</rel>
		<rev public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The value of this attribute shows the relationship of the current document to the linked document, as defined by the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link#attr-href">href</a></code>
 attribute. The attribute thus defines the reverse relationship compared to the value of the <strong>rel</strong> attribute. <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">Link types values</a> for the attribute are similar to the possible values for 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link#attr-rel">rel</a></code>
.<br> <div class="note"><strong>Usage note: </strong>This attribute is obsolete in HTML5. <strong>Do not use it</strong>. To achieve its effect, use the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link#attr-rel">rel</a></code>
 attribute with the opposite <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">link types values</a>, e.g. <span>made</span> should be replaced by <span>author</span>. Also this attribute doesn't mean <em>revision</em> and must not be used with a version number, which is unfortunately the case on numerous sites.</div>]]></haxe_doc>
		</rev>
		<sheet public="1" set="null"><c path="js.html.StyleSheet"/></sheet>
		<sizes public="1">
			<c path="js.html.DOMSettableTokenList"/>
			<haxe_doc><![CDATA[This attribute defines the sizes of the icons for visual media contained in the resource. It must be present only if the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/link#attr-rel">rel</a></code>
 contains the <span>icon</span> <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">link types value</a>. It may have the following values: <ul> <li><span>any</span>, meaning that the icon can be scaled to any size as it is in a vectorial format, like <span>image/svg</span>.</li> <li>a white-space separated list of sizes, each in the format <span><em>&lt;width in pixels&gt;</em>x<em>&lt;height in pixels&gt;</em></span> or <span><em>&lt;width in pixels&gt;</em>X<em>&lt;height in pixels&gt;</em></span>. Each of these sizes must be contained in the resource.</li> </ul> <div class="note"><strong>Usage note:&nbsp;</strong> <p>&nbsp;</p> <ul> <li>Most icon format are only able to store one single icon; therefore most of the time the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element#attr-sizes">sizes</a></code>
 contains only one entry. Among the major browsers, only the Apple's ICNS format allows the storage of multiple icons, and this format is only supported in WebKit.</li> <li>Apple's iOS does not support this attribute, hence Apple's iPhone and iPad use special, non-standard <a title="en/HTML/Link types" rel="internal" href="https://developer.mozilla.org/en/HTML/Link_types">link types values</a> to define icon to be used as Web Clip or start-up placeholder: <span>apple-touch-icon</span> and <span>apple-touch-startup-icon</span>.</li> </ul> </div>]]></haxe_doc>
		</sizes>
		<target public="1">
			<c path="String"/>
			<haxe_doc>Defines the frame or window name that has the defined linking relationship or that will show the rendering of any linked resource.</haxe_doc>
		</target>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute is used to define the type of the content linked to. The value of the attribute should be a MIME type such as <strong>text/html</strong>, <strong>text/css</strong>, and so on. The common use of this attribute is to define the type of style sheet linked and the most common current value is <strong>text/css</strong>, which indicates a Cascading Style Sheet format.]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[The <em>HTML Link Element</em> (&lt;link&gt;) specifies relationships between the current document and other documents. Possible uses for this element include defining a relational framework for navigation and linking the document to a style sheet.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/link">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLinkElement"</e></m></meta>
	</class>
	<class path="js.html.Location" params="" file="/usr/lib/haxe/std/js/html/Location.hx" extern="1">
		<ancestorOrigins public="1" set="null"><c path="js.html.DOMStringList"/></ancestorOrigins>
		<hash public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[the part of the URL that follows the # symbol, including the # symbol.<br> You can listen for the <a title="en/DOM/window.onhashchange" rel="internal" href="https://developer.mozilla.org/en/DOM/window.onhashchange">hashchange event</a> to get notified of changes to the hash in supporting browsers.]]></haxe_doc>
		</hash>
		<host public="1">
			<c path="String"/>
			<haxe_doc>the host name and port number.</haxe_doc>
		</host>
		<hostname public="1">
			<c path="String"/>
			<haxe_doc>the host name (without the port number or square brackets).</haxe_doc>
		</hostname>
		<href public="1">
			<c path="String"/>
			<haxe_doc>the entire URL.</haxe_doc>
		</href>
		<origin public="1" set="null"><c path="String"/></origin>
		<pathname public="1">
			<c path="String"/>
			<haxe_doc>the path (relative to the host).</haxe_doc>
		</pathname>
		<port public="1">
			<c path="String"/>
			<haxe_doc>the port number of the URL.</haxe_doc>
		</port>
		<protocol public="1">
			<c path="String"/>
			<haxe_doc>the protocol of the URL.</haxe_doc>
		</protocol>
		<search public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[the part of the URL that follows the&nbsp;? symbol, including the&nbsp;? symbol.]]></haxe_doc>
		</search>
		<assign public="1" set="method"><f a="url">
	<c path="String"/>
	<x path="Void"/>
</f></assign>
		<reload public="1" set="method"><f a=""><x path="Void"/></f></reload>
		<replace public="1" set="method"><f a="url">
	<c path="String"/>
	<x path="Void"/>
</f></replace>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<haxe_doc><![CDATA[Returns a <a href="#Location_object"> <code>Location</code> object</a>, which contains information about the URL of the document and provides methods for changing that URL. You can also assign to this property to load another URL.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window.location">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Location"</e></m></meta>
	</class>
	<class path="js.html.MapElement" params="" file="/usr/lib/haxe/std/js/html/MapElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<areas public="1" set="null"><c path="js.html.HTMLCollection"/></areas>
		<name public="1"><c path="String"/></name>
		<haxe_doc><![CDATA[The HTML <em>Map</em> element (<code>&lt;map&gt;</code>) is used with <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/area">&lt;area&gt;</a></code>
 elements to define a image map.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/map">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMapElement"</e></m></meta>
	</class>
	<class path="js.html.MarqueeElement" params="" file="/usr/lib/haxe/std/js/html/MarqueeElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<behavior public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Sets how the text is scrolled within the marquee. Possible values are <code>scroll</code>, <code>slide</code> and <code>alternate</code>. If no value is specified, the default value is <code>scroll</code>.]]></haxe_doc>
		</behavior>
		<bgColor public="1"><c path="String"/></bgColor>
		<direction public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Sets the direction of the scrolling within the marquee. Possible values are <code>left</code>, <code>right</code>, <code>up</code> and <code>down</code>. If no value is specified, the default value is <code>left</code>.]]></haxe_doc>
		</direction>
		<height public="1">
			<c path="String"/>
			<haxe_doc>Sets the height in pixels or percentage value.</haxe_doc>
		</height>
		<hspace public="1">
			<x path="Int"/>
			<haxe_doc>Sets the horizontal margin</haxe_doc>
		</hspace>
		<loop public="1">
			<x path="Int"/>
			<haxe_doc>Sets the number of times the marquee will scroll. If no value is specified, the default value is −1, which means the marquee will scroll continuously. Setter throws DOMException.</haxe_doc>
		</loop>
		<scrollAmount public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</scrollAmount>
		<scrollDelay public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</scrollDelay>
		<trueSpeed public="1"><x path="Bool"/></trueSpeed>
		<vspace public="1">
			<x path="Int"/>
			<haxe_doc>Sets the vertical margin in pixels or percentage value.</haxe_doc>
		</vspace>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Sets the width in pixels or percentage value.</haxe_doc>
		</width>
		<start public="1" set="method"><f a=""><x path="Void"/></f></start>
		<stop public="1" set="method"><f a=""><x path="Void"/></f></stop>
		<haxe_doc><![CDATA[Non-standard<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/marquee">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMarqueeElement"</e></m></meta>
	</class>
	<class path="js.html.MediaController" params="" file="/usr/lib/haxe/std/js/html/MediaController.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<buffered public="1" set="null"><c path="js.html.TimeRanges"/></buffered>
		<currentTime public="1">
			<x path="Float"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</currentTime>
		<defaultPlaybackRate public="1"><x path="Float"/></defaultPlaybackRate>
		<duration public="1" set="null"><x path="Float"/></duration>
		<muted public="1"><x path="Bool"/></muted>
		<paused public="1" set="null"><x path="Bool"/></paused>
		<playbackRate public="1"><x path="Float"/></playbackRate>
		<played public="1" set="null"><c path="js.html.TimeRanges"/></played>
		<seekable public="1" set="null"><c path="js.html.TimeRanges"/></seekable>
		<volume public="1">
			<x path="Float"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</volume>
		<pause public="1" set="method"><f a=""><x path="Void"/></f></pause>
		<play public="1" set="method"><f a=""><x path="Void"/></f></play>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":native"><e>"MediaController"</e></m></meta>
	</class>
	<class path="js.html.MediaError" params="" file="/usr/lib/haxe/std/js/html/MediaError.hx" extern="1">
		<MEDIA_ERR_ABORTED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></MEDIA_ERR_ABORTED>
		<MEDIA_ERR_DECODE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></MEDIA_ERR_DECODE>
		<MEDIA_ERR_ENCRYPTED public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></MEDIA_ERR_ENCRYPTED>
		<MEDIA_ERR_NETWORK public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></MEDIA_ERR_NETWORK>
		<MEDIA_ERR_SRC_NOT_SUPPORTED public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></MEDIA_ERR_SRC_NOT_SUPPORTED>
		<code public="1" set="null"><x path="Int"/></code>
		<meta><m n=":native"><e>"MediaError"</e></m></meta>
	</class>
	<class path="js.html.MediaList" params="" file="/usr/lib/haxe/std/js/html/MediaList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<mediaText public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</mediaText>
		<appendMedium public="1" set="method"><f a="newMedium">
	<c path="String"/>
	<x path="Void"/>
</f></appendMedium>
		<deleteMedium public="1" set="method"><f a="oldMedium">
	<c path="String"/>
	<x path="Void"/>
</f></deleteMedium>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<meta><m n=":native"><e>"MediaList"</e></m></meta>
	</class>
	<class path="js.html.MediaQueryList" params="" file="/usr/lib/haxe/std/js/html/MediaQueryList.hx" extern="1">
		<matches public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/document">document</a></code>
 currently matches the media query list; otherwise <code>false</code>. <strong>Read only.</strong>]]></haxe_doc>
		</matches>
		<media public="1" set="null">
			<c path="String"/>
			<haxe_doc>The serialized media query list.</haxe_doc>
		</media>
		<addListener public="1" set="method"><f a="listener">
	<t path="js.html.MediaQueryListListener"/>
	<x path="Void"/>
</f></addListener>
		<removeListener public="1" set="method"><f a="listener">
	<t path="js.html.MediaQueryListListener"/>
	<x path="Void"/>
</f></removeListener>
		<haxe_doc><![CDATA[<div><strong>DRAFT</strong>
<div>This page is not complete.</div>
</div>

<p></p>
<p>A <code>MediaQueryList</code> object maintains a list of <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/En/CSS/Media_queries">media queries</a> on a <code><a rel="custom" href="/api/js/html/Document">document</a></code>
, and handles sending notifications to listeners when the media queries on the document change.</p>
<p>This makes it possible to observe a document to detect when its media queries change, instead of polling the values periodically, if you need to programmatically detect changes to the values of media queries on a document.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/MediaQueryList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"MediaQueryList"</e></m></meta>
	</class>
	<typedef path="js.html.MediaQueryListListener" params="" file="/usr/lib/haxe/std/js/html/MediaQueryListListener.hx">
		<f a="">
			<c path="js.html.MediaQueryList"/>
			<x path="Void"/>
		</f>
		<haxe_doc><![CDATA[<div><strong>DRAFT</strong>
<div>This page is not complete.</div>
</div>

<p></p>
<p>A <code>MediaQueryList</code> object maintains a list of <a title="En/CSS/Media queries" rel="internal" href="https://developer.mozilla.org/En/CSS/Media_queries">media queries</a> on a <code><a rel="custom" href="/api/js/html/Document">document</a></code>
, and handles sending notifications to listeners when the media queries on the document change.</p>
<p>This makes it possible to observe a document to detect when its media queries change, instead of polling the values periodically, if you need to programmatically detect changes to the values of media queries on a document.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/MediaQueryListListener">MDN</a>.]]></haxe_doc>
	</typedef>
	<class path="js.html.MemoryInfo" params="" file="/usr/lib/haxe/std/js/html/MemoryInfo.hx" extern="1">
		<jsHeapSizeLimit public="1" set="null"><x path="Int"/></jsHeapSizeLimit>
		<totalJSHeapSize public="1" set="null"><x path="Int"/></totalJSHeapSize>
		<usedJSHeapSize public="1" set="null"><x path="Int"/></usedJSHeapSize>
		<meta><m n=":native"><e>"MemoryInfo"</e></m></meta>
	</class>
	<class path="js.html.MenuElement" params="" file="/usr/lib/haxe/std/js/html/MenuElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1"><x path="Bool"/></compact>
		<haxe_doc><![CDATA[<p>The HTML <em>menu</em> element (<code>&lt;menu&gt;</code>) represents an unordered list of menu choices, or commands.</p>
<p>There is no limitation to the depth and nesting of lists defined with the <code><a rel="custom" href="/api/js/html/MenuElement">&lt;menu&gt;</a></code>
, <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 elements.</p>
<div class="note"><strong>Usage note: </strong> The <code><a rel="custom" href="/api/js/html/MenuElement">&lt;menu&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 both represent an unordered list of items. They differ in the way that the <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 element only contains items to display while the <code><a rel="custom" href="/api/js/html/MenuElement">&lt;menu&gt;</a></code>
 element contains interactive items, to act on.</div>
<div class="note"><strong>Note</strong>: This element was deprecated in HTML4, but reintroduced in HTML5.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/menu">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMenuElement"</e></m></meta>
	</class>
	<class path="js.html.MetaElement" params="" file="/usr/lib/haxe/std/js/html/MetaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<content public="1">
			<c path="String"/>
			<haxe_doc>Gets or sets the value of meta-data property.</haxe_doc>
		</content>
		<httpEquiv public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Gets or sets the name of an HTTP&nbsp;response header to define for a document.]]></haxe_doc>
		</httpEquiv>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Gets or sets the name of a meta-data property to define for a document.</haxe_doc>
		</name>
		<scheme public="1">
			<c path="String"/>
			<haxe_doc>Gets or sets the name of a scheme used to interpret the value of a meta-data property.</haxe_doc>
		</scheme>
		<haxe_doc><![CDATA[The meta objects expose the <a class=" external" target="_blank" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-37041454" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-37041454">HTMLMetaElement</a> interface which contains descriptive metadata about a document.&nbsp; This object inherits all of the properties and methods described in the <a class="internal" rel="internal" href="/api/js/html/Element">element</a> section.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLMetaElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMetaElement"</e></m></meta>
	</class>
	<class path="js.html.MeterElement" params="" file="/usr/lib/haxe/std/js/html/MeterElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<high public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The lower numeric bound of the high end of the measured range. This must be less than the maximum value (<strong>max</strong> attribute), and it also must be greater than the low value and minimum value (<strong>low</strong> attribute and <strong>min</strong> attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the <strong>high</strong> value is equal to the maximum value. Setter throws DOMException.]]></haxe_doc>
		</high>
		<labels public="1" set="null"><c path="js.html.NodeList"/></labels>
		<low public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The upper numeric bound of the low end of the measured range. This must be greater than the minimum value (<strong>min</strong> attribute), and it also must be less than the high value and maximum value (<strong>high</strong> attribute and <strong>max</strong> attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the <strong>low</strong> value is equal to the minimum value. Setter throws DOMException.]]></haxe_doc>
		</low>
		<max public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The upper numeric bound of the measured range. This must be greater than the minimum value (<strong>min</strong> attribute), if specified. If unspecified, the maximum value is 1. Setter throws DOMException.]]></haxe_doc>
		</max>
		<min public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The lower numeric bound of the measured range. This must be less than the maximum value (<strong>max</strong> attribute), if specified. If unspecified, the minimum value is 0. Setter throws DOMException.]]></haxe_doc>
		</min>
		<optimum public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[This attribute indicates the optimal numeric value. It must be within the range (as defined by the <strong>min</strong> attribute and <strong>max</strong> attribute). When used with the <strong>low</strong> attribute and <strong>high</strong> attribute, it gives an indication where along the range is considered preferable. For example, if it is between the <strong>min</strong> attribute and the <strong>low</strong> attribute, then the lower range is considered preferred. Setter throws DOMException.]]></haxe_doc>
		</optimum>
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The current numeric value. This must be between the minimum and maximum values (<strong>min</strong> attribute and <strong>max</strong> attribute) if they are specified. If unspecified or malformed, the value is 0. If specified, but not within the range given by the <strong>min</strong> attribute and <strong>max</strong> attribute, the value is equal to the nearest end of the range. Setter throws DOMException.]]></haxe_doc>
		</value>
		<haxe_doc><![CDATA[<p>The HTML <em>meter</em> element (<code>&lt;meter&gt;</code>) represents either a scalar value within a known range or a fractional value.</p>
<div class="note"><strong>Usage note: </strong>Unless the <strong>value</strong> attribute is between 0 and 1 (inclusive), the <strong>min</strong> attribute and <strong>max</strong> attribute should define the range so that the <strong>value</strong> attribute's value is within it.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/meter">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMeterElement"</e></m></meta>
	</class>
	<class path="js.html.ModElement" params="" file="/usr/lib/haxe/std/js/html/ModElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<cite public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/del#attr-cite">cite</a></code>
 HTML attribute, containing a URI of a resource explaining the change.]]></haxe_doc>
		</cite>
		<dateTime public="1"><c path="String"/></dateTime>
		<haxe_doc><![CDATA[DOM mod (modification)&nbsp;objects expose the <a title="http://www.w3.org/TR/html5/edits.html#htmlmodelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/edits.html#htmlmodelement" target="_blank">HTMLModElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-79359609" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-79359609" target="_blank"><code>HTMLModElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating modification elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLModElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLModElement"</e></m></meta>
	</class>
	<class path="js.html.MouseEvent" params="" file="/usr/lib/haxe/std/js/html/MouseEvent.hx" extern="1">
		<extends path="js.html.UIEvent"/>
		<altKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the alt key was down when the mouse event was fired. <strong>Read only.</strong>]]></haxe_doc>
		</altKey>
		<button public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The button number that was pressed when the mouse event was fired:&nbsp;Left button=0, middle button=1 (if present), right button=2. For mice configured for left handed use in which the button actions are reversed the values are instead read from right to left. <strong>Read only.</strong>]]></haxe_doc>
		</button>
		<clientX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X coordinate of the mouse pointer in local (DOM content)&nbsp;coordinates. <strong>Read only.</strong>]]></haxe_doc>
		</clientX>
		<clientY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y coordinate of the mouse pointer in local (DOM content)&nbsp;coordinates. <strong>Read only.</strong>]]></haxe_doc>
		</clientY>
		<ctrlKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the control key was down when the mouse event was fired. <strong>Read only.</strong>]]></haxe_doc>
		</ctrlKey>
		<dataTransfer public="1" set="null"><c path="js.html.Clipboard"/></dataTransfer>
		<fromElement public="1" set="null"><c path="js.html.Node"/></fromElement>
		<metaKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the meta key was down when the mouse event was fired. <strong>Read only.</strong>]]></haxe_doc>
		</metaKey>
		<movementX public="1" set="null"><x path="Int"/></movementX>
		<movementY public="1" set="null"><x path="Int"/></movementY>
		<offsetX public="1" set="null"><x path="Int"/></offsetX>
		<offsetY public="1" set="null"><x path="Int"/></offsetY>
		<relatedTarget public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc><![CDATA[The target to which the event applies. <strong>Read only.</strong>]]></haxe_doc>
		</relatedTarget>
		<screenX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X coordinate of the mouse pointer in global (screen)&nbsp;coordinates. <strong>Read only.</strong>]]></haxe_doc>
		</screenX>
		<screenY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y coordinate of the mouse pointer in global (screen)&nbsp;coordinates. <strong>Read only.</strong>]]></haxe_doc>
		</screenY>
		<shiftKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<code>true</code> if the shift key was down when the mouse event was fired. <strong>Read only.</strong>]]></haxe_doc>
		</shiftKey>
		<toElement public="1" set="null"><c path="js.html.Node"/></toElement>
		<x public="1" set="null"><x path="Int"/></x>
		<y public="1" set="null"><x path="Int"/></y>
		<initMouseEvent public="1" set="method"><f a="type:canBubble:cancelable:view:detail:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:button:relatedTarget">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="js.html.DOMWindow"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Int"/>
	<c path="js.html.EventTarget"/>
	<x path="Void"/>
</f></initMouseEvent>
		<haxe_doc><![CDATA[The DOM&nbsp;<code>MouseEvent</code> represents events that occur due to the user interacting with a pointing device (such as a mouse). It's represented by the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/XPCOM_Interface_Reference/nsINSDOMMouseEvent&amp;ident=nsINSDOMMouseEvent" class="new">nsINSDOMMouseEvent</a></code>
&nbsp;interface, which extends the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/XPCOM_Interface_Reference/nsIDOMMouseEvent&amp;ident=nsIDOMMouseEvent" class="new">nsIDOMMouseEvent</a></code>
 interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/MouseEvent">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"MouseEvent"</e></m></meta>
	</class>
	<class path="js.html.NamedNodeMap" params="" file="/usr/lib/haxe/std/js/html/NamedNodeMap.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<getNamedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></getNamedItem>
		<getNamedItemNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Node"/>
</f></getNamedItemNS>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<removeNamedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></removeNamedItem>
		<removeNamedItemNS public="1" set="method"><f a="?namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Node"/>
</f></removeNamedItemNS>
		<setNamedItem public="1" set="method"><f a="node">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></setNamedItem>
		<setNamedItemNS public="1" set="method"><f a="node">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></setNamedItemNS>
		<haxe_doc><![CDATA[A collection of nodes returned by <a title="En/DOM/Element.attributes" class="internal" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.attributes"><code>Element.attributes</code></a> (also potentially for <code><a title="En/DOM/DocumentType.entities" rel="internal" href="https://developer.mozilla.org/En/DOM/DocumentType.entities" class="new internal">DocumentType.entities</a></code>, <code><a title="En/DOM/DocumentType.notations" rel="internal" href="https://developer.mozilla.org/En/DOM/DocumentType.notations" class="new internal">DocumentType.notations</a></code>). <code>NamedNodeMap</code>s are not in any particular order (unlike <code><a title="En/DOM/NodeList" class="internal" rel="internal" href="/api/js/html/NodeList">NodeList</a></code>), although they may be accessed by an index as in an array (they may also be accessed with the <code>item</code>() method). A NamedNodeMap object are live and will thus be auto-updated if changes are made to their contents internally or elsewhere.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/NamedNodeMap">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"NamedNodeMap"</e></m></meta>
	</class>
	<class path="js.html.Navigator" params="" file="/usr/lib/haxe/std/js/html/Navigator.hx" extern="1">
		<appCodeName public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the internal "code" name of the current browser. Do not rely on this property to return the correct value.</haxe_doc>
		</appCodeName>
		<appName public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the official name of the browser. Do not rely on this property to return the correct value.</haxe_doc>
		</appName>
		<appVersion public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the version of the browser as a string. Do not rely on this property to return the correct value.</haxe_doc>
		</appVersion>
		<battery public="1" set="null"><c path="js.html.BatteryManager"/></battery>
		<cookieEnabled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a boolean indicating whether cookies are enabled in the browser or not.</haxe_doc>
		</cookieEnabled>
		<geolocation public="1" set="null"><c path="js.html.Geolocation"/></geolocation>
		<language public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a string representing the language version of the browser.</haxe_doc>
		</language>
		<mimeTypes public="1" set="null">
			<c path="js.html.DOMMimeTypeArray"/>
			<haxe_doc>Returns a list of the MIME types supported by the browser.</haxe_doc>
		</mimeTypes>
		<onLine public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a boolean indicating whether the browser is working online.</haxe_doc>
		</onLine>
		<platform public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a string representing the platform of the browser.</haxe_doc>
		</platform>
		<plugins public="1" set="null">
			<c path="js.html.DOMPluginArray"/>
			<haxe_doc>Returns an array of the plugins installed in the browser.</haxe_doc>
		</plugins>
		<product public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the product name of the current browser. (e.g. "Gecko")</haxe_doc>
		</product>
		<productSub public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the build number of the current browser (e.g. "20060909")</haxe_doc>
		</productSub>
		<userAgent public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the user agent string for the current browser.</haxe_doc>
		</userAgent>
		<vendor public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the vendor name of the current browser (e.g. "Netscape6")</haxe_doc>
		</vendor>
		<vendorSub public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the vendor version number (e.g. "6.1")</haxe_doc>
		</vendorSub>
		<getGamepads public="1" set="method"><f a=""><c path="js.html.GamepadList"/></f></getGamepads>
		<getStorageUpdates public="1" set="method"><f a=""><x path="Void"/></f></getStorageUpdates>
		<getUserMedia public="1" set="method"><f a="options:successCallback:?errorCallback">
	<d/>
	<t path="js.html.rtc.NavigatorUserMediaSuccessCallback"/>
	<t path="js.html.rtc.NavigatorUserMediaErrorCallback"/>
	<x path="Void"/>
</f></getUserMedia>
		<javaEnabled public="1" set="method"><f a=""><x path="Bool"/></f></javaEnabled>
		<haxe_doc><![CDATA[Returns a reference to the navigator object, which can be queried for information about the application running the script.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window.navigator">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Navigator"</e></m></meta>
	</class>
	<class path="js.html.NodeFilter" params="" file="/usr/lib/haxe/std/js/html/NodeFilter.hx" extern="1">
		<FILTER_ACCEPT public="1" get="inline" set="null" line="31" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Value returned by the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/NodeFilter.acceptNode" class="new">NodeFilter.acceptNode()</a></code>
 method when a node should be accepted.]]></haxe_doc>
		</FILTER_ACCEPT>
		<FILTER_REJECT public="1" get="inline" set="null" line="37" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Value to be returned by the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/NodeFilter.acceptNode" class="new">NodeFilter.acceptNode()</a></code>
 method when a node should be rejected. The children of rejected nodes are not visited by the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 object; this value is treated as "skip this node and all its children".]]></haxe_doc>
		</FILTER_REJECT>
		<FILTER_SKIP public="1" get="inline" set="null" line="43" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Value to be returned by <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/NodeFilter.acceptNode" class="new">NodeFilter.acceptNode()</a></code>
 for nodes to be skipped by the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 object. The children of skipped nodes are still considered. This is treated as "skip this node but not its children".]]></haxe_doc>
		</FILTER_SKIP>
		<SHOW_ALL public="1" get="inline" set="null" line="46" static="1">
			<x path="Int"/>
			<haxe_doc>Shows all nodes.</haxe_doc>
		</SHOW_ALL>
		<SHOW_ATTRIBUTE public="1" get="inline" set="null" line="53" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows attribute <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Attr">Attr</a></code>
 nodes. This is meaningful only when creating a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 with an <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Attr">Attr</a></code>
 node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.]]></haxe_doc>
		</SHOW_ATTRIBUTE>
		<SHOW_CDATA_SECTION public="1" get="inline" set="null" line="57" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/CDATASection">CDATASection</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_CDATA_SECTION>
		<SHOW_COMMENT public="1" get="inline" set="null" line="61" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Comment">Comment</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_COMMENT>
		<SHOW_DOCUMENT public="1" get="inline" set="null" line="65" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_DOCUMENT>
		<SHOW_DOCUMENT_FRAGMENT public="1" get="inline" set="null" line="69" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DocumentFragment">DocumentFragment</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_DOCUMENT_FRAGMENT>
		<SHOW_DOCUMENT_TYPE public="1" get="inline" set="null" line="73" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DocumentType">DocumentType</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_DOCUMENT_TYPE>
		<SHOW_ELEMENT public="1" get="inline" set="null" line="77" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Element">Element</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_ELEMENT>
		<SHOW_ENTITY public="1" get="inline" set="null" line="85" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Entity">Entity</a></code>
&nbsp;nodes. This is meaningful only when creating a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 with an <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Entity">Entity</a></code>
 node as its root; in this case, it means that the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Entity">Entity</a></code>
 node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.]]></haxe_doc>
		</SHOW_ENTITY>
		<SHOW_ENTITY_REFERENCE public="1" get="inline" set="null" line="89" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/EntityReference">EntityReference</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_ENTITY_REFERENCE>
		<SHOW_NOTATION public="1" get="inline" set="null" line="97" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Notation">Notation</a></code>
 nodes. This is meaningful only when creating a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/NodeIterator">NodeIterator</a></code>
 or <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TreeWalker">TreeWalker</a></code>
 with a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Notation">Notation</a></code>
 node as its root; in this case, it means that the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Notation">Notation</a></code>
 node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.]]></haxe_doc>
		</SHOW_NOTATION>
		<SHOW_PROCESSING_INSTRUCTION public="1" get="inline" set="null" line="101" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/ProcessingInstruction">ProcessingInstruction</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_PROCESSING_INSTRUCTION>
		<SHOW_TEXT public="1" get="inline" set="null" line="105" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Shows <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Text">Text</a></code>
&nbsp;nodes.]]></haxe_doc>
		</SHOW_TEXT>
		<acceptNode public="1" set="method"><f a="n">
	<c path="js.html.Node"/>
	<x path="Int"/>
</f></acceptNode>
		<meta><m n=":native"><e>"NodeFilter"</e></m></meta>
	</class>
	<class path="js.html.NodeIterator" params="" file="/usr/lib/haxe/std/js/html/NodeIterator.hx" extern="1">
		<expandEntityReferences public="1" set="null"><x path="Bool"/></expandEntityReferences>
		<filter public="1" set="null"><c path="js.html.NodeFilter"/></filter>
		<pointerBeforeReferenceNode public="1" set="null"><x path="Bool"/></pointerBeforeReferenceNode>
		<referenceNode public="1" set="null"><c path="js.html.Node"/></referenceNode>
		<root public="1" set="null"><c path="js.html.Node"/></root>
		<whatToShow public="1" set="null"><x path="Int"/></whatToShow>
		<detach public="1" set="method"><f a=""><x path="Void"/></f></detach>
		<nextNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></nextNode>
		<previousNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></previousNode>
		<meta><m n=":native"><e>"NodeIterator"</e></m></meta>
	</class>
	<class path="js.html.NodeList" params="" file="/usr/lib/haxe/std/js/html/NodeList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the number of elements in the NodeList.&nbsp;]]></haxe_doc>
		</length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<haxe_doc><![CDATA[NodeList objects are collections of nodes returned by <a title="document.getElementsByTagName" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByTagName"><code>getElementsByTagName</code></a>, <a title="document.getElementsByTagNameNS" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByTagNameNS"><code>getElementsByTagNameNS</code></a>, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node.childNodes">Node.childNodes</a></code>
, <a title="document.querySelectorAll" rel="internal" href="https://developer.mozilla.org/En/DOM/Document.querySelectorAll">querySelectorAll</a>, <a title="document.getElementsByClassName" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByClassName"><code>getElementsByClassName</code></a>, etc.NodeList objects are collections of nodes returned by <a title="document.getElementsByTagName" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByTagName"><code>getElementsByTagName</code></a>, <a title="document.getElementsByTagNameNS" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByTagNameNS"><code>getElementsByTagNameNS</code></a>, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node.childNodes">Node.childNodes</a></code>
, <a title="document.querySelectorAll" rel="internal" href="https://developer.mozilla.org/En/DOM/Document.querySelectorAll">querySelectorAll</a>, <a title="document.getElementsByClassName" rel="internal" href="https://developer.mozilla.org/en/DOM/document.getElementsByClassName"><code>getElementsByClassName</code></a>, etc.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/En/DOM/NodeList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"NodeList"</e></m></meta>
	</class>
	<class path="js.html.Notification" params="" file="/usr/lib/haxe/std/js/html/Notification.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<requestPermission public="1" set="method" static="1"><f a="callback_">
	<t path="js.html.NotificationPermissionCallback"/>
	<x path="Void"/>
</f></requestPermission>
		<dir public="1"><c path="String"/></dir>
		<onclick public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[&nbsp;A function to call when the notification is clicked.]]></haxe_doc>
		</onclick>
		<onclose public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[&nbsp;A function to call when the notification is dismissed.]]></haxe_doc>
		</onclose>
		<ondisplay public="1"><t path="js.html.EventListener"/></ondisplay>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onshow public="1"><t path="js.html.EventListener"/></onshow>
		<permission public="1" set="null"><c path="String"/></permission>
		<replaceId public="1"><c path="String"/></replaceId>
		<tag public="1"><c path="String"/></tag>
		<cancel public="1" set="method"><f a=""><x path="Void"/></f></cancel>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<show public="1" set="method"><f a=""><x path="Void"/></f></show>
		<new public="1" set="method"><f a="title:options">
	<c path="String"/>
	<d/>
	<x path="Void"/>
</f></new>
		<haxe_doc><![CDATA[<div class="geckoMinversionHeaderTemplate"><p>Mobile Only in Gecko 2.0</p><p>Available only in Firefox Mobile as of Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
</p></div>

<div><p>Non-standard</p></div><p></p>
<p>The notification object, which you create using the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/navigator.mozNotification">navigator.mozNotification</a></code>
&nbsp;object's <code>createNotification()</code>&nbsp;method, is used to configure and display desktop notifications to the user.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/notification">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Notification"</e></m></meta>
	</class>
	<class path="js.html.NotificationCenter" params="" file="/usr/lib/haxe/std/js/html/NotificationCenter.hx" extern="1">
		<checkPermission public="1" set="method"><f a=""><x path="Int"/></f></checkPermission>
		<createHTMLNotification public="1" set="method"><f a="url">
	<c path="String"/>
	<c path="js.html.Notification"/>
</f></createHTMLNotification>
		<createNotification public="1" set="method"><f a="iconUrl:title:body">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Notification"/>
</f></createNotification>
		<requestPermission public="1" set="method"><f a="callback_">
	<t path="js.html.VoidCallback"/>
	<x path="Void"/>
</f></requestPermission>
		<meta><m n=":native"><e>"NotificationCenter"</e></m></meta>
	</class>
	<typedef path="js.html.NotificationPermissionCallback" params="" file="/usr/lib/haxe/std/js/html/NotificationPermissionCallback.hx"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.OListElement" params="" file="/usr/lib/haxe/std/js/html/OListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn't work in all browsers. <div class="note"><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it has been deprecated: the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ol">&lt;ol&gt;</a></code>
 element should be styled using <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a>. To give a similar effect than the <span>compact</span> attribute, the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/line-height">line-height</a></code>
 can be used with a value of <span>80%</span>.</div>]]></haxe_doc>
		</compact>
		<reversed public="1">
			<x path="Bool"/>
			<haxe_doc>This Boolean attribute specifies that the items of the item are specified in the reverse order, i.e. that the least important one is listed first. Browsers, by default, numbered the items in the reverse order too.</haxe_doc>
		</reversed>
		<start public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[This integer attribute specifies the start value for numbering the individual list items. Although the ordering type of list elements might be Roman numerals, such as XXXI, or letters, the value of start is always represented as a number. To start numbering elements from the letter "C", use <code>&lt;ol start="3"&gt;</code>. <div class="note"><strong>Note</strong>: that attribute was deprecated in HTML4, but reintroduced in HTML5.</div>]]></haxe_doc>
		</start>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Indicates the numbering type: <ul> <li><span><code>'a'</code></span> indicates lowercase letters,</li> <li><span id="1284454877507S">&nbsp;</span><span><code>'<span id="1284454878023E">&nbsp;</span>A'</code></span> indicates uppercase letters,</li> <li><span><code>'i'</code></span> indicates lowercase Roman numerals,</li> <li><span><code>'I'</code></span> indicates uppercase Roman numerals,</li> <li>and <span><code>'1'</code></span> indicates numbers.</li> </ul> <p>The type set is used for the entire list unless a different 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/li#attr-type">type</a></code>
 attribute is used within an enclosed <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/li">&lt;li&gt;</a></code>
 element.</p> <div class="note"><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it has been deprecated: use the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property instead.</div>]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[<p>The HTML <em>ordered list</em> element (<code>&lt;ol&gt;</code>) represents an ordered list of items. Typically, ordered-list items are displayed with a preceding numbering, which can be of any form, like numerals, letters or Romans numerals or even simple bullets. This numbered style is not defined in the HTML description of the page, but in its associated CSS, using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property.</p>
<p>There is no limitation to the depth and imbrication of lists defined with the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 elements.</p>
<div class="note"><strong>Usage note: </strong> The <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 both represent a list of items. They differ in the way that, with the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 element, the order is meaningful. As a rule of thumb to determine which one to use, try changing the order of the list items; if the meaning is changed, the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 element should be used, else the <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 is adequate.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/ol">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOListElement"</e></m></meta>
	</class>
	<class path="js.html.ObjectElement" params="" file="/usr/lib/haxe/std/js/html/ObjectElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Alignment of the object relative to its context. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</align>
		<archive public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-archive">archive</a></code>
&nbsp;HTML attribute, containing a list of archives for resources for this object. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</archive>
		<border public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-border">border</a></code>
&nbsp;HTML attribute, specifying the width of a border around the object. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</border>
		<code public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The name of an applet class file, containing either the applet's subclass, or the path to get to the class, including the class file itself. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</code>
		<codeBase public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-codebase">codebase</a></code>
&nbsp;HTML attribute, specifying the base path to use to resolve relative URIs. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</codeBase>
		<codeType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-codetype">codetype</a></code>
&nbsp;HTML attribute, specifying the content type of the data. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</codeType>
		<contentDocument public="1" set="null">
			<c path="js.html.Document"/>
			<haxe_doc>The active document of the object element's nested browsing context, if any; otherwise null.</haxe_doc>
		</contentDocument>
		<data public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-data">data</a></code>
 HTML&nbsp;attribute, specifying the address of a resource's data.]]></haxe_doc>
		</data>
		<declare public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-declare">declare</a></code>
 HTML&nbsp;attribute, indicating that this is a declaration, not an instantiation, of the object. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</declare>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc>The object element's form owner, or null if there isn't one.</haxe_doc>
		</form>
		<height public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the {{htmlattrxref("height", "object)}}&nbsp;HTML attribute, specifying the displayed height of the resource in CSS pixels.]]></haxe_doc>
		</height>
		<hspace public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Horizontal space in pixels around the control. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</hspace>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-name">name</a></code>
&nbsp;HTML attribute, specifying the name of the object (
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span>, or of a browsing context (
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</name>
		<standby public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-standby">standby</a></code>
 HTML&nbsp;attribute, specifying a message to display while the object loads. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</standby>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the {{htmlattrxref("type", "object)}}&nbsp;HTML attribute, specifying the MIME type of the resource.]]></haxe_doc>
		</type>
		<useMap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the {{htmlattrxref("usemap", "object)}}&nbsp;HTML attribute, specifying a {{HTMLElement("map")}} element to use.]]></haxe_doc>
		</useMap>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<vspace public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Horizontal space in pixels around the control. 

<span title="">Obsolete</span> in 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>.]]></haxe_doc>
		</vspace>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object#attr-width">width</a></code>
&nbsp;HTML attribute, specifying the displayed width of the resource in CSS pixels.]]></haxe_doc>
		</width>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates whether the element is a candidate for constraint validation. Always false for <code>object</code> objects.]]></haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.svg.Document"/></f></getSVGDocument>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[DOM <code>Object</code> objects expose the <a title="http://dev.w3.org/html5/spec/the-iframe-element.html#htmlobjectelement" class=" external" rel="external nofollow" href="http://dev.w3.org/html5/spec/the-iframe-element.html#htmlobjectelement" target="_blank">HTMLObjectElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html#ID-9893177" title="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109/html.html#ID-9893177" target="_blank">HTMLObjectElement</a>) interface, which provides special properties and methods (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of Object element, representing external resources.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLObjectElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLObjectElement"</e></m></meta>
	</class>
	<class path="js.html.OptGroupElement" params="" file="/usr/lib/haxe/std/js/html/OptGroupElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>If this Boolean attribute is set, none of the items in this option group is selectable. Often browsers grey out such control and it won't received any browsing events, like mouse clicks or focus-related ones.</haxe_doc>
		</disabled>
		<label public="1">
			<c path="String"/>
			<haxe_doc>The name of the group of options, which the browser can use when labeling the options in the user interface. This attribute is mandatory if this element is used.</haxe_doc>
		</label>
		<haxe_doc><![CDATA[In a web form, the HTML <em>optgroup</em> element (&lt;optgroup&gt;) creates a grouping of options within a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select">&lt;select&gt;</a></code>
 element.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/optgroup">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOptGroupElement"</e></m></meta>
	</class>
	<class path="js.html.OptionElement" params="" file="/usr/lib/haxe/std/js/html/OptionElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<defaultSelected public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option#attr-selected">selected</a></code>
 HTML attribute. which indicates whether the option is selected by default.]]></haxe_doc>
		</defaultSelected>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option#attr-disabled">disabled</a></code>
 HTML&nbsp;attribute, which indicates that the option is unavailable to be selected. An option can also be disabled if it is a child of an <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/optgroup">&lt;optgroup&gt;</a></code>
 element that is disabled.]]></haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[If the option is a descendent of a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select">&lt;select&gt;</a></code>
 element, then this property has the same value as the <code>form</code> property of the corresponding {{DomXref("HTMLSelectElement") object; otherwise, it is null.]]></haxe_doc>
		</form>
		<index public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The position of the option within the list of options it belongs to, in tree-order. If the option is not part of a list of options, the value is 0.</haxe_doc>
		</index>
		<label public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option#attr-label">label</a></code>
 HTML attribute, which provides a label for the option. If this attribute isn't specifically set, reading it returns the element's text content.]]></haxe_doc>
		</label>
		<selected public="1">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the option is selected.</haxe_doc>
		</selected>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Contains the text content of the element. Setter throws DOMException.</haxe_doc>
		</text>
		<value public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option#attr-value">value</a></code>
 HTML attribute, if it exists; otherwise reflects value of the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/textContent" class="new">textContent</a></code>
&nbsp;IDL&nbsp;attribute.]]></haxe_doc>
		</value>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<haxe_doc><![CDATA[<p>DOM&nbsp;<em>option</em> elements elements share all of the properties and methods of other HTML elements described in the <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> section. They also have the specialized interface <a title="http://dev.w3.org/html5/spec/the-button-element.html#htmloptionelement" class=" external" rel="external" href="http://dev.w3.org/html5/spec/the-button-element.html#htmloptionelement" target="_blank">HTMLOptionElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class="external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-70901257" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-70901257" target="_blank">HTMLOptionElement</a>).</p>
<p>No methods are defined on this interface.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLOptionElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOptionElement"</e></m></meta>
	</class>
	<class path="js.html.OutputElement" params="" file="/usr/lib/haxe/std/js/html/OutputElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<defaultValue public="1">
			<c path="String"/>
			<haxe_doc>The default value of the element, initially the empty string.</haxe_doc>
		</defaultValue>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[Indicates the control's form owner, reflecting the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/output#attr-form">form</a></code>
&nbsp;HTML&nbsp;attribute if it is defined.]]></haxe_doc>
		</form>
		<htmlFor public="1">
			<c path="js.html.DOMSettableTokenList"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/output#attr-for">for</a></code>
 HTML attribute, containing a list of IDs of other elements in the same document that contribute to (or otherwise affect) the calculated <strong>value</strong>.]]></haxe_doc>
		</htmlFor>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc>A list of label elements associated with this output element.</haxe_doc>
		</labels>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/output#attr-name">name</a></code>
 HTML attribute, containing the name for the control that is submitted with form data.]]></haxe_doc>
		</name>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[Must be the string <code>output</code>.]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The value of the contents of the elements. Behaves like the <strong><a title="En/DOM/Node.textContent" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.textContent">textContent</a></strong> property.]]></haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<p>      in Gecko 2.0. Indicates whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation. (See <a rel="external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=604673" class="external" title="">
bug 604673</a>
.)</p> <p>The standard behavior is to always return false because <code>output</code> objects are never candidates for constraint validation.</p>]]></haxe_doc>
		</willValidate>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<meta><m n=":native"><e>"HTMLOutputElement"</e></m></meta>
	</class>
	<class path="js.html.PagePopupController" params="" file="/usr/lib/haxe/std/js/html/PagePopupController.hx" extern="1">
		<formatMonth public="1" set="method"><f a="year:zeroBaseMonth">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></formatMonth>
		<localizeNumberString public="1" set="method"><f a="numberString">
	<c path="String"/>
	<c path="String"/>
</f></localizeNumberString>
		<setValueAndClosePopup public="1" set="method"><f a="numberValue:stringValue">
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></setValueAndClosePopup>
		<meta><m n=":native"><e>"PagePopupController"</e></m></meta>
	</class>
	<class path="js.html.ParagraphElement" params="" file="/usr/lib/haxe/std/js/html/ParagraphElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Enumerated attribute indicating alignment of the element's contents with respect to the surrounding context.</haxe_doc>
		</align>
		<haxe_doc><![CDATA[DOM p (paragraph) objects expose the <a title="http://www.w3.org/TR/html5/grouping-content.html#htmlparagraphelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/grouping-content.html#htmlparagraphelement" target="_blank">HTMLParagraphElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-84675076" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-84675076" target="_blank"><code>HTMLParagraphElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating div elements. In 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/HTMLParagraphElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLParagraphElement"</e></m></meta>
	</class>
	<class path="js.html.ParamElement" params="" file="/usr/lib/haxe/std/js/html/ParamElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Name of the parameter.</haxe_doc>
		</name>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Only used if the <code>valuetype</code> is set to "ref". Specifies the type of values found at the URI specified by value.]]></haxe_doc>
		</type>
		<value public="1">
			<c path="String"/>
			<haxe_doc>Value of the parameter.</haxe_doc>
		</value>
		<valueType public="1"><c path="String"/></valueType>
		<haxe_doc><![CDATA[<strong>Parameter </strong>element which defines parameters for <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object">&lt;object&gt;</a></code>
.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/param">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLParamElement"</e></m></meta>
	</class>
	<class path="js.html.Performance" params="" file="/usr/lib/haxe/std/js/html/Performance.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<memory public="1" set="null"><c path="js.html.MemoryInfo"/></memory>
		<navigation public="1" set="null"><c path="js.html.PerformanceNavigation"/></navigation>
		<timing public="1" set="null"><c path="js.html.PerformanceTiming"/></timing>
		<now public="1" set="method"><f a=""><x path="Float"/></f></now>
		<haxe_doc><![CDATA[The articles linked to from here will help you improve performance, whether you're developing core Mozilla code or an add-on.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Performance">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Performance"</e></m></meta>
	</class>
	<class path="js.html.PerformanceNavigation" params="" file="/usr/lib/haxe/std/js/html/PerformanceNavigation.hx" extern="1">
		<TYPE_BACK_FORWARD public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></TYPE_BACK_FORWARD>
		<TYPE_NAVIGATE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></TYPE_NAVIGATE>
		<TYPE_RELOAD public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></TYPE_RELOAD>
		<TYPE_RESERVED public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></TYPE_RESERVED>
		<redirectCount public="1" set="null"><x path="Int"/></redirectCount>
		<type public="1" set="null"><x path="Int"/></type>
		<meta><m n=":native"><e>"PerformanceNavigation"</e></m></meta>
	</class>
	<class path="js.html.PerformanceTiming" params="" file="/usr/lib/haxe/std/js/html/PerformanceTiming.hx" extern="1">
		<connectEnd public="1" set="null"><x path="Int"/></connectEnd>
		<connectStart public="1" set="null"><x path="Int"/></connectStart>
		<domComplete public="1" set="null"><x path="Int"/></domComplete>
		<domContentLoadedEventEnd public="1" set="null"><x path="Int"/></domContentLoadedEventEnd>
		<domContentLoadedEventStart public="1" set="null"><x path="Int"/></domContentLoadedEventStart>
		<domInteractive public="1" set="null"><x path="Int"/></domInteractive>
		<domLoading public="1" set="null"><x path="Int"/></domLoading>
		<domainLookupEnd public="1" set="null"><x path="Int"/></domainLookupEnd>
		<domainLookupStart public="1" set="null"><x path="Int"/></domainLookupStart>
		<fetchStart public="1" set="null"><x path="Int"/></fetchStart>
		<loadEventEnd public="1" set="null"><x path="Int"/></loadEventEnd>
		<loadEventStart public="1" set="null"><x path="Int"/></loadEventStart>
		<navigationStart public="1" set="null"><x path="Int"/></navigationStart>
		<redirectEnd public="1" set="null"><x path="Int"/></redirectEnd>
		<redirectStart public="1" set="null"><x path="Int"/></redirectStart>
		<requestStart public="1" set="null"><x path="Int"/></requestStart>
		<responseEnd public="1" set="null"><x path="Int"/></responseEnd>
		<responseStart public="1" set="null"><x path="Int"/></responseStart>
		<secureConnectionStart public="1" set="null"><x path="Int"/></secureConnectionStart>
		<unloadEventEnd public="1" set="null"><x path="Int"/></unloadEventEnd>
		<unloadEventStart public="1" set="null"><x path="Int"/></unloadEventStart>
		<meta><m n=":native"><e>"PerformanceTiming"</e></m></meta>
	</class>
	<class path="js.html.Point" params="" file="/usr/lib/haxe/std/js/html/Point.hx" extern="1">
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<new public="1" set="method">
			<f a="?arg0:?arg1">
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Creates a new <code>Point</code> object.</p>
<pre>let p = new Point(x, y);
</pre>
<p>The new point, <code>p</code>, has the specified X&nbsp;and Y&nbsp;coordinates.</p>]]></haxe_doc>
		</new>
		<haxe_doc><![CDATA[The <code>Point</code> class offers methods for performing common geometry operations on two dimensional points.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_code_modules/Geometry.jsm/Point">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Point"</e></m></meta>
	</class>
	<typedef path="js.html.PositionCallback" params="" file="/usr/lib/haxe/std/js/html/PositionCallback.hx"><f a="">
	<c path="js.html.Geoposition"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.PositionError" params="" file="/usr/lib/haxe/std/js/html/PositionError.hx" extern="1">
		<PERMISSION_DENIED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></PERMISSION_DENIED>
		<POSITION_UNAVAILABLE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></POSITION_UNAVAILABLE>
		<TIMEOUT public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></TIMEOUT>
		<code public="1" set="null"><x path="Int"/></code>
		<message public="1" set="null"><c path="String"/></message>
		<meta><m n=":native"><e>"PositionError"</e></m></meta>
	</class>
	<typedef path="js.html.PositionErrorCallback" params="" file="/usr/lib/haxe/std/js/html/PositionErrorCallback.hx"><f a="">
	<c path="js.html.PositionError"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.PreElement" params="" file="/usr/lib/haxe/std/js/html/PreElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<width public="1"><x path="Int"/></width>
		<wrap public="1"><x path="Bool"/></wrap>
		<haxe_doc><![CDATA[This element represents preformatted text. Text within this element is typically displayed in a non-proportional font exactly as it is laid out in the file. Whitespaces inside this element are displayed as typed.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/pre">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLPreElement"</e></m></meta>
	</class>
	<class path="js.html.ProcessingInstruction" params="" file="/usr/lib/haxe/std/js/html/ProcessingInstruction.hx" extern="1">
		<extends path="js.html.Node"/>
		<data public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</data>
		<sheet public="1" set="null"><c path="js.html.StyleSheet"/></sheet>
		<target public="1" set="null"><c path="String"/></target>
		<haxe_doc><![CDATA[<p>A processing instruction provides an opportunity for application-specific instructions to be embedded within XML and which can be ignored by XML processors which do not support processing their instructions (outside of their having a place in the DOM).</p>
<p>A Processing instruction is distinct from a <a title="en/XML/XML_Declaration" rel="internal" href="https://developer.mozilla.org/en/XML/XML_Declaration" class="new ">XML Declaration</a> which is used for other information about the document such as encoding and which appear (if it does) as the first item in the document.</p>
<p>User-defined processing instructions cannot begin with 'xml', as these are reserved (e.g., as used in &lt;?<a title="en/XML/xml-stylesheet" rel="internal" href="https://developer.mozilla.org/en/XML/xml-stylesheet" class="new ">xml-stylesheet</a>&nbsp;?&gt;).</p>
<p>Also inherits methods and properties from <a class="internal" title="En/DOM/Node" rel="internal" href="/api/js/html/Node"><code>Node</code></a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/ProcessingInstruction">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ProcessingInstruction"</e></m></meta>
	</class>
	<class path="js.html.ProgressElement" params="" file="/usr/lib/haxe/std/js/html/ProgressElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<labels public="1" set="null"><c path="js.html.NodeList"/></labels>
		<max public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[This attribute describes how much work the task indicated by the <code>progress</code> element requires. Setter throws DOMException.]]></haxe_doc>
		</max>
		<position public="1" set="null"><x path="Float"/></position>
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<dl><dd>This attribute specifies how much of the task that has been completed. If there is no <code>value</code> attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take.</dd>
</dl>
<p>You can use the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/orient">orient</a></code>
 property to specify whether the progress bar should be rendered horizontally (the default) or vertically. The <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/%3Aindeterminate">:indeterminate</a></code>
 pseudo-class can be used to match against indeterminate progress bars.</p> Setter throws DOMException.]]></haxe_doc>
		</value>
		<haxe_doc><![CDATA[The HTML <em>progress</em> (<code>&lt;progress&gt;</code>) element is used to view the completion progress of a task. While the specifics of how it's displayed is left up to the browser developer, it's typically displayed as a progress bar.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/progress">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLProgressElement"</e></m></meta>
	</class>
	<class path="js.html.QuoteElement" params="" file="/usr/lib/haxe/std/js/html/QuoteElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<cite public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/blockquote#attr-cite">cite</a></code>
 HTML attribute, containing a URL for the source of the quotation.]]></haxe_doc>
		</cite>
		<haxe_doc><![CDATA[DOM quote objects expose the <a class=" external" title="http://www.w3.org/TR/html5/grouping-content.html#htmlquoteelement" rel="external" href="http://www.w3.org/TR/html5/grouping-content.html#htmlquoteelement" target="_blank">HTMLQuoteElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-70319763" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-70319763" target="_blank"><code>HTMLQuoteElement</code></a>) interface, which provides special properties&nbsp; (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating quote elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLQuoteElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLQuoteElement"</e></m></meta>
	</class>
	<class path="js.html.Range" params="" file="/usr/lib/haxe/std/js/html/Range.hx" extern="1">
		<END_TO_END public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></END_TO_END>
		<END_TO_START public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></END_TO_START>
		<NODE_AFTER public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></NODE_AFTER>
		<NODE_BEFORE public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></NODE_BEFORE>
		<NODE_BEFORE_AND_AFTER public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></NODE_BEFORE_AND_AFTER>
		<NODE_INSIDE public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></NODE_INSIDE>
		<START_TO_END public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></START_TO_END>
		<START_TO_START public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></START_TO_START>
		<collapsed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Returns a&nbsp;<code>boolean</code>&nbsp;indicating whether the range's start and end points are at the same position. Getter throws DOMException.]]></haxe_doc>
		</collapsed>
		<commonAncestorContainer public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc><![CDATA[Returns the deepest&nbsp;<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node">Node</a></code>
&nbsp;that contains the startContainer and endContainer Nodes. Getter throws DOMException.]]></haxe_doc>
		</commonAncestorContainer>
		<endContainer public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc><![CDATA[Returns the&nbsp;<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node">Node</a></code>
&nbsp;within which the Range ends. Getter throws DOMException.]]></haxe_doc>
		</endContainer>
		<endOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a number representing where in the endContainer the Range ends. Getter throws DOMException.</haxe_doc>
		</endOffset>
		<startContainer public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc><![CDATA[Returns the&nbsp;<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Node">Node</a></code>
&nbsp;within which the Range starts. Getter throws DOMException.]]></haxe_doc>
		</startContainer>
		<startOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a number representing where in the startContainer the Range starts. Getter throws DOMException.</haxe_doc>
		</startOffset>
		<cloneContents public="1" set="method"><f a=""><c path="js.html.DocumentFragment"/></f></cloneContents>
		<cloneRange public="1" set="method"><f a=""><c path="js.html.Range"/></f></cloneRange>
		<collapse public="1" set="method"><f a="toStart">
	<x path="Bool"/>
	<x path="Void"/>
</f></collapse>
		<compareBoundaryPoints public="1" set="method"><f a="how:sourceRange">
	<x path="Int"/>
	<c path="js.html.Range"/>
	<x path="Int"/>
</f></compareBoundaryPoints>
		<compareNode public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Int"/>
</f></compareNode>
		<comparePoint public="1" set="method"><f a="refNode:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Int"/>
</f></comparePoint>
		<createContextualFragment public="1" set="method"><f a="html">
	<c path="String"/>
	<c path="js.html.DocumentFragment"/>
</f></createContextualFragment>
		<deleteContents public="1" set="method"><f a=""><x path="Void"/></f></deleteContents>
		<detach public="1" set="method"><f a=""><x path="Void"/></f></detach>
		<expand public="1" set="method"><f a="unit">
	<c path="String"/>
	<x path="Void"/>
</f></expand>
		<extractContents public="1" set="method"><f a=""><c path="js.html.DocumentFragment"/></f></extractContents>
		<getBoundingClientRect public="1" set="method"><f a=""><c path="js.html.ClientRect"/></f></getBoundingClientRect>
		<getClientRects public="1" set="method"><f a=""><c path="js.html.ClientRectList"/></f></getClientRects>
		<insertNode public="1" set="method"><f a="newNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></insertNode>
		<intersectsNode public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Bool"/>
</f></intersectsNode>
		<isPointInRange public="1" set="method"><f a="refNode:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Bool"/>
</f></isPointInRange>
		<selectNode public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></selectNode>
		<selectNodeContents public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></selectNodeContents>
		<setEnd public="1" set="method"><f a="refNode:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setEnd>
		<setEndAfter public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></setEndAfter>
		<setEndBefore public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></setEndBefore>
		<setStart public="1" set="method"><f a="refNode:offset">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setStart>
		<setStartAfter public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></setStartAfter>
		<setStartBefore public="1" set="method"><f a="refNode">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></setStartBefore>
		<surroundContents public="1" set="method"><f a="newParent">
	<c path="js.html.Node"/>
	<x path="Void"/>
</f></surroundContents>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<haxe_doc><![CDATA[<p>The <code>Range</code> object represents a fragment of a document that can contain nodes and parts of text nodes in a given document.</p>
<p>A range can be created using the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document.createRange">Document.createRange</a></code>
&nbsp;method of the&nbsp;<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
&nbsp;object. Range objects can also be retrieved by using the <code><a rel="internal" href="https://developer.mozilla.org/Article_not_found?uri=en/DOM/Selection.getRangeAt" class="new">Selection.getRangeAt</a></code>
&nbsp;method of the&nbsp;<code><a rel="custom" href="/api/js/html/DOMSelection">Selection</a></code>
&nbsp;object.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/range">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Range"</e></m></meta>
	</class>
	<typedef path="js.html.RequestAnimationFrameCallback" params="" file="/usr/lib/haxe/std/js/html/RequestAnimationFrameCallback.hx"><f a="">
	<x path="Float"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.Screen" params="" file="/usr/lib/haxe/std/js/html/Screen.hx" extern="1">
		<availHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Specifies the height of the screen, in pixels, minus permanent or semipermanent user interface features displayed by the operating system, such as the Taskbar on Windows.</haxe_doc>
		</availHeight>
		<availLeft public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the first available pixel available from the left side of the screen.</haxe_doc>
		</availLeft>
		<availTop public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Specifies the y-coordinate of the first pixel that is not allocated to permanent or semipermanent user interface features.</haxe_doc>
		</availTop>
		<availWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the amount of horizontal space in pixels available to the window.</haxe_doc>
		</availWidth>
		<colorDepth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the color depth of the screen.</haxe_doc>
		</colorDepth>
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the height of the screen in pixels.</haxe_doc>
		</height>
		<pixelDepth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Gets the bit depth of the screen.</haxe_doc>
		</pixelDepth>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the width of the screen.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[Returns a reference to the screen object associated with the window.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/window.screen">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Screen"</e></m></meta>
	</class>
	<class path="js.html.ScriptElement" params="" file="/usr/lib/haxe/std/js/html/ScriptElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<async public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Set this Boolean attribute to indicate that the browser should, if possible, execute the script asynchronously. It has no effect on inline scripts (i.e., scripts that don't have the <strong>src</strong> attribute). In older browsers that don't support the <strong>async</strong> attribute, parser-inserted scripts block the parser; script-inserted scripts execute asynchronously in IE and WebKit, but synchronously in Opera and pre-4.0 Firefox. In Firefox 4.0, the <code>async</code> DOM&nbsp;property defaults to <code>true</code> for script-created scripts, so the default behavior matches the behavior of IE&nbsp;and WebKit. To request script-inserted external scripts be executed in the insertion order in browsers where the <code>document.createElement("script").async</code> evaluates to <code>true</code> (such as Firefox 4.0), set <code>.async=false</code> on the scripts you want to maintain order. Never call <code>document.write()</code> from an <code>async</code> script. In Gecko 1.9.2, calling <code>document.write()</code> has an unpredictable effect. In Gecko 2.0, calling <code>document.write()</code> from an <code>async</code> script has no effect (other than printing a warning to the error console).]]></haxe_doc>
		</async>
		<charset public="1"><c path="String"/></charset>
		<crossOrigin public="1"><c path="String"/></crossOrigin>
		<defer public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed. Since this feature hasn't yet been implemented by all other major browsers, authors should not assume that the script’s execution will actually be deferred. Never call <code>document.write()</code> from a <code>defer</code> script (since Gecko 1.9.2, this will blow away the document). The <code>defer</code> attribute shouldn't be used on scripts that don't have the <code>src</code> attribute. Since Gecko 1.9.2, the <code>defer</code> attribute is ignored on scripts that don't have the <code>src</code> attribute. However, in Gecko 1.9.1 even inline scripts are deferred if the <code>defer</code> attribute is set.]]></haxe_doc>
		</defer>
		<event public="1"><c path="String"/></event>
		<htmlFor public="1"><c path="String"/></htmlFor>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute specifies the <abbr>URI</abbr> of an external script; this can be used as an alternative to embedding a script directly within a document. <code>script</code> elements with an <code>src</code> attribute specified should not have a script embedded within its tags.]]></haxe_doc>
		</src>
		<text public="1"><c path="String"/></text>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute identifies the scripting language of code embedded within a <code>script</code> element or referenced via the element’s <code>src</code> attribute. This is specified as a <abbr title="Multi-purpose Internet Mail Extensions">MIME</abbr> type; examples of supported <abbr title="Multi-purpose Internet Mail Extensions">MIME</abbr> types include <code>text/javascript</code>, <code>text/ecmascript</code>, <code>application/javascript</code>, and <code>application/ecmascript</code>. If this attribute is absent, the script is treated as JavaScript.]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[<p>The <code>script</code> element is used to embed or reference an executable script within an <abbr>HTML</abbr> or <abbr>XHTML</abbr> document.</p>
<p>Scripts without <code>async</code> or <code>defer</code> attributes are fetched and executed immediately, before the browser continues to parse the page.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/En/HTML/Element/Script">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLScriptElement"</e></m></meta>
	</class>
	<class path="js.html.ScriptProfile" params="" file="/usr/lib/haxe/std/js/html/ScriptProfile.hx" extern="1">
		<head public="1" set="null"><c path="js.html.ScriptProfileNode"/></head>
		<title public="1" set="null"><c path="String"/></title>
		<uid public="1" set="null"><x path="Int"/></uid>
		<meta><m n=":native"><e>"ScriptProfile"</e></m></meta>
	</class>
	<class path="js.html.ScriptProfileNode" params="" file="/usr/lib/haxe/std/js/html/ScriptProfileNode.hx" extern="1">
		<callUID public="1" set="null"><x path="Int"/></callUID>
		<functionName public="1" set="null"><c path="String"/></functionName>
		<lineNumber public="1" set="null"><x path="Int"/></lineNumber>
		<numberOfCalls public="1" set="null"><x path="Int"/></numberOfCalls>
		<selfTime public="1" set="null"><x path="Float"/></selfTime>
		<totalTime public="1" set="null"><x path="Float"/></totalTime>
		<url public="1" set="null"><c path="String"/></url>
		<visible public="1" set="null"><x path="Bool"/></visible>
		<children public="1" set="method"><f a=""><c path="Array"><c path="js.html.ScriptProfileNode"/></c></f></children>
		<meta><m n=":native"><e>"ScriptProfileNode"</e></m></meta>
	</class>
	<class path="js.html.SelectElement" params="" file="/usr/lib/haxe/std/js/html/SelectElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-autofocus">autofocus</a></code>
 HTML attribute, which indicates whether the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</autofocus>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-disabled">disabled</a></code>
 HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks.]]></haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[The form that this element is associated with. If this element is a descendant of a form element, then this attribute is the ID of that form element. If the element is not a descendant of a form element, then: <ul> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> The attribute can be the ID of any form element in the same document.</li> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> The attribute is null.</li> </ul> <strong>Read only.</strong>]]></haxe_doc>
		</form>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc>A list of label elements associated with this select element.</haxe_doc>
		</labels>
		<length public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option">&lt;option&gt;</a></code>
 elements in this <code>select</code> element. Setter throws DOMException.]]></haxe_doc>
		</length>
		<multiple public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-multiple">multiple</a></code>
 HTML attribute, whichindicates whether multiple items can be selected.]]></haxe_doc>
		</multiple>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-name">name</a></code>
 HTML attribute, containing the name of this control used by servers and DOM search functions.]]></haxe_doc>
		</name>
		<options public="1" set="null">
			<c path="js.html.HTMLOptionsCollection"/>
			<haxe_doc><![CDATA[The set of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option">&lt;option&gt;</a></code>
 elements contained by this element. <strong>Read only.</strong>]]></haxe_doc>
		</options>
		<required public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-required">required</a></code>
 HTML attribute, which indicates whether the user is required to select a value before submitting the form. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</required>
		<selectedIndex public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The index of the first selected <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/option">&lt;option&gt;</a></code>
 element.]]></haxe_doc>
		</selectedIndex>
		<selectedOptions public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[The set of options that are selected. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span>]]></haxe_doc>
		</selectedOptions>
		<size public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/select#attr-size">size</a></code>
 HTML attribute, which contains the number of visible items in the control. The default is 1, 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> unless <strong>multiple</strong> is true, in which case it is 4.]]></haxe_doc>
		</size>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The form control's type. When <strong>multiple</strong> is true, it returns <code>select-multiple</code>; otherwise, it returns <code>select-one</code>.<strong>Read only.</strong>]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.<strong>Read only.</strong> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc><![CDATA[The validity states that this control is in. <strong>Read only.</strong> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc>The value of this form control, that is, of the first selected option.</haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Indicates whether the button is a candidate for constraint validation. It is false if any conditions bar it from constraint validation. <strong>Read only.</strong> 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> 
<span title="(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
">Requires Gecko 2.0</span>]]></haxe_doc>
		</willValidate>
		<add public="1" set="method"><f a="element:before">
	<c path="js.html.Element"/>
	<c path="js.html.Element"/>
	<x path="Void"/>
</f></add>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Node"/>
</f></namedItem>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[<code>DOM select</code> elements share all of the properties and methods of other HTML elements described in the <code><a rel="custom" href="/api/js/html/Element">element</a></code>
 section. They also have the specialized interface <a class="external" title="http://dev.w3.org/html5/spec/the-button-element.html#htmlselectelement" rel="external" href="http://dev.w3.org/html5/spec/the-button-element.html#htmlselectelement" target="_blank">HTMLSelectElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class="external" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-94282980" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-94282980" target="_blank">HTMLSelectElement</a>).<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLSelectElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLSelectElement"</e></m></meta>
	</class>
	<class path="js.html.ShadowElement" params="" file="/usr/lib/haxe/std/js/html/ShadowElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<resetStyleInheritance public="1"><x path="Bool"/></resetStyleInheritance>
		<meta><m n=":native"><e>"HTMLShadowElement"</e></m></meta>
	</class>
	<class path="js.html.SourceElement" params="" file="/usr/lib/haxe/std/js/html/SourceElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<media public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/source#attr-media">media</a></code>
 HTML&nbsp;attribute, containing the intended type of the media resource.]]></haxe_doc>
		</media>
		<src public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/source#attr-src">src</a></code>
 HTML&nbsp;attribute, containing the URL&nbsp;for the media resource.]]></haxe_doc>
		</src>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/source#attr-type">type</a></code>
 HTML&nbsp;attribute, containing the type of the media resource.]]></haxe_doc>
		</type>
		<meta><m n=":native"><e>"HTMLSourceElement"</e></m></meta>
	</class>
	<class path="js.html.SpanElement" params="" file="/usr/lib/haxe/std/js/html/SpanElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<haxe_doc><![CDATA[This HTML element is a generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the <strong>class</strong> or <strong>id</strong> attributes), or because they share attribute values, such as <strong>lang</strong>. It should be used only when no other semantic element is appropriate. &lt;span&gt; is very much like a <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/div">&lt;div&gt;</a></code>
 element, but <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/div">&lt;div&gt;</a></code>
 is a block-level element whereas a &lt;span&gt; is an inline element.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/span">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLSpanElement"</e></m></meta>
	</class>
	<class path="js.html.Storage" params="" file="/usr/lib/haxe/std/js/html/Storage.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Getter throws DOMException.</haxe_doc>
		</length>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<getItem public="1" set="method"><f a="key">
	<c path="String"/>
	<c path="String"/>
</f></getItem>
		<key public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></key>
		<removeItem public="1" set="method"><f a="key">
	<c path="String"/>
	<x path="Void"/>
</f></removeItem>
		<setItem public="1" set="method"><f a="key:data">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setItem>
		<haxe_doc><![CDATA[<p><strong>Storage</strong> is a <a class="external" rel="external" href="http://www.sqlite.org/" title="http://www.sqlite.org/" target="_blank">SQLite</a> database API. It is available to trusted callers, meaning extensions and Firefox components only.</p>
<p>The API is currently "unfrozen", which means it is subject to change at any time; in fact, it has changed somewhat with each release of Firefox since it was introduced, and will likely continue to do so for a while.</p>
<div class="note"><strong>Note:</strong> Storage is not the same as the <a title="en/DOM/Storage" rel="internal" href="https://developer.mozilla.org/en/DOM/Storage">DOM:Storage</a> feature which can be used by web pages to store persistent data or the <a title="en/Session_store_API" rel="internal" href="https://developer.mozilla.org/en/Session_store_API">Session store API</a> (an <a title="en/XPCOM" rel="internal" href="https://developer.mozilla.org/en/XPCOM">XPCOM</a> storage utility for use by extensions).</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Storage">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Storage"</e></m></meta>
	</class>
	<class path="js.html.StorageInfo" params="" file="/usr/lib/haxe/std/js/html/StorageInfo.hx" extern="1">
		<PERSISTENT public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></PERSISTENT>
		<TEMPORARY public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></TEMPORARY>
		<queryUsageAndQuota public="1" set="method"><f a="storageType:?usageCallback:?errorCallback">
	<x path="Int"/>
	<t path="js.html.StorageInfoUsageCallback"/>
	<t path="js.html.StorageInfoErrorCallback"/>
	<x path="Void"/>
</f></queryUsageAndQuota>
		<requestQuota public="1" set="method"><f a="storageType:newQuotaInBytes:?quotaCallback:?errorCallback">
	<x path="Int"/>
	<x path="Int"/>
	<t path="js.html.StorageInfoQuotaCallback"/>
	<t path="js.html.StorageInfoErrorCallback"/>
	<x path="Void"/>
</f></requestQuota>
		<meta><m n=":native"><e>"StorageInfo"</e></m></meta>
	</class>
	<typedef path="js.html.StorageInfoErrorCallback" params="" file="/usr/lib/haxe/std/js/html/StorageInfoErrorCallback.hx"><f a="">
	<c path="js.html.DOMCoreException"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.StorageInfoQuotaCallback" params="" file="/usr/lib/haxe/std/js/html/StorageInfoQuotaCallback.hx"><f a="">
	<x path="Int"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.StorageInfoUsageCallback" params="" file="/usr/lib/haxe/std/js/html/StorageInfoUsageCallback.hx"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.StringCallback" params="" file="/usr/lib/haxe/std/js/html/StringCallback.hx"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.StyleElement" params="" file="/usr/lib/haxe/std/js/html/StyleElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>Returns true if the stylesheet is disabled, and false if not</haxe_doc>
		</disabled>
		<media public="1">
			<c path="String"/>
			<haxe_doc>Specifies the intended destination medium for style information.</haxe_doc>
		</media>
		<scoped public="1"><x path="Bool"/></scoped>
		<sheet public="1" set="null"><c path="js.html.StyleSheet"/></sheet>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Returns the type of style being applied by this statement.</haxe_doc>
		</type>
		<haxe_doc><![CDATA[See <a title="en/DOM/Using_dynamic_styling_information" rel="internal" href="https://developer.mozilla.org/en/DOM/Using_dynamic_styling_information">Using dynamic styling information</a> for an overview of the objects used to manipulate specified CSS properties using the DOM.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLStyleElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLStyleElement"</e></m></meta>
	</class>
	<class path="js.html.StyleMedia" params="" file="/usr/lib/haxe/std/js/html/StyleMedia.hx" extern="1">
		<type public="1" set="null"><c path="String"/></type>
		<matchMedium public="1" set="method"><f a="mediaquery">
	<c path="String"/>
	<x path="Bool"/>
</f></matchMedium>
		<meta><m n=":native"><e>"StyleMedia"</e></m></meta>
	</class>
	<class path="js.html.StyleSheetList" params="" file="/usr/lib/haxe/std/js/html/StyleSheetList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.StyleSheet"/>
</f></item>
		<meta><m n=":native"><e>"StyleSheetList"</e></m></meta>
	</class>
	<class path="js.html.TableCaptionElement" params="" file="/usr/lib/haxe/std/js/html/TableCaptionElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Enumerated attribute indicating alignment of the caption with respect to the table.</haxe_doc>
		</align>
		<haxe_doc><![CDATA[DOM table caption elements expose the <a title="http://www.w3.org/TR/html5/tabular-data.html#htmltablecaptionelement" class=" external" rel="external nofollow" href="http://www.w3.org/TR/html5/tabular-data.html#htmltablecaptionelement" target="_blank">HTMLTableCaptionElement</a> (or <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <a class=" external" rel="external nofollow" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-12035137" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-12035137" target="_blank"><code>HTMLTableCaptionElement</code></a>) interface, which provides special properties (beyond the regular <a rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating definition list elements. In <span><a rel="custom nofollow" href="https://developer.mozilla.org/en/HTML/HTML5">HTML 5</a></span>, this interface inherits from HTMLElement, but defines no additional members.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTableCaptionElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableCaptionElement"</e></m></meta>
	</class>
	<class path="js.html.TableCellElement" params="" file="/usr/lib/haxe/std/js/html/TableCellElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<abbr public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute contains a short abbreviated description of the content of the cell. Some user-agents, such as speech readers, may present this description before the content itself. <div class="note"><strong>Note: </strong>Do not use this attribute as it is obsolete in the latest standard: instead either consider starting the cell content by an independent abbreviated content itself or use the abbreviated content as the cell content and use the long content as the description of the cell by putting it in the <strong>title</strong> attribute.</div>]]></haxe_doc>
		</abbr>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are: <ul> <li><span>left</span>, aligning the content to the left of the cell</li> <li><span>center</span>, centering the content in the cell</li> <li><span>right</span>, aligning the content to the right of the cell</li> <li><span>justify</span>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><span>char</span>, aligning the textual content on a special character with a minimal offset, defined by the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/td#attr-char">char</a></code>
 and 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/td#attr-charoff">charoff</a></code>
 attributes 
<span class="unimplementedInlineTemplate">Unimplemented (see<a rel="external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=2212" class="external" title="">
bug 2212</a>
)</span>
.</li> </ul> <p>If this attribute is not set,&nbsp; the <span>left</span> value is assumed.</p> <div class="note"><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard. <ul> <li>To achieve the same effect as the <span>left</span>, <span>center</span>, <span>right</span> or <span>justify</span> values, use the CSS <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-align">text-align</a></code>
 property on it.</li> <li>To achieve the same effect as the <span>char</span> value, in CSS3, you can use the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/td#attr-char">char</a></code>
 as the value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-align">text-align</a></code>
 property 
<span class="unimplementedInlineTemplate">Unimplemented</span>
.</li> </ul> </div>]]></haxe_doc>
		</align>
		<axis public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attribute contains a list of space-separated strings. Each string is the ID of a group of cells that this header applies to. <div class="note"><strong>Note: </strong>Do not use this attribute as it is obsolete in the latest standard: instead use the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/td#attr-scope">scope</a></code>
 attribute.</div>]]></haxe_doc>
		</axis>
		<bgColor public="1"><c path="String"/></bgColor>
		<cellIndex public="1" set="null"><x path="Int"/></cellIndex>
		<ch public="1"><c path="String"/></ch>
		<chOff public="1"><c path="String"/></chOff>
		<colSpan public="1"><x path="Int"/></colSpan>
		<headers public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This attributes a list of space-separated strings, each corresponding to the <strong>id</strong> attribute of the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/th">&lt;th&gt;</a></code>
 elements that applies to this element.]]></haxe_doc>
		</headers>
		<height public="1"><c path="String"/></height>
		<noWrap public="1"><x path="Bool"/></noWrap>
		<rowSpan public="1"><x path="Int"/></rowSpan>
		<scope public="1"><c path="String"/></scope>
		<vAlign public="1"><c path="String"/></vAlign>
		<width public="1"><c path="String"/></width>
		<haxe_doc><![CDATA[The <em>HTML Table Cell Element</em> (<code>&lt;td&gt;</code>) defines a cell that content data.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/td">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableCellElement"</e></m></meta>
	</class>
	<class path="js.html.TableColElement" params="" file="/usr/lib/haxe/std/js/html/TableColElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Indicates the horizontal alignment of the cell data in the column.</haxe_doc>
		</align>
		<ch public="1">
			<c path="String"/>
			<haxe_doc>Alignment character for cell data.</haxe_doc>
		</ch>
		<chOff public="1">
			<c path="String"/>
			<haxe_doc>Offset for the alignment character.</haxe_doc>
		</chOff>
		<span public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/col#attr-span">span</a></code>
 HTML&nbsp;attribute, indicating the number of columns to apply this object's attributes to. Must be a positive integer.]]></haxe_doc>
		</span>
		<vAlign public="1">
			<c path="String"/>
			<haxe_doc>Indicates the vertical alignment of the cell data in the column.</haxe_doc>
		</vAlign>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Default column width.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[DOM table column objects (which may correspond to <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/col">&lt;col&gt;</a></code>
&nbsp;or <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/colgroup">&lt;colgroup&gt;</a></code>
 HTML elements) expose the <a target="_blank" href="http://www.w3.org/TR/html5/tabular-data.html#htmltablecolelement" rel="external nofollow" class=" external" title="http://www.w3.org/TR/html5/tabular-data.html#htmltablecolelement">HTMLTableColElement</a> (or <span><a href="https://developer.mozilla.org/en/HTML" rel="custom nofollow">HTML 4</a></span> <a target="_blank" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-84150186" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-84150186" rel="external nofollow" class=" external"><code>HTMLTableColElement</code></a>) interface, which provides special properties (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object interface they also have available to them by inheritance) for manipulating table column elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTableColElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableColElement"</e></m></meta>
	</class>
	<class path="js.html.TableElement" params="" file="/usr/lib/haxe/std/js/html/TableElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>align</b> gets/sets the alignment of the table.]]></haxe_doc>
		</align>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>bgColor</b> gets/sets the background color of the table.]]></haxe_doc>
		</bgColor>
		<border public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>border</b> gets/sets the table border.]]></haxe_doc>
		</border>
		<caption public="1">
			<c path="js.html.TableCaptionElement"/>
			<haxe_doc><![CDATA[<b>caption</b> returns the table caption.
 Setter throws DOMException.]]></haxe_doc>
		</caption>
		<cellPadding public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>cellPadding</b> gets/sets the cell padding.]]></haxe_doc>
		</cellPadding>
		<cellSpacing public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>cellSpacing</b> gets/sets the spacing around the table.]]></haxe_doc>
		</cellSpacing>
		<frame public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>frame</b> specifies which sides of the table have borders.]]></haxe_doc>
		</frame>
		<rows public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[<b>rows</b> returns the rows in the table.]]></haxe_doc>
		</rows>
		<rules public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>rules</b> specifies which interior borders are visible.]]></haxe_doc>
		</rules>
		<summary public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>summary</b> gets/sets the table summary.]]></haxe_doc>
		</summary>
		<tBodies public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc><![CDATA[<b>tBodies</b> returns the table bodies.]]></haxe_doc>
		</tBodies>
		<tFoot public="1">
			<c path="js.html.TableSectionElement"/>
			<haxe_doc><![CDATA[<b>tFoot</b> returns the table footer.
 Setter throws DOMException.]]></haxe_doc>
		</tFoot>
		<tHead public="1">
			<c path="js.html.TableSectionElement"/>
			<haxe_doc><![CDATA[<b>tHead</b> returns the table head.
 Setter throws DOMException.]]></haxe_doc>
		</tHead>
		<width public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<b>width</b> gets/sets the width of the table.]]></haxe_doc>
		</width>
		<createCaption public="1" set="method"><f a=""><c path="js.html.Element"/></f></createCaption>
		<createTBody public="1" set="method"><f a=""><c path="js.html.Element"/></f></createTBody>
		<createTFoot public="1" set="method"><f a=""><c path="js.html.Element"/></f></createTFoot>
		<createTHead public="1" set="method"><f a=""><c path="js.html.Element"/></f></createTHead>
		<deleteCaption public="1" set="method"><f a=""><x path="Void"/></f></deleteCaption>
		<deleteRow public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteRow>
		<deleteTFoot public="1" set="method"><f a=""><x path="Void"/></f></deleteTFoot>
		<deleteTHead public="1" set="method"><f a=""><x path="Void"/></f></deleteTHead>
		<insertRow public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Element"/>
</f></insertRow>
		<haxe_doc><![CDATA[<code>table</code> objects expose the <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-64060425" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-64060425" target="_blank">HTMLTableElement</a></code> interface, which provides special properties and methods (beyond the regular <a rel="internal" href="/api/js/html/Element" title="en/DOM/element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of tables in HTML.
<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTableElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableElement"</e></m></meta>
	</class>
	<class path="js.html.TableRowElement" params="" file="/usr/lib/haxe/std/js/html/TableRowElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<a title="en/DOM/tableRow.bgColor" rel="internal" href="https://developer.mozilla.org/en/DOM/tableRow.bgColor" class="new ">row.bgColor</a> 

<span class="deprecatedInlineTemplate" title="">Deprecated</span>]]></haxe_doc>
		</align>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>row.cells</haxe_doc>
		</bgColor>
		<cells public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>row.ch</haxe_doc>
		</cells>
		<ch public="1">
			<c path="String"/>
			<haxe_doc>row.chOff</haxe_doc>
		</ch>
		<chOff public="1">
			<c path="String"/>
			<haxe_doc>row.rowIndex</haxe_doc>
		</chOff>
		<rowIndex public="1" set="null">
			<x path="Int"/>
			<haxe_doc>row.sectionRowIndex</haxe_doc>
		</rowIndex>
		<sectionRowIndex public="1" set="null">
			<x path="Int"/>
			<haxe_doc>row.vAlign</haxe_doc>
		</sectionRowIndex>
		<vAlign public="1"><c path="String"/></vAlign>
		<deleteCell public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteCell>
		<insertCell public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Element"/>
</f></insertCell>
		<haxe_doc><![CDATA[DOM <code>table row</code> objects expose the <code><a class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6986576" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6986576" target="_blank">HTMLTableRowElement</a></code> interface, which provides special properties and methods (beyond the regular <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of rows in an HTML table.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTableRowElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableRowElement"</e></m></meta>
	</class>
	<class path="js.html.TableSectionElement" params="" file="/usr/lib/haxe/std/js/html/TableSectionElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are: <ul> <li><span>left</span>, aligning the content to the left of the cell</li> <li><span>center</span>, centering the content in the cell</li> <li><span>right</span>, aligning the content to the right of the cell</li> <li><span>justify</span>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><span>char</span>, aligning the textual content on a special character with a minimal offset, defined by the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/thead#attr-char">char</a></code>
 and 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/thead#attr-charoff">charoff</a></code>
 attributes 
<span class="unimplementedInlineTemplate">Unimplemented (see<a rel="external" href="https://bugzilla.mozilla.org/show_bug.cgi?id=2212" class="external" title="">
bug 2212</a>
)</span>
.</li> </ul> <p>If this attribute is not set,&nbsp; the <span>left</span> value is assumed.</p> <div class="note"><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard. <ul> <li>To achieve the same effect as the <span>left</span>, <span>center</span>, <span>right</span> or <span>justify</span> values, use the CSS <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-align">text-align</a></code>
 property on it.</li> <li>To achieve the same effect as the <span>char</span> value, in CSS3, you can use the value of the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/thead#attr-char">char</a></code>
 as the value of the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/text-align">text-align</a></code>
 property 
<span class="unimplementedInlineTemplate">Unimplemented</span>
.</li> </ul> </div>]]></haxe_doc>
		</align>
		<ch public="1"><c path="String"/></ch>
		<chOff public="1"><c path="String"/></chOff>
		<rows public="1" set="null"><c path="js.html.HTMLCollection"/></rows>
		<vAlign public="1"><c path="String"/></vAlign>
		<deleteRow public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteRow>
		<insertRow public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Element"/>
</f></insertRow>
		<haxe_doc><![CDATA[The <em>HTML Table Head Element</em> (<code>&lt;thead&gt;</code>) defines a set of rows defining the head of the columns of the table.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/thead">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableSectionElement"</e></m></meta>
	</class>
	<class path="js.html.TextAreaElement" params="" file="/usr/lib/haxe/std/js/html/TextAreaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-autofocus">autofocus</a></code>
 HTML&nbsp;attribute, indicating that the control should have input focus when the page loads]]></haxe_doc>
		</autofocus>
		<cols public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-cols">cols</a></code>
 HTML attribute, indicating the visible width of the text area.]]></haxe_doc>
		</cols>
		<defaultValue public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The control's default value, which behaves like the <strong><a title="en/DOM/element.textContent" rel="internal" href="https://developer.mozilla.org/En/DOM/Node.textContent">textContent</a></strong> property.]]></haxe_doc>
		</defaultValue>
		<dirName public="1"><c path="String"/></dirName>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-disabled">disabled</a></code>
 HTML attribute, indicating that the control is not available for interaction.]]></haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc><![CDATA[<p>The containing form element, if this element is in a form. If this element is not contained in a form element:</p> <ul> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> this can be the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form#attr-id">id</a></code>
 attribute of any <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/form">&lt;form&gt;</a></code>
 element in the same document.</li> <li>
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> this must be <code>null</code>.</li> </ul>]]></haxe_doc>
		</form>
		<labels public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc><![CDATA[A list of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/label">&lt;label&gt;</a></code>
 elements that are labels for this element.]]></haxe_doc>
		</labels>
		<maxLength public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-maxlength">maxlength</a></code>
 HTML&nbsp;attribute, indicating the maximum number of characters the user can enter. This constraint is evaluated only when the value changes. Setter throws DOMException.]]></haxe_doc>
		</maxLength>
		<name public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-name">name</a></code>
 HTML attribute, containing the name of the control.]]></haxe_doc>
		</name>
		<placeholder public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-placeholder">placeholder</a></code>
 HTML attribute, containing a hint to the user about what to enter in the control.]]></haxe_doc>
		</placeholder>
		<readOnly public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-readonly">readonly</a></code>
 HTML attribute, indicating that the user cannot modify the value of the control.]]></haxe_doc>
		</readOnly>
		<required public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-required">required</a></code>
 HTML attribute, indicating that the user must specify a value before submitting the form.]]></haxe_doc>
		</required>
		<rows public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-rows">rows</a></code>
 HTML attribute, indicating the number of visible text lines for the control.]]></haxe_doc>
		</rows>
		<selectionDirection public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[The direction in which selection occurred. This is "forward" if selection was performed in the start-to-end direction of the current locale, or "backward" for the opposite direction. This can also be "none"&nbsp;if the direction is unknown."]]></haxe_doc>
		</selectionDirection>
		<selectionEnd public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The index of the end of selected text. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> If no text is selected, contains the index of the character that follows the input cursor. On being set, the control behaves as if <strong>setSelectionRange</strong>() had been called with this as the second argument, and <strong>selectionStart</strong> as the first argument.]]></haxe_doc>
		</selectionEnd>
		<selectionStart public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The index of the beginning of selected text. 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML/HTML5">HTML5</a></span> If no text is selected, contains the index of the character that follows the input cursor. On being set, the control behaves as if <strong>setSelectionRange</strong>() had been called with this as the first argument, and <strong>selectionEnd</strong> as the second argument.]]></haxe_doc>
		</selectionStart>
		<textLength public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The codepoint length of the control's value.</haxe_doc>
		</textLength>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The string <code>textarea</code>.]]></haxe_doc>
		</type>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[A localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (<strong>willValidate</strong> is false), or it satisfies its constraints.]]></haxe_doc>
		</validationMessage>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>The validity states that this element is in.</haxe_doc>
		</validity>
		<value public="1">
			<c path="String"/>
			<haxe_doc>The raw value contained in the control.</haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether the element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.</haxe_doc>
		</willValidate>
		<wrap public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea#attr-wrap">wrap</a></code>
 HTML attribute, indicating how the control wraps text.]]></haxe_doc>
		</wrap>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<select public="1" set="method"><f a=""><x path="Void"/></f></select>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<setRangeText public="1" set="method">
			<f a="replacement:start:end:selectionMode">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><setRangeText public="1" set="method">
	<f a="replacement">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</setRangeText></overloads>
		</setRangeText>
		<setSelectionRange public="1" set="method"><f a="start:end:?direction">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></setSelectionRange>
		<haxe_doc><![CDATA[DOM <code>TextArea</code> objects expose the <a title="http://dev.w3.org/html5/spec/the-button-element.html#the-textarea-element" class=" external" rel="external" href="http://dev.w3.org/html5/spec/the-button-element.html#the-textarea-element" target="_blank">HTMLTextAreaElement</a> (or 
<span><a rel="custom" href="https://developer.mozilla.org/en/HTML">HTML 4</a></span> <code><a title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-24874179" class="external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-24874179" target="_blank">HTMLTextAreaElement</a></code>) interface, which provides special properties and methods (beyond the regular <a title="en/DOM/element" rel="internal" href="/api/js/html/Element">element</a> object interface they also have available to them by inheritance) for manipulating the layout and presentation of <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/textarea">&lt;textarea&gt;</a></code>
 elements.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTextAreaElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTextAreaElement"</e></m></meta>
	</class>
	<class path="js.html.TextMetrics" params="" file="/usr/lib/haxe/std/js/html/TextMetrics.hx" extern="1">
		<width public="1" set="null"><x path="Float"/></width>
		<haxe_doc><![CDATA[Returned by <a title="CanvasRenderingContext2D" rel="internal" href="https://developer.mozilla.org/CanvasRenderingContext2D" class="new ">CanvasRenderingContext2D</a>'s <a title="CanvasRenderingContext2D.measureText" rel="internal" href="https://developer.mozilla.org/CanvasRenderingContext2D.measureText" class="new ">measureText</a> method.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/TextMetrics">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"TextMetrics"</e></m></meta>
	</class>
	<class path="js.html.TextTrack" params="" file="/usr/lib/haxe/std/js/html/TextTrack.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<activeCues public="1" set="null"><c path="js.html.TextTrackCueList"/></activeCues>
		<cues public="1" set="null"><c path="js.html.TextTrackCueList"/></cues>
		<kind public="1" set="null"><c path="String"/></kind>
		<label public="1" set="null"><c path="String"/></label>
		<language public="1" set="null"><c path="String"/></language>
		<mode public="1"><c path="String"/></mode>
		<oncuechange public="1"><t path="js.html.EventListener"/></oncuechange>
		<addCue public="1" set="method"><f a="cue">
	<c path="js.html.TextTrackCue"/>
	<x path="Void"/>
</f></addCue>
		<removeCue public="1" set="method"><f a="cue">
	<c path="js.html.TextTrackCue"/>
	<x path="Void"/>
</f></removeCue>
		<meta><m n=":native"><e>"TextTrack"</e></m></meta>
	</class>
	<class path="js.html.TextTrackCue" params="" file="/usr/lib/haxe/std/js/html/TextTrackCue.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</align>
		<endTime public="1"><x path="Float"/></endTime>
		<id public="1"><c path="String"/></id>
		<line public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</line>
		<onenter public="1"><t path="js.html.EventListener"/></onenter>
		<onexit public="1"><t path="js.html.EventListener"/></onexit>
		<pauseOnExit public="1"><x path="Bool"/></pauseOnExit>
		<position public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</position>
		<size public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</size>
		<snapToLines public="1"><x path="Bool"/></snapToLines>
		<startTime public="1"><x path="Float"/></startTime>
		<text public="1"><c path="String"/></text>
		<track public="1" set="null"><c path="js.html.TextTrack"/></track>
		<vertical public="1">
			<c path="String"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</vertical>
		<getCueAsHTML public="1" set="method"><f a=""><c path="js.html.DocumentFragment"/></f></getCueAsHTML>
		<new public="1" set="method"><f a="startTime:endTime:text">
	<x path="Float"/>
	<x path="Float"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"TextTrackCue"</e></m></meta>
	</class>
	<class path="js.html.TextTrackCueList" params="" file="/usr/lib/haxe/std/js/html/TextTrackCueList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<getCueById public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="js.html.TextTrackCue"/>
</f></getCueById>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.TextTrackCue"/>
</f></item>
		<meta><m n=":native"><e>"TextTrackCueList"</e></m></meta>
	</class>
	<class path="js.html.TextTrackList" params="" file="/usr/lib/haxe/std/js/html/TextTrackList.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<length public="1" set="null"><x path="Int"/></length>
		<onaddtrack public="1"><t path="js.html.EventListener"/></onaddtrack>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.TextTrack"/>
</f></item>
		<meta><m n=":native"><e>"TextTrackList"</e></m></meta>
	</class>
	<class path="js.html.TimeRanges" params="" file="/usr/lib/haxe/std/js/html/TimeRanges.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of time ranges represented by the time range object. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<end public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Float"/>
</f></end>
		<start public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Float"/>
</f></start>
		<haxe_doc><![CDATA[<p>The <code>TimeRanges</code> interface is used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/audio">&lt;audio&gt;</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
&nbsp;elements.</p>
<p>A <code>TimeRanges</code> object includes one or more ranges of time, each specified by a starting and ending time offset. You reference each time range by using the <code>start()</code> and <code>end()</code> methods, passing the index number of the time range you want to retrieve.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/TimeRanges">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"TimeRanges"</e></m></meta>
	</class>
	<class path="js.html.TitleElement" params="" file="/usr/lib/haxe/std/js/html/TitleElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Gets or sets the text content of the document's title.</haxe_doc>
		</text>
		<haxe_doc><![CDATA[The <code>title</code> object exposes the <a target="_blank" class=" external" rel="external" href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-79243169" title="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-79243169">HTMLTitleElement</a> interface which contains the title for a document.&nbsp; This element inherits all of the properties and methods described in the <a title="en/DOM/element" class="internal" rel="internal" href="/api/js/html/Element">element</a> section.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLTitleElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTitleElement"</e></m></meta>
	</class>
	<class path="js.html.Touch" params="" file="/usr/lib/haxe/std/js/html/Touch.hx" extern="1">
		<clientX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X coordinate of the touch point relative to the viewport, not including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</clientX>
		<clientY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y coordinate of the touch point relative to the viewport, not including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</clientY>
		<force public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[The amount of pressure being applied to the surface by the user, as a float between 0.0 (no pressure) and 1.0 (maximum pressure). <strong>Read only.</strong>]]></haxe_doc>
		</force>
		<identifier public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[A unique identifier for this <code>Touch</code> object. A given touch (say, by a finger) will have the same identifier for the duration of its movement around the surface. This lets you ensure that you're tracking the same touch all the time. <strong>Read only.</strong>]]></haxe_doc>
		</identifier>
		<pageX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X coordinate of the touch point relative to the viewport, including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</pageX>
		<pageY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y coordinate of the touch point relative to the viewport, including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</pageY>
		<radiusX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X radius of the ellipse that most closely circumscribes the area of contact with the screen. The value is in pixels of the same scale as <code>screenX</code>. <strong>Read only.</strong>]]></haxe_doc>
		</radiusX>
		<radiusY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y radius of the ellipse that most closely circumscribes the area of contact with the screen. The value is in pixels of the same scale as <code>screenY</code>. <strong>Read only.</strong>]]></haxe_doc>
		</radiusY>
		<rotationAngle public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[The angle (in degrees)&nbsp;that the ellipse described by radiusX and radiusY must be rotated, clockwise, to most accurately cover the area of contact between the user and the surface. <strong>Read only.</strong>]]></haxe_doc>
		</rotationAngle>
		<screenX public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The X coordinate of the touch point relative to the screen, not including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</screenX>
		<screenY public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The Y coordinate of the touch point relative to the screen, not including any scroll offset. <strong>Read only.</strong>]]></haxe_doc>
		</screenY>
		<target public="1" set="null"><c path="js.html.EventTarget"/></target>
		<haxe_doc><![CDATA[A <code>Touch</code> object represents a single point of contact between the user and a touch-sensitive interface device (which may be, for example, a touchscreen or a trackpad).<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Touch">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Touch"</e></m></meta>
	</class>
	<class path="js.html.TouchEvent" params="" file="/usr/lib/haxe/std/js/html/TouchEvent.hx" extern="1">
		<extends path="js.html.UIEvent"/>
		<altKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[A Boolean value indicating whether or not the alt key was down when the touch event was fired. <strong>Read only.</strong>]]></haxe_doc>
		</altKey>
		<changedTouches public="1" set="null">
			<c path="js.html.TouchList"/>
			<haxe_doc><![CDATA[A <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TouchList">TouchList</a></code>
 of all the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Touch">Touch</a></code>
 objects representing individual points of contact whose states changed between the previous touch event and this one. <strong>Read only.</strong>]]></haxe_doc>
		</changedTouches>
		<ctrlKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[A Boolean value indicating whether or not the control key was down when the touch event was fired. <strong>Read only.</strong>]]></haxe_doc>
		</ctrlKey>
		<metaKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[A Boolean value indicating whether or not the meta key was down when the touch event was fired. <strong>Read only.</strong>]]></haxe_doc>
		</metaKey>
		<shiftKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[A Boolean value indicating whether or not the shift key was down when the touch event was fired. <strong>Read only.</strong>]]></haxe_doc>
		</shiftKey>
		<targetTouches public="1" set="null">
			<c path="js.html.TouchList"/>
			<haxe_doc><![CDATA[A <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TouchList">TouchList</a></code>
 of all the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Touch">Touch</a></code>
&nbsp;objects that are both currently in contact with the touch surface <strong>and</strong> were also started on the same element that is the target of the event. <strong>Read only.</strong>]]></haxe_doc>
		</targetTouches>
		<touches public="1" set="null">
			<c path="js.html.TouchList"/>
			<haxe_doc><![CDATA[A <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/TouchList">TouchList</a></code>
 of all the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Touch">Touch</a></code>
&nbsp;objects representing all current points of contact with the surface, regardless of target or changed status. <strong>Read only.</strong>]]></haxe_doc>
		</touches>
		<initTouchEvent public="1" set="method"><f a="touches:targetTouches:changedTouches:type:view:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey">
	<c path="js.html.TouchList"/>
	<c path="js.html.TouchList"/>
	<c path="js.html.TouchList"/>
	<c path="String"/>
	<c path="js.html.DOMWindow"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></initTouchEvent>
		<haxe_doc><![CDATA[<p>A <code>TouchEvent</code> represents an event sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth.</p>
<p>Touches are represented by the <code><a rel="custom" href="/api/js/html/Touch">Touch</a></code>
&nbsp;object; each touch is described by a position, size and shape, amount of pressure, and target element. Lists of touches are represented by <code><a rel="custom" href="/api/js/html/TouchList">TouchList</a></code>
 objects.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/TouchEvent">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"TouchEvent"</e></m></meta>
	</class>
	<class path="js.html.TouchList" params="" file="/usr/lib/haxe/std/js/html/TouchList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Touch">Touch</a></code>
&nbsp;objects in the <code>TouchList</code>. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Touch"/>
</f></item>
		<haxe_doc><![CDATA[A <code>TouchList</code> represents a list of all of the points of contact with a touch surface; for example, if the user has three fingers on the screen (or trackpad), the corresponding <code>TouchList</code> would have one <code><a rel="custom" href="/api/js/html/Touch">Touch</a></code>
 object for each finger, for a total of three entries.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/TouchList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"TouchList"</e></m></meta>
	</class>
	<class path="js.html.TrackElement" params="" file="/usr/lib/haxe/std/js/html/TrackElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<ERROR public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></ERROR>
		<LOADED public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></LOADED>
		<LOADING public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></LOADING>
		<NONE public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></NONE>
		<default_ public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This attribute indicates that the track should be enabled unless the user's preferences indicate that another track is more appropriate. This may only be used on one <code>track</code> element per media element.]]></haxe_doc>
		</default_>
		<get_default_ get="inline" set="null" line="44"><f a=""><x path="Bool"/></f></get_default_>
		<set_default_ get="inline" set="null" line="47"><f a="x">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_default_>
		<kind public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Kind of text track. The following keywords are allowed: <ul> <li>subtitles: A transcription or translation of the dialogue.</li> <li>captions: A transcription or translation of the dialogue or other sound effects. Suitable for users who are deaf or when the sound is muted.</li> <li>descriptions: Textual descriptions of the video content. Suitable for users who are blind.</li> <li>chapters: Chapter titles, intended to be used when the user is navigating the media resource.</li> <li>metadata: Tracks used by script. Not visible to the user.</li> </ul>]]></haxe_doc>
		</kind>
		<label public="1">
			<c path="String"/>
			<haxe_doc>A user-readable title of the text track Used by the browser when listing available text tracks.</haxe_doc>
		</label>
		<readyState public="1" set="null"><x path="Int"/></readyState>
		<src public="1">
			<c path="String"/>
			<haxe_doc>Address of the track. Must be a valid URL. This attribute must be defined.</haxe_doc>
		</src>
		<srclang public="1">
			<c path="String"/>
			<haxe_doc>Language of the track text data.</haxe_doc>
		</srclang>
		<track public="1" set="null"><c path="js.html.TextTrack"/></track>
		<haxe_doc><![CDATA[<p>The <code>track</code>&nbsp;element is used as a child of the media elements—<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/audio">&lt;audio&gt;</a></code>
 and <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video">&lt;video&gt;</a></code>
—and does not represent anything on its own. It lets you specify timed text tracks (or time-based data).</p>
<p>The type of data that <code> track</code> adds to the media is set in the <code>kind</code> attribute, which can take values of <code>subtitles</code>, <code>captions</code>, <code>descriptions</code>, <code>chapters</code> or <code>metadata</code>. The element points to a source file containing timed text that the browser exposes when the user requests additional data. </p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/track">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTrackElement"</e></m></meta>
	</class>
	<class path="js.html.TreeWalker" params="" file="/usr/lib/haxe/std/js/html/TreeWalker.hx" extern="1">
		<currentNode public="1">
			<c path="js.html.Node"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</currentNode>
		<expandEntityReferences public="1" set="null"><x path="Bool"/></expandEntityReferences>
		<filter public="1" set="null"><c path="js.html.NodeFilter"/></filter>
		<root public="1" set="null"><c path="js.html.Node"/></root>
		<whatToShow public="1" set="null"><x path="Int"/></whatToShow>
		<firstChild public="1" set="method"><f a=""><c path="js.html.Node"/></f></firstChild>
		<lastChild public="1" set="method"><f a=""><c path="js.html.Node"/></f></lastChild>
		<nextNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></nextNode>
		<nextSibling public="1" set="method"><f a=""><c path="js.html.Node"/></f></nextSibling>
		<parentNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></parentNode>
		<previousNode public="1" set="method"><f a=""><c path="js.html.Node"/></f></previousNode>
		<previousSibling public="1" set="method"><f a=""><c path="js.html.Node"/></f></previousSibling>
		<haxe_doc><![CDATA[<p>The <code>TreeWalker</code> object represents the nodes of a document subtree and a position within them.</p>
<p>A TreeWalker can be created using the <code><a title="en/DOM/document.createTreeWalker" rel="internal" href="https://developer.mozilla.org/en/DOM/document.createTreeWalker">createTreeWalker()</a></code> method of the <code><a title="en/DOM/document" rel="internal" href="/api/js/html/Document">document</a></code> object.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/Treewalker">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"TreeWalker"</e></m></meta>
	</class>
	<class path="js.html.UListElement" params="" file="/usr/lib/haxe/std/js/html/UListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn't work in all browsers. <div class="note"><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it has been deprecated: the <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/ol">&lt;ol&gt;</a></code>
 element should be styled using <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a>. To give a similar effect than the <span>compact</span> attribute, the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> property <a title="en/CSS/line-height" rel="internal" href="https://developer.mozilla.org/en/CSS/line-height">line-height</a> can be used with a value of <span>80%</span>.</div>]]></haxe_doc>
		</compact>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Used to set the bullet style for the list. The values defined under <a title="en/HTML3.2" rel="internal" href="https://developer.mozilla.org/en/HTML3.2" class="new ">HTML3.2</a> and the transitional version of <a title="en/HTML4.01" rel="internal" href="https://developer.mozilla.org/en/HTML4.01" class="new ">HTML 4.0/4.01</a> are<span>:</span> <ul> <li><code>circle</code>,</li> <li><code>disc</code>,</li> <li>and <code>square</code>.</li> </ul> <p>A fourth bullet type has been defined in the WebTV interface, but not all browsers support it: <code>triangle.</code></p> <p>If not present and if no <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property does apply to the element, the user agent decide to use a kind of bullets depending on the nesting level of the list.</p> <div class="note"><strong>Usage note:</strong> Do not use this attribute, as it has been deprecated: use the <a title="en/CSS" rel="internal" href="https://developer.mozilla.org/en/CSS">CSS</a> <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property instead.</div>]]></haxe_doc>
		</type>
		<haxe_doc><![CDATA[<p>The HTML <em>unordered list</em> element (<code>&lt;ul&gt;</code>) represents an unordered list of items, namely a collection of items that do not have a numerical ordering, and their order in the list is meaningless. Typically, unordered-list items are displayed with a bullet, which can be of several forms, like a dot, a circle or a squared. The bullet style is not defined in the HTML description of the page, but in its associated CSS, using the <code><a rel="custom" href="https://developer.mozilla.org/en/CSS/list-style-type">list-style-type</a></code>
 property.</p>
<p>There is no limitation to the depth and imbrication of lists defined with the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 elements.</p>
<div class="note"><strong>Usage note: </strong> The <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 and <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 both represent a list of items. They differ in the way that, with the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 element, the order is meaningful. As a rule of thumb to determine which one to use, try changing the order of the list items; if the meaning is changed, the <code><a rel="custom" href="/api/js/html/OListElement">&lt;ol&gt;</a></code>
 element should be used, else the <code><a rel="custom" href="/api/js/html/UListElement">&lt;ul&gt;</a></code>
 is adequate.</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/HTML/Element/ul">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLUListElement"</e></m></meta>
	</class>
	<class path="js.html.Uint16Array" params="" file="/usr/lib/haxe/std/js/html/Uint16Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The size, in bytes, of each array element.</haxe_doc>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of entries in the array. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
			<overloads>
				<set public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
				<set public="1" set="method">
					<f a="array:?offset">
						<c path="js.html.Uint16Array"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
			</overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Uint16Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint16Array <a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array()">Uint16Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Uint16Array</code> object.</p>
<pre>Uint16Array Uint16Array(
&nbsp; unsigned long length
);

Uint16Array Uint16Array(
&nbsp; <em>TypedArray</em> array
);

Uint16Array Uint16Array(
&nbsp; sequence&lt;type&gt; array
);

Uint16Array Uint16Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 16-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint16Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint16Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint16Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint16Array <a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array()">Uint16Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Uint16Array</code> object.</p>
<pre>Uint16Array Uint16Array(
&nbsp; unsigned long length
);

Uint16Array Uint16Array(
&nbsp; <em>TypedArray</em> array
);

Uint16Array Uint16Array(
&nbsp; sequence&lt;type&gt; array
);

Uint16Array Uint16Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 16-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint16Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint16Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint16Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Int"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint16Array <a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array()">Uint16Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Uint16Array</code> object.</p>
<pre>Uint16Array Uint16Array(
&nbsp; unsigned long length
);

Uint16Array Uint16Array(
&nbsp; <em>TypedArray</em> array
);

Uint16Array Uint16Array(
&nbsp; sequence&lt;type&gt; array
);

Uint16Array Uint16Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 16-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint16Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint16Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint16Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Uint16Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint16Array <a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array()">Uint16Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint16Array </code><code><a title="en/JavaScript typed arrays/Uint16Array#Uint16Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array#Uint16Array%28%29">Uint16Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new <code>Uint16Array</code> object.</p>
<pre>Uint16Array Uint16Array(
&nbsp; unsigned long length
);

Uint16Array Uint16Array(
&nbsp; <em>TypedArray</em> array
);

Uint16Array Uint16Array(
&nbsp; sequence&lt;type&gt; array
);

Uint16Array Uint16Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to a 16-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint16Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint16Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint16Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[<p>The <code>Uint16Array</code> type represents an array of unsigned 16-bit integers..</p>
<p>Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint16Array">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Uint16Array"</e></m></meta>
	</class>
	<class path="js.html.Uint8Array" params="" file="/usr/lib/haxe/std/js/html/Uint8Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The size, in bytes, of each array element.</haxe_doc>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The number of entries in the array; for these 8-bit values, this is the same as the size of the array in bytes. <strong>Read only.</strong>]]></haxe_doc>
		</length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
			<overloads>
				<set public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
				<set public="1" set="method">
					<f a="array:?offset">
						<c path="js.html.Uint8Array"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sets multiple values in the typed array, reading input values from a specified array.</p>

<div id="section_13"><span id="Parameters_2"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>array</code></dt> <dd>An array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown. If the source array is a typed array, the two arrays may share the same underlying <code><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer">ArrayBuffer</a></code>; the browser will intelligently copy the source range of the buffer to the destination range.</dd> <dt>offset 
<span title="">Optional</span>
</dt> <dd>The offset into the target array at which to begin writing values from the source <code>array</code>. If you omit this value, 0 is assumed (that is, the source <code>array</code> will overwrite values in the target array starting at index 0).</dd>
</dl>
</div>]]></haxe_doc>
				</set>
			</overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Uint8Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint8Array <a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new Uint8Array object.</p>
<pre>Uint8Array Uint8Array(
&nbsp; unsigned long length
);

Uint8Array Uint8Array(
&nbsp; <em>TypedArray</em> array
);

Uint8Array Uint8Array(
&nbsp; sequence&lt;type&gt; array
);

Uint8Array Uint8Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to an 8-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint8Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint8Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint8Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint8Array <a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new Uint8Array object.</p>
<pre>Uint8Array Uint8Array(
&nbsp; unsigned long length
);

Uint8Array Uint8Array(
&nbsp; <em>TypedArray</em> array
);

Uint8Array Uint8Array(
&nbsp; sequence&lt;type&gt; array
);

Uint8Array Uint8Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to an 8-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint8Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint8Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint8Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Int"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint8Array <a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new Uint8Array object.</p>
<pre>Uint8Array Uint8Array(
&nbsp; unsigned long length
);

Uint8Array Uint8Array(
&nbsp; <em>TypedArray</em> array
);

Uint8Array Uint8Array(
&nbsp; sequence&lt;type&gt; array
);

Uint8Array Uint8Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to an 8-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint8Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint8Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint8Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Uint8Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<div class="note"><strong>Note:</strong> In these methods, <code><em>TypedArray</em></code> represents any of the <a title="en/JavaScript typed arrays/ArrayBufferView#Typed array subclasses" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBufferView#Typed_array_subclasses">typed array object types</a>.</div>
<table class="standard-table"> <tbody> <tr> <td><code>Uint8Array <a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a>(unsigned long length);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(<em>TypedArray</em> array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(sequence&lt;type&gt; array);<br> </code></td> </tr> <tr> <td><code>Uint8Array </code><code><a title="en/JavaScript typed arrays/Uint8Array#Int8Array()" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array#Int8Array%28%29">Uint8Array</a></code><code>(ArrayBuffer buffer, optional unsigned long byteOffset, optional unsigned long length);<br> </code></td> </tr> </tbody>
</table><p>Returns a new Uint8Array object.</p>
<pre>Uint8Array Uint8Array(
&nbsp; unsigned long length
);

Uint8Array Uint8Array(
&nbsp; <em>TypedArray</em> array
);

Uint8Array Uint8Array(
&nbsp; sequence&lt;type&gt; array
);

Uint8Array Uint8Array(
&nbsp; ArrayBuffer buffer,
&nbsp; optional unsigned long byteOffset,
&nbsp; optional unsigned long length
);
</pre>
<div id="section_7"><span id="Parameters"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>length</code></dt> <dd>The number of elements in the byte array. If unspecified, length of the array view will match the buffer's length.</dd> <dt><code>array</code></dt> <dd>An object of any of the typed array types (such as <code>Int32Array</code>), or a sequence of objects of a particular type, to copy into a new <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>. Each value in the source array is converted to an 8-bit unsigned integer before being copied into the new array.</dd> <dt><code>buffer</code></dt> <dd>An existing <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a> to use as the storage for the new <code>Uint8Array</code> object.</dd> <dt><code>byteOffset<br> </code></dt> <dd>The offset, in bytes, to the first byte in the specified buffer for the new view to reference. If not specified, the <code>Uint8Array</code>'s view of the buffer will start with the first byte.</dd>
</dl>
</div><div id="section_8"><span id="Return_value"></span><h6 class="editable">Return value</h6>
<p>A new <code>Uint8Array</code> object representing the specified data buffer.</p>
</div>]]></haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[<p>The <code>UInt8Array</code> type represents an array of 8-bit unsigned integers.</p>
<p>Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Uint8Array"</e></m></meta>
	</class>
	<class path="js.html.Uint8ClampedArray" params="" file="/usr/lib/haxe/std/js/html/Uint8ClampedArray.hx" extern="1">
		<extends path="js.html.Uint8Array"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></BYTES_PER_ELEMENT>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<overloads>
				<new public="1" set="method"><f a="length">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
				<new public="1" set="method"><f a="array">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></new>
				<new public="1" set="method"><f a="array">
	<c path="js.html.Uint8ClampedArray"/>
	<x path="Void"/>
</f></new>
			</overloads>
		</new>
		<meta><m n=":native"><e>"Uint8ClampedArray"</e></m></meta>
	</class>
	<class path="js.html.ValidityState" params="" file="/usr/lib/haxe/std/js/html/ValidityState.hx" extern="1">
		<customError public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>The element's custom validity message has been set to a non-empty string by calling the element's setCustomValidity() method.</haxe_doc>
		</customError>
		<patternMismatch public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value does not match the specified 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-pattern">pattern</a></code>
.]]></haxe_doc>
		</patternMismatch>
		<rangeOverflow public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value is greater than the specified 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-max">max</a></code>
.]]></haxe_doc>
		</rangeOverflow>
		<rangeUnderflow public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value is less than the specified 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-min">min</a></code>
.]]></haxe_doc>
		</rangeUnderflow>
		<stepMismatch public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value does not fit the rules determined by 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-step">step</a></code>
.]]></haxe_doc>
		</stepMismatch>
		<tooLong public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<p>The value exceeds the specified <strong>maxlength</strong> for <a title="en/DOM/HTMLInputElement" rel="internal" href="https://developer.mozilla.org/en/DOM/HTMLInputElement">HTMLInputElement</a> or <a title="en/DOM/textarea" rel="internal" href="https://developer.mozilla.org/en/DOM/HTMLTextAreaElement">HTMLTextAreaElement</a> objects.</p> <div class="note"><strong>Note:</strong> This will never be <code>true</code> in Gecko, because elements' values are prevented from being longer than <strong>maxlength</strong>.</div>]]></haxe_doc>
		</tooLong>
		<typeMismatch public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The value is not in the required syntax (when 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-type">type</a></code>
 is <code>email</code> or <code>url</code>).]]></haxe_doc>
		</typeMismatch>
		<valid public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>No other constraint validation conditions are true.</haxe_doc>
		</valid>
		<valueMissing public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The element has a 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/input#attr-required">required</a></code>
 attribute, but no value.]]></haxe_doc>
		</valueMissing>
		<haxe_doc><![CDATA[The DOM&nbsp;<code>ValidityState</code> interface represents the <em>validity states</em> that an element can be in, with respect to constraint validation.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/ValidityState">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"ValidityState"</e></m></meta>
	</class>
	<class path="js.html.VideoElement" params="" file="/usr/lib/haxe/std/js/html/VideoElement.hx" extern="1">
		<extends path="js.html.MediaElement"/>
		<decodedFrameCount public="1" set="null"><x path="Int"/></decodedFrameCount>
		<displayingFullscreen public="1" set="null"><x path="Bool"/></displayingFullscreen>
		<droppedFrameCount public="1" set="null"><x path="Int"/></droppedFrameCount>
		<height public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-height">height</a></code>
 HTML attribute, which specifies the height of the display area, in CSS pixels.]]></haxe_doc>
		</height>
		<poster public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-poster">poster</a></code>
 HTML&nbsp;attribute, which specifies an image to show while no video data is available.]]></haxe_doc>
		</poster>
		<supportsFullscreen public="1" set="null"><x path="Bool"/></supportsFullscreen>
		<videoHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The intrinsic height of the resource in CSS pixels, taking into account the dimensions, aspect ratio, clean aperture, resolution, and so forth, as defined for the format used by the resource. If the element's ready state is HAVE_NOTHING, the value is 0.</haxe_doc>
		</videoHeight>
		<videoWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The intrinsic width of the resource in CSS pixels, taking into account the dimensions, aspect ratio, clean aperture, resolution, and so forth, as defined for the format used by the resource. If the element's ready state is HAVE_NOTHING, the value is 0.</haxe_doc>
		</videoWidth>
		<width public="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Reflects the 

<code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/video#attr-width">width</a></code>
&nbsp;HTML&nbsp;attribute, which specifies the width of the display area, in CSS pixels.]]></haxe_doc>
		</width>
		<enterFullScreen public="1" set="method"><f a=""><x path="Void"/></f></enterFullScreen>
		<enterFullscreen public="1" set="method"><f a=""><x path="Void"/></f></enterFullscreen>
		<exitFullScreen public="1" set="method"><f a=""><x path="Void"/></f></exitFullScreen>
		<exitFullscreen public="1" set="method"><f a=""><x path="Void"/></f></exitFullscreen>
		<haxe_doc><![CDATA[DOM <code>video</code> objects expose the <a class="external" title="http://www.w3.org/TR/html5/video.html#htmlvideoelement" rel="external" href="http://www.w3.org/TR/html5/video.html#htmlvideoelement" target="_blank">HTMLVideoElement</a> interface, which provides special properties (beyond the regular <a href="/api/js/html/Element" rel="internal">element</a> object and <a title="en/DOM/HTMLMediaElement" rel="internal" href="/api/js/html/MediaElement">HTMLMediaElement</a> interfaces they also have available to them by inheritance) for manipulating video objects.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/HTMLVideoElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLVideoElement"</e></m></meta>
	</class>
	<typedef path="js.html.VoidCallback" params="" file="/usr/lib/haxe/std/js/html/VoidCallback.hx"><f a=""><x path="Bool"/></f></typedef>
	<class path="js.html.XMLHttpRequest" params="" file="/usr/lib/haxe/std/js/html/XMLHttpRequest.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<DONE public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>The operation is complete.</haxe_doc>
		</DONE>
		<HEADERS_RECEIVED public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[<code>send()</code> has been called, and headers and status are available.]]></haxe_doc>
		</HEADERS_RECEIVED>
		<LOADING public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Downloading; <code>responseText</code> holds partial data.]]></haxe_doc>
		</LOADING>
		<OPENED public="1" get="inline" set="null" line="45" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[<code>send()</code>has not been called yet.]]></haxe_doc>
		</OPENED>
		<UNSENT public="1" get="inline" set="null" line="48" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[<code>open()</code>has not been called yet.]]></haxe_doc>
		</UNSENT>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onload public="1"><t path="js.html.EventListener"/></onload>
		<onloadend public="1"><t path="js.html.EventListener"/></onloadend>
		<onloadstart public="1"><t path="js.html.EventListener"/></onloadstart>
		<onprogress public="1"><t path="js.html.EventListener"/></onprogress>
		<onreadystatechange public="1"><t path="js.html.EventListener"/></onreadystatechange>
		<readyState public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[<p>The state of the request:</p> <table class="standard-table"> <tbody> <tr> <td class="header">Value</td> <td class="header">State</td> <td class="header">Description</td> </tr> <tr> <td><code>0</code></td> <td><code>UNSENT</code></td> <td><code>open()</code>has not been called yet.</td> </tr> <tr> <td><code>1</code></td> <td><code>OPENED</code></td> <td><code>send()</code>has not been called yet.</td> </tr> <tr> <td><code>2</code></td> <td><code>HEADERS_RECEIVED</code></td> <td><code>send()</code> has been called, and headers and status are available.</td> </tr> <tr> <td><code>3</code></td> <td><code>LOADING</code></td> <td>Downloading; <code>responseText</code> holds partial data.</td> </tr> <tr> <td><code>4</code></td> <td><code>DONE</code></td> <td>The operation is complete.</td> </tr> </tbody> </table>]]></haxe_doc>
		</readyState>
		<response public="1" set="null">
			<d/>
			<haxe_doc><![CDATA[The response entity body according to <code><a href="#responseType">responseType</a></code>, as an <a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a>, <a title="en/DOM/Blob" rel="internal" href="https://developer.mozilla.org/en/DOM/Blob"><code>Blob</code></a>, <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
, JavaScript object (for "moz-json"), or string. This is <code>NULL</code>&nbsp;if the request is not complete or was not successful. Getter throws DOMException.]]></haxe_doc>
		</response>
		<responseText public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The response to the request as text, or <code>null</code> if the request was unsuccessful or has not yet been sent. <strong>Read-only.</strong> Getter throws DOMException.]]></haxe_doc>
		</responseText>
		<responseType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>Can be set to change the response type. This tells the server what format you want the response to be in.</p> <table class="standard-table"> <tbody> <tr> <td class="header">Value</td> <td class="header">Data type of <code>response</code> property</td> </tr> <tr> <td><em>empty string</em></td> <td>String (this is the default)</td> </tr> <tr> <td>"arraybuffer"</td> <td><a title="en/JavaScript typed arrays/ArrayBuffer" rel="internal" href="https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer"><code>ArrayBuffer</code></a></td> </tr> <tr> <td>"blob"</td> <td><code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Blob">Blob</a></code>
</td> </tr> <tr> <td>"document"</td> <td><code><a rel="custom" href="https://developer.mozilla.org/en/DOM/Document">Document</a></code>
</td> </tr> <tr> <td>"text"</td> <td>String</td> </tr> <tr> <td>"moz-json"</td> <td>JavaScript object, parsed from a JSON string returned by the server 
<span title="(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
">Requires Gecko 9.0</span>
</td> </tr> </tbody> </table> Setter throws DOMException.]]></haxe_doc>
		</responseType>
		<responseXML public="1" set="null">
			<c path="js.html.Document"/>
			<haxe_doc><![CDATA[<p>The response to the request as a DOM <code><a class="internal" title="En/DOM/Document" rel="internal" href="https://developer.mozilla.org/en/DOM/document">Document</a></code> object, or <code>null</code> if the request was unsuccessful, has not yet been sent, or cannot be parsed as XML. The response is parsed as if it were a <code>text/xml</code> stream. <strong>Read-only.</strong></p> <div class="note"><strong>Note:</strong> If the server doesn't apply the <code>text/xml</code> Content-Type header, you can use <code>overrideMimeType()</code>to force <code>XMLHttpRequest</code> to parse it as XML anyway.</div> Getter throws DOMException.]]></haxe_doc>
		</responseXML>
		<status public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The status of the response to the request. This is the HTTP result code (for example, <code>status</code> is 200 for a successful request). <strong>Read-only.</strong> Getter throws DOMException.]]></haxe_doc>
		</status>
		<statusText public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The response string returned by the HTTP server. Unlike <code>status</code>, this includes the entire text of the response message ("<code>200 OK</code>", for example). <strong>Read-only.</strong> Getter throws DOMException.]]></haxe_doc>
		</statusText>
		<upload public="1" set="null">
			<c path="js.html.XMLHttpRequestUpload"/>
			<haxe_doc><![CDATA[The upload process can be tracked by adding an event listener to <code>upload</code>. 
<span>New in <a rel="custom" href="https://developer.mozilla.org/en/Firefox_3.5_for_developers">Firefox 3.5</a></span>]]></haxe_doc>
		</upload>
		<withCredentials public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[<p>Indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies or authorization headers. 
<span>New in <a rel="custom" href="https://developer.mozilla.org/en/Firefox_3.5_for_developers">Firefox 3.5</a></span>
</p> <div class="note"><strong>Note:</strong> This never affects same-site requests.</div> <p>The default is <code>false</code>.</p> Setter throws DOMException.]]></haxe_doc>
		</withCredentials>
		<abort public="1" set="method"><f a=""><x path="Void"/></f></abort>
		<getAllResponseHeaders public="1" set="method"><f a=""><c path="String"/></f></getAllResponseHeaders>
		<getResponseHeader public="1" set="method"><f a="header">
	<c path="String"/>
	<c path="String"/>
</f></getResponseHeader>
		<open public="1" set="method"><f a="method:url:?async:?user:?password">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></open>
		<overrideMimeType public="1" set="method"><f a="override_">
	<c path="String"/>
	<x path="Void"/>
</f></overrideMimeType>
		<send public="1" set="method">
			<f a="data">
				<c path="js.html.DOMFormData"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
			<overloads>
				<send public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.ArrayBuffer"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.Blob"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.Document"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="String"/>
						<x path="Void"/>
					</f>
					<haxe_doc><![CDATA[<p>Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.</p>
<div class="note"><strong>Note:</strong> Any event listeners you wish to set must be set before calling <code>send()</code>.</div>

<div id="section_11"><span id="Parameters_3"></span><h6 class="editable">Parameters</h6>
<dl> <dt><code>body</code></dt> <dd>This may be an <code>nsIDocument</code>, <code>nsIInputStream</code>, or a string (an <code>nsISupportsString</code> if called from native code) that is used to populate the body of a POST request. Starting with Gecko 1.9.2, you may also specify an DOM<code><a rel="custom" href="https://developer.mozilla.org/en/DOM/File">File</a></code>
 , and starting with Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)
 you may also specify a <a title="en/XMLHttpRequest/FormData" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/FormData"><code>FormData</code></a> object.</dd>
</dl>
</div> Throws DOMException.]]></haxe_doc>
				</send>
			</overloads>
		</send>
		<setRequestHeader public="1" set="method"><f a="header:value">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></setRequestHeader>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<haxe_doc><![CDATA[<p><code>XMLHttpRequest</code> is a <a class="internal" title="En/JavaScript" rel="internal" href="https://developer.mozilla.org/en/JavaScript">JavaScript</a> object that was designed by Microsoft and adopted by Mozilla, Apple, and Google. It's now being <a class="external" title="http://www.w3.org/TR/XMLHttpRequest/" rel="external" href="http://www.w3.org/TR/XMLHttpRequest/" target="_blank">standardized in the W3C</a>. It provides an easy way to retrieve data at a URL. Despite its name, <code>XMLHttpRequest</code> can be used to retrieve any type of data, not just XML, and it supports protocols other than <a title="en/HTTP" rel="internal" href="https://developer.mozilla.org/en/HTTP">HTTP</a> (including <code>file</code> and <code>ftp</code>).</p>
<p>To create an instance of <code>XMLHttpRequest</code>, simply do this:</p>
<pre>var req = new XMLHttpRequest();
</pre>
<p>For details about how to use <code>XMLHttpRequest</code>, see <a class="internal" title="En/Using XMLHttpRequest" rel="internal" href="https://developer.mozilla.org/en/DOM/XMLHttpRequest/Using_XMLHttpRequest">Using XMLHttpRequest</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XMLHttpRequest">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"XMLHttpRequest"</e></m></meta>
	</class>
	<class path="js.html.XMLHttpRequestUpload" params="" file="/usr/lib/haxe/std/js/html/XMLHttpRequestUpload.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onload public="1"><t path="js.html.EventListener"/></onload>
		<onloadend public="1"><t path="js.html.EventListener"/></onloadend>
		<onloadstart public="1"><t path="js.html.EventListener"/></onloadstart>
		<onprogress public="1"><t path="js.html.EventListener"/></onprogress>
		<meta><m n=":native"><e>"XMLHttpRequestUpload"</e></m></meta>
	</class>
	<class path="js.html.XPathExpression" params="" file="/usr/lib/haxe/std/js/html/XPathExpression.hx" extern="1">
		<evaluate public="1" set="method"><f a="contextNode:type:inResult">
	<c path="js.html.Node"/>
	<x path="Int"/>
	<c path="js.html.XPathResult"/>
	<c path="js.html.XPathResult"/>
</f></evaluate>
		<haxe_doc><![CDATA[An XPathExpression is a compiled XPath query returned from <a rel="internal" href="https://developer.mozilla.org/en/DOM/document.createExpression" title="en/DOM/document.createExpression">document.createExpression()</a>. It has a method <code>evaluate()</code> which can be used to execute the compiled XPath.
<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XPathExpression">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"XPathExpression"</e></m></meta>
	</class>
	<class path="js.html.XPathNSResolver" params="" file="/usr/lib/haxe/std/js/html/XPathNSResolver.hx" extern="1">
		<lookupNamespaceURI public="1" set="method"><f a="prefix">
	<c path="String"/>
	<c path="String"/>
</f></lookupNamespaceURI>
		<meta><m n=":native"><e>"XPathNSResolver"</e></m></meta>
	</class>
	<class path="js.html.XPathResult" params="" file="/usr/lib/haxe/std/js/html/XPathResult.hx" extern="1">
		<ANY_TYPE public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>A result set containing whatever type naturally results from evaluation of the expression. Note that if the result is a node-set then UNORDERED_NODE_ITERATOR_TYPE is always the resulting type.</haxe_doc>
		</ANY_TYPE>
		<ANY_UNORDERED_NODE_TYPE public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing any single node that matches the expression. The node is not necessarily the first node in the document that matches the expression.</haxe_doc>
		</ANY_UNORDERED_NODE_TYPE>
		<BOOLEAN_TYPE public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A result containing a single boolean value. This is useful for example, in an XPath expression using the <code>not()</code> function.]]></haxe_doc>
		</BOOLEAN_TYPE>
		<FIRST_ORDERED_NODE_TYPE public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing the first node in the document that matches the expression.</haxe_doc>
		</FIRST_ORDERED_NODE_TYPE>
		<NUMBER_TYPE public="1" get="inline" set="null" line="45" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A result containing a single number. This is useful for example, in an XPath expression using the <code>count()</code> function.]]></haxe_doc>
		</NUMBER_TYPE>
		<ORDERED_NODE_ITERATOR_TYPE public="1" get="inline" set="null" line="48" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing all the nodes matching the expression. The nodes in the result set are in the same order that they appear in the document.</haxe_doc>
		</ORDERED_NODE_ITERATOR_TYPE>
		<ORDERED_NODE_SNAPSHOT_TYPE public="1" get="inline" set="null" line="51" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing snapshots of all the nodes matching the expression. The nodes in the result set are in the same order that they appear in the document.</haxe_doc>
		</ORDERED_NODE_SNAPSHOT_TYPE>
		<STRING_TYPE public="1" get="inline" set="null" line="54" static="1">
			<x path="Int"/>
			<haxe_doc>A result containing a single string.</haxe_doc>
		</STRING_TYPE>
		<UNORDERED_NODE_ITERATOR_TYPE public="1" get="inline" set="null" line="57" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing all the nodes matching the expression. The nodes may not necessarily be in the same order that they appear in the document.</haxe_doc>
		</UNORDERED_NODE_ITERATOR_TYPE>
		<UNORDERED_NODE_SNAPSHOT_TYPE public="1" get="inline" set="null" line="60" static="1">
			<x path="Int"/>
			<haxe_doc>A result node-set containing snapshots of all the nodes matching the expression. The nodes may not necessarily be in the same order that they appear in the document.</haxe_doc>
		</UNORDERED_NODE_SNAPSHOT_TYPE>
		<booleanValue public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>readonly boolean Getter throws DOMException.</haxe_doc>
		</booleanValue>
		<invalidIteratorState public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>readonly boolean</haxe_doc>
		</invalidIteratorState>
		<numberValue public="1" set="null">
			<x path="Float"/>
			<haxe_doc>readonly float Getter throws DOMException.</haxe_doc>
		</numberValue>
		<resultType public="1" set="null">
			<x path="Int"/>
			<haxe_doc>readonly integer (short)</haxe_doc>
		</resultType>
		<singleNodeValue public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>readonly Node Getter throws DOMException.</haxe_doc>
		</singleNodeValue>
		<snapshotLength public="1" set="null">
			<x path="Int"/>
			<haxe_doc>readonly Integer Getter throws DOMException.</haxe_doc>
		</snapshotLength>
		<stringValue public="1" set="null">
			<c path="String"/>
			<haxe_doc>readonly String Getter throws DOMException.</haxe_doc>
		</stringValue>
		<iterateNext public="1" set="method"><f a=""><c path="js.html.Node"/></f></iterateNext>
		<snapshotItem public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></snapshotItem>
		<haxe_doc><![CDATA[Refer to <code><a rel="custom" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIDOMXPathResult">nsIDOMXPathResult</a></code>
 for more detail.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/XPathResult">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"XPathResult"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioNode" params="" file="/usr/lib/haxe/std/js/html/audio/AudioNode.hx" extern="1">
		<context public="1" set="null"><c path="js.html.audio.AudioContext"/></context>
		<numberOfInputs public="1" set="null"><x path="Int"/></numberOfInputs>
		<numberOfOutputs public="1" set="null"><x path="Int"/></numberOfOutputs>
		<connect public="1" set="method">
			<f a="destination:output">
				<c path="js.html.audio.AudioParam"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><connect public="1" set="method">
	<f a="destination:output:input">
		<c path="js.html.audio.AudioNode"/>
		<x path="Int"/>
		<x path="Int"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</connect></overloads>
		</connect>
		<disconnect public="1" set="method"><f a="output">
	<x path="Int"/>
	<x path="Void"/>
</f></disconnect>
		<meta><m n=":native"><e>"AudioNode"</e></m></meta>
	</class>
	<class path="js.html.audio.AnalyserNode" params="" file="/usr/lib/haxe/std/js/html/audio/AnalyserNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<fftSize public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</fftSize>
		<frequencyBinCount public="1" set="null"><x path="Int"/></frequencyBinCount>
		<maxDecibels public="1"><x path="Float"/></maxDecibels>
		<minDecibels public="1"><x path="Float"/></minDecibels>
		<smoothingTimeConstant public="1"><x path="Float"/></smoothingTimeConstant>
		<getByteFrequencyData public="1" set="method"><f a="array">
	<c path="js.html.Uint8Array"/>
	<x path="Void"/>
</f></getByteFrequencyData>
		<getByteTimeDomainData public="1" set="method"><f a="array">
	<c path="js.html.Uint8Array"/>
	<x path="Void"/>
</f></getByteTimeDomainData>
		<getFloatFrequencyData public="1" set="method"><f a="array">
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></getFloatFrequencyData>
		<meta><m n=":native"><e>"AnalyserNode"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioBuffer" params="" file="/usr/lib/haxe/std/js/html/audio/AudioBuffer.hx" extern="1">
		<duration public="1" set="null"><x path="Float"/></duration>
		<gain public="1"><x path="Float"/></gain>
		<length public="1" set="null"><x path="Int"/></length>
		<numberOfChannels public="1" set="null"><x path="Int"/></numberOfChannels>
		<sampleRate public="1" set="null"><x path="Float"/></sampleRate>
		<getChannelData public="1" set="method"><f a="channelIndex">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
</f></getChannelData>
		<meta><m n=":native"><e>"AudioBuffer"</e></m></meta>
	</class>
	<typedef path="js.html.audio.AudioBufferCallback" params="" file="/usr/lib/haxe/std/js/html/audio/AudioBufferCallback.hx"><f a="">
	<c path="js.html.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.audio.AudioSourceNode" params="" file="/usr/lib/haxe/std/js/html/audio/AudioSourceNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<meta><m n=":native"><e>"AudioSourceNode"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioBufferSourceNode" params="" file="/usr/lib/haxe/std/js/html/audio/AudioBufferSourceNode.hx" extern="1">
		<extends path="js.html.audio.AudioSourceNode"/>
		<FINISHED_STATE public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></FINISHED_STATE>
		<PLAYING_STATE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></PLAYING_STATE>
		<SCHEDULED_STATE public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></SCHEDULED_STATE>
		<UNSCHEDULED_STATE public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></UNSCHEDULED_STATE>
		<buffer public="1">
			<c path="js.html.audio.AudioBuffer"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</buffer>
		<gain public="1" set="null"><c path="js.html.audio.AudioGain"/></gain>
		<loop public="1"><x path="Bool"/></loop>
		<loopEnd public="1"><x path="Float"/></loopEnd>
		<loopStart public="1"><x path="Float"/></loopStart>
		<playbackRate public="1" set="null"><c path="js.html.audio.AudioParam"/></playbackRate>
		<playbackState public="1" set="null"><x path="Int"/></playbackState>
		<start public="1" set="method">
			<f a="when:grainOffset:grainDuration">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<overloads>
				<start public="1" set="method"><f a="when">
	<x path="Float"/>
	<x path="Void"/>
</f></start>
				<start public="1" set="method"><f a="when:grainOffset">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></start>
			</overloads>
		</start>
		<stop public="1" set="method"><f a="when">
	<x path="Float"/>
	<x path="Void"/>
</f></stop>
		<meta><m n=":native"><e>"AudioBufferSourceNode"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioContext" params="" file="/usr/lib/haxe/std/js/html/audio/AudioContext.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<activeSourceCount public="1" set="null"><x path="Int"/></activeSourceCount>
		<currentTime public="1" set="null"><x path="Float"/></currentTime>
		<destination public="1" set="null"><c path="js.html.audio.AudioDestinationNode"/></destination>
		<listener public="1" set="null"><c path="js.html.audio.AudioListener"/></listener>
		<oncomplete public="1"><t path="js.html.EventListener"/></oncomplete>
		<sampleRate public="1" set="null"><x path="Float"/></sampleRate>
		<createAnalyser public="1" set="method"><f a=""><c path="js.html.audio.AnalyserNode"/></f></createAnalyser>
		<createBiquadFilter public="1" set="method"><f a=""><c path="js.html.audio.BiquadFilterNode"/></f></createBiquadFilter>
		<createBuffer public="1" set="method">
			<f a="buffer:mixToMono">
				<c path="js.html.ArrayBuffer"/>
				<x path="Bool"/>
				<c path="js.html.audio.AudioBuffer"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><createBuffer public="1" set="method">
	<f a="numberOfChannels:numberOfFrames:sampleRate">
		<x path="Int"/>
		<x path="Int"/>
		<x path="Float"/>
		<c path="js.html.audio.AudioBuffer"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</createBuffer></overloads>
		</createBuffer>
		<createBufferSource public="1" set="method"><f a=""><c path="js.html.audio.AudioBufferSourceNode"/></f></createBufferSource>
		<createChannelMerger public="1" set="method"><f a="?numberOfInputs">
	<x path="Int"/>
	<c path="js.html.audio.ChannelMergerNode"/>
</f></createChannelMerger>
		<createChannelSplitter public="1" set="method"><f a="?numberOfOutputs">
	<x path="Int"/>
	<c path="js.html.audio.ChannelSplitterNode"/>
</f></createChannelSplitter>
		<createConvolver public="1" set="method"><f a=""><c path="js.html.audio.ConvolverNode"/></f></createConvolver>
		<createDelay public="1" set="method"><f a="?maxDelayTime">
	<x path="Float"/>
	<c path="js.html.audio.DelayNode"/>
</f></createDelay>
		<createDynamicsCompressor public="1" set="method"><f a=""><c path="js.html.audio.DynamicsCompressorNode"/></f></createDynamicsCompressor>
		<createGain public="1" set="method"><f a=""><c path="js.html.audio.GainNode"/></f></createGain>
		<createMediaElementSource public="1" set="method"><f a="mediaElement">
	<c path="js.html.MediaElement"/>
	<c path="js.html.audio.MediaElementAudioSourceNode"/>
</f></createMediaElementSource>
		<createMediaStreamSource public="1" set="method"><f a="mediaStream">
	<c path="js.html.rtc.MediaStream"/>
	<c path="js.html.audio.MediaStreamAudioSourceNode"/>
</f></createMediaStreamSource>
		<createOscillator public="1" set="method"><f a=""><c path="js.html.audio.OscillatorNode"/></f></createOscillator>
		<createPanner public="1" set="method"><f a=""><c path="js.html.audio.PannerNode"/></f></createPanner>
		<createScriptProcessor public="1" set="method"><f a="bufferSize:?numberOfInputChannels:?numberOfOutputChannels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.audio.ScriptProcessorNode"/>
</f></createScriptProcessor>
		<createWaveShaper public="1" set="method"><f a=""><c path="js.html.audio.WaveShaperNode"/></f></createWaveShaper>
		<createWaveTable public="1" set="method"><f a="real:imag">
	<c path="js.html.Float32Array"/>
	<c path="js.html.Float32Array"/>
	<c path="js.html.audio.WaveTable"/>
</f></createWaveTable>
		<decodeAudioData public="1" set="method"><f a="audioData:successCallback:?errorCallback">
	<c path="js.html.ArrayBuffer"/>
	<t path="js.html.audio.AudioBufferCallback"/>
	<t path="js.html.audio.AudioBufferCallback"/>
	<x path="Void"/>
</f></decodeAudioData>
		<startRendering public="1" set="method"><f a=""><x path="Void"/></f></startRendering>
		<new public="1" set="method"><f a=""><x path="Void"/></f></new>
		<meta><m n=":native"><e>"AudioContext"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioDestinationNode" params="" file="/usr/lib/haxe/std/js/html/audio/AudioDestinationNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<numberOfChannels public="1" set="null"><x path="Int"/></numberOfChannels>
		<meta><m n=":native"><e>"AudioDestinationNode"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioParam" params="" file="/usr/lib/haxe/std/js/html/audio/AudioParam.hx" extern="1">
		<defaultValue public="1" set="null"><x path="Float"/></defaultValue>
		<maxValue public="1" set="null"><x path="Float"/></maxValue>
		<minValue public="1" set="null"><x path="Float"/></minValue>
		<name public="1" set="null"><c path="String"/></name>
		<units public="1" set="null"><x path="Int"/></units>
		<value public="1"><x path="Float"/></value>
		<cancelScheduledValues public="1" set="method"><f a="startTime">
	<x path="Float"/>
	<x path="Void"/>
</f></cancelScheduledValues>
		<exponentialRampToValueAtTime public="1" set="method"><f a="value:time">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></exponentialRampToValueAtTime>
		<linearRampToValueAtTime public="1" set="method"><f a="value:time">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></linearRampToValueAtTime>
		<setTargetAtTime public="1" set="method"><f a="target:time:timeConstant">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTargetAtTime>
		<setValueAtTime public="1" set="method"><f a="value:time">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setValueAtTime>
		<setValueCurveAtTime public="1" set="method"><f a="values:time:duration">
	<c path="js.html.Float32Array"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setValueCurveAtTime>
		<meta><m n=":native"><e>"AudioParam"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioGain" params="" file="/usr/lib/haxe/std/js/html/audio/AudioGain.hx" extern="1">
		<extends path="js.html.audio.AudioParam"/>
		<meta><m n=":native"><e>"AudioGain"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioListener" params="" file="/usr/lib/haxe/std/js/html/audio/AudioListener.hx" extern="1">
		<dopplerFactor public="1"><x path="Float"/></dopplerFactor>
		<speedOfSound public="1"><x path="Float"/></speedOfSound>
		<setOrientation public="1" set="method"><f a="x:y:z:xUp:yUp:zUp">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setOrientation>
		<setPosition public="1" set="method"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setPosition>
		<setVelocity public="1" set="method"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setVelocity>
		<meta><m n=":native"><e>"AudioListener"</e></m></meta>
	</class>
	<class path="js.html.audio.BiquadFilterNode" params="" file="/usr/lib/haxe/std/js/html/audio/BiquadFilterNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<ALLPASS public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></ALLPASS>
		<BANDPASS public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></BANDPASS>
		<HIGHPASS public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></HIGHPASS>
		<HIGHSHELF public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></HIGHSHELF>
		<LOWPASS public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></LOWPASS>
		<LOWSHELF public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></LOWSHELF>
		<NOTCH public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></NOTCH>
		<PEAKING public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></PEAKING>
		<Q public="1" set="null"><c path="js.html.audio.AudioParam"/></Q>
		<frequency public="1" set="null"><c path="js.html.audio.AudioParam"/></frequency>
		<gain public="1" set="null"><c path="js.html.audio.AudioParam"/></gain>
		<type public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</type>
		<getFrequencyResponse public="1" set="method"><f a="frequencyHz:magResponse:phaseResponse">
	<c path="js.html.Float32Array"/>
	<c path="js.html.Float32Array"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></getFrequencyResponse>
		<meta><m n=":native"><e>"BiquadFilterNode"</e></m></meta>
	</class>
	<class path="js.html.audio.ChannelMergerNode" params="" file="/usr/lib/haxe/std/js/html/audio/ChannelMergerNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<meta><m n=":native"><e>"ChannelMergerNode"</e></m></meta>
	</class>
	<class path="js.html.audio.ChannelSplitterNode" params="" file="/usr/lib/haxe/std/js/html/audio/ChannelSplitterNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<meta><m n=":native"><e>"ChannelSplitterNode"</e></m></meta>
	</class>
	<class path="js.html.audio.ConvolverNode" params="" file="/usr/lib/haxe/std/js/html/audio/ConvolverNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<buffer public="1"><c path="js.html.audio.AudioBuffer"/></buffer>
		<normalize public="1"><x path="Bool"/></normalize>
		<meta><m n=":native"><e>"ConvolverNode"</e></m></meta>
	</class>
	<class path="js.html.audio.DelayNode" params="" file="/usr/lib/haxe/std/js/html/audio/DelayNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<delayTime public="1" set="null"><c path="js.html.audio.AudioParam"/></delayTime>
		<meta><m n=":native"><e>"DelayNode"</e></m></meta>
	</class>
	<class path="js.html.audio.DynamicsCompressorNode" params="" file="/usr/lib/haxe/std/js/html/audio/DynamicsCompressorNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<attack public="1" set="null"><c path="js.html.audio.AudioParam"/></attack>
		<knee public="1" set="null"><c path="js.html.audio.AudioParam"/></knee>
		<ratio public="1" set="null"><c path="js.html.audio.AudioParam"/></ratio>
		<reduction public="1" set="null"><c path="js.html.audio.AudioParam"/></reduction>
		<release public="1" set="null"><c path="js.html.audio.AudioParam"/></release>
		<threshold public="1" set="null"><c path="js.html.audio.AudioParam"/></threshold>
		<meta><m n=":native"><e>"DynamicsCompressorNode"</e></m></meta>
	</class>
	<class path="js.html.audio.GainNode" params="" file="/usr/lib/haxe/std/js/html/audio/GainNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<gain public="1" set="null"><c path="js.html.audio.AudioGain"/></gain>
		<meta><m n=":native"><e>"GainNode"</e></m></meta>
	</class>
	<class path="js.html.audio.MediaElementAudioSourceNode" params="" file="/usr/lib/haxe/std/js/html/audio/MediaElementAudioSourceNode.hx" extern="1">
		<extends path="js.html.audio.AudioSourceNode"/>
		<mediaElement public="1" set="null"><c path="js.html.MediaElement"/></mediaElement>
		<meta><m n=":native"><e>"MediaElementAudioSourceNode"</e></m></meta>
	</class>
	<class path="js.html.audio.MediaStreamAudioSourceNode" params="" file="/usr/lib/haxe/std/js/html/audio/MediaStreamAudioSourceNode.hx" extern="1">
		<extends path="js.html.audio.AudioSourceNode"/>
		<mediaStream public="1" set="null"><c path="js.html.rtc.MediaStream"/></mediaStream>
		<meta><m n=":native"><e>"MediaStreamAudioSourceNode"</e></m></meta>
	</class>
	<class path="js.html.audio.OscillatorNode" params="" file="/usr/lib/haxe/std/js/html/audio/OscillatorNode.hx" extern="1">
		<extends path="js.html.audio.AudioSourceNode"/>
		<CUSTOM public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></CUSTOM>
		<FINISHED_STATE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></FINISHED_STATE>
		<PLAYING_STATE public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></PLAYING_STATE>
		<SAWTOOTH public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></SAWTOOTH>
		<SCHEDULED_STATE public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></SCHEDULED_STATE>
		<SINE public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></SINE>
		<SQUARE public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></SQUARE>
		<TRIANGLE public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></TRIANGLE>
		<UNSCHEDULED_STATE public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></UNSCHEDULED_STATE>
		<detune public="1" set="null"><c path="js.html.audio.AudioParam"/></detune>
		<frequency public="1" set="null"><c path="js.html.audio.AudioParam"/></frequency>
		<playbackState public="1" set="null"><x path="Int"/></playbackState>
		<type public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</type>
		<setWaveTable public="1" set="method"><f a="waveTable">
	<c path="js.html.audio.WaveTable"/>
	<x path="Void"/>
</f></setWaveTable>
		<start public="1" set="method"><f a="when">
	<x path="Float"/>
	<x path="Void"/>
</f></start>
		<stop public="1" set="method"><f a="when">
	<x path="Float"/>
	<x path="Void"/>
</f></stop>
		<meta><m n=":native"><e>"OscillatorNode"</e></m></meta>
	</class>
	<class path="js.html.audio.PannerNode" params="" file="/usr/lib/haxe/std/js/html/audio/PannerNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<EQUALPOWER public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></EQUALPOWER>
		<EXPONENTIAL_DISTANCE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></EXPONENTIAL_DISTANCE>
		<HRTF public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></HRTF>
		<INVERSE_DISTANCE public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></INVERSE_DISTANCE>
		<LINEAR_DISTANCE public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></LINEAR_DISTANCE>
		<SOUNDFIELD public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></SOUNDFIELD>
		<coneGain public="1" set="null"><c path="js.html.audio.AudioGain"/></coneGain>
		<coneInnerAngle public="1"><x path="Float"/></coneInnerAngle>
		<coneOuterAngle public="1"><x path="Float"/></coneOuterAngle>
		<coneOuterGain public="1"><x path="Float"/></coneOuterGain>
		<distanceGain public="1" set="null"><c path="js.html.audio.AudioGain"/></distanceGain>
		<distanceModel public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</distanceModel>
		<maxDistance public="1"><x path="Float"/></maxDistance>
		<panningModel public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</panningModel>
		<refDistance public="1"><x path="Float"/></refDistance>
		<rolloffFactor public="1"><x path="Float"/></rolloffFactor>
		<setOrientation public="1" set="method"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setOrientation>
		<setPosition public="1" set="method"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setPosition>
		<setVelocity public="1" set="method"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setVelocity>
		<meta><m n=":native"><e>"PannerNode"</e></m></meta>
	</class>
	<class path="js.html.audio.ScriptProcessorNode" params="" file="/usr/lib/haxe/std/js/html/audio/ScriptProcessorNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<bufferSize public="1" set="null"><x path="Int"/></bufferSize>
		<onaudioprocess public="1"><t path="js.html.EventListener"/></onaudioprocess>
		<meta><m n=":native"><e>"ScriptProcessorNode"</e></m></meta>
	</class>
	<class path="js.html.audio.WaveShaperNode" params="" file="/usr/lib/haxe/std/js/html/audio/WaveShaperNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<curve public="1"><c path="js.html.Float32Array"/></curve>
		<meta><m n=":native"><e>"WaveShaperNode"</e></m></meta>
	</class>
	<class path="js.html.audio.WaveTable" params="" file="/usr/lib/haxe/std/js/html/audio/WaveTable.hx" extern="1"><meta><m n=":native"><e>"WaveTable"</e></m></meta></class>
	<class path="js.html.fs.Entry" params="" file="/usr/lib/haxe/std/js/html/fs/Entry.hx" extern="1">
		<filesystem public="1" set="null">
			<c path="js.html.fs.FileSystem"/>
			<haxe_doc>The file system on which the entry resides.</haxe_doc>
		</filesystem>
		<fullPath public="1" set="null"><c path="String"/></fullPath>
		<isDirectory public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>The entry is a directory.</haxe_doc>
		</isDirectory>
		<isFile public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>The entry is a file.</haxe_doc>
		</isFile>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of the entry, excluding the path leading to it.</haxe_doc>
		</name>
		<copyTo public="1" set="method"><f a="parent:?name:?successCallback:?errorCallback">
	<c path="js.html.fs.DirectoryEntry"/>
	<c path="String"/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></copyTo>
		<getMetadata public="1" set="method"><f a="successCallback:?errorCallback">
	<t path="js.html.fs.MetadataCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></getMetadata>
		<getParent public="1" set="method"><f a="?successCallback:?errorCallback">
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></getParent>
		<moveTo public="1" set="method"><f a="parent:?name:?successCallback:?errorCallback">
	<c path="js.html.fs.DirectoryEntry"/>
	<c path="String"/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></moveTo>
		<remove public="1" set="method"><f a="successCallback:?errorCallback">
	<t path="js.html.VoidCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></remove>
		<toURL public="1" set="method"><f a=""><c path="String"/></f></toURL>
		<haxe_doc><![CDATA[<div><strong>DRAFT</strong> <div>This page is not complete.</div>
</div>
<p>The <code>Entry</code> interface of the <a title="en/DOM/File_API/File_System_API" rel="internal" href="https://developer.mozilla.org/en/DOM/File_API/File_System_API">FileSystem API</a> represents entries in a file system. The entries can be a file&nbsp;or a <a href="https://developer.mozilla.org/en/DOM/File_API/File_system_API/DirectoryEntry" rel="internal" title="en/DOM/File_API/File_system_API/DirectoryEntry">DirectoryEntry</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/File_API/File_System_API/Entry">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Entry"</e></m></meta>
	</class>
	<class path="js.html.fs.DirectoryEntry" params="" file="/usr/lib/haxe/std/js/html/fs/DirectoryEntry.hx" extern="1">
		<extends path="js.html.fs.Entry"/>
		<createReader public="1" set="method"><f a=""><c path="js.html.fs.DirectoryReader"/></f></createReader>
		<getDirectory public="1" set="method"><f a="path:?options:?successCallback:?errorCallback">
	<c path="String"/>
	<d/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></getDirectory>
		<getFile public="1" set="method"><f a="path:?options:?successCallback:?errorCallback">
	<c path="String"/>
	<d/>
	<t path="js.html.fs.EntryCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></getFile>
		<removeRecursively public="1" set="method"><f a="successCallback:?errorCallback">
	<t path="js.html.VoidCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></removeRecursively>
		<haxe_doc><![CDATA[<div><strong>DRAFT</strong> <div>This page is not complete.</div>
</div>
<p>The <code>DirectoryEntry</code> interface of the <a title="en/DOM/File_API/File_System_API" rel="internal" href="https://developer.mozilla.org/en/DOM/File_API/File_System_API">FileSystem API</a> represents a directory in a file system.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/File_API/File_System_API/DirectoryEntry">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DirectoryEntry"</e></m></meta>
	</class>
	<class path="js.html.fs.DirectoryReader" params="" file="/usr/lib/haxe/std/js/html/fs/DirectoryReader.hx" extern="1">
		<readEntries public="1" set="method"><f a="successCallback:?errorCallback">
	<t path="js.html.fs.EntriesCallback"/>
	<t path="js.html.fs.ErrorCallback"/>
	<x path="Void"/>
</f></readEntries>
		<haxe_doc><![CDATA[<div><strong>`DRAFT</strong> <div>This page is not complete.</div>
</div>
<p>The <code>DirectoryReader</code> interface of the <a title="en/DOM/File_API/File_System_API" rel="internal" href="https://developer.mozilla.org/en/DOM/File_API/File_System_API">FileSystem API</a> lets a user list files and directories in a directory.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/File_API/File_System_API/DirectoryReader">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"DirectoryReader"</e></m></meta>
	</class>
	<typedef path="js.html.fs.EntriesCallback" params="" file="/usr/lib/haxe/std/js/html/fs/EntriesCallback.hx"><f a="">
	<c path="js.html.fs.EntryArray"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.fs.EntryArray" params="" file="/usr/lib/haxe/std/js/html/fs/EntryArray.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.fs.Entry"/>
</f></item>
		<meta><m n=":native"><e>"EntryArray"</e></m></meta>
	</class>
	<typedef path="js.html.fs.EntryCallback" params="" file="/usr/lib/haxe/std/js/html/fs/EntryCallback.hx"><f a="">
	<c path="js.html.fs.Entry"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.fs.ErrorCallback" params="" file="/usr/lib/haxe/std/js/html/fs/ErrorCallback.hx"><f a="">
	<c path="js.html.fs.FileError"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.fs.FileError" params="" file="/usr/lib/haxe/std/js/html/fs/FileError.hx" extern="1">
		<ABORT_ERR public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[The file operation was aborted, probably due to a call to the <code>FileReader</code> <code>abort()</code>&nbsp;method.]]></haxe_doc>
		</ABORT_ERR>
		<ENCODING_ERR public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>The file data cannot be accurately represented in a data URL.</haxe_doc>
		</ENCODING_ERR>
		<INVALID_MODIFICATION_ERR public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></INVALID_MODIFICATION_ERR>
		<INVALID_STATE_ERR public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></INVALID_STATE_ERR>
		<NOT_FOUND_ERR public="1" get="inline" set="null" line="43" static="1">
			<x path="Int"/>
			<haxe_doc>File not found.</haxe_doc>
		</NOT_FOUND_ERR>
		<NOT_READABLE_ERR public="1" get="inline" set="null" line="46" static="1">
			<x path="Int"/>
			<haxe_doc>File could not be read.</haxe_doc>
		</NOT_READABLE_ERR>
		<NO_MODIFICATION_ALLOWED_ERR public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></NO_MODIFICATION_ALLOWED_ERR>
		<PATH_EXISTS_ERR public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></PATH_EXISTS_ERR>
		<QUOTA_EXCEEDED_ERR public="1" get="inline" set="null" line="52" static="1"><x path="Int"/></QUOTA_EXCEEDED_ERR>
		<SECURITY_ERR public="1" get="inline" set="null" line="55" static="1">
			<x path="Int"/>
			<haxe_doc>The file could not be accessed for security reasons.</haxe_doc>
		</SECURITY_ERR>
		<SYNTAX_ERR public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></SYNTAX_ERR>
		<TYPE_MISMATCH_ERR public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></TYPE_MISMATCH_ERR>
		<code public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[The <a title="en/nsIDOMFileError#Error codes" rel="internal" href="https://developer.mozilla.org/en/nsIDOMFileError#Error_codes">error code</a>.]]></haxe_doc>
		</code>
		<haxe_doc><![CDATA[Represents an error that occurs while using the <code><a rel="custom" href="/api/js/html/FileReader">FileReader</a></code>
 interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/FileError">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"FileError"</e></m></meta>
	</class>
	<class path="js.html.fs.FileSystem" params="" file="/usr/lib/haxe/std/js/html/fs/FileSystem.hx" extern="1">
		<name public="1" set="null"><c path="String"/></name>
		<root public="1" set="null"><c path="js.html.fs.DirectoryEntry"/></root>
		<meta><m n=":native"><e>"DOMFileSystem"</e></m></meta>
	</class>
	<typedef path="js.html.fs.FileSystemCallback" params="" file="/usr/lib/haxe/std/js/html/fs/FileSystemCallback.hx"><f a="">
	<c path="js.html.fs.FileSystem"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.fs.Metadata" params="" file="/usr/lib/haxe/std/js/html/fs/Metadata.hx" extern="1">
		<modificationTime public="1" set="null"><c path="Date"/></modificationTime>
		<size public="1" set="null"><x path="Int"/></size>
		<haxe_doc><![CDATA[Metadata is structured data about data. Metadata which is included with SVG content should be specified within <code>metadata</code> elements. The contents of the <code>metadata</code> should be elements from other XML namespaces such as RDF, FOAF, etc.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/SVG/Element/metadata">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Metadata"</e></m></meta>
	</class>
	<typedef path="js.html.fs.MetadataCallback" params="" file="/usr/lib/haxe/std/js/html/fs/MetadataCallback.hx"><f a="">
	<c path="js.html.fs.Metadata"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.idb.Any" params="" file="/usr/lib/haxe/std/js/html/idb/Any.hx" extern="1"><meta><m n=":native"><e>"IDBAny"</e></m></meta></class>
	<class path="js.html.idb.Database" params="" file="/usr/lib/haxe/std/js/html/idb/Database.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>Name of the connected database.</haxe_doc>
		</name>
		<objectStoreNames public="1" set="null">
			<c path="js.html.DOMStringList"/>
			<haxe_doc><![CDATA[A list of the names of the <a title="en/IndexedDB#gloss object store" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_object_store">object stores</a> currently in the connected database.]]></haxe_doc>
		</objectStoreNames>
		<onabort public="1"><t path="js.html.EventListener"/></onabort>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onversionchange public="1"><t path="js.html.EventListener"/></onversionchange>
		<version public="1" set="null">
			<c path="js.html.idb.Any"/>
			<haxe_doc>The version of the connected database. When a database is first created, this attribute is the empty string.</haxe_doc>
		</version>
		<close public="1" set="method"><f a=""><x path="Void"/></f></close>
		<createObjectStore public="1" set="method"><f a="name:?options">
	<c path="String"/>
	<d/>
	<c path="js.html.idb.ObjectStore"/>
</f></createObjectStore>
		<deleteObjectStore public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></deleteObjectStore>
		<setVersion public="1" set="method"><f a="version">
	<c path="String"/>
	<c path="js.html.idb.VersionChangeRequest"/>
</f></setVersion>
		<transaction public="1" set="method">
			<f a="storeName:mode">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.idb.Transaction"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction">IDBTransaction</a> object, and starts a transaction in a separate thread. &nbsp;The method returns a transaction object (<a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction"><code>IDBTransaction</code></a>) containing the <a title="en/IndexedDB/IDBTransaction#objectStore()" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#objectStore()">objectStore()</a> method, which you can use to access your object store.&nbsp;</p>

<div id="section_22"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>storeNames</dt> <dd>The names of object stores and indexes that are in the scope of the new transaction. Specify only the object stores that you need to access.</dd> <dt>mode</dt> <dd><em>Optional</em>. The types of access that can be performed in the transaction. Transactions are opened in one of three modes: <code>READ_ONLY</code>, <code>READ_WRITE</code>, and <code>VERSION_CHANGE</code>. If you don't provide the parameter, the default access mode is <code>READ_ONLY</code>. To avoid slowing things down, don't open a <code>READ_WRITE</code> transaction, unless you actually need to write into the database.</dd>
</dl>
</div><div id="section_23"><span id="Sample_code"></span><h5 class="editable">Sample code</h5>
<p>To start a transaction with the following scope, you can use the code snippets in the table. As noted earlier:</p>
<ul> <li>Add prefixes to the methods in WebKit browsers, (that is, instead of <code>IDBTransaction.READ_ONLY</code>, use <code>webkitIDBTransaction.READ_ONLY</code>).</li> <li>The default mode is <code>READ_ONLY</code>, so you don't really have to specify it. Of course, if you need to write into the object store, you can open the transaction in the <code>READ_WRITE</code> mode.</li>
</ul>
<table class="standard-table"> <thead> <tr> <th scope="col" width="185">Scope</th> <th scope="col" width="1018">Code</th> </tr> <tr> <td>Single object store</td> <td> <p><code>var transaction = db.transaction(['my-store-name'], IDBTransaction.READ_ONLY); </code></p> <p>Alternatively:</p> <p><code>var transaction = db.transaction('my-store-name', IDBTransaction.READ_ONLY);</code></p> </td> </tr> <tr> <td>Multiple object stores</td> <td><code>var transaction = db.transaction(['my-store-name', 'my-store-name2'], IDBTransaction.READ_ONLY);</code></td> </tr> <tr> <td>All object stores</td> <td> <p><code>var transaction = db.transaction(db.objectStoreNames, IDBTransaction.READ_ONLY);</code></p> <p>You cannot pass an empty array into the storeNames parameter, such as in the following: <code>var transaction = db.transaction([], IDBTransaction.READ_ONLY);.</code></p> <div class="warning"><strong>Warning:</strong>&nbsp; Accessing all obejct stores under the <code>READ_WRITE</code> mode means that you can run only that transaction. You cannot have writing transactions with overlapping scopes.</div> </td> </tr> </thead> <tbody> </tbody>
</table>
</div><div id="section_24"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeRequest">IDBTransaction</a></code></dt> <dd>The transaction object.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Exception</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The error is thrown for one of two reasons: <ul> <li>The <code>close()</code> method has been called on this IDBDatabase instance.</li> <li>The object store has been deleted or removed.</li> </ul> </td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code></td> <td>One of the object stores doesn't exist in the connected database.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads>
				<transaction public="1" set="method">
					<f a="storeNames:mode">
						<c path="js.html.DOMStringList"/>
						<c path="String"/>
						<c path="js.html.idb.Transaction"/>
					</f>
					<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction">IDBTransaction</a> object, and starts a transaction in a separate thread. &nbsp;The method returns a transaction object (<a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction"><code>IDBTransaction</code></a>) containing the <a title="en/IndexedDB/IDBTransaction#objectStore()" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#objectStore()">objectStore()</a> method, which you can use to access your object store.&nbsp;</p>

<div id="section_22"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>storeNames</dt> <dd>The names of object stores and indexes that are in the scope of the new transaction. Specify only the object stores that you need to access.</dd> <dt>mode</dt> <dd><em>Optional</em>. The types of access that can be performed in the transaction. Transactions are opened in one of three modes: <code>READ_ONLY</code>, <code>READ_WRITE</code>, and <code>VERSION_CHANGE</code>. If you don't provide the parameter, the default access mode is <code>READ_ONLY</code>. To avoid slowing things down, don't open a <code>READ_WRITE</code> transaction, unless you actually need to write into the database.</dd>
</dl>
</div><div id="section_23"><span id="Sample_code"></span><h5 class="editable">Sample code</h5>
<p>To start a transaction with the following scope, you can use the code snippets in the table. As noted earlier:</p>
<ul> <li>Add prefixes to the methods in WebKit browsers, (that is, instead of <code>IDBTransaction.READ_ONLY</code>, use <code>webkitIDBTransaction.READ_ONLY</code>).</li> <li>The default mode is <code>READ_ONLY</code>, so you don't really have to specify it. Of course, if you need to write into the object store, you can open the transaction in the <code>READ_WRITE</code> mode.</li>
</ul>
<table class="standard-table"> <thead> <tr> <th scope="col" width="185">Scope</th> <th scope="col" width="1018">Code</th> </tr> <tr> <td>Single object store</td> <td> <p><code>var transaction = db.transaction(['my-store-name'], IDBTransaction.READ_ONLY); </code></p> <p>Alternatively:</p> <p><code>var transaction = db.transaction('my-store-name', IDBTransaction.READ_ONLY);</code></p> </td> </tr> <tr> <td>Multiple object stores</td> <td><code>var transaction = db.transaction(['my-store-name', 'my-store-name2'], IDBTransaction.READ_ONLY);</code></td> </tr> <tr> <td>All object stores</td> <td> <p><code>var transaction = db.transaction(db.objectStoreNames, IDBTransaction.READ_ONLY);</code></p> <p>You cannot pass an empty array into the storeNames parameter, such as in the following: <code>var transaction = db.transaction([], IDBTransaction.READ_ONLY);.</code></p> <div class="warning"><strong>Warning:</strong>&nbsp; Accessing all obejct stores under the <code>READ_WRITE</code> mode means that you can run only that transaction. You cannot have writing transactions with overlapping scopes.</div> </td> </tr> </thead> <tbody> </tbody>
</table>
</div><div id="section_24"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeRequest">IDBTransaction</a></code></dt> <dd>The transaction object.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Exception</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The error is thrown for one of two reasons: <ul> <li>The <code>close()</code> method has been called on this IDBDatabase instance.</li> <li>The object store has been deleted or removed.</li> </ul> </td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code></td> <td>One of the object stores doesn't exist in the connected database.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
				</transaction>
				<transaction public="1" set="method">
					<f a="storeNames:mode">
						<c path="Array"><c path="String"/></c>
						<c path="String"/>
						<c path="js.html.idb.Transaction"/>
					</f>
					<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction">IDBTransaction</a> object, and starts a transaction in a separate thread. &nbsp;The method returns a transaction object (<a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction"><code>IDBTransaction</code></a>) containing the <a title="en/IndexedDB/IDBTransaction#objectStore()" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#objectStore()">objectStore()</a> method, which you can use to access your object store.&nbsp;</p>

<div id="section_22"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>storeNames</dt> <dd>The names of object stores and indexes that are in the scope of the new transaction. Specify only the object stores that you need to access.</dd> <dt>mode</dt> <dd><em>Optional</em>. The types of access that can be performed in the transaction. Transactions are opened in one of three modes: <code>READ_ONLY</code>, <code>READ_WRITE</code>, and <code>VERSION_CHANGE</code>. If you don't provide the parameter, the default access mode is <code>READ_ONLY</code>. To avoid slowing things down, don't open a <code>READ_WRITE</code> transaction, unless you actually need to write into the database.</dd>
</dl>
</div><div id="section_23"><span id="Sample_code"></span><h5 class="editable">Sample code</h5>
<p>To start a transaction with the following scope, you can use the code snippets in the table. As noted earlier:</p>
<ul> <li>Add prefixes to the methods in WebKit browsers, (that is, instead of <code>IDBTransaction.READ_ONLY</code>, use <code>webkitIDBTransaction.READ_ONLY</code>).</li> <li>The default mode is <code>READ_ONLY</code>, so you don't really have to specify it. Of course, if you need to write into the object store, you can open the transaction in the <code>READ_WRITE</code> mode.</li>
</ul>
<table class="standard-table"> <thead> <tr> <th scope="col" width="185">Scope</th> <th scope="col" width="1018">Code</th> </tr> <tr> <td>Single object store</td> <td> <p><code>var transaction = db.transaction(['my-store-name'], IDBTransaction.READ_ONLY); </code></p> <p>Alternatively:</p> <p><code>var transaction = db.transaction('my-store-name', IDBTransaction.READ_ONLY);</code></p> </td> </tr> <tr> <td>Multiple object stores</td> <td><code>var transaction = db.transaction(['my-store-name', 'my-store-name2'], IDBTransaction.READ_ONLY);</code></td> </tr> <tr> <td>All object stores</td> <td> <p><code>var transaction = db.transaction(db.objectStoreNames, IDBTransaction.READ_ONLY);</code></p> <p>You cannot pass an empty array into the storeNames parameter, such as in the following: <code>var transaction = db.transaction([], IDBTransaction.READ_ONLY);.</code></p> <div class="warning"><strong>Warning:</strong>&nbsp; Accessing all obejct stores under the <code>READ_WRITE</code> mode means that you can run only that transaction. You cannot have writing transactions with overlapping scopes.</div> </td> </tr> </thead> <tbody> </tbody>
</table>
</div><div id="section_24"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBTransaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeRequest">IDBTransaction</a></code></dt> <dd>The transaction object.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Exception</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The error is thrown for one of two reasons: <ul> <li>The <code>close()</code> method has been called on this IDBDatabase instance.</li> <li>The object store has been deleted or removed.</li> </ul> </td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code></td> <td>One of the object stores doesn't exist in the connected database.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
				</transaction>
			</overloads>
		</transaction>
		<haxe_doc><![CDATA[<p>The <code>IDBDatabase</code> interface of the IndexedDB&nbsp;API provides asynchronous access to a <a title="en/IndexedDB#database connection" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#database_connection">connection to a database</a>. Use it to create, manipulate, and delete objects in that database. The interface also provides the only way to get a <a title="en/IndexedDB#gloss transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_transaction">transaction</a>&nbsp;and manage versions on that database.</p>
<p>Inherits from: <a title="en/DOM/EventTarget" rel="internal" href="/api/js/html/EventTarget">EventTarget</a></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabase">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBDatabase"</e></m></meta>
	</class>
	<class path="js.html.idb.Factory" params="" file="/usr/lib/haxe/std/js/html/idb/Factory.hx" extern="1">
		<cmp public="1" set="method"><f a="first:second">
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.Key"/>
	<x path="Int"/>
</f></cmp>
		<deleteDatabase public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.idb.VersionChangeRequest"/>
</f></deleteDatabase>
		<getDatabaseNames public="1" set="method"><f a=""><c path="js.html.idb.Request"/></f></getDatabaseNames>
		<open public="1" set="method"><f a="name:?version">
	<c path="String"/>
	<x path="Int"/>
	<c path="js.html.idb.OpenDBRequest"/>
</f></open>
		<haxe_doc><![CDATA[<p>The <code>IDBFactory</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB&nbsp;API</a> lets applications asynchronously access the indexed databases. The object that implements the interface is&nbsp; <code>window.indexedDB</code>. You open—that is, create and access—and delete a database with the object and not directly with <code>IDBFactory</code>.</p>
<p>This interface still has vendor prefixes, that is to say, you have to make calls with <code>mozIndexedDB.open()</code> for Firefox and <code>webkitIndexedDB.open()</code> for Chrome.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBFactory">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBFactory"</e></m></meta>
	</class>
	<class path="js.html.idb.Index" params="" file="/usr/lib/haxe/std/js/html/idb/Index.hx" extern="1">
		<keyPath public="1" set="null"><c path="js.html.idb.Any"/></keyPath>
		<multiEntry public="1" set="null"><x path="Bool"/></multiEntry>
		<name public="1" set="null"><c path="String"/></name>
		<objectStore public="1" set="null"><c path="js.html.idb.ObjectStore"/></objectStore>
		<unique public="1" set="null"><x path="Bool"/></unique>
		<count public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and in a separate thread, returns the number of records within a key range. For example, if you want to see how many records are between keys 1000 and 2000 in an object store, you can write the following: <code> var req = store.count(<a title="en/IndexedDB/IDBKeyRange" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBKeyRange">IDBKeyRange</a>.bound(1000, 2000));</code></p>
<pre>IDBRequest count (
  in optional any key
) raises (IDBDatabaseException);
</pre>
<div id="section_15"><span id="Parameters_3"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be counted.</dd>
</dl></div><div id="section_16"><span id="Returns_3"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_17"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise a <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><count public="1" set="method">
	<f a="?range">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and in a separate thread, returns the number of records within a key range. For example, if you want to see how many records are between keys 1000 and 2000 in an object store, you can write the following: <code> var req = store.count(<a title="en/IndexedDB/IDBKeyRange" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBKeyRange">IDBKeyRange</a>.bound(1000, 2000));</code></p>
<pre>IDBRequest count (
  in optional any key
) raises (IDBDatabaseException);
</pre>
<div id="section_15"><span id="Parameters_3"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be counted.</dd>
</dl></div><div id="section_16"><span id="Returns_3"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_17"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise a <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</count></overloads>
		</count>
		<get public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, finds either:</p>
<ul> <li>The value in the referenced object store that corresponds to the given key.</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>
</ul>
<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title="en/IndexedDB/IDBRequest#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result">result</a></code> of the request object.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>
<pre>IDBRequest get (
  in any key
) raises (IDBDatabaseException);
</pre>
<div id="section_7"><span id="Parameters"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>
</dl>
</div><div id="section_8"><span id="Returns"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_9"><span id="Exceptions"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><get public="1" set="method">
	<f a="key">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, finds either:</p>
<ul> <li>The value in the referenced object store that corresponds to the given key.</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>
</ul>
<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title="en/IndexedDB/IDBRequest#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result">result</a></code> of the request object.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>
<pre>IDBRequest get (
  in any key
) raises (IDBDatabaseException);
</pre>
<div id="section_7"><span id="Parameters"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>
</dl>
</div><div id="section_8"><span id="Returns"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_9"><span id="Exceptions"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</get></overloads>
		</get>
		<getKey public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, finds either:</p>
<ul> <li>The value in the index that corresponds to the given key</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>
</ul>
<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title="en/IndexedDB/IDBRequest#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result">result</a></code> of the request object.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>
<pre>IDBRequest getKey (
  in any key
) raises (IDBDatabaseException);
</pre>
<div id="section_11"><span id="Parameters_2"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>
</dl>
</div><div id="section_12"><span id="Returns_2"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_13"><span id="Exceptions_2"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise a <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><getKey public="1" set="method">
	<f a="key">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, finds either:</p>
<ul> <li>The value in the index that corresponds to the given key</li> <li>The first corresponding value, if <code>key</code> is a key range.</li>
</ul>
<p>If a value is successfully found, then a structured clone of it is created and set as the <code><a title="en/IndexedDB/IDBRequest#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result">result</a></code> of the request object.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This method produces the same result for: a) a record that doesn't exist in the database and b) a record that has an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>
<pre>IDBRequest getKey (
  in any key
) raises (IDBDatabaseException);
</pre>
<div id="section_11"><span id="Parameters_2"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the record to be retrieved.</dd>
</dl>
</div><div id="section_12"><span id="Returns_2"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_13"><span id="Exceptions_2"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise a <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</getKey></overloads>
		</getKey>
		<openCursor public="1" set="method">
			<f a="key:?direction">
				<c path="js.html.idb.Key"/>
				<c path="String"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, creates a <a title="en/IndexedDB#gloss cursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_cursor">cursor</a> over the specified key range. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>
<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title="en/IndexedDB/IDBSuccessEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent">success event</a> is fired on the result object, with its <a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a> set to the new <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object; the <code><a title="en/IndexedDB/IDBCursor#attr value" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value">value</a></code> of the cursor object is set to a structured clone of the referenced value.</li> <li>If no records match the key range, then then an <a title="en/IndexedDB/IDBErrorEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent">error event</a> is fired on the request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR" rel="internal">NOT_FOUND_ERR</a></code> and a suitable <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</li>
</ul>
<pre>IDBRequest openCursor (
  in optional any? range, 
  in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_19"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required <a title="en/indexedDB#gloss direction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_direction">direction</a>. See <a title="en/IndexedDB/IDBCursor#Constants" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants">IDBCursor Constants</a> for possible values.</dd>
</dl>
</div><div id="section_20"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_21"><span id="Exceptions_4"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><openCursor public="1" set="method">
	<f a="?range:?direction">
		<c path="js.html.idb.KeyRange"/>
		<c path="String"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, creates a <a title="en/IndexedDB#gloss cursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_cursor">cursor</a> over the specified key range. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>
<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title="en/IndexedDB/IDBSuccessEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent">success event</a> is fired on the result object, with its <a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a> set to the new <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object; the <code><a title="en/IndexedDB/IDBCursor#attr value" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value">value</a></code> of the cursor object is set to a structured clone of the referenced value.</li> <li>If no records match the key range, then then an <a title="en/IndexedDB/IDBErrorEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent">error event</a> is fired on the request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR" rel="internal">NOT_FOUND_ERR</a></code> and a suitable <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</li>
</ul>
<pre>IDBRequest openCursor (
  in optional any? range, 
  in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_19"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required <a title="en/indexedDB#gloss direction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_direction">direction</a>. See <a title="en/IndexedDB/IDBCursor#Constants" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants">IDBCursor Constants</a> for possible values.</dd>
</dl>
</div><div id="section_20"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_21"><span id="Exceptions_4"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</openCursor></overloads>
		</openCursor>
		<openKeyCursor public="1" set="method">
			<f a="key:?direction">
				<c path="js.html.idb.Key"/>
				<c path="String"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>
<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title="en/IndexedDB/IDBSuccessEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent">success event</a> is fired on the result object, with its <a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a> set to the new <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object; the <code><a title="en/IndexedDB/IDBCursor#attr value" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value">value</a></code> of the cursor object is set to the value of the found record.</li> <li>If no records match the key range, then then an <a title="en/IndexedDB/IDBErrorEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent">error event</a> is fired on the request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR" rel="internal">NOT_FOUND_ERR</a></code> and a suitable <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</li>
</ul>
<pre>IDBRequest openKeyCursor (
  in optional any? range, 
  in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_23"><span id="Parameters_5"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required direction. See <a title="en/IndexedDB/IDBCursor#Constants" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants">IDBCursor Constants</a> for possible values.</dd>
</dl>
</div><div id="section_24"><span id="Returns_5"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_5"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><openKeyCursor public="1" set="method">
	<f a="?range:?direction">
		<c path="js.html.idb.KeyRange"/>
		<c path="String"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index. The method sets the position of the cursor to the appropriate record, based on the specified direction.</p>
<ul> <li>If the key range is not specified or is null, then the range includes all the records.</li> <li>If at least one record matches the key range, then a <a title="en/IndexedDB/IDBSuccessEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent">success event</a> is fired on the result object, with its <a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a> set to the new <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object; the <code><a title="en/IndexedDB/IDBCursor#attr value" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value">value</a></code> of the cursor object is set to the value of the found record.</li> <li>If no records match the key range, then then an <a title="en/IndexedDB/IDBErrorEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent">error event</a> is fired on the request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR" rel="internal">NOT_FOUND_ERR</a></code> and a suitable <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</li>
</ul>
<pre>IDBRequest openKeyCursor (
  in optional any? range, 
  in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_23"><span id="Parameters_5"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd><em>Optional.</em> The key range to use as the cursor's range.</dd> <dt>direction</dt> <dd><em>Optional.</em> The cursor's required direction. See <a title="en/IndexedDB/IDBCursor#Constants" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor#Constants">IDBCursor Constants</a> for possible values.</dd>
</dl>
</div><div id="section_24"><span id="Returns_5"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest" rel="internal">IDBRequest</a></code></dt>
</dl>
<dl> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_25"><span id="Exceptions_5"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR"><code>TRANSACTION_INACTIVE_ERR</code></a></td> <td>The index's transaction is not active.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></td> <td>The <code>key</code> parameter was not a valid value.</td> </tr> <tr> <td><code><a title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></td> <td>The request was made on a source object that has been deleted or removed.</td> </tr> </tbody>
</table>
</div> Throws DatabaseException.]]></haxe_doc>
</openKeyCursor></overloads>
		</openKeyCursor>
		<haxe_doc><![CDATA[<p>The <code>IDBIndex</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB API</a> provides asynchronous access to an <a title="en/IndexedDB#gloss index" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_index">index</a> in a database. An index is a kind of object store for looking up records in another object store, called the <em>referenced object store</em>. You use this interface to retrieve data.</p>
<p>Inherits from: <a title="en/DOM/EventTarget" rel="internal" href="/api/js/html/EventTarget">EventTarget</a></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBIndex">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBIndex"</e></m></meta>
	</class>
	<class path="js.html.idb.Key" params="" file="/usr/lib/haxe/std/js/html/idb/Key.hx" extern="1"><meta><m n=":native"><e>"IDBKey"</e></m></meta></class>
	<class path="js.html.idb.KeyRange" params="" file="/usr/lib/haxe/std/js/html/idb/KeyRange.hx" extern="1">
		<bound public="1" set="method" static="1"><f a="lower:upper:?lowerOpen:?upperOpen">
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.Key"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="js.html.idb.KeyRange"/>
</f></bound>
		<lowerBound public="1" set="method" static="1"><f a="bound:?open">
	<c path="js.html.idb.Key"/>
	<x path="Bool"/>
	<c path="js.html.idb.KeyRange"/>
</f></lowerBound>
		<only public="1" set="method" static="1"><f a="value">
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.KeyRange"/>
</f></only>
		<upperBound public="1" set="method" static="1"><f a="bound:?open">
	<c path="js.html.idb.Key"/>
	<x path="Bool"/>
	<c path="js.html.idb.KeyRange"/>
</f></upperBound>
		<lower public="1" set="null"><c path="js.html.idb.Key"/></lower>
		<lowerOpen public="1" set="null"><x path="Bool"/></lowerOpen>
		<upper public="1" set="null"><c path="js.html.idb.Key"/></upper>
		<upperOpen public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns false if the upper-bound value is included in the key range.</haxe_doc>
		</upperOpen>
		<haxe_doc><![CDATA[The <code>IDBKeyRange</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB API</a> represents a continuous interval over some data type that is used for keys. Records can be retrieved from object stores and indexes using keys or a range of keys. You can limit the range using lower and upper bounds. For example, you can iterate over all values of a key between x and y.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBKeyRange">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBKeyRange"</e></m></meta>
	</class>
	<class path="js.html.idb.ObjectStore" params="" file="/usr/lib/haxe/std/js/html/idb/ObjectStore.hx" extern="1">
		<autoIncrement public="1" set="null"><x path="Bool"/></autoIncrement>
		<indexNames public="1" set="null">
			<c path="js.html.DOMStringList"/>
			<haxe_doc><![CDATA[A list of the names of <a title="en/IndexedDB#gloss index" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_index">indexes</a> on objects in this object store.]]></haxe_doc>
		</indexNames>
		<keyPath public="1" set="null">
			<c path="js.html.idb.Any"/>
			<haxe_doc><![CDATA[The <a title="en/IndexedDB#gloss key path" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_key_path">key path</a> of this object store. If this attribute is null, the application must provide a key for each modification operation.]]></haxe_doc>
		</keyPath>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of this object store.</haxe_doc>
		</name>
		<transaction public="1" set="null"><c path="js.html.idb.Transaction"/></transaction>
		<add public="1" set="method"><f a="value:?key">
	<d/>
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.Request"/>
</f></add>
		<clear public="1" set="method"><f a=""><c path="js.html.idb.Request"/></f></clear>
		<count public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <a title="IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object and asynchronously count the amount of objects in the object store that match the parameter, a key or a key range. If the parameter is not valid returns an exception.</p>

<div id="section_12"><span id="Parameters_2"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the records to be counted.</dd>
</dl>
</div><div id="section_13"><span id="Returns_3"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_14"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<dl> <dt><code><a href="IDBDatabaseException#DATA_ERR" rel="internal" title="en/IndexedDB/DatabaseException#DATA ERR">DATA_ERR</a></code></dt> <dd>If the object store uses in-line keys or has a key generator, and a key parameter was provided.<br> If the object store uses out-of-line keys and has no key generator, and no key parameter was provided.<br> If the object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.<br> If the key parameter was provided but does not contain a valid key.<br> If there are indexed on this object store, and using their key path on the value parameter yields a value that is not a valid key.</dd> <dt><code><a href="IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>The request was made on a source object that has been deleted or removed.</dd>
</dl></div> Throws DatabaseException.]]></haxe_doc>
			<overloads><count public="1" set="method">
	<f a="?range">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Immediately returns an <a title="IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object and asynchronously count the amount of objects in the object store that match the parameter, a key or a key range. If the parameter is not valid returns an exception.</p>

<div id="section_12"><span id="Parameters_2"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key or key range that identifies the records to be counted.</dd>
</dl>
</div><div id="section_13"><span id="Returns_3"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_14"><span id="Exceptions_3"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<dl> <dt><code><a href="IDBDatabaseException#DATA_ERR" rel="internal" title="en/IndexedDB/DatabaseException#DATA ERR">DATA_ERR</a></code></dt> <dd>If the object store uses in-line keys or has a key generator, and a key parameter was provided.<br> If the object store uses out-of-line keys and has no key generator, and no key parameter was provided.<br> If the object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.<br> If the key parameter was provided but does not contain a valid key.<br> If there are indexed on this object store, and using their key path on the value parameter yields a value that is not a valid key.</dd> <dt><code><a href="IDBDatabaseException#NOT_ALLOWED_ERR" rel="internal" title="en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>The request was made on a source object that has been deleted or removed.</dd>
</dl></div> Throws DatabaseException.]]></haxe_doc>
</count></overloads>
		</count>
		<createIndex public="1" set="method">
			<f a="name:keyPath:?options">
				<c path="String"/>
				<c path="String"/>
				<d/>
				<c path="js.html.idb.Index"/>
			</f>
			<haxe_doc><![CDATA[<p>Creates and returns a new index in the connected database. Note that this method must be called only from a <a title="en/IndexedDB/IDBTransaction#VERSION CHANGE" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE"><code>VERSION_CHANGE</code></a> transaction callback.</p>
<pre>IDBIndex createIndex (
&nbsp; in DOMString name, 
&nbsp; in DOMString keyPath, 
&nbsp; in Object optionalParameters
) raises (IDBDatabaseException);

</pre>
<div id="section_16"><span id="Parameters_3"></span><h5 class="editable">Parameters</h5>
<dl> <dt>name</dt> <dd>The name of the index to create.</dd> <dt>keyPath</dt> <dd>The key path for the index to use.</dd> <dt>optionalParameters</dt> <dd> <div class="warning"><strong>Warning:</strong> The latest draft of the specification changed this to <code>IDBIndexParameters</code>, which is not yet recognized by any browser</div> <p>Options object whose attributes are optional parameters to the method. It includes the following properties:</p> <table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code>unique</code></td> <td>If true, the index will not allow duplicate values for a single key.</td> </tr> <tr> <td><code>multientry</code></td> <td>If true, the index will add an entry in the index for each array element when the <em>keypath</em> resolves to an Array. If false, it will add one single entry containing the Array.</td> </tr> </tbody> </table> <p>Unknown parameters are ignored.</p> </dd> <dd></dd>
</dl>
</div><div id="section_17"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBIndex" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBIndex">IDBIndex</a></dt> <dd>The newly created index.</dd>
</dl>
</div><div id="section_18"><span id="Exceptions_4"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<dl> <dt><code><a title="en/IndexedDB/DatabaseException#CONSTRAINT ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR">CONSTRAINT_ERR</a></code></dt> <dd>If an index with the same name (based on case-sensitive comparison) already exists in the connected database.</dd> <dt><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>If this method was not called from a <a title="en/IndexedDB/IDBTransaction#VERSION CHANGE" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE"><code>VERSION_CHANGE</code></a> transaction callback.</dd>
</dl></div> Throws DatabaseException.]]></haxe_doc>
			<overloads><createIndex public="1" set="method">
	<f a="name:keyPath:?options">
		<c path="String"/>
		<c path="Array"><c path="String"/></c>
		<d/>
		<c path="js.html.idb.Index"/>
	</f>
	<haxe_doc><![CDATA[<p>Creates and returns a new index in the connected database. Note that this method must be called only from a <a title="en/IndexedDB/IDBTransaction#VERSION CHANGE" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE"><code>VERSION_CHANGE</code></a> transaction callback.</p>
<pre>IDBIndex createIndex (
&nbsp; in DOMString name, 
&nbsp; in DOMString keyPath, 
&nbsp; in Object optionalParameters
) raises (IDBDatabaseException);

</pre>
<div id="section_16"><span id="Parameters_3"></span><h5 class="editable">Parameters</h5>
<dl> <dt>name</dt> <dd>The name of the index to create.</dd> <dt>keyPath</dt> <dd>The key path for the index to use.</dd> <dt>optionalParameters</dt> <dd> <div class="warning"><strong>Warning:</strong> The latest draft of the specification changed this to <code>IDBIndexParameters</code>, which is not yet recognized by any browser</div> <p>Options object whose attributes are optional parameters to the method. It includes the following properties:</p> <table class="standard-table"> <thead> <tr> <th scope="col" width="131">Attribute</th> <th scope="col" width="698">Description</th> </tr> </thead> <tbody> <tr> <td><code>unique</code></td> <td>If true, the index will not allow duplicate values for a single key.</td> </tr> <tr> <td><code>multientry</code></td> <td>If true, the index will add an entry in the index for each array element when the <em>keypath</em> resolves to an Array. If false, it will add one single entry containing the Array.</td> </tr> </tbody> </table> <p>Unknown parameters are ignored.</p> </dd> <dd></dd>
</dl>
</div><div id="section_17"><span id="Returns_4"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBIndex" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBIndex">IDBIndex</a></dt> <dd>The newly created index.</dd>
</dl>
</div><div id="section_18"><span id="Exceptions_4"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p>
<dl> <dt><code><a title="en/IndexedDB/DatabaseException#CONSTRAINT ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#CONSTRAINT_ERR">CONSTRAINT_ERR</a></code></dt> <dd>If an index with the same name (based on case-sensitive comparison) already exists in the connected database.</dd> <dt><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>If this method was not called from a <a title="en/IndexedDB/IDBTransaction#VERSION CHANGE" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE"><code>VERSION_CHANGE</code></a> transaction callback.</dd>
</dl></div> Throws DatabaseException.]]></haxe_doc>
</createIndex></overloads>
		</createIndex>
		<delete public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code> object, and removes the record specified by the given key from this object store, and any indexes that reference it, in a separate thread. If no record exists in this object store corresponding to the key, an error event is fired on the returned request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code> and an appropriate <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>. If the record is successfully removed, then a success event is fired on the returned request object, using the <code><a title="en/IndexedDB/IDBTransactionEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent">IDBTransactionEvent</a></code> interface, with the <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to <code>undefined</code>, and <a title="en/IndexedDB/IDBTransactionEvent#attr transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction">transaction</a> set to the transaction in which this object store is opened.</p>
<pre>IDBRequest delete (
  in any key
) raises (IDBDatabaseException); 
</pre>
<div id="section_20"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key to use to identify the record.</dd>
</dl>
</div><div id="section_21"><span id="Returns_5"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_22"><span id="Exceptions_5"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p></div> Throws DatabaseException.]]></haxe_doc>
			<overloads><delete public="1" set="method">
	<f a="keyRange">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Immediately returns an <code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code> object, and removes the record specified by the given key from this object store, and any indexes that reference it, in a separate thread. If no record exists in this object store corresponding to the key, an error event is fired on the returned request object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code> and an appropriate <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>. If the record is successfully removed, then a success event is fired on the returned request object, using the <code><a title="en/IndexedDB/IDBTransactionEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent">IDBTransactionEvent</a></code> interface, with the <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to <code>undefined</code>, and <a title="en/IndexedDB/IDBTransactionEvent#attr transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction">transaction</a> set to the transaction in which this object store is opened.</p>
<pre>IDBRequest delete (
  in any key
) raises (IDBDatabaseException); 
</pre>
<div id="section_20"><span id="Parameters_4"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key to use to identify the record.</dd>
</dl>
</div><div id="section_21"><span id="Returns_5"></span><h5 class="editable">Returns</h5>
<dl> <dt><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_22"><span id="Exceptions_5"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following codes:</p></div> Throws DatabaseException.]]></haxe_doc>
</delete></overloads>
		</delete>
		<deleteIndex public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></deleteIndex>
		<get public="1" set="method">
			<f a="key">
				<c path="js.html.idb.Key"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and retrieves the requested record from the object store in a separate thread. If the operation is successful, then a success event is fired on the returned object, using the <a title="en/IndexedDB/IDBTransactionEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent">IDBTransactionEvent</a> interface, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to the retrieved value, and <code><a title="en/IndexedDB/IDBTransactionEvent#attr transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction">transaction</a></code> set to the transaction in which this object store is opened. If a record does not exist in the object store for the key parameter, then an error event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code> and an appropriate <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This function produces the same result if no record with the given key exists in the database as when a record exists, but with an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>

<div id="section_27"><span id="Parameters_6"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key identifying the record to retrieve.</dd>
</dl>
</div><div id="section_28"><span id="Returns_6"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_29"><span id="Exceptions_7"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<dl> <dt><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></dt> <dd>If the <code>key</code> parameter was not a valid value.</dd> <dt><code><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR">TRANSACTION_INACTIVE_ERR</a></code></dt> <dd>If the associated transaction is not active.</dd>
</dl>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><get public="1" set="method">
	<f a="key">
		<c path="js.html.idb.KeyRange"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and retrieves the requested record from the object store in a separate thread. If the operation is successful, then a success event is fired on the returned object, using the <a title="en/IndexedDB/IDBTransactionEvent" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent">IDBTransactionEvent</a> interface, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to the retrieved value, and <code><a title="en/IndexedDB/IDBTransactionEvent#attr transaction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBTransactionEvent#attr_transaction">transaction</a></code> set to the transaction in which this object store is opened. If a record does not exist in the object store for the key parameter, then an error event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBErrorEvent#attr code" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_code">code</a></code> set to <code><a title="en/IndexedDB/IDBDatabaseException#NOT FOUND ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_FOUND_ERR">NOT_FOUND_ERR</a></code> and an appropriate <code><a title="en/IndexedDB/IDBErrorEvent#attr message" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBErrorEvent#attr_message">message</a></code>.</p>
<p></p><div class="note"><strong>Note:</strong>&nbsp;This function produces the same result if no record with the given key exists in the database as when a record exists, but with an undefined value. To tell these situations apart, call the openCursor() method with the same key. That method provides a cursor if the record exists, and not if it does not.</div>
<p></p>

<div id="section_27"><span id="Parameters_6"></span><h5 class="editable">Parameters</h5>
<dl> <dt>key</dt> <dd>The key identifying the record to retrieve.</dd>
</dl>
</div><div id="section_28"><span id="Returns_6"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_29"><span id="Exceptions_7"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an <a title="en/IndexedDB/IDBDatabaseException" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException">IDBDatabaseException</a> with the following code:</p>
<dl> <dt><code><a title="en/IndexedDB/IDBDatabaseException#DATA ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#DATA_ERR">DATA_ERR</a></code></dt> <dd>If the <code>key</code> parameter was not a valid value.</dd> <dt><code><a title="en/IndexedDB/IDBDatabaseException#TRANSACTION INACTIVE ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#TRANSACTION_INACTIVE_ERR">TRANSACTION_INACTIVE_ERR</a></code></dt> <dd>If the associated transaction is not active.</dd>
</dl>
</div> Throws DatabaseException.]]></haxe_doc>
</get></overloads>
		</get>
		<index public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.idb.Index"/>
</f></index>
		<openCursor public="1" set="method">
			<f a="key:?direction">
				<c path="js.html.idb.Key"/>
				<c path="String"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and creates a <a title="en/IndexedDB#gloss cursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_cursor">cursor</a> over the records in this object store, in a separate thread. If there is even a single record that matches the <a title="en/IndexedDB#gloss key range" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_key_range">key range</a>, then a success event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to the <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object for the new cursor. If no records match the key range, then a success event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to null.</p>
<pre>IDBRequest openCursor (
&nbsp; in optional IDBKeyRange range, 
&nbsp; in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_35"><span id="Parameters_8"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd>The key range to use as the cursor's range. If this parameter is unspecified or null, then the range includes all the records in the object store.</dd> <dt>direction</dt> <dd>The cursor's <a title="en/IndexedDB#gloss direction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_direction">direction</a>.</dd>
</dl>
</div><div id="section_36"><span id="Returns_8"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_37"><span id="Exceptions_9"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an IDBDatabaseException with the following code:</p>
<dl> <dt><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>If this object store is not in the scope of any existing transaction on the connected database.</dd>
</dl>
</div> Throws DatabaseException.]]></haxe_doc>
			<overloads><openCursor public="1" set="method">
	<f a="?range:?direction">
		<c path="js.html.idb.KeyRange"/>
		<c path="String"/>
		<c path="js.html.idb.Request"/>
	</f>
	<haxe_doc><![CDATA[<p>Immediately returns an <a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a> object, and creates a <a title="en/IndexedDB#gloss cursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_cursor">cursor</a> over the records in this object store, in a separate thread. If there is even a single record that matches the <a title="en/IndexedDB#gloss key range" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_key_range">key range</a>, then a success event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to the <a title="en/IndexedDB/IDBCursor" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBCursor">IDBCursor</a> object for the new cursor. If no records match the key range, then a success event is fired on the returned object, with its <code><a title="en/IndexedDB/IDBSuccessEvent#attr result" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBSuccessEvent#attr_result">result</a></code> set to null.</p>
<pre>IDBRequest openCursor (
&nbsp; in optional IDBKeyRange range, 
&nbsp; in optional unsigned short direction
) raises (IDBDatabaseException);
</pre>
<div id="section_35"><span id="Parameters_8"></span><h5 class="editable">Parameters</h5>
<dl> <dt>range</dt> <dd>The key range to use as the cursor's range. If this parameter is unspecified or null, then the range includes all the records in the object store.</dd> <dt>direction</dt> <dd>The cursor's <a title="en/IndexedDB#gloss direction" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_direction">direction</a>.</dd>
</dl>
</div><div id="section_36"><span id="Returns_8"></span><h5 class="editable">Returns</h5>
<dl> <dt><code><a title="en/IndexedDB/IDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">IDBRequest</a></code></dt> <dd>A request object on which subsequent events related to this operation are fired.</dd>
</dl>
</div><div id="section_37"><span id="Exceptions_9"></span><h5 class="editable">Exceptions</h5>
<p>This method can raise an IDBDatabaseException with the following code:</p>
<dl> <dt><code><a title="en/IndexedDB/DatabaseException#NOT ALLOWED ERR" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabaseException#NOT_ALLOWED_ERR">NOT_ALLOWED_ERR</a></code></dt> <dd>If this object store is not in the scope of any existing transaction on the connected database.</dd>
</dl>
</div> Throws DatabaseException.]]></haxe_doc>
</openCursor></overloads>
		</openCursor>
		<put public="1" set="method"><f a="value:?key">
	<d/>
	<c path="js.html.idb.Key"/>
	<c path="js.html.idb.Request"/>
</f></put>
		<haxe_doc><![CDATA[The <code>IDBObjectStore</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB API</a> represents an <a title="en/IndexedDB#gloss object store" rel="internal" href="https://developer.mozilla.org/en/IndexedDB#gloss_object_store">object store</a> in a database.&nbsp;Records within an object store are sorted according to their keys. This sorting enable fast insertion, look-up, and &nbsp;ordered retrieval.&nbsp;<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBObjectStore">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBObjectStore"</e></m></meta>
	</class>
	<class path="js.html.idb.Request" params="" file="/usr/lib/haxe/std/js/html/idb/Request.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<error public="1" set="null">
			<c path="js.html.DOMError"/>
			<haxe_doc>Getter throws DatabaseException.</haxe_doc>
		</error>
		<errorCode public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Getter throws DatabaseException.</haxe_doc>
		</errorCode>
		<errorMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc>Getter throws DatabaseException.</haxe_doc>
		</errorMessage>
		<onerror public="1"><t path="js.html.EventListener"/></onerror>
		<onsuccess public="1"><t path="js.html.EventListener"/></onsuccess>
		<readyState public="1" set="null"><c path="String"/></readyState>
		<result public="1" set="null">
			<c path="js.html.idb.Any"/>
			<haxe_doc>Getter throws DatabaseException.</haxe_doc>
		</result>
		<source public="1" set="null"><c path="js.html.idb.Any"/></source>
		<transaction public="1" set="null"><c path="js.html.idb.Transaction"/></transaction>
		<haxe_doc><![CDATA[<p>The <code>IDBRequest</code> interface of the IndexedDB&nbsp;API provides access to results of asynchronous requests to databases and database objects using event handler attributes. Each reading and writing operation on a database is done using a request.</p>
<p>The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the <code>IDBRequest</code> instance.</p>
<p>Inherits from: <a title="en/DOM/EventTarget" rel="internal" href="/api/js/html/EventTarget">EventTarget</a></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBRequest">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBRequest"</e></m></meta>
	</class>
	<class path="js.html.idb.OpenDBRequest" params="" file="/usr/lib/haxe/std/js/html/idb/OpenDBRequest.hx" extern="1">
		<extends path="js.html.idb.Request"/>
		<onblocked public="1"><t path="js.html.EventListener"/></onblocked>
		<onupgradeneeded public="1"><t path="js.html.EventListener"/></onupgradeneeded>
		<meta><m n=":native"><e>"IDBOpenDBRequest"</e></m></meta>
	</class>
	<class path="js.html.idb.Transaction" params="" file="/usr/lib/haxe/std/js/html/idb/Transaction.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<READ_ONLY public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Allows data to be read but not changed.&nbsp;]]></haxe_doc>
		</READ_ONLY>
		<READ_WRITE public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>Allows reading and writing of data in existing data stores to be changed.</haxe_doc>
		</READ_WRITE>
		<VERSION_CHANGE public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Allows any operation to be performed, including ones that delete and create object stores and indexes. This mode is for updating the version number of transactions that were started using the <a title="en/IndexedDB/IDBDatabase#setVersion" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabase#setVersion"><code>setVersion()</code></a> method of <a title="en/IndexedDB/IDBDatabase" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabase">IDBDatabase</a> objects. Transactions of this mode cannot run concurrently with other transactions.]]></haxe_doc>
		</VERSION_CHANGE>
		<db public="1" set="null">
			<c path="js.html.idb.Database"/>
			<haxe_doc>The database connection that this transaction is associated with.</haxe_doc>
		</db>
		<error public="1" set="null"><c path="js.html.DOMError"/></error>
		<mode public="1" set="null">
			<c path="String"/>
			<haxe_doc><![CDATA[The mode for isolating access to data in the object stores that are in the scope of the transaction. For possible values, see Constants. The default value is <code><a href="#const_read_only" title="#const read only">READ_ONLY</a></code>.]]></haxe_doc>
		</mode>
		<onabort public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[The event handler for the <code>onabort</code> event.]]></haxe_doc>
		</onabort>
		<oncomplete public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[The event handler for the <code>oncomplete</code> event.]]></haxe_doc>
		</oncomplete>
		<onerror public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc><![CDATA[The event handler for the <code>error </code>event.]]></haxe_doc>
		</onerror>
		<abort public="1" set="method"><f a=""><x path="Void"/></f></abort>
		<objectStore public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.idb.ObjectStore"/>
</f></objectStore>
		<haxe_doc><![CDATA[<p>The <code>IDBTransaction</code> interface of the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB&nbsp;API</a> provides a static, asynchronous transaction on a database using event handler attributes. All reading and writing of data are done within transactions. You actually use <code><a title="en/IndexedDB/IDBDatabase" rel="internal" href="/api/js/html/idb/Database">IDBDatabase</a></code> to start transactions and use <code>IDBTransaction</code> to set the mode of the transaction and access an object store and make your request. You can also use it to abort transactions.</p>
<p>Inherits from: <a title="en/DOM/EventTarget" rel="internal" href="/api/js/html/EventTarget">EventTarget</a></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBTransaction">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBTransaction"</e></m></meta>
	</class>
	<class path="js.html.idb.VersionChangeRequest" params="" file="/usr/lib/haxe/std/js/html/idb/VersionChangeRequest.hx" extern="1">
		<extends path="js.html.idb.Request"/>
		<onblocked public="1">
			<t path="js.html.EventListener"/>
			<haxe_doc>The event handler for the blocked event.</haxe_doc>
		</onblocked>
		<haxe_doc><![CDATA[<div class="warning"><strong>Warning: </strong> The latest specification does not include this interface anymore as the <code>IDBDatabase.setVersion()</code> method has been removed. However, it is still implemented in not up-to-date browsers. See the compatibility table for version details.<br> The new way to do it is to use the <a title="en/IndexedDB/IDBOpenDBRequest" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBOpenDBRequest"><code>IDBOpenDBRequest</code></a> interface which has now the <code>onblocked</code> handler and the newly needed <code>onupgradeneeded</code> one.</div>
<p>The <code>IDBVersionChangeRequest</code> interface the <a title="en/IndexedDB" rel="internal" href="https://developer.mozilla.org/en/IndexedDB">IndexedDB API </a>represents a request to change the version of a database. It is used only by the <a title="en/IndexedDB/IDBDatabase#setVersion" rel="internal" href="https://developer.mozilla.org/en/IndexedDB/IDBDatabase#setVersion"><code>setVersion()</code></a> method of <code><a title="en/IndexedDB/IDBDatabase" rel="internal" href="/api/js/html/idb/Database">IDBDatabase</a></code>.</p>
<p>Inherits from:&nbsp;<code><a title="en/IndexedDB/IDBRequest" rel="internal" href="/api/js/html/idb/Request">IDBRequest</a></code></p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/IndexedDB/IDBVersionChangeRequest">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"IDBVersionChangeRequest"</e></m></meta>
	</class>
	<class path="js.html.rtc.MediaStream" params="" file="/usr/lib/haxe/std/js/html/rtc/MediaStream.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<ENDED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></ENDED>
		<LIVE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></LIVE>
		<audioTracks public="1" set="null"><c path="js.html.rtc.MediaStreamTrackList"/></audioTracks>
		<label public="1" set="null"><c path="String"/></label>
		<onended public="1"><t path="js.html.EventListener"/></onended>
		<readyState public="1" set="null"><x path="Int"/></readyState>
		<videoTracks public="1" set="null"><c path="js.html.rtc.MediaStreamTrackList"/></videoTracks>
		<new public="1" set="method"><f a="audioTracks:videoTracks">
	<c path="js.html.rtc.MediaStreamTrackList"/>
	<c path="js.html.rtc.MediaStreamTrackList"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"MediaStream"</e></m></meta>
	</class>
	<class path="js.html.rtc.LocalMediaStream" params="" file="/usr/lib/haxe/std/js/html/rtc/LocalMediaStream.hx" extern="1">
		<extends path="js.html.rtc.MediaStream"/>
		<stop public="1" set="method"><f a=""><x path="Void"/></f></stop>
		<meta><m n=":native"><e>"LocalMediaStream"</e></m></meta>
	</class>
	<class path="js.html.rtc.MediaStreamTrack" params="" file="/usr/lib/haxe/std/js/html/rtc/MediaStreamTrack.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<ENDED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></ENDED>
		<LIVE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></LIVE>
		<MUTED public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></MUTED>
		<enabled public="1"><x path="Bool"/></enabled>
		<kind public="1" set="null"><c path="String"/></kind>
		<label public="1" set="null"><c path="String"/></label>
		<onended public="1"><t path="js.html.EventListener"/></onended>
		<onmute public="1"><t path="js.html.EventListener"/></onmute>
		<onunmute public="1"><t path="js.html.EventListener"/></onunmute>
		<readyState public="1" set="null"><x path="Int"/></readyState>
		<meta><m n=":native"><e>"MediaStreamTrack"</e></m></meta>
	</class>
	<class path="js.html.rtc.MediaStreamTrackList" params="" file="/usr/lib/haxe/std/js/html/rtc/MediaStreamTrackList.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<length public="1" set="null"><x path="Int"/></length>
		<onaddtrack public="1"><t path="js.html.EventListener"/></onaddtrack>
		<onremovetrack public="1"><t path="js.html.EventListener"/></onremovetrack>
		<add public="1" set="method"><f a="track">
	<c path="js.html.rtc.MediaStreamTrack"/>
	<x path="Void"/>
</f></add>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.rtc.MediaStreamTrack"/>
</f></item>
		<remove public="1" set="method"><f a="track">
	<c path="js.html.rtc.MediaStreamTrack"/>
	<x path="Void"/>
</f></remove>
		<meta><m n=":native"><e>"MediaStreamTrackList"</e></m></meta>
	</class>
	<class path="js.html.rtc.NavigatorUserMediaError" params="" file="/usr/lib/haxe/std/js/html/rtc/NavigatorUserMediaError.hx" extern="1">
		<PERMISSION_DENIED public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></PERMISSION_DENIED>
		<code public="1" set="null"><x path="Int"/></code>
		<meta><m n=":native"><e>"NavigatorUserMediaError"</e></m></meta>
	</class>
	<typedef path="js.html.rtc.NavigatorUserMediaErrorCallback" params="" file="/usr/lib/haxe/std/js/html/rtc/NavigatorUserMediaErrorCallback.hx"><f a="">
	<c path="js.html.rtc.NavigatorUserMediaError"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.rtc.NavigatorUserMediaSuccessCallback" params="" file="/usr/lib/haxe/std/js/html/rtc/NavigatorUserMediaSuccessCallback.hx"><f a="">
	<c path="js.html.rtc.LocalMediaStream"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.sql.Database" params="" file="/usr/lib/haxe/std/js/html/sql/Database.hx" extern="1">
		<version public="1" set="null"><c path="String"/></version>
		<changeVersion public="1" set="method"><f a="oldVersion:newVersion:?callback_:?errorCallback:?successCallback">
	<c path="String"/>
	<c path="String"/>
	<t path="js.html.sql.TransactionCallback"/>
	<t path="js.html.sql.TransactionErrorCallback"/>
	<t path="js.html.VoidCallback"/>
	<x path="Void"/>
</f></changeVersion>
		<readTransaction public="1" set="method"><f a="callback_:?errorCallback:?successCallback">
	<t path="js.html.sql.TransactionCallback"/>
	<t path="js.html.sql.TransactionErrorCallback"/>
	<t path="js.html.VoidCallback"/>
	<x path="Void"/>
</f></readTransaction>
		<transaction public="1" set="method"><f a="callback_:?errorCallback:?successCallback">
	<t path="js.html.sql.TransactionCallback"/>
	<t path="js.html.sql.TransactionErrorCallback"/>
	<t path="js.html.VoidCallback"/>
	<x path="Void"/>
</f></transaction>
		<haxe_doc><![CDATA[<div><p>This content covers features introduced in <a rel="custom" href="https://developer.mozilla.org/en/Firefox_3_for_developers">Firefox 3</a>.</p></div>
<p></p>
<p>This document provides a high-level overview of the overall database design of the <a title="en/Places" rel="internal" href="https://developer.mozilla.org/en/Places">Places</a> system. Places is designed to be a complete replacement for the Firefox bookmarks and history systems using <a title="en/Storage" rel="internal" href="/api/js/html/Storage">Storage.</a></p>
<p>View the <a class=" external" rel="external" href="http://people.mozilla.org/~dietrich/places-erd.png" title="http://people.mozilla.org/~dietrich/places-erd.png" target="_blank">schema diagram</a>.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/The_Places_database">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"Database"</e></m></meta>
	</class>
	<typedef path="js.html.sql.DatabaseCallback" params="" file="/usr/lib/haxe/std/js/html/sql/DatabaseCallback.hx"><f a="">
	<c path="js.html.sql.Database"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.sql.Error" params="" file="/usr/lib/haxe/std/js/html/sql/Error.hx" extern="1">
		<CONSTRAINT_ERR public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></CONSTRAINT_ERR>
		<DATABASE_ERR public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></DATABASE_ERR>
		<QUOTA_ERR public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></QUOTA_ERR>
		<SYNTAX_ERR public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></SYNTAX_ERR>
		<TIMEOUT_ERR public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></TIMEOUT_ERR>
		<TOO_LARGE_ERR public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></TOO_LARGE_ERR>
		<UNKNOWN_ERR public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></UNKNOWN_ERR>
		<VERSION_ERR public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></VERSION_ERR>
		<code public="1" set="null"><x path="Int"/></code>
		<message public="1" set="null"><c path="String"/></message>
		<meta><m n=":native"><e>"SQLError"</e></m></meta>
	</class>
	<class path="js.html.sql.ResultSet" params="" file="/usr/lib/haxe/std/js/html/sql/ResultSet.hx" extern="1">
		<insertId public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Getter throws DOMException.</haxe_doc>
		</insertId>
		<rows public="1" set="null"><c path="js.html.sql.ResultSetRowList"/></rows>
		<rowsAffected public="1" set="null"><x path="Int"/></rowsAffected>
		<meta><m n=":native"><e>"SQLResultSet"</e></m></meta>
	</class>
	<class path="js.html.sql.ResultSetRowList" params="" file="/usr/lib/haxe/std/js/html/sql/ResultSetRowList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<d/>
</f></item>
		<meta><m n=":native"><e>"SQLResultSetRowList"</e></m></meta>
	</class>
	<typedef path="js.html.sql.StatementCallback" params="" file="/usr/lib/haxe/std/js/html/sql/StatementCallback.hx"><f a=":">
	<c path="js.html.sql.Transaction"/>
	<c path="js.html.sql.ResultSet"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.sql.StatementErrorCallback" params="" file="/usr/lib/haxe/std/js/html/sql/StatementErrorCallback.hx"><f a=":">
	<c path="js.html.sql.Transaction"/>
	<c path="js.html.sql.Error"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.sql.Transaction" params="" file="/usr/lib/haxe/std/js/html/sql/Transaction.hx" extern="1">
		<executeSql public="1" set="method"><f a="sqlStatement:arguments:?callback_:?errorCallback">
	<c path="String"/>
	<c path="Array"><d/></c>
	<t path="js.html.sql.StatementCallback"/>
	<t path="js.html.sql.StatementErrorCallback"/>
	<x path="Void"/>
</f></executeSql>
		<meta><m n=":native"><e>"SQLTransaction"</e></m></meta>
	</class>
	<typedef path="js.html.sql.TransactionCallback" params="" file="/usr/lib/haxe/std/js/html/sql/TransactionCallback.hx"><f a="">
	<c path="js.html.sql.Transaction"/>
	<x path="Bool"/>
</f></typedef>
	<typedef path="js.html.sql.TransactionErrorCallback" params="" file="/usr/lib/haxe/std/js/html/sql/TransactionErrorCallback.hx"><f a="">
	<c path="js.html.sql.Error"/>
	<x path="Bool"/>
</f></typedef>
	<class path="js.html.svg.Angle" params="" file="/usr/lib/haxe/std/js/html/svg/Angle.hx" extern="1">
		<SVG_ANGLETYPE_DEG public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type was explicitly set to degrees.</haxe_doc>
		</SVG_ANGLETYPE_DEG>
		<SVG_ANGLETYPE_GRAD public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is gradians.</haxe_doc>
		</SVG_ANGLETYPE_GRAD>
		<SVG_ANGLETYPE_RAD public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is radians.</haxe_doc>
		</SVG_ANGLETYPE_RAD>
		<SVG_ANGLETYPE_UNKNOWN public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_ANGLETYPE_UNKNOWN>
		<SVG_ANGLETYPE_UNSPECIFIED public="1" get="inline" set="null" line="45" static="1">
			<x path="Int"/>
			<haxe_doc>No unit type was provided (i.e., a unitless value was specified). For angles, a unitless value is treated the same as if degrees were specified.</haxe_doc>
		</SVG_ANGLETYPE_UNSPECIFIED>
		<unitType public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The type of the value as specified by one of the SVG_ANGLETYPE_* constants defined on this interface.</haxe_doc>
		</unitType>
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value as a floating point value, in user units. Setting this attribute will cause <code>valueInSpecifiedUnits</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p>]]></haxe_doc>
		</value>
		<valueAsString public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>The value as a string value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code>, <code>valueInSpecifiedUnits</code> and <code>unitType</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong></p> <ul> <li>a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>SYNTAX_ERR</code> is raised if the assigned string cannot be parsed as a valid <a title="https://developer.mozilla.org/en/SVG/Content_type#Angle" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Angle">&lt;angle&gt;</a>.</li> <li>a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</li> </ul> Setter throws DOMException.]]></haxe_doc>
		</valueAsString>
		<valueInSpecifiedUnits public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value as a floating point value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p>]]></haxe_doc>
		</valueInSpecifiedUnits>
		<convertToSpecifiedUnits public="1" set="method"><f a="unitType">
	<x path="Int"/>
	<x path="Void"/>
</f></convertToSpecifiedUnits>
		<newValueSpecifiedUnits public="1" set="method"><f a="unitType:valueInSpecifiedUnits">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></newValueSpecifiedUnits>
		<haxe_doc><![CDATA[<p>The <code>SVGAngle</code> interface correspond to the <a title="https://developer.mozilla.org/en/SVG/Content_type#Angle" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Angle">&lt;angle&gt;</a> basic data type.</p>
<p>An <code>SVGAngle</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGAngle">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGAngle"</e></m></meta>
	</class>
	<class path="js.html.svg.AnimatedLength" params="" file="/usr/lib/haxe/std/js/html/svg/AnimatedLength.hx" extern="1">
		<animVal public="1" set="null">
			<c path="js.html.svg.Length"/>
			<haxe_doc><![CDATA[If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as <code>baseVal</code>.]]></haxe_doc>
		</animVal>
		<baseVal public="1" set="null">
			<c path="js.html.svg.Length"/>
			<haxe_doc>The base value of the given attribute before applying any animations.</haxe_doc>
		</baseVal>
		<haxe_doc><![CDATA[The <code>SVGAnimatedLength</code> interface is used for attributes of basic type <a title="https://developer.mozilla.org/en/SVG/Content_type#Length" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Length">&lt;length&gt;</a> which can be animated.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/SVGAnimatedLength">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGAnimatedLength"</e></m></meta>
	</class>
	<class path="js.html.svg.AnimatedPreserveAspectRatio" params="" file="/usr/lib/haxe/std/js/html/svg/AnimatedPreserveAspectRatio.hx" extern="1">
		<animVal public="1" set="null">
			<c path="js.html.svg.PreserveAspectRatio"/>
			<haxe_doc><![CDATA[A read only <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/SVGPreserveAspectRatio">SVGPreserveAspectRatio</a></code>
 representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/SVGPreserveAspectRatio">SVGPreserveAspectRatio</a></code>
 will have the same contents as <code>baseVal</code>. The object referenced by <code>animVal</code> is always distinct from the one referenced by <code>baseVal</code>, even when the attribute is not animated.]]></haxe_doc>
		</animVal>
		<baseVal public="1" set="null">
			<c path="js.html.svg.PreserveAspectRatio"/>
			<haxe_doc>The base value of the given attribute before applying any animations.</haxe_doc>
		</baseVal>
		<haxe_doc><![CDATA[The <code>SVGAnimatedPreserveAspectRatio</code> interface is used for attributes of type <code><a rel="custom" href="/api/js/html/svg/PreserveAspectRatio">SVGPreserveAspectRatio</a></code>
 which can be animated.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGAnimatedPreserveAspectRatio">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGAnimatedPreserveAspectRatio"</e></m></meta>
	</class>
	<class path="js.html.svg.AnimatedRect" params="" file="/usr/lib/haxe/std/js/html/svg/AnimatedRect.hx" extern="1">
		<animVal public="1" set="null">
			<c path="js.html.svg.Rect"/>
			<haxe_doc><![CDATA[A read only <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/SVGRect">SVGRect</a></code>
 representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/SVGRect">SVGRect</a></code>
 will have the same contents as <code>baseVal</code>. The object referenced by <code>animVal</code> will always be distinct from the one referenced by <code>baseVal</code>, even when the attribute is not animated.]]></haxe_doc>
		</animVal>
		<baseVal public="1" set="null">
			<c path="js.html.svg.Rect"/>
			<haxe_doc>The base value of the given attribute before applying any animations.</haxe_doc>
		</baseVal>
		<haxe_doc><![CDATA[The <code>SVGAnimatedRect</code> interface is used for attributes of basic <code><a rel="custom" href="/api/js/html/svg/Rect">SVGRect</a></code>
 which can be animated.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/SVGAnimatedRect">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGAnimatedRect"</e></m></meta>
	</class>
	<class path="js.html.svg.Document" params="" file="/usr/lib/haxe/std/js/html/svg/Document.hx" extern="1">
		<extends path="js.html.Document"/>
		<rootElement public="1" set="null"><c path="js.html.svg.SVGElement"/></rootElement>
		<meta><m n=":native"><e>"SVGDocument"</e></m></meta>
	</class>
	<class path="js.html.svg.Element" params="" file="/usr/lib/haxe/std/js/html/svg/Element.hx" extern="1">
		<extends path="js.html.Element"/>
		<ownerSVGElement public="1" set="null">
			<c path="js.html.svg.SVGElement"/>
			<haxe_doc><![CDATA[The nearest ancestor <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element. <code>Null</code> if the given element is the outermost svg element.]]></haxe_doc>
		</ownerSVGElement>
		<viewportElement public="1" set="null">
			<c path="js.html.svg.Element"/>
			<haxe_doc><![CDATA[The element which established the current viewport. Often, the nearest ancestor <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element. <code>Null</code> if the given element is the outermost svg element.]]></haxe_doc>
		</viewportElement>
		<xmlbase public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/xml%3Abase" class="new">xml:base</a></code> on the given element. Setter throws DOMException.]]></haxe_doc>
		</xmlbase>
		<haxe_doc><![CDATA[All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the <code>SVGElement</code> interface.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGElement"</e></m></meta>
	</class>
	<class path="js.html.svg.Length" params="" file="/usr/lib/haxe/std/js/html/svg/Length.hx" extern="1">
		<SVG_LENGTHTYPE_CM public="1" get="inline" set="null" line="33" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the cm units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_CM>
		<SVG_LENGTHTYPE_EMS public="1" get="inline" set="null" line="36" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the em units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_EMS>
		<SVG_LENGTHTYPE_EXS public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the ex units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_EXS>
		<SVG_LENGTHTYPE_IN public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the in units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_IN>
		<SVG_LENGTHTYPE_MM public="1" get="inline" set="null" line="45" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the mm units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_MM>
		<SVG_LENGTHTYPE_NUMBER public="1" get="inline" set="null" line="48" static="1">
			<x path="Int"/>
			<haxe_doc>No unit type was provided (i.e., a unitless value was specified), which indicates a value in user units.</haxe_doc>
		</SVG_LENGTHTYPE_NUMBER>
		<SVG_LENGTHTYPE_PC public="1" get="inline" set="null" line="51" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the pc units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_PC>
		<SVG_LENGTHTYPE_PERCENTAGE public="1" get="inline" set="null" line="54" static="1">
			<x path="Int"/>
			<haxe_doc>A percentage value was specified.</haxe_doc>
		</SVG_LENGTHTYPE_PERCENTAGE>
		<SVG_LENGTHTYPE_PT public="1" get="inline" set="null" line="57" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the pt units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_PT>
		<SVG_LENGTHTYPE_PX public="1" get="inline" set="null" line="60" static="1">
			<x path="Int"/>
			<haxe_doc>A value was specified using the px units defined in CSS2.</haxe_doc>
		</SVG_LENGTHTYPE_PX>
		<SVG_LENGTHTYPE_UNKNOWN public="1" get="inline" set="null" line="63" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_LENGTHTYPE_UNKNOWN>
		<unitType public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The type of the value as specified by one of the SVG_LENGTHTYPE_* constants defined on this interface.</haxe_doc>
		</unitType>
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value as a floating point value, in user units. Setting this attribute will cause <code>valueInSpecifiedUnits</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p> Getter throws DOMException. Setter throws DOMException.]]></haxe_doc>
		</value>
		<valueAsString public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[<p>The value as a string value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code>, <code>valueInSpecifiedUnits</code> and <code>unitType</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong></p> <ul> <li>a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>SYNTAX_ERR</code> is raised if the assigned string cannot be parsed as a valid <a title="https://developer.mozilla.org/en/SVG/Content_type#Length" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Length">&lt;length&gt;</a>.</li> <li>a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</li> </ul> Setter throws DOMException.]]></haxe_doc>
		</valueAsString>
		<valueInSpecifiedUnits public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value as a floating point value, in the units expressed by <code>unitType</code>. Setting this attribute will cause <code>value</code> and <code>valueAsString</code> to be updated automatically to reflect this setting.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is raised when the length corresponds to a read only attribute or when the object itself is read only.</p>]]></haxe_doc>
		</valueInSpecifiedUnits>
		<convertToSpecifiedUnits public="1" set="method"><f a="unitType">
	<x path="Int"/>
	<x path="Void"/>
</f></convertToSpecifiedUnits>
		<newValueSpecifiedUnits public="1" set="method"><f a="unitType:valueInSpecifiedUnits">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></newValueSpecifiedUnits>
		<haxe_doc><![CDATA[<p>The <code>SVGLength</code> interface correspond to the <a title="https://developer.mozilla.org/en/SVG/Content_type#Length" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Length">&lt;length&gt;</a> basic data type.</p>
<p>An <code>SVGLength</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/Document_Object_Model_(DOM)/SVGLength">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGLength"</e></m></meta>
	</class>
	<class path="js.html.svg.Matrix" params="" file="/usr/lib/haxe/std/js/html/svg/Matrix.hx" extern="1">
		<a public="1"><x path="Float"/></a>
		<b public="1"><x path="Float"/></b>
		<c public="1"><x path="Float"/></c>
		<d public="1"><x path="Float"/></d>
		<e public="1"><x path="Float"/></e>
		<f public="1"><x path="Float"/></f>
		<flipX public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></flipX>
		<flipY public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></flipY>
		<inverse public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></inverse>
		<multiply public="1" set="method"><f a="secondMatrix">
	<c path="js.html.svg.Matrix"/>
	<c path="js.html.svg.Matrix"/>
</f></multiply>
		<rotate public="1" set="method"><f a="angle">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></rotate>
		<rotateFromVector public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></rotateFromVector>
		<scale public="1" set="method"><f a="scaleFactor">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></scale>
		<scaleNonUniform public="1" set="method"><f a="scaleFactorX:scaleFactorY">
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></scaleNonUniform>
		<skewX public="1" set="method"><f a="angle">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></skewX>
		<skewY public="1" set="method"><f a="angle">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></skewY>
		<translate public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></translate>
		<haxe_doc><![CDATA[<p>Many of SVG's graphics operations utilize 2x3 matrices of the form:</p>
<pre>[a c e]
[b d f]</pre>
<p>which, when expanded into a 3x3 matrix for the purposes of matrix arithmetic, become:</p>
<pre>[a c e]
[b d f]
[0 0 1]
</pre>
<p>An <code>SVGMatrix</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGMatrix">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGMatrix"</e></m></meta>
	</class>
	<class path="js.html.svg.Number" params="" file="/usr/lib/haxe/std/js/html/svg/Number.hx" extern="1">
		<value public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[<p>The value of the given attribute.</p> <p><strong>Exceptions on setting:</strong> a <code><a rel="custom" href="https://developer.mozilla.org/en/DOM/DOMException">DOMException</a></code>
 with code <code>NO_MODIFICATION_ALLOWED_ERR</code> is Raised on an attempt to change the value of a read only attribute.</p>]]></haxe_doc>
		</value>
		<haxe_doc><![CDATA[<p>The <code>SVGNumber</code> interface correspond to the <a title="https://developer.mozilla.org/en/SVG/Content_type#Number" rel="internal" href="https://developer.mozilla.org/en/SVG/Content_type#Number">&lt;number&gt;</a> basic data type.</p>
<p>An <code>SVGNumber</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGNumber">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGNumber"</e></m></meta>
	</class>
	<class path="js.html.svg.Point" params="" file="/usr/lib/haxe/std/js/html/svg/Point.hx" extern="1">
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<matrixTransform public="1" set="method"><f a="matrix">
	<c path="js.html.svg.Matrix"/>
	<c path="js.html.svg.Point"/>
</f></matrixTransform>
		<meta><m n=":native"><e>"SVGPoint"</e></m></meta>
	</class>
	<class path="js.html.svg.PreserveAspectRatio" params="" file="/usr/lib/haxe/std/js/html/svg/PreserveAspectRatio.hx" extern="1">
		<SVG_MEETORSLICE_MEET public="1" get="inline" set="null" line="35" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>meet</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_MEETORSLICE_MEET>
		<SVG_MEETORSLICE_SLICE public="1" get="inline" set="null" line="39" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>slice</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_MEETORSLICE_SLICE>
		<SVG_MEETORSLICE_UNKNOWN public="1" get="inline" set="null" line="42" static="1">
			<x path="Int"/>
			<haxe_doc>The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_MEETORSLICE_UNKNOWN>
		<SVG_PRESERVEASPECTRATIO_NONE public="1" get="inline" set="null" line="46" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>none</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_NONE>
		<SVG_PRESERVEASPECTRATIO_UNKNOWN public="1" get="inline" set="null" line="49" static="1">
			<x path="Int"/>
			<haxe_doc>The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_PRESERVEASPECTRATIO_UNKNOWN>
		<SVG_PRESERVEASPECTRATIO_XMAXYMAX public="1" get="inline" set="null" line="53" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMaxYMax</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMAXYMAX>
		<SVG_PRESERVEASPECTRATIO_XMAXYMID public="1" get="inline" set="null" line="57" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMaxYMid</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMAXYMID>
		<SVG_PRESERVEASPECTRATIO_XMAXYMIN public="1" get="inline" set="null" line="61" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMaxYMin</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMAXYMIN>
		<SVG_PRESERVEASPECTRATIO_XMIDYMAX public="1" get="inline" set="null" line="65" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMidYMax</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMIDYMAX>
		<SVG_PRESERVEASPECTRATIO_XMIDYMID public="1" get="inline" set="null" line="69" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMidYMid</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMIDYMID>
		<SVG_PRESERVEASPECTRATIO_XMIDYMIN public="1" get="inline" set="null" line="73" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMidYMin</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMIDYMIN>
		<SVG_PRESERVEASPECTRATIO_XMINYMAX public="1" get="inline" set="null" line="77" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMinYMax</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMINYMAX>
		<SVG_PRESERVEASPECTRATIO_XMINYMID public="1" get="inline" set="null" line="81" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMinYMid</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMINYMID>
		<SVG_PRESERVEASPECTRATIO_XMINYMIN public="1" get="inline" set="null" line="85" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[Corresponds to value <code>xMinYMin</code> for attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>.]]></haxe_doc>
		</SVG_PRESERVEASPECTRATIO_XMINYMIN>
		<align public="1">
			<x path="Int"/>
			<haxe_doc>The type of the alignment value as specified by one of the SVG_PRESERVEASPECTRATIO_* constants defined on this interface. Setter throws DOMException.</haxe_doc>
		</align>
		<meetOrSlice public="1">
			<x path="Int"/>
			<haxe_doc>The type of the meet-or-slice value as specified by one of the SVG_MEETORSLICE_* constants defined on this interface. Setter throws DOMException.</haxe_doc>
		</meetOrSlice>
		<haxe_doc><![CDATA[<p>The <code>SVGPreserveAspectRatio</code> interface corresponds to the 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code> attribute, which is available for some of SVG's elements.</p>
<p>An <code>SVGPreserveAspectRatio</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGPreserveAspectRatio">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGPreserveAspectRatio"</e></m></meta>
	</class>
	<class path="js.html.svg.Rect" params="" file="/usr/lib/haxe/std/js/html/svg/Rect.hx" extern="1">
		<height public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The <em>height</em> coordinate of the rectangle, in user units.]]></haxe_doc>
		</height>
		<width public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[The <em>width</em> coordinate of the rectangle, in user units.]]></haxe_doc>
		</width>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<haxe_doc><![CDATA[<p>The <code>SVGRect</code> represents rectangular geometry. Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative.</p>
<p>An <code>SVGRect</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGRect">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGRect"</e></m></meta>
	</class>
	<class path="js.html.svg.SVGElement" params="" file="/usr/lib/haxe/std/js/html/svg/SVGElement.hx" extern="1">
		<extends path="js.html.svg.Element"/>
		<contentScriptType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/contentScriptType">contentScriptType</a></code> on the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element.]]></haxe_doc>
		</contentScriptType>
		<contentStyleType public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/contentStyleType">contentStyleType</a></code> on the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element.]]></haxe_doc>
		</contentStyleType>
		<currentScale public="1">
			<x path="Float"/>
			<haxe_doc><![CDATA[On an outermost <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element, this attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations. DOM attributes <code>currentScale</code> and <code>currentTranslate</code> are equivalent to the 2x3 matrix <code>[a b c d e f] = [currentScale 0 0 currentScale currentTranslate.x currentTranslate.y]</code>. If "magnification" is enabled (i.e., <code>zoomAndPan="magnify"</code>), then the effect is as if an extra transformation were placed at the outermost level on the SVG document fragment (i.e., outside the outermost <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element).]]></haxe_doc>
		</currentScale>
		<currentTranslate public="1" set="null">
			<c path="js.html.svg.Point"/>
			<haxe_doc><![CDATA[On an outermost <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element, the corresponding translation factor that takes into account user "magnification".]]></haxe_doc>
		</currentTranslate>
		<currentView public="1" set="null">
			<c path="js.html.svg.ViewSpec"/>
			<haxe_doc><![CDATA[The definition of the initial view (i.e., before magnification and panning) of the current innermost SVG document fragment. The meaning depends on the situation:<br> <ul> <li>If the initial view was a "standard" view, then: <ul> <li>the values for 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/zoomAndPan" class="new">zoomAndPan</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will match the values for the corresponding DOM attributes that are on <code>SVGSVGElement</code> directly</li> <li>the values for 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewTarget" class="new">viewTarget</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will be null</li> </ul> </li> <li>If the initial view was a link into a <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/view">&lt;view&gt;</a></code>
 element, then: <ul> <li>the values for 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/zoomAndPan" class="new">zoomAndPan</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will correspond to the corresponding attributes for the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/view">&lt;view&gt;</a></code>
 element</li> <li>the values for 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewTarget" class="new">viewTarget</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will be null</li> </ul> </li> <li>If the initial view was a link into another element (i.e., other than a <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/view">&lt;view&gt;</a></code>
), then: <ul> <li>the values for 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/zoomAndPan" class="new">zoomAndPan</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will match the values for the corresponding DOM attributes that are on <code>SVGSVGElement</code> directly for the closest ancestor <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element</li> <li>the values for 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will be null</li> <li>the 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewTarget" class="new">viewTarget</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will represent the target of the link</li> </ul> </li> <li>If the initial view was a link into the SVG document fragment using an SVG view specification fragment identifier (i.e., #svgView(...)), then: <ul> <li>the values for 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/preserveAspectRatio">preserveAspectRatio</a></code>, 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/zoomAndPan" class="new">zoomAndPan</a></code>, 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> and 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewTarget" class="new">viewTarget</a></code> within 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/currentView" class="new">currentView</a></code> will correspond to the values from the SVG view specification fragment identifier</li> </ul> </li> </ul>]]></haxe_doc>
		</currentView>
		<height public="1" set="null">
			<c path="js.html.svg.AnimatedLength"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/height">height</a></code> on the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element.]]></haxe_doc>
		</height>
		<pixelUnitToMillimeterX public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Size of a pixel units (as defined by CSS2) along the x-axis of the viewport, which represents a unit somewhere in the range of 70dpi to 120dpi, and, on systems that support this, might actually match the characteristics of the target medium. On systems where it is impossible to know the size of a pixel, a suitable default pixel size is provided.</haxe_doc>
		</pixelUnitToMillimeterX>
		<pixelUnitToMillimeterY public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Corresponding size of a pixel unit along the y-axis of the viewport.</haxe_doc>
		</pixelUnitToMillimeterY>
		<screenPixelToMillimeterX public="1" set="null">
			<x path="Float"/>
			<haxe_doc>User interface (UI) events in DOM Level 2 indicate the screen positions at which the given UI event occurred. When the browser actually knows the physical size of a "screen unit", this attribute will express that information; otherwise, user agents will provide a suitable default value such as .28mm.</haxe_doc>
		</screenPixelToMillimeterX>
		<screenPixelToMillimeterY public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Corresponding size of a screen pixel along the y-axis of the viewport.</haxe_doc>
		</screenPixelToMillimeterY>
		<useCurrentView public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the "standard" view (i.e., based on attributes on the <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element such as 
<code><a rel="internal" href="https://developer.mozilla.org/en/SVG/Attribute/viewBox" class="new">viewBox</a></code>) or to a "custom" view (i.e., a hyperlink into a particular <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/view">&lt;view&gt;</a></code>
 or other element). If the initial view is the "standard" view, then this attribute is false. If the initial view is a "custom" view, then this attribute is true.]]></haxe_doc>
		</useCurrentView>
		<viewport public="1" set="null">
			<c path="js.html.svg.Rect"/>
			<haxe_doc><![CDATA[The position and size of the viewport (implicit or explicit) that corresponds to this <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element. When the browser is actually rendering the content, then the position and size values represent the actual values when rendering. The position and size values are unitless values in the coordinate system of the parent element. If no parent element exists (i.e., <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element represents the root of the document tree), if this SVG document is embedded as part of another document (e.g., via the HTML <code><a rel="custom" href="https://developer.mozilla.org/en/HTML/Element/object">&lt;object&gt;</a></code>
 element), then the position and size are unitless values in the coordinate system of the parent document. (If the parent uses CSS or XSL layout, then unitless values represent pixel units for the current CSS or XSL viewport.)]]></haxe_doc>
		</viewport>
		<width public="1" set="null">
			<c path="js.html.svg.AnimatedLength"/>
			<haxe_doc><![CDATA[Corresponds to attribute 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/width">width</a></code> on the given <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 element.]]></haxe_doc>
		</width>
		<x public="1" set="null"><c path="js.html.svg.AnimatedLength"/></x>
		<y public="1" set="null"><c path="js.html.svg.AnimatedLength"/></y>
		<animationsPaused public="1" set="method"><f a=""><x path="Bool"/></f></animationsPaused>
		<checkEnclosure public="1" set="method"><f a="element:rect">
	<c path="js.html.svg.Element"/>
	<c path="js.html.svg.Rect"/>
	<x path="Bool"/>
</f></checkEnclosure>
		<checkIntersection public="1" set="method"><f a="element:rect">
	<c path="js.html.svg.Element"/>
	<c path="js.html.svg.Rect"/>
	<x path="Bool"/>
</f></checkIntersection>
		<createSVGAngle public="1" set="method"><f a=""><c path="js.html.svg.Angle"/></f></createSVGAngle>
		<createSVGLength public="1" set="method"><f a=""><c path="js.html.svg.Length"/></f></createSVGLength>
		<createSVGMatrix public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></createSVGMatrix>
		<createSVGNumber public="1" set="method"><f a=""><c path="js.html.svg.Number"/></f></createSVGNumber>
		<createSVGPoint public="1" set="method"><f a=""><c path="js.html.svg.Point"/></f></createSVGPoint>
		<createSVGRect public="1" set="method"><f a=""><c path="js.html.svg.Rect"/></f></createSVGRect>
		<createSVGTransform public="1" set="method"><f a=""><c path="js.html.svg.Transform"/></f></createSVGTransform>
		<createSVGTransformFromMatrix public="1" set="method"><f a="matrix">
	<c path="js.html.svg.Matrix"/>
	<c path="js.html.svg.Transform"/>
</f></createSVGTransformFromMatrix>
		<deselectAll public="1" set="method"><f a=""><x path="Void"/></f></deselectAll>
		<forceRedraw public="1" set="method"><f a=""><x path="Void"/></f></forceRedraw>
		<getCurrentTime public="1" set="method"><f a=""><x path="Float"/></f></getCurrentTime>
		<getElementById public="1" set="method"><f a="elementId">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></getElementById>
		<getEnclosureList public="1" set="method"><f a="rect:referenceElement">
	<c path="js.html.svg.Rect"/>
	<c path="js.html.svg.Element"/>
	<c path="js.html.NodeList"/>
</f></getEnclosureList>
		<getIntersectionList public="1" set="method"><f a="rect:referenceElement">
	<c path="js.html.svg.Rect"/>
	<c path="js.html.svg.Element"/>
	<c path="js.html.NodeList"/>
</f></getIntersectionList>
		<pauseAnimations public="1" set="method"><f a=""><x path="Void"/></f></pauseAnimations>
		<setCurrentTime public="1" set="method"><f a="seconds">
	<x path="Float"/>
	<x path="Void"/>
</f></setCurrentTime>
		<suspendRedraw public="1" set="method"><f a="maxWaitMilliseconds">
	<x path="Int"/>
	<x path="Int"/>
</f></suspendRedraw>
		<unpauseAnimations public="1" set="method"><f a=""><x path="Void"/></f></unpauseAnimations>
		<unsuspendRedraw public="1" set="method"><f a="suspendHandleId">
	<x path="Int"/>
	<x path="Void"/>
</f></unsuspendRedraw>
		<unsuspendRedrawAll public="1" set="method"><f a=""><x path="Void"/></f></unsuspendRedrawAll>
		<haxe_doc><![CDATA[The <code>SVGSVGElement</code> interface provides access to the properties of <code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Element/svg">&lt;svg&gt;</a></code>
 elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.<br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGSVGElement">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGSVGElement"</e></m></meta>
	</class>
	<class path="js.html.svg.Transform" params="" file="/usr/lib/haxe/std/js/html/svg/Transform.hx" extern="1">
		<SVG_TRANSFORM_MATRIX public="1" get="inline" set="null" line="35" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A <code>matrix(…)</code> transformation]]></haxe_doc>
		</SVG_TRANSFORM_MATRIX>
		<SVG_TRANSFORM_ROTATE public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></SVG_TRANSFORM_ROTATE>
		<SVG_TRANSFORM_SCALE public="1" get="inline" set="null" line="40" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A <code>scale(…)</code> transformation]]></haxe_doc>
		</SVG_TRANSFORM_SCALE>
		<SVG_TRANSFORM_SKEWX public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></SVG_TRANSFORM_SKEWX>
		<SVG_TRANSFORM_SKEWY public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></SVG_TRANSFORM_SKEWY>
		<SVG_TRANSFORM_TRANSLATE public="1" get="inline" set="null" line="47" static="1">
			<x path="Int"/>
			<haxe_doc><![CDATA[A <code>translate(…)</code> transformation]]></haxe_doc>
		</SVG_TRANSFORM_TRANSLATE>
		<SVG_TRANSFORM_UNKNOWN public="1" get="inline" set="null" line="50" static="1">
			<x path="Int"/>
			<haxe_doc>The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</haxe_doc>
		</SVG_TRANSFORM_UNKNOWN>
		<angle public="1" set="null">
			<x path="Float"/>
			<haxe_doc><![CDATA[A convenience attribute for <code>SVG_TRANSFORM_ROTATE</code>, <code>SVG_TRANSFORM_SKEWX</code> and <code>SVG_TRANSFORM_SKEWY</code>. It holds the angle that was specified.<br> <br> For <code>SVG_TRANSFORM_MATRIX</code>, <code>SVG_TRANSFORM_TRANSLATE</code> and <code>SVG_TRANSFORM_SCALE</code>, <code>angle</code> will be zero.]]></haxe_doc>
		</angle>
		<matrix public="1" set="null">
			<c path="js.html.svg.Matrix"/>
			<haxe_doc><![CDATA[<p>The matrix that represents this transformation. The matrix object is live, meaning that any changes made to the <code>SVGTransform</code> object are immediately reflected in the matrix object and vice versa. In case the matrix object is changed directly (i.e., without using the methods on the <code>SVGTransform</code> interface itself) then the type of the <code>SVGTransform</code> changes to <code>SVG_TRANSFORM_MATRIX</code>.</p> <ul> <li>For <code>SVG_TRANSFORM_MATRIX</code>, the matrix contains the a, b, c, d, e, f values supplied by the user.</li> <li>For <code>SVG_TRANSFORM_TRANSLATE</code>, e and f represent the translation amounts (a=1, b=0, c=0 and d=1).</li> <li>For <code>SVG_TRANSFORM_SCALE</code>, a and d represent the scale amounts (b=0, c=0, e=0 and f=0).</li> <li>For <code>SVG_TRANSFORM_SKEWX</code> and <code>SVG_TRANSFORM_SKEWY</code>, a, b, c and d represent the matrix which will result in the given skew (e=0 and f=0).</li> <li>For <code>SVG_TRANSFORM_ROTATE</code>, a, b, c, d, e and f together represent the matrix which will result in the given rotation. When the rotation is around the center point (0, 0), e and f will be zero.</li> </ul>]]></haxe_doc>
		</matrix>
		<type public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The type of the value as specified by one of the SVG_TRANSFORM_* constants defined on this interface.</haxe_doc>
		</type>
		<setMatrix public="1" set="method"><f a="matrix">
	<c path="js.html.svg.Matrix"/>
	<x path="Void"/>
</f></setMatrix>
		<setRotate public="1" set="method"><f a="angle:cx:cy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setRotate>
		<setScale public="1" set="method"><f a="sx:sy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setScale>
		<setSkewX public="1" set="method"><f a="angle">
	<x path="Float"/>
	<x path="Void"/>
</f></setSkewX>
		<setSkewY public="1" set="method"><f a="angle">
	<x path="Float"/>
	<x path="Void"/>
</f></setSkewY>
		<setTranslate public="1" set="method"><f a="tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTranslate>
		<haxe_doc><![CDATA[<p><code>SVGTransform</code> is the interface for one of the component transformations within an <code><a rel="custom" href="/api/js/html/svg/TransformList">SVGTransformList</a></code>
; thus, an <code>SVGTransform</code> object corresponds to a single component (e.g., <code>scale(…)</code> or <code>matrix(…)</code>) within a 
<code><a rel="custom" href="https://developer.mozilla.org/en/SVG/Attribute/transform">transform</a></code> attribute.</p>
<p>An <code>SVGTransform</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGTransform">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGTransform"</e></m></meta>
	</class>
	<class path="js.html.svg.TransformList" params="" file="/usr/lib/haxe/std/js/html/svg/TransformList.hx" extern="1">
		<numberOfItems public="1" set="null"><x path="Int"/></numberOfItems>
		<appendItem public="1" set="method"><f a="item">
	<c path="js.html.svg.Transform"/>
	<c path="js.html.svg.Transform"/>
</f></appendItem>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<consolidate public="1" set="method"><f a=""><c path="js.html.svg.Transform"/></f></consolidate>
		<createSVGTransformFromMatrix public="1" set="method"><f a="matrix">
	<c path="js.html.svg.Matrix"/>
	<c path="js.html.svg.Transform"/>
</f></createSVGTransformFromMatrix>
		<getItem public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.svg.Transform"/>
</f></getItem>
		<initialize public="1" set="method"><f a="item">
	<c path="js.html.svg.Transform"/>
	<c path="js.html.svg.Transform"/>
</f></initialize>
		<insertItemBefore public="1" set="method"><f a="item:index">
	<c path="js.html.svg.Transform"/>
	<x path="Int"/>
	<c path="js.html.svg.Transform"/>
</f></insertItemBefore>
		<removeItem public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.svg.Transform"/>
</f></removeItem>
		<replaceItem public="1" set="method"><f a="item:index">
	<c path="js.html.svg.Transform"/>
	<x path="Int"/>
	<c path="js.html.svg.Transform"/>
</f></replaceItem>
		<haxe_doc><![CDATA[<p>The <code>SVGTransformList</code> defines a list of <code><a rel="custom" href="/api/js/html/svg/Transform">SVGTransform</a></code>
 objects.</p>
<p>An <code>SVGTransformList</code> object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown.</p>
<div class="geckoVersionNote"> <p>
</p><div class="geckoVersionHeading">Gecko 9.0 note<div>(Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
</div></div>
<p></p> <p>Starting in Gecko 9.0 (Firefox 9.0 / Thunderbird 9.0 / SeaMonkey 2.6)
,the <code>SVGTransformList</code> DOM interface is now indexable and can be accessed like Arrays</p>
</div><br><br>
Documentation for this class was provided by <a href="https://developer.mozilla.org/en/DOM/SVGTransformList">MDN</a>.]]></haxe_doc>
		<meta><m n=":native"><e>"SVGTransformList"</e></m></meta>
	</class>
	<class path="js.html.svg.ViewSpec" params="" file="/usr/lib/haxe/std/js/html/svg/ViewSpec.hx" extern="1">
		<preserveAspectRatio public="1" set="null"><c path="js.html.svg.AnimatedPreserveAspectRatio"/></preserveAspectRatio>
		<preserveAspectRatioString public="1" set="null"><c path="String"/></preserveAspectRatioString>
		<transform public="1" set="null"><c path="js.html.svg.TransformList"/></transform>
		<transformString public="1" set="null"><c path="String"/></transformString>
		<viewBox public="1" set="null"><c path="js.html.svg.AnimatedRect"/></viewBox>
		<viewBoxString public="1" set="null"><c path="String"/></viewBoxString>
		<viewTarget public="1" set="null"><c path="js.html.svg.Element"/></viewTarget>
		<viewTargetString public="1" set="null"><c path="String"/></viewTargetString>
		<zoomAndPan public="1">
			<x path="Int"/>
			<haxe_doc>Setter throws DOMException.</haxe_doc>
		</zoomAndPan>
		<meta><m n=":native"><e>"SVGViewSpec"</e></m></meta>
	</class>
	<class path="js.html.webgl.ActiveInfo" params="" file="/usr/lib/haxe/std/js/html/webgl/ActiveInfo.hx" extern="1">
		<name public="1" set="null"><c path="String"/></name>
		<size public="1" set="null"><x path="Int"/></size>
		<type public="1" set="null"><x path="Int"/></type>
		<meta><m n=":native"><e>"WebGLActiveInfo"</e></m></meta>
	</class>
	<class path="js.html.webgl.Buffer" params="" file="/usr/lib/haxe/std/js/html/webgl/Buffer.hx" extern="1"><meta><m n=":native"><e>"WebGLBuffer"</e></m></meta></class>
	<typedef path="js.html.webgl.ContextAttributes" params="" file="/usr/lib/haxe/std/js/html/webgl/ContextAttributes.hx"><a>
	<stencil>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</stencil>
	<preserveDrawingBuffer>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</preserveDrawingBuffer>
	<premultipliedAlpha>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</premultipliedAlpha>
	<depth>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</depth>
	<antialias>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</antialias>
	<alpha>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</alpha>
</a></typedef>
	<class path="js.html.webgl.ContextEvent" params="" file="/usr/lib/haxe/std/js/html/webgl/ContextEvent.hx" extern="1">
		<extends path="js.html.Event"/>
		<statusMessage public="1" set="null"><c path="String"/></statusMessage>
		<new public="1" set="method"><f a="type:?canBubble:?cancelable">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"WebGLContextEvent"</e></m></meta>
	</class>
	<class path="js.html.webgl.Framebuffer" params="" file="/usr/lib/haxe/std/js/html/webgl/Framebuffer.hx" extern="1"><meta><m n=":native"><e>"WebGLFramebuffer"</e></m></meta></class>
	<class path="js.html.webgl.Program" params="" file="/usr/lib/haxe/std/js/html/webgl/Program.hx" extern="1"><meta><m n=":native"><e>"WebGLProgram"</e></m></meta></class>
	<class path="js.html.webgl.Renderbuffer" params="" file="/usr/lib/haxe/std/js/html/webgl/Renderbuffer.hx" extern="1"><meta><m n=":native"><e>"WebGLRenderbuffer"</e></m></meta></class>
	<class path="js.html.webgl.RenderingContext" params="" file="/usr/lib/haxe/std/js/html/webgl/RenderingContext.hx" extern="1">
		<extends path="js.html.CanvasRenderingContext"/>
		<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></ACTIVE_ATTRIBUTES>
		<ACTIVE_TEXTURE public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></ACTIVE_TEXTURE>
		<ACTIVE_UNIFORMS public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></ACTIVE_UNIFORMS>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></ALIASED_LINE_WIDTH_RANGE>
		<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></ALIASED_POINT_SIZE_RANGE>
		<ALPHA public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></ALPHA>
		<ALPHA_BITS public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></ALPHA_BITS>
		<ALWAYS public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></ALWAYS>
		<ARRAY_BUFFER public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="47" static="1"><x path="Int"/></ARRAY_BUFFER_BINDING>
		<ATTACHED_SHADERS public="1" get="inline" set="null" line="49" static="1"><x path="Int"/></ATTACHED_SHADERS>
		<BACK public="1" get="inline" set="null" line="51" static="1"><x path="Int"/></BACK>
		<BLEND public="1" get="inline" set="null" line="53" static="1"><x path="Int"/></BLEND>
		<BLEND_COLOR public="1" get="inline" set="null" line="55" static="1"><x path="Int"/></BLEND_COLOR>
		<BLEND_DST_ALPHA public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></BLEND_DST_ALPHA>
		<BLEND_DST_RGB public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></BLEND_DST_RGB>
		<BLEND_EQUATION public="1" get="inline" set="null" line="61" static="1"><x path="Int"/></BLEND_EQUATION>
		<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" line="63" static="1"><x path="Int"/></BLEND_EQUATION_ALPHA>
		<BLEND_EQUATION_RGB public="1" get="inline" set="null" line="65" static="1"><x path="Int"/></BLEND_EQUATION_RGB>
		<BLEND_SRC_ALPHA public="1" get="inline" set="null" line="67" static="1"><x path="Int"/></BLEND_SRC_ALPHA>
		<BLEND_SRC_RGB public="1" get="inline" set="null" line="69" static="1"><x path="Int"/></BLEND_SRC_RGB>
		<BLUE_BITS public="1" get="inline" set="null" line="71" static="1"><x path="Int"/></BLUE_BITS>
		<BOOL public="1" get="inline" set="null" line="73" static="1"><x path="Int"/></BOOL>
		<BOOL_VEC2 public="1" get="inline" set="null" line="75" static="1"><x path="Int"/></BOOL_VEC2>
		<BOOL_VEC3 public="1" get="inline" set="null" line="77" static="1"><x path="Int"/></BOOL_VEC3>
		<BOOL_VEC4 public="1" get="inline" set="null" line="79" static="1"><x path="Int"/></BOOL_VEC4>
		<BROWSER_DEFAULT_WEBGL public="1" get="inline" set="null" line="81" static="1"><x path="Int"/></BROWSER_DEFAULT_WEBGL>
		<BUFFER_SIZE public="1" get="inline" set="null" line="83" static="1"><x path="Int"/></BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="inline" set="null" line="85" static="1"><x path="Int"/></BUFFER_USAGE>
		<BYTE public="1" get="inline" set="null" line="87" static="1"><x path="Int"/></BYTE>
		<CCW public="1" get="inline" set="null" line="89" static="1"><x path="Int"/></CCW>
		<CLAMP_TO_EDGE public="1" get="inline" set="null" line="91" static="1"><x path="Int"/></CLAMP_TO_EDGE>
		<COLOR_ATTACHMENT0 public="1" get="inline" set="null" line="93" static="1"><x path="Int"/></COLOR_ATTACHMENT0>
		<COLOR_BUFFER_BIT public="1" get="inline" set="null" line="95" static="1"><x path="Int"/></COLOR_BUFFER_BIT>
		<COLOR_CLEAR_VALUE public="1" get="inline" set="null" line="97" static="1"><x path="Int"/></COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="inline" set="null" line="99" static="1"><x path="Int"/></COLOR_WRITEMASK>
		<COMPILE_STATUS public="1" get="inline" set="null" line="101" static="1"><x path="Int"/></COMPILE_STATUS>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" line="103" static="1"><x path="Int"/></COMPRESSED_TEXTURE_FORMATS>
		<CONSTANT_ALPHA public="1" get="inline" set="null" line="105" static="1"><x path="Int"/></CONSTANT_ALPHA>
		<CONSTANT_COLOR public="1" get="inline" set="null" line="107" static="1"><x path="Int"/></CONSTANT_COLOR>
		<CONTEXT_LOST_WEBGL public="1" get="inline" set="null" line="109" static="1"><x path="Int"/></CONTEXT_LOST_WEBGL>
		<CULL_FACE public="1" get="inline" set="null" line="111" static="1"><x path="Int"/></CULL_FACE>
		<CULL_FACE_MODE public="1" get="inline" set="null" line="113" static="1"><x path="Int"/></CULL_FACE_MODE>
		<CURRENT_PROGRAM public="1" get="inline" set="null" line="115" static="1"><x path="Int"/></CURRENT_PROGRAM>
		<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" line="117" static="1"><x path="Int"/></CURRENT_VERTEX_ATTRIB>
		<CW public="1" get="inline" set="null" line="119" static="1"><x path="Int"/></CW>
		<DECR public="1" get="inline" set="null" line="121" static="1"><x path="Int"/></DECR>
		<DECR_WRAP public="1" get="inline" set="null" line="123" static="1"><x path="Int"/></DECR_WRAP>
		<DELETE_STATUS public="1" get="inline" set="null" line="125" static="1"><x path="Int"/></DELETE_STATUS>
		<DEPTH_ATTACHMENT public="1" get="inline" set="null" line="127" static="1"><x path="Int"/></DEPTH_ATTACHMENT>
		<DEPTH_BITS public="1" get="inline" set="null" line="129" static="1"><x path="Int"/></DEPTH_BITS>
		<DEPTH_BUFFER_BIT public="1" get="inline" set="null" line="131" static="1"><x path="Int"/></DEPTH_BUFFER_BIT>
		<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" line="133" static="1"><x path="Int"/></DEPTH_CLEAR_VALUE>
		<DEPTH_COMPONENT public="1" get="inline" set="null" line="135" static="1"><x path="Int"/></DEPTH_COMPONENT>
		<DEPTH_COMPONENT16 public="1" get="inline" set="null" line="137" static="1"><x path="Int"/></DEPTH_COMPONENT16>
		<DEPTH_FUNC public="1" get="inline" set="null" line="139" static="1"><x path="Int"/></DEPTH_FUNC>
		<DEPTH_RANGE public="1" get="inline" set="null" line="141" static="1"><x path="Int"/></DEPTH_RANGE>
		<DEPTH_STENCIL public="1" get="inline" set="null" line="143" static="1"><x path="Int"/></DEPTH_STENCIL>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" line="145" static="1"><x path="Int"/></DEPTH_STENCIL_ATTACHMENT>
		<DEPTH_TEST public="1" get="inline" set="null" line="147" static="1"><x path="Int"/></DEPTH_TEST>
		<DEPTH_WRITEMASK public="1" get="inline" set="null" line="149" static="1"><x path="Int"/></DEPTH_WRITEMASK>
		<DITHER public="1" get="inline" set="null" line="151" static="1"><x path="Int"/></DITHER>
		<DONT_CARE public="1" get="inline" set="null" line="153" static="1"><x path="Int"/></DONT_CARE>
		<DST_ALPHA public="1" get="inline" set="null" line="155" static="1"><x path="Int"/></DST_ALPHA>
		<DST_COLOR public="1" get="inline" set="null" line="157" static="1"><x path="Int"/></DST_COLOR>
		<DYNAMIC_DRAW public="1" get="inline" set="null" line="159" static="1"><x path="Int"/></DYNAMIC_DRAW>
		<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" line="161" static="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="163" static="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER_BINDING>
		<EQUAL public="1" get="inline" set="null" line="165" static="1"><x path="Int"/></EQUAL>
		<FASTEST public="1" get="inline" set="null" line="167" static="1"><x path="Int"/></FASTEST>
		<FLOAT public="1" get="inline" set="null" line="169" static="1"><x path="Int"/></FLOAT>
		<FLOAT_MAT2 public="1" get="inline" set="null" line="171" static="1"><x path="Int"/></FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" line="173" static="1"><x path="Int"/></FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" line="175" static="1"><x path="Int"/></FLOAT_MAT4>
		<FLOAT_VEC2 public="1" get="inline" set="null" line="177" static="1"><x path="Int"/></FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" line="179" static="1"><x path="Int"/></FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" line="181" static="1"><x path="Int"/></FLOAT_VEC4>
		<FRAGMENT_SHADER public="1" get="inline" set="null" line="183" static="1"><x path="Int"/></FRAGMENT_SHADER>
		<FRAMEBUFFER public="1" get="inline" set="null" line="185" static="1"><x path="Int"/></FRAMEBUFFER>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" line="187" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" line="189" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" line="191" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" line="193" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_BINDING public="1" get="inline" set="null" line="195" static="1"><x path="Int"/></FRAMEBUFFER_BINDING>
		<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" line="197" static="1"><x path="Int"/></FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" line="199" static="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" line="201" static="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" line="203" static="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" line="205" static="1"><x path="Int"/></FRAMEBUFFER_UNSUPPORTED>
		<FRONT public="1" get="inline" set="null" line="207" static="1"><x path="Int"/></FRONT>
		<FRONT_AND_BACK public="1" get="inline" set="null" line="209" static="1"><x path="Int"/></FRONT_AND_BACK>
		<FRONT_FACE public="1" get="inline" set="null" line="211" static="1"><x path="Int"/></FRONT_FACE>
		<FUNC_ADD public="1" get="inline" set="null" line="213" static="1"><x path="Int"/></FUNC_ADD>
		<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" line="215" static="1"><x path="Int"/></FUNC_REVERSE_SUBTRACT>
		<FUNC_SUBTRACT public="1" get="inline" set="null" line="217" static="1"><x path="Int"/></FUNC_SUBTRACT>
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" line="219" static="1"><x path="Int"/></GENERATE_MIPMAP_HINT>
		<GEQUAL public="1" get="inline" set="null" line="221" static="1"><x path="Int"/></GEQUAL>
		<GREATER public="1" get="inline" set="null" line="223" static="1"><x path="Int"/></GREATER>
		<GREEN_BITS public="1" get="inline" set="null" line="225" static="1"><x path="Int"/></GREEN_BITS>
		<HIGH_FLOAT public="1" get="inline" set="null" line="227" static="1"><x path="Int"/></HIGH_FLOAT>
		<HIGH_INT public="1" get="inline" set="null" line="229" static="1"><x path="Int"/></HIGH_INT>
		<INCR public="1" get="inline" set="null" line="231" static="1"><x path="Int"/></INCR>
		<INCR_WRAP public="1" get="inline" set="null" line="233" static="1"><x path="Int"/></INCR_WRAP>
		<INT public="1" get="inline" set="null" line="235" static="1"><x path="Int"/></INT>
		<INT_VEC2 public="1" get="inline" set="null" line="237" static="1"><x path="Int"/></INT_VEC2>
		<INT_VEC3 public="1" get="inline" set="null" line="239" static="1"><x path="Int"/></INT_VEC3>
		<INT_VEC4 public="1" get="inline" set="null" line="241" static="1"><x path="Int"/></INT_VEC4>
		<INVALID_ENUM public="1" get="inline" set="null" line="243" static="1"><x path="Int"/></INVALID_ENUM>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" line="245" static="1"><x path="Int"/></INVALID_FRAMEBUFFER_OPERATION>
		<INVALID_OPERATION public="1" get="inline" set="null" line="247" static="1"><x path="Int"/></INVALID_OPERATION>
		<INVALID_VALUE public="1" get="inline" set="null" line="249" static="1"><x path="Int"/></INVALID_VALUE>
		<INVERT public="1" get="inline" set="null" line="251" static="1"><x path="Int"/></INVERT>
		<KEEP public="1" get="inline" set="null" line="253" static="1"><x path="Int"/></KEEP>
		<LEQUAL public="1" get="inline" set="null" line="255" static="1"><x path="Int"/></LEQUAL>
		<LESS public="1" get="inline" set="null" line="257" static="1"><x path="Int"/></LESS>
		<LINEAR public="1" get="inline" set="null" line="259" static="1"><x path="Int"/></LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" line="261" static="1"><x path="Int"/></LINEAR_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" line="263" static="1"><x path="Int"/></LINEAR_MIPMAP_NEAREST>
		<LINES public="1" get="inline" set="null" line="265" static="1"><x path="Int"/></LINES>
		<LINE_LOOP public="1" get="inline" set="null" line="267" static="1"><x path="Int"/></LINE_LOOP>
		<LINE_STRIP public="1" get="inline" set="null" line="269" static="1"><x path="Int"/></LINE_STRIP>
		<LINE_WIDTH public="1" get="inline" set="null" line="271" static="1"><x path="Int"/></LINE_WIDTH>
		<LINK_STATUS public="1" get="inline" set="null" line="273" static="1"><x path="Int"/></LINK_STATUS>
		<LOW_FLOAT public="1" get="inline" set="null" line="275" static="1"><x path="Int"/></LOW_FLOAT>
		<LOW_INT public="1" get="inline" set="null" line="277" static="1"><x path="Int"/></LOW_INT>
		<LUMINANCE public="1" get="inline" set="null" line="279" static="1"><x path="Int"/></LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="inline" set="null" line="281" static="1"><x path="Int"/></LUMINANCE_ALPHA>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="283" static="1"><x path="Int"/></MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" line="285" static="1"><x path="Int"/></MAX_CUBE_MAP_TEXTURE_SIZE>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" line="287" static="1"><x path="Int"/></MAX_FRAGMENT_UNIFORM_VECTORS>
		<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" line="289" static="1"><x path="Int"/></MAX_RENDERBUFFER_SIZE>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="291" static="1"><x path="Int"/></MAX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_SIZE public="1" get="inline" set="null" line="293" static="1"><x path="Int"/></MAX_TEXTURE_SIZE>
		<MAX_VARYING_VECTORS public="1" get="inline" set="null" line="295" static="1"><x path="Int"/></MAX_VARYING_VECTORS>
		<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" line="297" static="1"><x path="Int"/></MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="299" static="1"><x path="Int"/></MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" line="301" static="1"><x path="Int"/></MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" line="303" static="1"><x path="Int"/></MAX_VIEWPORT_DIMS>
		<MEDIUM_FLOAT public="1" get="inline" set="null" line="305" static="1"><x path="Int"/></MEDIUM_FLOAT>
		<MEDIUM_INT public="1" get="inline" set="null" line="307" static="1"><x path="Int"/></MEDIUM_INT>
		<MIRRORED_REPEAT public="1" get="inline" set="null" line="309" static="1"><x path="Int"/></MIRRORED_REPEAT>
		<NEAREST public="1" get="inline" set="null" line="311" static="1"><x path="Int"/></NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" line="313" static="1"><x path="Int"/></NEAREST_MIPMAP_LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" line="315" static="1"><x path="Int"/></NEAREST_MIPMAP_NEAREST>
		<NEVER public="1" get="inline" set="null" line="317" static="1"><x path="Int"/></NEVER>
		<NICEST public="1" get="inline" set="null" line="319" static="1"><x path="Int"/></NICEST>
		<NONE public="1" get="inline" set="null" line="321" static="1"><x path="Int"/></NONE>
		<NOTEQUAL public="1" get="inline" set="null" line="323" static="1"><x path="Int"/></NOTEQUAL>
		<NO_ERROR public="1" get="inline" set="null" line="325" static="1"><x path="Int"/></NO_ERROR>
		<ONE public="1" get="inline" set="null" line="327" static="1"><x path="Int"/></ONE>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" line="329" static="1"><x path="Int"/></ONE_MINUS_CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" line="331" static="1"><x path="Int"/></ONE_MINUS_CONSTANT_COLOR>
		<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" line="333" static="1"><x path="Int"/></ONE_MINUS_DST_ALPHA>
		<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" line="335" static="1"><x path="Int"/></ONE_MINUS_DST_COLOR>
		<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" line="337" static="1"><x path="Int"/></ONE_MINUS_SRC_ALPHA>
		<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" line="339" static="1"><x path="Int"/></ONE_MINUS_SRC_COLOR>
		<OUT_OF_MEMORY public="1" get="inline" set="null" line="341" static="1"><x path="Int"/></OUT_OF_MEMORY>
		<PACK_ALIGNMENT public="1" get="inline" set="null" line="343" static="1"><x path="Int"/></PACK_ALIGNMENT>
		<POINTS public="1" get="inline" set="null" line="345" static="1"><x path="Int"/></POINTS>
		<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" line="347" static="1"><x path="Int"/></POLYGON_OFFSET_FACTOR>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" line="349" static="1"><x path="Int"/></POLYGON_OFFSET_FILL>
		<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" line="351" static="1"><x path="Int"/></POLYGON_OFFSET_UNITS>
		<RED_BITS public="1" get="inline" set="null" line="353" static="1"><x path="Int"/></RED_BITS>
		<RENDERBUFFER public="1" get="inline" set="null" line="355" static="1"><x path="Int"/></RENDERBUFFER>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" line="357" static="1"><x path="Int"/></RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_BINDING public="1" get="inline" set="null" line="359" static="1"><x path="Int"/></RENDERBUFFER_BINDING>
		<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" line="361" static="1"><x path="Int"/></RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" line="363" static="1"><x path="Int"/></RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" line="365" static="1"><x path="Int"/></RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" line="367" static="1"><x path="Int"/></RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" line="369" static="1"><x path="Int"/></RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" line="371" static="1"><x path="Int"/></RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" line="373" static="1"><x path="Int"/></RENDERBUFFER_STENCIL_SIZE>
		<RENDERBUFFER_WIDTH public="1" get="inline" set="null" line="375" static="1"><x path="Int"/></RENDERBUFFER_WIDTH>
		<RENDERER public="1" get="inline" set="null" line="377" static="1"><x path="Int"/></RENDERER>
		<REPEAT public="1" get="inline" set="null" line="379" static="1"><x path="Int"/></REPEAT>
		<REPLACE public="1" get="inline" set="null" line="381" static="1"><x path="Int"/></REPLACE>
		<RGB public="1" get="inline" set="null" line="383" static="1"><x path="Int"/></RGB>
		<RGB565 public="1" get="inline" set="null" line="385" static="1"><x path="Int"/></RGB565>
		<RGB5_A1 public="1" get="inline" set="null" line="387" static="1"><x path="Int"/></RGB5_A1>
		<RGBA public="1" get="inline" set="null" line="389" static="1"><x path="Int"/></RGBA>
		<RGBA4 public="1" get="inline" set="null" line="391" static="1"><x path="Int"/></RGBA4>
		<SAMPLER_2D public="1" get="inline" set="null" line="393" static="1"><x path="Int"/></SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="inline" set="null" line="395" static="1"><x path="Int"/></SAMPLER_CUBE>
		<SAMPLES public="1" get="inline" set="null" line="397" static="1"><x path="Int"/></SAMPLES>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" line="399" static="1"><x path="Int"/></SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_BUFFERS public="1" get="inline" set="null" line="401" static="1"><x path="Int"/></SAMPLE_BUFFERS>
		<SAMPLE_COVERAGE public="1" get="inline" set="null" line="403" static="1"><x path="Int"/></SAMPLE_COVERAGE>
		<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" line="405" static="1"><x path="Int"/></SAMPLE_COVERAGE_INVERT>
		<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" line="407" static="1"><x path="Int"/></SAMPLE_COVERAGE_VALUE>
		<SCISSOR_BOX public="1" get="inline" set="null" line="409" static="1"><x path="Int"/></SCISSOR_BOX>
		<SCISSOR_TEST public="1" get="inline" set="null" line="411" static="1"><x path="Int"/></SCISSOR_TEST>
		<SHADER_TYPE public="1" get="inline" set="null" line="413" static="1"><x path="Int"/></SHADER_TYPE>
		<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" line="415" static="1"><x path="Int"/></SHADING_LANGUAGE_VERSION>
		<SHORT public="1" get="inline" set="null" line="417" static="1"><x path="Int"/></SHORT>
		<SRC_ALPHA public="1" get="inline" set="null" line="419" static="1"><x path="Int"/></SRC_ALPHA>
		<SRC_ALPHA_SATURATE public="1" get="inline" set="null" line="421" static="1"><x path="Int"/></SRC_ALPHA_SATURATE>
		<SRC_COLOR public="1" get="inline" set="null" line="423" static="1"><x path="Int"/></SRC_COLOR>
		<STATIC_DRAW public="1" get="inline" set="null" line="425" static="1"><x path="Int"/></STATIC_DRAW>
		<STENCIL_ATTACHMENT public="1" get="inline" set="null" line="427" static="1"><x path="Int"/></STENCIL_ATTACHMENT>
		<STENCIL_BACK_FAIL public="1" get="inline" set="null" line="429" static="1"><x path="Int"/></STENCIL_BACK_FAIL>
		<STENCIL_BACK_FUNC public="1" get="inline" set="null" line="431" static="1"><x path="Int"/></STENCIL_BACK_FUNC>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" line="433" static="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" line="435" static="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="inline" set="null" line="437" static="1"><x path="Int"/></STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" line="439" static="1"><x path="Int"/></STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" line="441" static="1"><x path="Int"/></STENCIL_BACK_WRITEMASK>
		<STENCIL_BITS public="1" get="inline" set="null" line="443" static="1"><x path="Int"/></STENCIL_BITS>
		<STENCIL_BUFFER_BIT public="1" get="inline" set="null" line="445" static="1"><x path="Int"/></STENCIL_BUFFER_BIT>
		<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" line="447" static="1"><x path="Int"/></STENCIL_CLEAR_VALUE>
		<STENCIL_FAIL public="1" get="inline" set="null" line="449" static="1"><x path="Int"/></STENCIL_FAIL>
		<STENCIL_FUNC public="1" get="inline" set="null" line="451" static="1"><x path="Int"/></STENCIL_FUNC>
		<STENCIL_INDEX public="1" get="inline" set="null" line="453" static="1"><x path="Int"/></STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="inline" set="null" line="455" static="1"><x path="Int"/></STENCIL_INDEX8>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" line="457" static="1"><x path="Int"/></STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" line="459" static="1"><x path="Int"/></STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="inline" set="null" line="461" static="1"><x path="Int"/></STENCIL_REF>
		<STENCIL_TEST public="1" get="inline" set="null" line="463" static="1"><x path="Int"/></STENCIL_TEST>
		<STENCIL_VALUE_MASK public="1" get="inline" set="null" line="465" static="1"><x path="Int"/></STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="inline" set="null" line="467" static="1"><x path="Int"/></STENCIL_WRITEMASK>
		<STREAM_DRAW public="1" get="inline" set="null" line="469" static="1"><x path="Int"/></STREAM_DRAW>
		<SUBPIXEL_BITS public="1" get="inline" set="null" line="471" static="1"><x path="Int"/></SUBPIXEL_BITS>
		<TEXTURE public="1" get="inline" set="null" line="473" static="1"><x path="Int"/></TEXTURE>
		<TEXTURE0 public="1" get="inline" set="null" line="475" static="1"><x path="Int"/></TEXTURE0>
		<TEXTURE1 public="1" get="inline" set="null" line="477" static="1"><x path="Int"/></TEXTURE1>
		<TEXTURE10 public="1" get="inline" set="null" line="479" static="1"><x path="Int"/></TEXTURE10>
		<TEXTURE11 public="1" get="inline" set="null" line="481" static="1"><x path="Int"/></TEXTURE11>
		<TEXTURE12 public="1" get="inline" set="null" line="483" static="1"><x path="Int"/></TEXTURE12>
		<TEXTURE13 public="1" get="inline" set="null" line="485" static="1"><x path="Int"/></TEXTURE13>
		<TEXTURE14 public="1" get="inline" set="null" line="487" static="1"><x path="Int"/></TEXTURE14>
		<TEXTURE15 public="1" get="inline" set="null" line="489" static="1"><x path="Int"/></TEXTURE15>
		<TEXTURE16 public="1" get="inline" set="null" line="491" static="1"><x path="Int"/></TEXTURE16>
		<TEXTURE17 public="1" get="inline" set="null" line="493" static="1"><x path="Int"/></TEXTURE17>
		<TEXTURE18 public="1" get="inline" set="null" line="495" static="1"><x path="Int"/></TEXTURE18>
		<TEXTURE19 public="1" get="inline" set="null" line="497" static="1"><x path="Int"/></TEXTURE19>
		<TEXTURE2 public="1" get="inline" set="null" line="499" static="1"><x path="Int"/></TEXTURE2>
		<TEXTURE20 public="1" get="inline" set="null" line="501" static="1"><x path="Int"/></TEXTURE20>
		<TEXTURE21 public="1" get="inline" set="null" line="503" static="1"><x path="Int"/></TEXTURE21>
		<TEXTURE22 public="1" get="inline" set="null" line="505" static="1"><x path="Int"/></TEXTURE22>
		<TEXTURE23 public="1" get="inline" set="null" line="507" static="1"><x path="Int"/></TEXTURE23>
		<TEXTURE24 public="1" get="inline" set="null" line="509" static="1"><x path="Int"/></TEXTURE24>
		<TEXTURE25 public="1" get="inline" set="null" line="511" static="1"><x path="Int"/></TEXTURE25>
		<TEXTURE26 public="1" get="inline" set="null" line="513" static="1"><x path="Int"/></TEXTURE26>
		<TEXTURE27 public="1" get="inline" set="null" line="515" static="1"><x path="Int"/></TEXTURE27>
		<TEXTURE28 public="1" get="inline" set="null" line="517" static="1"><x path="Int"/></TEXTURE28>
		<TEXTURE29 public="1" get="inline" set="null" line="519" static="1"><x path="Int"/></TEXTURE29>
		<TEXTURE3 public="1" get="inline" set="null" line="521" static="1"><x path="Int"/></TEXTURE3>
		<TEXTURE30 public="1" get="inline" set="null" line="523" static="1"><x path="Int"/></TEXTURE30>
		<TEXTURE31 public="1" get="inline" set="null" line="525" static="1"><x path="Int"/></TEXTURE31>
		<TEXTURE4 public="1" get="inline" set="null" line="527" static="1"><x path="Int"/></TEXTURE4>
		<TEXTURE5 public="1" get="inline" set="null" line="529" static="1"><x path="Int"/></TEXTURE5>
		<TEXTURE6 public="1" get="inline" set="null" line="531" static="1"><x path="Int"/></TEXTURE6>
		<TEXTURE7 public="1" get="inline" set="null" line="533" static="1"><x path="Int"/></TEXTURE7>
		<TEXTURE8 public="1" get="inline" set="null" line="535" static="1"><x path="Int"/></TEXTURE8>
		<TEXTURE9 public="1" get="inline" set="null" line="537" static="1"><x path="Int"/></TEXTURE9>
		<TEXTURE_2D public="1" get="inline" set="null" line="539" static="1"><x path="Int"/></TEXTURE_2D>
		<TEXTURE_BINDING_2D public="1" get="inline" set="null" line="541" static="1"><x path="Int"/></TEXTURE_BINDING_2D>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" line="543" static="1"><x path="Int"/></TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP public="1" get="inline" set="null" line="545" static="1"><x path="Int"/></TEXTURE_CUBE_MAP>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" line="547" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" line="549" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" line="551" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" line="553" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" line="555" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" line="557" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_MAG_FILTER public="1" get="inline" set="null" line="559" static="1"><x path="Int"/></TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="inline" set="null" line="561" static="1"><x path="Int"/></TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="inline" set="null" line="563" static="1"><x path="Int"/></TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="inline" set="null" line="565" static="1"><x path="Int"/></TEXTURE_WRAP_T>
		<TRIANGLES public="1" get="inline" set="null" line="567" static="1"><x path="Int"/></TRIANGLES>
		<TRIANGLE_FAN public="1" get="inline" set="null" line="569" static="1"><x path="Int"/></TRIANGLE_FAN>
		<TRIANGLE_STRIP public="1" get="inline" set="null" line="571" static="1"><x path="Int"/></TRIANGLE_STRIP>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" line="573" static="1"><x path="Int"/></UNPACK_ALIGNMENT>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="inline" set="null" line="575" static="1"><x path="Int"/></UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<UNPACK_FLIP_Y_WEBGL public="1" get="inline" set="null" line="577" static="1"><x path="Int"/></UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="inline" set="null" line="579" static="1"><x path="Int"/></UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<UNSIGNED_BYTE public="1" get="inline" set="null" line="581" static="1"><x path="Int"/></UNSIGNED_BYTE>
		<UNSIGNED_INT public="1" get="inline" set="null" line="583" static="1"><x path="Int"/></UNSIGNED_INT>
		<UNSIGNED_SHORT public="1" get="inline" set="null" line="585" static="1"><x path="Int"/></UNSIGNED_SHORT>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" line="587" static="1"><x path="Int"/></UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" line="589" static="1"><x path="Int"/></UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" line="591" static="1"><x path="Int"/></UNSIGNED_SHORT_5_6_5>
		<VALIDATE_STATUS public="1" get="inline" set="null" line="593" static="1"><x path="Int"/></VALIDATE_STATUS>
		<VENDOR public="1" get="inline" set="null" line="595" static="1"><x path="Int"/></VENDOR>
		<VERSION public="1" get="inline" set="null" line="597" static="1"><x path="Int"/></VERSION>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="599" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" line="601" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" line="603" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" line="605" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" line="607" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" line="609" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" line="611" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_SHADER public="1" get="inline" set="null" line="613" static="1"><x path="Int"/></VERTEX_SHADER>
		<VIEWPORT public="1" get="inline" set="null" line="615" static="1"><x path="Int"/></VIEWPORT>
		<ZERO public="1" get="inline" set="null" line="617" static="1"><x path="Int"/></ZERO>
		<drawingBufferHeight public="1" set="null"><x path="Int"/></drawingBufferHeight>
		<drawingBufferWidth public="1" set="null"><x path="Int"/></drawingBufferWidth>
		<activeTexture public="1" set="method"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" set="method"><f a="program:shader">
	<c path="js.html.webgl.Program"/>
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></attachShader>
		<bindAttribLocation public="1" set="method"><f a="program:index:name">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" set="method"><f a="target:buffer">
	<x path="Int"/>
	<c path="js.html.webgl.Buffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindFramebuffer public="1" set="method"><f a="target:framebuffer">
	<x path="Int"/>
	<c path="js.html.webgl.Framebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" set="method"><f a="target:renderbuffer">
	<x path="Int"/>
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindTexture public="1" set="method"><f a="target:texture">
	<x path="Int"/>
	<c path="js.html.webgl.Texture"/>
	<x path="Void"/>
</f></bindTexture>
		<blendColor public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" set="method"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" set="method"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" set="method"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" set="method">
			<f a="target:size:usage">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads>
				<bufferData public="1" set="method">
					<f a="target:data:usage">
						<x path="Int"/>
						<c path="js.html.ArrayBuffer"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</bufferData>
				<bufferData public="1" set="method">
					<f a="target:data:usage">
						<x path="Int"/>
						<c path="js.html.ArrayBufferView"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</bufferData>
			</overloads>
		</bufferData>
		<bufferSubData public="1" set="method">
			<f a="target:offset:data">
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><bufferSubData public="1" set="method">
	<f a="target:offset:data">
		<x path="Int"/>
		<x path="Int"/>
		<c path="js.html.ArrayBuffer"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</bufferSubData></overloads>
		</bufferSubData>
		<checkFramebufferStatus public="1" set="method"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" set="method"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearColor public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepth public="1" set="method"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepth>
		<clearStencil public="1" set="method"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<colorMask public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" set="method"><f a="target:level:internalformat:width:height:border:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexSubImage2D public="1" set="method"><f a="target:level:xoffset:yoffset:width:height:format:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<copyTexImage2D public="1" set="method"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" set="method"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<createBuffer public="1" set="method"><f a=""><c path="js.html.webgl.Buffer"/></f></createBuffer>
		<createFramebuffer public="1" set="method"><f a=""><c path="js.html.webgl.Framebuffer"/></f></createFramebuffer>
		<createProgram public="1" set="method"><f a=""><c path="js.html.webgl.Program"/></f></createProgram>
		<createRenderbuffer public="1" set="method"><f a=""><c path="js.html.webgl.Renderbuffer"/></f></createRenderbuffer>
		<createShader public="1" set="method"><f a="type">
	<x path="Int"/>
	<c path="js.html.webgl.Shader"/>
</f></createShader>
		<createTexture public="1" set="method"><f a=""><c path="js.html.webgl.Texture"/></f></createTexture>
		<cullFace public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" set="method"><f a="buffer">
	<c path="js.html.webgl.Buffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" set="method"><f a="framebuffer">
	<c path="js.html.webgl.Framebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteRenderbuffer public="1" set="method"><f a="renderbuffer">
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteShader public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteTexture public="1" set="method"><f a="texture">
	<c path="js.html.webgl.Texture"/>
	<x path="Void"/>
</f></deleteTexture>
		<depthFunc public="1" set="method"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" set="method"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRange public="1" set="method"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRange>
		<detachShader public="1" set="method"><f a="program:shader">
	<c path="js.html.webgl.Program"/>
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" set="method"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawElements public="1" set="method"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElements>
		<enable public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<finish public="1" set="method"><f a=""><x path="Void"/></f></finish>
		<flush public="1" set="method"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" set="method"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" set="method"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.webgl.Texture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<frontFace public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" set="method"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" set="method"><f a="program:index">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<c path="js.html.webgl.ActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" set="method"><f a="program:index">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<c path="js.html.webgl.ActiveInfo"/>
</f></getActiveUniform>
		<getAttachedShaders public="1" set="method">
			<f a="program">
				<c path="js.html.webgl.Program"/>
				<c path="Array"><c path="js.html.webgl.Shader"/></c>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><getAttachedShaders public="1" set="method">
	<f a="program">
		<c path="js.html.webgl.Program"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</getAttachedShaders></overloads>
		</getAttachedShaders>
		<getAttribLocation public="1" set="method"><f a="program:name">
	<c path="js.html.webgl.Program"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBufferParameter public="1" set="method">
			<f a="target:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getBufferParameter public="1" set="method"><f a=""><x path="Void"/></f></getBufferParameter></overloads>
		</getBufferParameter>
		<getContextAttributes public="1" set="method"><f a=""><t path="js.html.webgl.ContextAttributes"/></f></getContextAttributes>
		<getError public="1" set="method"><f a=""><x path="Int"/></f></getError>
		<getExtension public="1" set="method"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFramebufferAttachmentParameter public="1" set="method">
			<f a="target:attachment:pname">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getFramebufferAttachmentParameter public="1" set="method"><f a=""><x path="Void"/></f></getFramebufferAttachmentParameter></overloads>
		</getFramebufferAttachmentParameter>
		<getParameter public="1" set="method">
			<f a="pname">
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getParameter public="1" set="method"><f a=""><x path="Void"/></f></getParameter></overloads>
		</getParameter>
		<getProgramInfoLog public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" set="method">
			<f a="program:pname">
				<c path="js.html.webgl.Program"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getProgramParameter public="1" set="method"><f a=""><x path="Void"/></f></getProgramParameter></overloads>
		</getProgramParameter>
		<getRenderbufferParameter public="1" set="method">
			<f a="target:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getRenderbufferParameter public="1" set="method"><f a=""><x path="Void"/></f></getRenderbufferParameter></overloads>
		</getRenderbufferParameter>
		<getShaderInfoLog public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" set="method">
			<f a="shader:pname">
				<c path="js.html.webgl.Shader"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><getShaderParameter public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</getShaderParameter></overloads>
		</getShaderParameter>
		<getShaderPrecisionFormat public="1" set="method"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.webgl.ShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<c path="String"/>
</f></getShaderSource>
		<getSupportedExtensions public="1" set="method"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getTexParameter public="1" set="method">
			<f a="target:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getTexParameter public="1" set="method"><f a=""><x path="Void"/></f></getTexParameter></overloads>
		</getTexParameter>
		<getUniform public="1" set="method">
			<f a="program:location">
				<c path="js.html.webgl.Program"/>
				<c path="js.html.webgl.UniformLocation"/>
				<d/>
			</f>
			<overloads><getUniform public="1" set="method"><f a=""><x path="Void"/></f></getUniform></overloads>
		</getUniform>
		<getUniformLocation public="1" set="method"><f a="program:name">
	<c path="js.html.webgl.Program"/>
	<c path="String"/>
	<c path="js.html.webgl.UniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" set="method">
			<f a="index:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getVertexAttrib public="1" set="method"><f a=""><x path="Void"/></f></getVertexAttrib></overloads>
		</getVertexAttrib>
		<getVertexAttribOffset public="1" set="method"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribOffset>
		<hint public="1" set="method"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<isBuffer public="1" set="method"><f a="buffer">
	<c path="js.html.webgl.Buffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isContextLost public="1" set="method"><f a=""><x path="Bool"/></f></isContextLost>
		<isEnabled public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" set="method"><f a="framebuffer">
	<c path="js.html.webgl.Framebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Bool"/>
</f></isProgram>
		<isRenderbuffer public="1" set="method"><f a="renderbuffer">
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isShader public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<x path="Bool"/>
</f></isShader>
		<isTexture public="1" set="method"><f a="texture">
	<c path="js.html.webgl.Texture"/>
	<x path="Bool"/>
</f></isTexture>
		<lineWidth public="1" set="method"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></linkProgram>
		<pixelStorei public="1" set="method"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" set="method"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<readPixels public="1" set="method"><f a="x:y:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></readPixels>
		<releaseShaderCompiler public="1" set="method"><f a=""><x path="Void"/></f></releaseShaderCompiler>
		<renderbufferStorage public="1" set="method"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<sampleCoverage public="1" set="method"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<scissor public="1" set="method"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderSource public="1" set="method"><f a="shader:string">
	<c path="js.html.webgl.Shader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" set="method"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" set="method"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" set="method"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" set="method"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" set="method"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" set="method"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" set="method">
			<f a="target:level:internalformat:format:type:video">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.VideoElement"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:width:height:border:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageData"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:image">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:canvas">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.CanvasElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
			</overloads>
		</texImage2D>
		<texParameterf public="1" set="method"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" set="method"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" set="method">
			<f a="target:level:xoffset:yoffset:format:type:video">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.VideoElement"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageData"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:image">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:canvas">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.CanvasElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
			</overloads>
		</texSubImage2D>
		<uniform1f public="1" set="method"><f a="location:x">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" set="method"><f a="location:x">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform1iv>
		<uniform2f public="1" set="method"><f a="location:x:y">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" set="method"><f a="location:x:y">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform2iv>
		<uniform3f public="1" set="method"><f a="location:x:y:z">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" set="method"><f a="location:x:y:z">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform3iv>
		<uniform4f public="1" set="method"><f a="location:x:y:z:w">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" set="method"><f a="location:x:y:z:w">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform4iv>
		<uniformMatrix2fv public="1" set="method"><f a="location:transpose:array">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Bool"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix3fv public="1" set="method"><f a="location:transpose:array">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Bool"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix4fv public="1" set="method"><f a="location:transpose:array">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Bool"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix4fv>
		<useProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" set="method"><f a="indx:x">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" set="method"><f a="indx:x:y">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" set="method"><f a="indx:x:y:z">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" set="method"><f a="indx:x:y:z:w">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribPointer public="1" set="method"><f a="indx:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" set="method"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<meta><m n=":native"><e>"WebGLRenderingContext"</e></m></meta>
	</class>
	<class path="js.html.webgl.Shader" params="" file="/usr/lib/haxe/std/js/html/webgl/Shader.hx" extern="1"><meta><m n=":native"><e>"WebGLShader"</e></m></meta></class>
	<class path="js.html.webgl.ShaderPrecisionFormat" params="" file="/usr/lib/haxe/std/js/html/webgl/ShaderPrecisionFormat.hx" extern="1">
		<precision public="1" set="null"><x path="Int"/></precision>
		<rangeMax public="1" set="null"><x path="Int"/></rangeMax>
		<rangeMin public="1" set="null"><x path="Int"/></rangeMin>
		<meta><m n=":native"><e>"WebGLShaderPrecisionFormat"</e></m></meta>
	</class>
	<class path="js.html.webgl.Texture" params="" file="/usr/lib/haxe/std/js/html/webgl/Texture.hx" extern="1"><meta><m n=":native"><e>"WebGLTexture"</e></m></meta></class>
	<class path="js.html.webgl.UniformLocation" params="" file="/usr/lib/haxe/std/js/html/webgl/UniformLocation.hx" extern="1"><meta><m n=":native"><e>"WebGLUniformLocation"</e></m></meta></class>
	<class path="lime.AssetCache" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/Assets.hx" module="lime.Assets">
		<audio public="1"><x path="Map">
	<c path="String"/>
	<c path="lime.audio.AudioBuffer"/>
</x></audio>
		<enabled public="1"><x path="Bool"/></enabled>
		<image public="1"><x path="Map">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</x></image>
		<font public="1"><x path="Map">
	<c path="String"/>
	<d/>
</x></font>
		<clear public="1" set="method" line="1164"><f a="?prefix" v="null">
	<c path="String"/>
	<x path="Void"/>
</f></clear>
		<new public="1" set="method" line="1155"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.Assets" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/Assets.hx">
		<cache public="1" line="34" static="1"><c path="lime.AssetCache"/></cache>
		<libraries public="1" set="null" line="35" static="1"><x path="Map">
	<c path="String"/>
	<c path="lime.AssetLibrary"/>
</x></libraries>
		<initialized line="37" static="1"><x path="Bool"/></initialized>
		<exists public="1" set="method" line="40" static="1"><f a="id:?type" v=":null">
	<c path="String"/>
	<x path="lime.AssetType"/>
	<x path="Bool"/>
</f></exists>
		<getAudioBuffer public="1" set="method" line="75" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.audio.AudioBuffer"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded sound
	 * @usage		var sound = Assets.getSound("sound.wav");
	 * @param	id		The ID or asset path for the sound
	 * @return		A new Sound object</haxe_doc>
		</getAudioBuffer>
		<getBytes public="1" set="method" line="144" static="1">
			<f a="id">
				<c path="String"/>
				<c path="lime.utils.ByteArray"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded binary asset
	 * @usage		var bytes = Assets.getBytes("file.zip");
	 * @param	id		The ID or asset path for the file
	 * @return		A new ByteArray object</haxe_doc>
		</getBytes>
		<getFont public="1" set="method" line="193" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<d/>
			</f>
			<haxe_doc>* Gets an instance of an embedded font
	 * @usage		var fontName = Assets.getFont("font.ttf").fontName;
	 * @param	id		The ID or asset path for the font
	 * @return		A new Font object</haxe_doc>
		</getFont>
		<getImage public="1" set="method" line="257" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded bitmap
	 * @usage		var bitmap = new Bitmap(Assets.getBitmapData("image.jpg"));
	 * @param	id		The ID or asset path for the bitmap
	 * @param	useCache		(Optional) Whether to use BitmapData from the cache(Default: true)
	 * @return		A new BitmapData object</haxe_doc>
		</getImage>
		<getLibrary set="method" line="320" static="1"><f a="name">
	<c path="String"/>
	<c path="lime.AssetLibrary"/>
</f></getLibrary>
		<getPath public="1" set="method" line="408" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded streaming sound
	 * @usage		var sound = Assets.getMusic("sound.ogg");
	 * @param	id		The ID or asset path for the music track
	 * @return		A new Sound object</haxe_doc>
		</getPath>
		<getText public="1" set="method" line="449" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded text asset
	 * @usage		var text = Assets.getText("text.txt");
	 * @param	id		The ID or asset path for the file
	 * @return		A new String object</haxe_doc>
		</getText>
		<initialize set="method" line="492" static="1"><f a=""><x path="Void"/></f></initialize>
		<isLocal public="1" set="method" line="509" static="1"><f a="id:?type:?useCache" v=":null:true">
	<c path="String"/>
	<x path="lime.AssetType"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></isLocal>
		<isValidAudio set="method" line="554" static="1"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></isValidAudio>
		<isValidImage set="method" line="568" static="1"><f a="buffer">
	<c path="lime.graphics.Image"/>
	<x path="Bool"/>
</f></isValidImage>
		<list public="1" set="method" line="597" static="1"><f a="?type" v="null">
	<x path="lime.AssetType"/>
	<c path="Array"><c path="String"/></c>
</f></list>
		<loadAudioBuffer public="1" set="method" line="620" static="1"><f a="id:handler:?useCache" v="::true">
	<c path="String"/>
	<f a="">
		<c path="lime.audio.AudioBuffer"/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Void"/>
</f></loadAudioBuffer>
		<loadBytes public="1" set="method" line="683" static="1"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="lime.utils.ByteArray"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadBytes>
		<loadImage public="1" set="method" line="719" static="1"><f a="id:handler:?useCache" v="::true">
	<c path="String"/>
	<f a="">
		<c path="lime.graphics.Image"/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Void"/>
</f></loadImage>
		<loadLibrary public="1" set="method" line="782" static="1"><f a="name:handler">
	<c path="String"/>
	<f a="">
		<c path="lime.AssetLibrary"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadLibrary>
		<loadText public="1" set="method" line="872" static="1"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadText>
		<registerLibrary public="1" set="method" line="908" static="1"><f a="name:library">
	<c path="String"/>
	<c path="lime.AssetLibrary"/>
	<x path="Void"/>
</f></registerLibrary>
		<unloadLibrary public="1" set="method" line="927" static="1"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></unloadLibrary>
		<library_onEvent set="method" line="956" static="1"><f a="library:type">
	<c path="lime.AssetLibrary"/>
	<c path="String"/>
	<x path="Void"/>
</f></library_onEvent>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<abstract path="lime.AssetType" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/Assets.hx" module="lime.Assets">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime._Assets.AssetType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/Assets.hx" private="1" module="lime.Assets">
	<BINARY public="1" get="inline" set="null" line="1220" static="1">
		<x path="lime.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BINARY>
	<FONT public="1" get="inline" set="null" line="1221" static="1">
		<x path="lime.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONT>
	<IMAGE public="1" get="inline" set="null" line="1222" static="1">
		<x path="lime.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IMAGE>
	<MUSIC public="1" get="inline" set="null" line="1223" static="1">
		<x path="lime.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUSIC>
	<SOUND public="1" get="inline" set="null" line="1224" static="1">
		<x path="lime.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOUND>
	<TEMPLATE public="1" get="inline" set="null" line="1225" static="1">
		<x path="lime.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEMPLATE>
	<TEXT public="1" get="inline" set="null" line="1226" static="1">
		<x path="lime.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime._Assets.AssetType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/Assets.hx" private="1" module="lime.Assets">
		<BINARY public="1" get="inline" set="null" line="1220" static="1">
			<x path="lime.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BINARY>
		<FONT public="1" get="inline" set="null" line="1221" static="1">
			<x path="lime.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONT>
		<IMAGE public="1" get="inline" set="null" line="1222" static="1">
			<x path="lime.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IMAGE>
		<MUSIC public="1" get="inline" set="null" line="1223" static="1">
			<x path="lime.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUSIC>
		<SOUND public="1" get="inline" set="null" line="1224" static="1">
			<x path="lime.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOUND>
		<TEMPLATE public="1" get="inline" set="null" line="1225" static="1">
			<x path="lime.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEMPLATE>
		<TEXT public="1" get="inline" set="null" line="1226" static="1">
			<x path="lime.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.app.Module" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/app/Module.hx"><new public="1" set="method" line="7"><f a=""><x path="Void"/></f></new></class>
	<class path="lime.app._Application.UpdateEventInfo" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/app/Application.hx" private="1" module="lime.app.Application">
		<deltaTime public="1"><x path="Int"/></deltaTime>
		<type public="1"><x path="lime.app._Application.UpdateEventType"/></type>
		<clone public="1" set="method" line="470"><f a=""><c path="lime.app._Application.UpdateEventInfo"/></f></clone>
		<new public="1" set="method" line="462"><f a="?type:?deltaTime" v="null:0">
	<x path="lime.app._Application.UpdateEventType"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.app.Event" params="T" file="/usr/lib/haxe/lib/lime/2,0,1/lime/app/Event.hx">
		<listeners public="1">
			<c path="Array"><c path="lime.app.Event.T"/></c>
			<meta><m n=":noCompletion"/></meta>
		</listeners>
		<repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta><m n=":noCompletion"/></meta>
		</repeat>
		<priorities><c path="Array"><x path="Int"/></c></priorities>
		<add public="1" set="method" line="26"><f a="listener:?once:?priority" v=":false:0">
	<c path="lime.app.Event.T"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Void"/>
</f></add>
		<remove public="1" set="method" line="79"><f a="listener">
	<c path="lime.app.Event.T"/>
	<x path="Void"/>
</f></remove>
		<new public="1" set="method" line="17"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.app.Application" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/app/Application.hx">
		<extends path="lime.app.Module"/>
		<onUpdate public="1" line="28" static="1">
			<c path="lime.app.Event"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<haxe_doc>* Update events are dispatched each frame (usually just before rendering)</haxe_doc>
		</onUpdate>
		<__eventInfo line="30" static="1"><c path="lime.app._Application.UpdateEventInfo"/></__eventInfo>
		<__initialized static="1"><x path="Bool"/></__initialized>
		<__instance static="1"><c path="lime.app.Application"/></__instance>
		<__registered static="1"><x path="Bool"/></__registered>
		<__dispatch set="method" line="409" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__dispatch>
		<config public="1" set="null"><t path="lime.app.Config"/></config>
		<window public="1" get="accessor" set="null"><c path="lime.ui.Window"/></window>
		<windows public="1" set="null"><c path="Array"><c path="lime.ui.Window"/></c></windows>
		<__handle>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__handle>
		<addWindow public="1" set="method" line="70">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Adds a new Window to the Application. By default, this is
	 * called automatically by create()
	 * @param	window	A Window object to add</haxe_doc>
		</addWindow>
		<create public="1" set="method" line="84">
			<f a="config">
				<t path="lime.app.Config"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Initializes the Application, using the settings defined in
	 * the config instance. By default, this is called automatically
	 * when building the project using Lime's command-line tools
	 * @param	config	A Config object</haxe_doc>
		</create>
		<exec public="1" set="method" line="140">
			<f a=""><x path="Int"/></f>
			<haxe_doc>* Execute the Application. On native platforms, this method
	 * blocks until the application is finished running. On other 
	 * platforms, it will return immediately
	 * @return An exit code, 0 if there was no error</haxe_doc>
		</exec>
		<init public="1" set="method" line="243">
			<f a="context">
				<e path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* The init() method is called once before the first render()
	 * call. This can be used to do initial set-up for the current
	 * render context
	 * @param	context The current render context</haxe_doc>
		</init>
		<onKeyDown public="1" set="method" line="255">
			<f a="keyCode:modifier">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a key down event is fired
	 * @param	keyCode	The code of the key that was pressed
	 * @param	modifier	The modifier of the key that was pressed</haxe_doc>
		</onKeyDown>
		<onKeyUp public="1" set="method" line="263">
			<f a="keyCode:modifier">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a key up event is fired
	 * @param	keyCode	The code of the key that was released
	 * @param	modifier	The modifier of the key that was released</haxe_doc>
		</onKeyUp>
		<onMouseDown public="1" set="method" line="272">
			<f a="x:y:button">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a mouse down event is fired
	 * @param	x	The current x coordinate of the mouse
	 * @param	y	The current y coordinate of the mouse
	 * @param	button	The ID of the mouse button that was pressed</haxe_doc>
		</onMouseDown>
		<onMouseMove public="1" set="method" line="281">
			<f a="x:y:button">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a mouse move event is fired
	 * @param	x	The current x coordinate of the mouse
	 * @param	y	The current y coordinate of the mouse
	 * @param	button	The ID of the mouse button that was pressed</haxe_doc>
		</onMouseMove>
		<onMouseUp public="1" set="method" line="290">
			<f a="x:y:button">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a mouse up event is fired
	 * @param	x	The current x coordinate of the mouse
	 * @param	y	The current y coordinate of the mouse
	 * @param	button	The ID of the button that was released</haxe_doc>
		</onMouseUp>
		<onMouseWheel public="1" set="method" line="298">
			<f a="deltaX:deltaY">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a mouse wheel event is fired
	 * @param	deltaX	The amount of horizontal scrolling (if applicable)
	 * @param	deltaY	The amount of vertical scrolling (if applicable)</haxe_doc>
		</onMouseWheel>
		<onRenderContextLost public="1" set="method" line="304">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Called when a render context is lost</haxe_doc>
		</onRenderContextLost>
		<onRenderContextRestored public="1" set="method" line="311">
			<f a="context">
				<e path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a render context is restored
	 * @param	context	The current render context</haxe_doc>
		</onRenderContextRestored>
		<onTouchEnd public="1" set="method" line="320">
			<f a="x:y:id">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a touch end event is fired
	 * @param	x	The current x coordinate of the touch point
	 * @param	y	The current y coordinate of the touch point
	 * @param	id	The ID of the touch point</haxe_doc>
		</onTouchEnd>
		<onTouchMove public="1" set="method" line="329">
			<f a="x:y:id">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a touch move event is fired
	 * @param	x	The current x coordinate of the touch point
	 * @param	y	The current y coordinate of the touch point
	 * @param	id	The ID of the touch point</haxe_doc>
		</onTouchMove>
		<onTouchStart public="1" set="method" line="338">
			<f a="x:y:id">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a touch start event is fired
	 * @param	x	The current x coordinate of the touch point
	 * @param	y	The current y coordinate of the touch point
	 * @param	id	The ID of the touch point</haxe_doc>
		</onTouchStart>
		<onWindowActivate public="1" set="method" line="344">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Called when a window activate event is fired</haxe_doc>
		</onWindowActivate>
		<onWindowClose public="1" set="method" line="350">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Called when a window close event is fired</haxe_doc>
		</onWindowClose>
		<onWindowDeactivate public="1" set="method" line="356">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Called when a window deactivate event is fired</haxe_doc>
		</onWindowDeactivate>
		<onWindowFocusIn public="1" set="method" line="362">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Called when a window focus in event is fired</haxe_doc>
		</onWindowFocusIn>
		<onWindowFocusOut public="1" set="method" line="368">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Called when a window focus out event is fired</haxe_doc>
		</onWindowFocusOut>
		<onWindowMove public="1" set="method" line="376">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window move event is fired
	 * @param	x	The x position of the window
	 * @param	y	The y position of the window</haxe_doc>
		</onWindowMove>
		<onWindowResize public="1" set="method" line="384">
			<f a="width:height">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a window resize event is fired
	 * @param	width	The width of the window
	 * @param	height	The height of the window</haxe_doc>
		</onWindowResize>
		<render public="1" set="method" line="391">
			<f a="context">
				<e path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when a render event is fired
	 * @param	context	The current render context</haxe_doc>
		</render>
		<update public="1" set="method" line="402">
			<f a="deltaTime">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Called when an update event is fired
	 * @param	deltaTime	The amount of time in milliseconds that has elapsed since the last update</haxe_doc>
		</update>
		<__triggerFrame set="method" line="421">
			<f a="?_" v="null">
				<unknown/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__triggerFrame>
		<get_window get="inline" set="null" line="435">
			<f a=""><c path="lime.ui.Window"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_window>
		<new public="1" set="method" line="42"><f a=""><x path="Void"/></f></new>
		<haxe_doc>* The Application class forms the foundation for most Lime projects.
 * It is common to extend this class in a main class. It is then possible
 * to override "on" functions in the class in order to handle standard events
 * that are relevant.</haxe_doc>
	</class>
	<abstract path="lime.app._Application.UpdateEventType" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/app/Application.hx" private="1" module="lime.app.Application">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.app._Application.UpdateEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/app/Application.hx" private="1" module="lime.app.Application">
	<UPDATE public="1" get="inline" set="null" line="482" static="1">
		<x path="lime.app._Application.UpdateEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UPDATE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.app._Application.UpdateEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/app/Application.hx" private="1" module="lime.app.Application">
		<UPDATE public="1" get="inline" set="null" line="482" static="1">
			<x path="lime.app._Application.UpdateEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UPDATE>
		<meta><m n=":enum"/></meta>
	</class>
	<typedef path="lime.app.Config" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/app/Config.hx"><a>
	<width>
		<x path="Int"/>
		<meta><m n=":optional"/></meta>
	</width>
	<vsync>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</vsync>
	<title>
		<c path="String"/>
		<meta><m n=":optional"/></meta>
	</title>
	<stencilBuffer>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</stencilBuffer>
	<resizable>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</resizable>
	<orientation>
		<c path="String"/>
		<meta><m n=":optional"/></meta>
	</orientation>
	<height>
		<x path="Int"/>
		<meta><m n=":optional"/></meta>
	</height>
	<fullscreen>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</fullscreen>
	<fps>
		<x path="Int"/>
		<meta><m n=":optional"/></meta>
	</fps>
	<element>
		<c path="js.html.HtmlElement"/>
		<meta><m n=":optional"/></meta>
	</element>
	<depthBuffer>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</depthBuffer>
	<borderless>
		<x path="Bool"/>
		<meta><m n=":optional"/></meta>
	</borderless>
	<background>
		<t path="Null"><x path="Int"/></t>
		<meta><m n=":optional"/></meta>
	</background>
	<antialiasing>
		<x path="Int"/>
		<meta><m n=":optional"/></meta>
	</antialiasing>
</a></typedef>
	<class path="lime.app.Preloader" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/app/Preloader.hx">
		<images public="1" line="27" static="1"><x path="Map">
	<c path="String"/>
	<c path="js.html.Image"/>
</x></images>
		<loaders public="1" line="28" static="1"><x path="Map">
	<c path="String"/>
	<c path="lime.net.URLLoader"/>
</x></loaders>
		<complete public="1"><x path="Bool"/></complete>
		<onComplete public="1"><d/></onComplete>
		<loaded><x path="Int"/></loaded>
		<total><x path="Int"/></total>
		<create public="1" set="method" line="43"><f a="config">
	<t path="lime.app.Config"/>
	<x path="Void"/>
</f></create>
		<load public="1" set="method" line="64"><f a="urls:types">
	<c path="Array"><c path="String"/></c>
	<c path="Array"><x path="lime.AssetType"/></c>
	<x path="Void"/>
</f></load>
		<loadFont set="method" line="128"><f a="font">
	<c path="String"/>
	<x path="Void"/>
</f></loadFont>
		<start set="method" line="199"><f a=""><x path="Void"/></f></start>
		<update set="method" line="218"><f a="loaded:total">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></update>
		<image_onLoad set="method" line="233"><f a="_">
	<unknown/>
	<x path="Void"/>
</f></image_onLoad>
		<loader_onComplete set="method" line="248"><f a="loader">
	<c path="lime.net.URLLoader"/>
	<x path="Void"/>
</f></loader_onComplete>
		<new public="1" set="method" line="34"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.audio.ALAudioContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/ALAudioContext.hx">
		<NONE public="1"><x path="Int"/></NONE>
		<FALSE public="1"><x path="Int"/></FALSE>
		<TRUE public="1"><x path="Int"/></TRUE>
		<SOURCE_RELATIVE public="1"><x path="Int"/></SOURCE_RELATIVE>
		<CONE_INNER_ANGLE public="1"><x path="Int"/></CONE_INNER_ANGLE>
		<CONE_OUTER_ANGLE public="1"><x path="Int"/></CONE_OUTER_ANGLE>
		<PITCH public="1"><x path="Int"/></PITCH>
		<POSITION public="1"><x path="Int"/></POSITION>
		<DIRECTION public="1"><x path="Int"/></DIRECTION>
		<VELOCITY public="1"><x path="Int"/></VELOCITY>
		<LOOPING public="1"><x path="Int"/></LOOPING>
		<BUFFER public="1"><x path="Int"/></BUFFER>
		<GAIN public="1"><x path="Int"/></GAIN>
		<MIN_GAIN public="1"><x path="Int"/></MIN_GAIN>
		<MAX_GAIN public="1"><x path="Int"/></MAX_GAIN>
		<ORIENTATION public="1"><x path="Int"/></ORIENTATION>
		<SOURCE_STATE public="1"><x path="Int"/></SOURCE_STATE>
		<INITIAL public="1"><x path="Int"/></INITIAL>
		<PLAYING public="1"><x path="Int"/></PLAYING>
		<PAUSED public="1"><x path="Int"/></PAUSED>
		<STOPPED public="1"><x path="Int"/></STOPPED>
		<BUFFERS_QUEUED public="1"><x path="Int"/></BUFFERS_QUEUED>
		<BUFFERS_PROCESSED public="1"><x path="Int"/></BUFFERS_PROCESSED>
		<REFERENCE_DISTANCE public="1"><x path="Int"/></REFERENCE_DISTANCE>
		<ROLLOFF_FACTOR public="1"><x path="Int"/></ROLLOFF_FACTOR>
		<CONE_OUTER_GAIN public="1"><x path="Int"/></CONE_OUTER_GAIN>
		<MAX_DISTANCE public="1"><x path="Int"/></MAX_DISTANCE>
		<SEC_OFFSET public="1"><x path="Int"/></SEC_OFFSET>
		<SAMPLE_OFFSET public="1"><x path="Int"/></SAMPLE_OFFSET>
		<BYTE_OFFSET public="1"><x path="Int"/></BYTE_OFFSET>
		<SOURCE_TYPE public="1"><x path="Int"/></SOURCE_TYPE>
		<STATIC public="1"><x path="Int"/></STATIC>
		<STREAMING public="1"><x path="Int"/></STREAMING>
		<UNDETERMINED public="1"><x path="Int"/></UNDETERMINED>
		<FORMAT_MONO8 public="1"><x path="Int"/></FORMAT_MONO8>
		<FORMAT_MONO16 public="1"><x path="Int"/></FORMAT_MONO16>
		<FORMAT_STEREO8 public="1"><x path="Int"/></FORMAT_STEREO8>
		<FORMAT_STEREO16 public="1"><x path="Int"/></FORMAT_STEREO16>
		<FREQUENCY public="1"><x path="Int"/></FREQUENCY>
		<BITS public="1"><x path="Int"/></BITS>
		<CHANNELS public="1"><x path="Int"/></CHANNELS>
		<SIZE public="1"><x path="Int"/></SIZE>
		<NO_ERROR public="1"><x path="Int"/></NO_ERROR>
		<INVALID_NAME public="1"><x path="Int"/></INVALID_NAME>
		<INVALID_ENUM public="1"><x path="Int"/></INVALID_ENUM>
		<INVALID_VALUE public="1"><x path="Int"/></INVALID_VALUE>
		<INVALID_OPERATION public="1"><x path="Int"/></INVALID_OPERATION>
		<OUT_OF_MEMORY public="1"><x path="Int"/></OUT_OF_MEMORY>
		<VENDOR public="1"><x path="Int"/></VENDOR>
		<VERSION public="1"><x path="Int"/></VERSION>
		<RENDERER public="1"><x path="Int"/></RENDERER>
		<EXTENSIONS public="1"><x path="Int"/></EXTENSIONS>
		<DOPPLER_FACTOR public="1"><x path="Int"/></DOPPLER_FACTOR>
		<SPEED_OF_SOUND public="1"><x path="Int"/></SPEED_OF_SOUND>
		<DOPPLER_VELOCITY public="1"><x path="Int"/></DOPPLER_VELOCITY>
		<DISTANCE_MODEL public="1"><x path="Int"/></DISTANCE_MODEL>
		<INVERSE_DISTANCE public="1"><x path="Int"/></INVERSE_DISTANCE>
		<INVERSE_DISTANCE_CLAMPED public="1"><x path="Int"/></INVERSE_DISTANCE_CLAMPED>
		<LINEAR_DISTANCE public="1"><x path="Int"/></LINEAR_DISTANCE>
		<LINEAR_DISTANCE_CLAMPED public="1"><x path="Int"/></LINEAR_DISTANCE_CLAMPED>
		<EXPONENT_DISTANCE public="1"><x path="Int"/></EXPONENT_DISTANCE>
		<EXPONENT_DISTANCE_CLAMPED public="1"><x path="Int"/></EXPONENT_DISTANCE_CLAMPED>
		<bufferData public="1" set="method" line="82"><f a="buffer:format:data:size:freq">
	<x path="Int"/>
	<x path="Int"/>
	<c path="lime.utils.ByteArray"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<buffer3f public="1" set="method" line="89"><f a="buffer:param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></buffer3f>
		<buffer3i public="1" set="method" line="96"><f a="buffer:param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></buffer3i>
		<bufferf public="1" set="method" line="103"><f a="buffer:param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bufferf>
		<bufferfv public="1" set="method" line="110"><f a="buffer:param:values">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></bufferfv>
		<bufferi public="1" set="method" line="117"><f a="buffer:param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferi>
		<bufferiv public="1" set="method" line="124"><f a="buffer:param:values">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></bufferiv>
		<deleteBuffer public="1" set="method" line="131"><f a="buffer">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteBuffers public="1" set="method" line="138"><f a="buffers">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></deleteBuffers>
		<deleteSource public="1" set="method" line="145"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteSource>
		<deleteSources public="1" set="method" line="152"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></deleteSources>
		<disable public="1" set="method" line="159"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<distanceModel public="1" set="method" line="166"><f a="distanceModel">
	<x path="Int"/>
	<x path="Void"/>
</f></distanceModel>
		<dopplerFactor public="1" set="method" line="173"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerFactor>
		<dopplerVelocity public="1" set="method" line="180"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerVelocity>
		<enable public="1" set="method" line="187"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<genSource public="1" set="method" line="194"><f a=""><x path="Int"/></f></genSource>
		<genSources public="1" set="method" line="201"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></genSources>
		<genBuffer public="1" set="method" line="208"><f a=""><x path="Int"/></f></genBuffer>
		<genBuffers public="1" set="method" line="215"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></genBuffers>
		<getBoolean public="1" set="method" line="222"><f a="param">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" set="method" line="229"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Bool"/></c>
</f></getBooleanv>
		<getBuffer3f public="1" set="method" line="236"><f a="buffer:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getBuffer3f>
		<getBuffer3i public="1" set="method" line="243"><f a="buffer:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getBuffer3i>
		<getBufferf public="1" set="method" line="250"><f a="buffer:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getBufferf>
		<getBufferfv public="1" set="method" line="257"><f a="buffer:param:?count" v="::1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getBufferfv>
		<getBufferi public="1" set="method" line="264"><f a="buffer:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferi>
		<getBufferiv public="1" set="method" line="271"><f a="buffer:param:?count" v="::1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getBufferiv>
		<getDouble public="1" set="method" line="278"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getDouble>
		<getDoublev public="1" set="method" line="285"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getDoublev>
		<getEnumValue public="1" set="method" line="292"><f a="ename">
	<c path="String"/>
	<x path="Int"/>
</f></getEnumValue>
		<getError public="1" set="method" line="299"><f a=""><x path="Int"/></f></getError>
		<getErrorString public="1" set="method" line="306"><f a=""><c path="String"/></f></getErrorString>
		<getFloat public="1" set="method" line="313"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" set="method" line="320"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getFloatv>
		<getInteger public="1" set="method" line="327"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getIntegerv public="1" set="method" line="334"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getIntegerv>
		<getListener3f public="1" set="method" line="341"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getListener3f>
		<getListener3i public="1" set="method" line="348"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getListener3i>
		<getListenerf public="1" set="method" line="355"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getListenerf>
		<getListenerfv public="1" set="method" line="362"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getListenerfv>
		<getListeneri public="1" set="method" line="369"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getListeneri>
		<getListeneriv public="1" set="method" line="376"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getListeneriv>
		<getProcAddress public="1" set="method" line="383"><f a="fname">
	<c path="String"/>
	<d/>
</f></getProcAddress>
		<getSource3f public="1" set="method" line="390"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getSource3f>
		<getSourcef public="1" set="method" line="397"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSourcef>
		<getSource3i public="1" set="method" line="404"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getSource3i>
		<getSourcefv public="1" set="method" line="411"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getSourcefv>
		<getSourcei public="1" set="method" line="418"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSourcei>
		<getSourceiv public="1" set="method" line="425"><f a="source:param:?count" v="::1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getSourceiv>
		<getString public="1" set="method" line="432"><f a="param">
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<isBuffer public="1" set="method" line="439"><f a="buffer">
	<x path="Int"/>
	<x path="Bool"/>
</f></isBuffer>
		<isEnabled public="1" set="method" line="446"><f a="capability">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isExtensionPresent public="1" set="method" line="453"><f a="extname">
	<c path="String"/>
	<x path="Bool"/>
</f></isExtensionPresent>
		<isSource public="1" set="method" line="460"><f a="source">
	<x path="Int"/>
	<x path="Bool"/>
</f></isSource>
		<listener3f public="1" set="method" line="467"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listener3f>
		<listener3i public="1" set="method" line="474"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listener3i>
		<listenerf public="1" set="method" line="481"><f a="param:value">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listenerf>
		<listenerfv public="1" set="method" line="488"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></listenerfv>
		<listeneri public="1" set="method" line="495"><f a="param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listeneri>
		<listeneriv public="1" set="method" line="502"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></listeneriv>
		<source3f public="1" set="method" line="509"><f a="source:param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></source3f>
		<source3i public="1" set="method" line="516"><f a="source:param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></source3i>
		<sourcef public="1" set="method" line="523"><f a="source:param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></sourcef>
		<sourcefv public="1" set="method" line="530"><f a="source:param:values">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></sourcefv>
		<sourcei public="1" set="method" line="537"><f a="source:param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></sourcei>
		<sourceiv public="1" set="method" line="544"><f a="source:param:values">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceiv>
		<sourcePlay public="1" set="method" line="551"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></sourcePlay>
		<sourcePlayv public="1" set="method" line="558"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourcePlayv>
		<sourceStop public="1" set="method" line="565"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></sourceStop>
		<sourceStopv public="1" set="method" line="572"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceStopv>
		<sourceRewind public="1" set="method" line="579"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></sourceRewind>
		<sourceRewindv public="1" set="method" line="586"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceRewindv>
		<sourcePause public="1" set="method" line="593"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></sourcePause>
		<sourcePausev public="1" set="method" line="600"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourcePausev>
		<sourceQueueBuffer public="1" set="method" line="607"><f a="source:buffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></sourceQueueBuffer>
		<sourceQueueBuffers public="1" set="method" line="614"><f a="source:nb:buffers">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceQueueBuffers>
		<sourceUnqueueBuffer public="1" set="method" line="621"><f a="source">
	<x path="Int"/>
	<x path="Int"/>
</f></sourceUnqueueBuffer>
		<sourceUnqueueBuffers public="1" set="method" line="628"><f a="source:nb">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></sourceUnqueueBuffers>
		<speedOfSound public="1" set="method" line="635"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></speedOfSound>
		<new public="1" set="method" line="75"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.audio.ALCAudioContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/ALCAudioContext.hx">
		<FALSE public="1"><x path="Int"/></FALSE>
		<TRUE public="1"><x path="Int"/></TRUE>
		<FREQUENCY public="1"><x path="Int"/></FREQUENCY>
		<REFRESH public="1"><x path="Int"/></REFRESH>
		<SYNC public="1"><x path="Int"/></SYNC>
		<MONO_SOURCES public="1"><x path="Int"/></MONO_SOURCES>
		<STEREO_SOURCES public="1"><x path="Int"/></STEREO_SOURCES>
		<NO_ERROR public="1"><x path="Int"/></NO_ERROR>
		<INVALID_DEVICE public="1"><x path="Int"/></INVALID_DEVICE>
		<INVALID_CONTEXT public="1"><x path="Int"/></INVALID_CONTEXT>
		<INVALID_ENUM public="1"><x path="Int"/></INVALID_ENUM>
		<INVALID_VALUE public="1"><x path="Int"/></INVALID_VALUE>
		<OUT_OF_MEMORY public="1"><x path="Int"/></OUT_OF_MEMORY>
		<ATTRIBUTES_SIZE public="1"><x path="Int"/></ATTRIBUTES_SIZE>
		<ALL_ATTRIBUTES public="1"><x path="Int"/></ALL_ATTRIBUTES>
		<DEFAULT_DEVICE_SPECIFIER public="1"><x path="Int"/></DEFAULT_DEVICE_SPECIFIER>
		<DEVICE_SPECIFIER public="1"><x path="Int"/></DEVICE_SPECIFIER>
		<EXTENSIONS public="1"><x path="Int"/></EXTENSIONS>
		<ENUMERATE_ALL_EXT public="1"><x path="Int"/></ENUMERATE_ALL_EXT>
		<DEFAULT_ALL_DEVICES_SPECIFIER public="1"><x path="Int"/></DEFAULT_ALL_DEVICES_SPECIFIER>
		<ALL_DEVICES_SPECIFIER public="1"><x path="Int"/></ALL_DEVICES_SPECIFIER>
		<closeDevice public="1" set="method" line="42"><f a="device">
	<x path="lime.audio.openal.ALDevice"/>
	<x path="Bool"/>
</f></closeDevice>
		<createContext public="1" set="method" line="49"><f a="device:?attrlist" v=":null">
	<x path="lime.audio.openal.ALDevice"/>
	<c path="Array"><x path="Int"/></c>
	<x path="lime.audio.openal.ALContext"/>
</f></createContext>
		<destroyContext public="1" set="method" line="56"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="Void"/>
</f></destroyContext>
		<getContextsDevice public="1" set="method" line="63"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="lime.audio.openal.ALDevice"/>
</f></getContextsDevice>
		<getCurrentContext public="1" set="method" line="70"><f a=""><x path="lime.audio.openal.ALContext"/></f></getCurrentContext>
		<getError public="1" set="method" line="77"><f a="device">
	<x path="lime.audio.openal.ALDevice"/>
	<x path="Int"/>
</f></getError>
		<getErrorString public="1" set="method" line="84"><f a="device">
	<x path="lime.audio.openal.ALDevice"/>
	<c path="String"/>
</f></getErrorString>
		<getIntegerv public="1" set="method" line="91"><f a="device:param:?count" v="::1">
	<x path="lime.audio.openal.ALDevice"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getIntegerv>
		<getString public="1" set="method" line="98"><f a="device:param">
	<x path="lime.audio.openal.ALDevice"/>
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<makeContextCurrent public="1" set="method" line="105"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="Bool"/>
</f></makeContextCurrent>
		<openDevice public="1" set="method" line="112"><f a="?deviceName" v="null">
	<c path="String"/>
	<x path="lime.audio.openal.ALDevice"/>
</f></openDevice>
		<processContext public="1" set="method" line="119"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="Void"/>
</f></processContext>
		<suspendContext public="1" set="method" line="126"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="Void"/>
</f></suspendContext>
		<new public="1" set="method" line="35"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.audio.AudioBuffer" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/AudioBuffer.hx">
		<fromBytes public="1" set="method" line="48" static="1"><f a="bytes">
	<c path="lime.utils.ByteArray"/>
	<c path="lime.audio.AudioBuffer"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="72" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.audio.AudioBuffer"/>
</f></fromFile>
		<fromURL public="1" set="method" line="96" static="1"><f a="url:handler">
	<c path="String"/>
	<f a="">
		<c path="lime.audio.AudioBuffer"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></fromURL>
		<bitsPerSample public="1"><x path="Int"/></bitsPerSample>
		<channels public="1"><x path="Int"/></channels>
		<data public="1"><c path="lime.utils.ByteArray"/></data>
		<id public="1"><x path="UInt"/></id>
		<sampleRate public="1"><x path="Int"/></sampleRate>
		<src public="1"><c path="js.html.Audio"/></src>
		<dispose public="1" set="method" line="41"><f a=""><x path="Void"/></f></dispose>
		<new public="1" set="method" line="34"><f a=""><x path="Void"/></f></new>
	</class>
	<enum path="lime.audio.AudioContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/AudioContext.hx">
		<OPENAL a="alc:al">
			<c path="lime.audio.ALCAudioContext"/>
			<c path="lime.audio.ALAudioContext"/>
		</OPENAL>
		<HTML5 a="context"><c path="lime.audio.HTML5AudioContext"/></HTML5>
		<WEB a="context"><t path="lime.audio.WebAudioContext"/></WEB>
		<FLASH a="context"><c path="lime.audio.FlashAudioContext"/></FLASH>
		<CUSTOM a="data"><d/></CUSTOM>
	</enum>
	<class path="lime.audio.AudioManager" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/AudioManager.hx">
		<context public="1" static="1"><e path="lime.audio.AudioContext"/></context>
		<init public="1" set="method" line="20" static="1"><f a="?context" v="null">
	<e path="lime.audio.AudioContext"/>
	<x path="Void"/>
</f></init>
		<resume public="1" set="method" line="56" static="1"><f a=""><x path="Void"/></f></resume>
		<shutdown public="1" set="method" line="75" static="1"><f a=""><x path="Void"/></f></shutdown>
		<suspend public="1" set="method" line="103" static="1"><f a=""><x path="Void"/></f></suspend>
	</class>
	<class path="lime.audio.AudioSource" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/AudioSource.hx">
		<onComplete public="1"><c path="lime.app.Event"><f a=""><x path="Void"/></f></c></onComplete>
		<buffer public="1"><c path="lime.audio.AudioBuffer"/></buffer>
		<gain public="1" get="accessor" set="accessor"><x path="Float"/></gain>
		<timeOffset public="1" get="accessor" set="accessor"><x path="Int"/></timeOffset>
		<id><x path="UInt"/></id>
		<pauseTime><x path="Int"/></pauseTime>
		<init set="method" line="44"><f a=""><x path="Void"/></f></init>
		<play public="1" set="method" line="96"><f a=""><x path="Void"/></f></play>
		<pause public="1" set="method" line="109"><f a=""><x path="Void"/></f></pause>
		<stop public="1" set="method" line="126"><f a=""><x path="Void"/></f></stop>
		<get_gain set="method" line="146"><f a=""><x path="Float"/></f></get_gain>
		<set_gain set="method" line="155"><f a="value">
	<x path="Float"/>
	<x path="Float"/>
</f></set_gain>
		<get_timeOffset set="method" line="164"><f a=""><x path="Int"/></f></get_timeOffset>
		<set_timeOffset set="method" line="173"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></set_timeOffset>
		<new public="1" set="method" line="29"><f a="?buffer" v="null">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.audio.FlashAudioContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/FlashAudioContext.hx">
		<createBuffer public="1" set="method" line="19"><f a="?stream:?context" v="null:null">
	<d/>
	<d/>
	<c path="lime.audio.AudioBuffer"/>
</f></createBuffer>
		<getBytesLoaded public="1" set="method" line="32"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="UInt"/>
</f></getBytesLoaded>
		<getBytesTotal public="1" set="method" line="47"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Int"/>
</f></getBytesTotal>
		<getID3 public="1" set="method" line="62"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
</f></getID3>
		<getIsBuffering public="1" set="method" line="77"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></getIsBuffering>
		<getIsURLInaccessible public="1" set="method" line="92"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></getIsURLInaccessible>
		<getLength public="1" set="method" line="107"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
</f></getLength>
		<getURL public="1" set="method" line="122"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<c path="String"/>
</f></getURL>
		<close public="1" set="method" line="137"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Void"/>
</f></close>
		<extract public="1" set="method" line="150"><f a="buffer:target:length:?startPosition" v=":::-1">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
</f></extract>
		<load public="1" set="method" line="165"><f a="buffer:stream:?context" v="::null">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
	<d/>
	<x path="Void"/>
</f></load>
		<loadCompressedDataFromByteArray public="1" set="method" line="178"><f a="buffer:bytes:bytesLength">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
	<x path="UInt"/>
	<x path="Void"/>
</f></loadCompressedDataFromByteArray>
		<loadPCMFromByteArray public="1" set="method" line="191"><f a="buffer:bytes:samples:?format:?stereo:?sampleRate" v=":::null:true:44100">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
	<x path="UInt"/>
	<c path="String"/>
	<x path="Bool"/>
	<x path="Float"/>
	<x path="Void"/>
</f></loadPCMFromByteArray>
		<play public="1" set="method" line="204"><f a="buffer:?startTime:?loops:?sndTransform" v=":0:0:null">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
	<x path="Int"/>
	<d/>
	<d/>
</f></play>
		<new public="1" set="method" line="12"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.audio.HTML5AudioContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/HTML5AudioContext.hx">
		<HAVE_CURRENT_DATA public="1"><x path="Int"/></HAVE_CURRENT_DATA>
		<HAVE_ENOUGH_DATA public="1"><x path="Int"/></HAVE_ENOUGH_DATA>
		<HAVE_FUTURE_DATA public="1"><x path="Int"/></HAVE_FUTURE_DATA>
		<HAVE_METADATA public="1"><x path="Int"/></HAVE_METADATA>
		<HAVE_NOTHING public="1"><x path="Int"/></HAVE_NOTHING>
		<NETWORK_EMPTY public="1"><x path="Int"/></NETWORK_EMPTY>
		<NETWORK_IDLE public="1"><x path="Int"/></NETWORK_IDLE>
		<NETWORK_LOADING public="1"><x path="Int"/></NETWORK_LOADING>
		<NETWORK_NO_SOURCE public="1"><x path="Int"/></NETWORK_NO_SOURCE>
		<canPlayType public="1" set="method" line="30"><f a="buffer:type">
	<c path="lime.audio.AudioBuffer"/>
	<c path="String"/>
	<c path="String"/>
</f></canPlayType>
		<createBuffer public="1" set="method" line="45"><f a="?urlString" v="null">
	<c path="String"/>
	<c path="lime.audio.AudioBuffer"/>
</f></createBuffer>
		<getAudioDecodedByteCount public="1" set="method" line="59"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Int"/>
</f></getAudioDecodedByteCount>
		<getAutoplay public="1" set="method" line="74"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></getAutoplay>
		<getBuffered public="1" set="method" line="89"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
</f></getBuffered>
		<getController public="1" set="method" line="104"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
</f></getController>
		<getCurrentSrc public="1" set="method" line="119"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<c path="String"/>
</f></getCurrentSrc>
		<getCurrentTime public="1" set="method" line="134"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
</f></getCurrentTime>
		<getDefaultPlaybackRate public="1" set="method" line="149"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
</f></getDefaultPlaybackRate>
		<getDuration public="1" set="method" line="164"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
</f></getDuration>
		<getEnded public="1" set="method" line="179"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></getEnded>
		<getError public="1" set="method" line="194"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
</f></getError>
		<getInitialTime public="1" set="method" line="209"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
</f></getInitialTime>
		<getLoop public="1" set="method" line="224"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></getLoop>
		<getMediaGroup public="1" set="method" line="239"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<c path="String"/>
</f></getMediaGroup>
		<getMuted public="1" set="method" line="254"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></getMuted>
		<getNetworkState public="1" set="method" line="269"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Int"/>
</f></getNetworkState>
		<getPaused public="1" set="method" line="284"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></getPaused>
		<getPlaybackRate public="1" set="method" line="299"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
</f></getPlaybackRate>
		<getPlayed public="1" set="method" line="314"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
</f></getPlayed>
		<getPreload public="1" set="method" line="329"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<c path="String"/>
</f></getPreload>
		<getReadyState public="1" set="method" line="344"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Int"/>
</f></getReadyState>
		<getSeekable public="1" set="method" line="359"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
</f></getSeekable>
		<getSeeking public="1" set="method" line="374"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
</f></getSeeking>
		<getSrc public="1" set="method" line="389"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<c path="String"/>
</f></getSrc>
		<getStartTime public="1" set="method" line="404"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
</f></getStartTime>
		<getVolume public="1" set="method" line="419"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
</f></getVolume>
		<load public="1" set="method" line="434"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Void"/>
</f></load>
		<pause public="1" set="method" line="447"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Void"/>
</f></pause>
		<play public="1" set="method" line="460"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Void"/>
</f></play>
		<setAutoplay public="1" set="method" line="473"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setAutoplay>
		<setController public="1" set="method" line="486"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<d/>
	<x path="Void"/>
</f></setController>
		<setCurrentTime public="1" set="method" line="499"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setCurrentTime>
		<setDefaultPlaybackRate public="1" set="method" line="512"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setDefaultPlaybackRate>
		<setLoop public="1" set="method" line="525"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setLoop>
		<setMediaGroup public="1" set="method" line="538"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<c path="String"/>
	<x path="Void"/>
</f></setMediaGroup>
		<setMuted public="1" set="method" line="551"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setMuted>
		<setPlaybackRate public="1" set="method" line="564"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setPlaybackRate>
		<setPreload public="1" set="method" line="577"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<c path="String"/>
	<x path="Void"/>
</f></setPreload>
		<setSrc public="1" set="method" line="590"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<c path="String"/>
	<x path="Void"/>
</f></setSrc>
		<setVolume public="1" set="method" line="603"><f a="buffer:value">
	<c path="lime.audio.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setVolume>
		<new public="1" set="method" line="23"><f a=""><x path="Void"/></f></new>
	</class>
	<typedef path="lime.audio.WebAudioContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/WebAudioContext.hx"><c path="js.html.audio.AudioContext"/></typedef>
	<class path="lime.audio.openal.AL" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/openal/AL.hx">
		<NONE public="1" get="inline" set="null" line="11" static="1"><x path="Int"/></NONE>
		<FALSE public="1" get="inline" set="null" line="12" static="1"><x path="Int"/></FALSE>
		<TRUE public="1" get="inline" set="null" line="13" static="1"><x path="Int"/></TRUE>
		<SOURCE_RELATIVE public="1" get="inline" set="null" line="14" static="1"><x path="Int"/></SOURCE_RELATIVE>
		<CONE_INNER_ANGLE public="1" get="inline" set="null" line="15" static="1"><x path="Int"/></CONE_INNER_ANGLE>
		<CONE_OUTER_ANGLE public="1" get="inline" set="null" line="16" static="1"><x path="Int"/></CONE_OUTER_ANGLE>
		<PITCH public="1" get="inline" set="null" line="17" static="1"><x path="Int"/></PITCH>
		<POSITION public="1" get="inline" set="null" line="18" static="1"><x path="Int"/></POSITION>
		<DIRECTION public="1" get="inline" set="null" line="19" static="1"><x path="Int"/></DIRECTION>
		<VELOCITY public="1" get="inline" set="null" line="20" static="1"><x path="Int"/></VELOCITY>
		<LOOPING public="1" get="inline" set="null" line="21" static="1"><x path="Int"/></LOOPING>
		<BUFFER public="1" get="inline" set="null" line="22" static="1"><x path="Int"/></BUFFER>
		<GAIN public="1" get="inline" set="null" line="23" static="1"><x path="Int"/></GAIN>
		<MIN_GAIN public="1" get="inline" set="null" line="24" static="1"><x path="Int"/></MIN_GAIN>
		<MAX_GAIN public="1" get="inline" set="null" line="25" static="1"><x path="Int"/></MAX_GAIN>
		<ORIENTATION public="1" get="inline" set="null" line="26" static="1"><x path="Int"/></ORIENTATION>
		<SOURCE_STATE public="1" get="inline" set="null" line="27" static="1"><x path="Int"/></SOURCE_STATE>
		<INITIAL public="1" get="inline" set="null" line="28" static="1"><x path="Int"/></INITIAL>
		<PLAYING public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></PLAYING>
		<PAUSED public="1" get="inline" set="null" line="30" static="1"><x path="Int"/></PAUSED>
		<STOPPED public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></STOPPED>
		<BUFFERS_QUEUED public="1" get="inline" set="null" line="32" static="1"><x path="Int"/></BUFFERS_QUEUED>
		<BUFFERS_PROCESSED public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></BUFFERS_PROCESSED>
		<REFERENCE_DISTANCE public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></REFERENCE_DISTANCE>
		<ROLLOFF_FACTOR public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></ROLLOFF_FACTOR>
		<CONE_OUTER_GAIN public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></CONE_OUTER_GAIN>
		<MAX_DISTANCE public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></MAX_DISTANCE>
		<SEC_OFFSET public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></SEC_OFFSET>
		<SAMPLE_OFFSET public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></SAMPLE_OFFSET>
		<BYTE_OFFSET public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></BYTE_OFFSET>
		<SOURCE_TYPE public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></SOURCE_TYPE>
		<STATIC public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></STATIC>
		<STREAMING public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></STREAMING>
		<UNDETERMINED public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></UNDETERMINED>
		<FORMAT_MONO8 public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></FORMAT_MONO8>
		<FORMAT_MONO16 public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></FORMAT_MONO16>
		<FORMAT_STEREO8 public="1" get="inline" set="null" line="47" static="1"><x path="Int"/></FORMAT_STEREO8>
		<FORMAT_STEREO16 public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></FORMAT_STEREO16>
		<FREQUENCY public="1" get="inline" set="null" line="49" static="1"><x path="Int"/></FREQUENCY>
		<BITS public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></BITS>
		<CHANNELS public="1" get="inline" set="null" line="51" static="1"><x path="Int"/></CHANNELS>
		<SIZE public="1" get="inline" set="null" line="52" static="1"><x path="Int"/></SIZE>
		<NO_ERROR public="1" get="inline" set="null" line="53" static="1"><x path="Int"/></NO_ERROR>
		<INVALID_NAME public="1" get="inline" set="null" line="54" static="1"><x path="Int"/></INVALID_NAME>
		<INVALID_ENUM public="1" get="inline" set="null" line="55" static="1"><x path="Int"/></INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" line="56" static="1"><x path="Int"/></INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" line="58" static="1"><x path="Int"/></OUT_OF_MEMORY>
		<VENDOR public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></VENDOR>
		<VERSION public="1" get="inline" set="null" line="60" static="1"><x path="Int"/></VERSION>
		<RENDERER public="1" get="inline" set="null" line="61" static="1"><x path="Int"/></RENDERER>
		<EXTENSIONS public="1" get="inline" set="null" line="62" static="1"><x path="Int"/></EXTENSIONS>
		<DOPPLER_FACTOR public="1" get="inline" set="null" line="63" static="1"><x path="Int"/></DOPPLER_FACTOR>
		<SPEED_OF_SOUND public="1" get="inline" set="null" line="64" static="1"><x path="Int"/></SPEED_OF_SOUND>
		<DOPPLER_VELOCITY public="1" get="inline" set="null" line="65" static="1"><x path="Int"/></DOPPLER_VELOCITY>
		<DISTANCE_MODEL public="1" get="inline" set="null" line="66" static="1"><x path="Int"/></DISTANCE_MODEL>
		<INVERSE_DISTANCE public="1" get="inline" set="null" line="67" static="1"><x path="Int"/></INVERSE_DISTANCE>
		<INVERSE_DISTANCE_CLAMPED public="1" get="inline" set="null" line="68" static="1"><x path="Int"/></INVERSE_DISTANCE_CLAMPED>
		<LINEAR_DISTANCE public="1" get="inline" set="null" line="69" static="1"><x path="Int"/></LINEAR_DISTANCE>
		<LINEAR_DISTANCE_CLAMPED public="1" get="inline" set="null" line="70" static="1"><x path="Int"/></LINEAR_DISTANCE_CLAMPED>
		<EXPONENT_DISTANCE public="1" get="inline" set="null" line="71" static="1"><x path="Int"/></EXPONENT_DISTANCE>
		<EXPONENT_DISTANCE_CLAMPED public="1" get="inline" set="null" line="72" static="1"><x path="Int"/></EXPONENT_DISTANCE_CLAMPED>
		<bufferData public="1" set="method" line="75" static="1"><f a="buffer:format:data:size:freq">
	<x path="Int"/>
	<x path="Int"/>
	<c path="lime.utils.ByteArray"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<buffer3f public="1" set="method" line="86" static="1"><f a="buffer:param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></buffer3f>
		<buffer3i public="1" set="method" line="95" static="1"><f a="buffer:param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></buffer3i>
		<bufferf public="1" set="method" line="104" static="1"><f a="buffer:param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bufferf>
		<bufferfv public="1" set="method" line="113" static="1"><f a="buffer:param:values">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></bufferfv>
		<bufferi public="1" set="method" line="122" static="1"><f a="buffer:param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferi>
		<bufferiv public="1" set="method" line="131" static="1"><f a="buffer:param:values">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></bufferiv>
		<deleteBuffer public="1" set="method" line="140" static="1"><f a="buffer">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteBuffers public="1" set="method" line="149" static="1"><f a="buffers">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></deleteBuffers>
		<deleteSource public="1" set="method" line="158" static="1"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></deleteSource>
		<deleteSources public="1" set="method" line="167" static="1"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></deleteSources>
		<disable public="1" set="method" line="176" static="1"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<distanceModel public="1" set="method" line="185" static="1"><f a="distanceModel">
	<x path="Int"/>
	<x path="Void"/>
</f></distanceModel>
		<dopplerFactor public="1" set="method" line="194" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerFactor>
		<dopplerVelocity public="1" set="method" line="203" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></dopplerVelocity>
		<enable public="1" set="method" line="212" static="1"><f a="capability">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<genSource public="1" set="method" line="221" static="1"><f a=""><x path="Int"/></f></genSource>
		<genSources public="1" set="method" line="232" static="1"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></genSources>
		<genBuffer public="1" set="method" line="243" static="1"><f a=""><x path="Int"/></f></genBuffer>
		<genBuffers public="1" set="method" line="254" static="1"><f a="n">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></genBuffers>
		<getBoolean public="1" set="method" line="265" static="1"><f a="param">
	<x path="Int"/>
	<x path="Bool"/>
</f></getBoolean>
		<getBooleanv public="1" set="method" line="276" static="1"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Bool"/></c>
</f></getBooleanv>
		<getBuffer3f public="1" set="method" line="287" static="1"><f a="buffer:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getBuffer3f>
		<getBuffer3i public="1" set="method" line="298" static="1"><f a="buffer:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getBuffer3i>
		<getBufferf public="1" set="method" line="309" static="1"><f a="buffer:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getBufferf>
		<getBufferfv public="1" set="method" line="320" static="1"><f a="buffer:param:?count" v="::1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getBufferfv>
		<getBufferi public="1" set="method" line="331" static="1"><f a="buffer:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferi>
		<getBufferiv public="1" set="method" line="342" static="1"><f a="buffer:param:?count" v="::1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getBufferiv>
		<getDouble public="1" set="method" line="353" static="1"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getDouble>
		<getDoublev public="1" set="method" line="364" static="1"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getDoublev>
		<getEnumValue public="1" set="method" line="375" static="1"><f a="ename">
	<c path="String"/>
	<x path="Int"/>
</f></getEnumValue>
		<getError public="1" set="method" line="386" static="1"><f a=""><x path="Int"/></f></getError>
		<getErrorString public="1" set="method" line="397" static="1"><f a=""><c path="String"/></f></getErrorString>
		<getFloat public="1" set="method" line="413" static="1"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getFloatv public="1" set="method" line="424" static="1"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getFloatv>
		<getInteger public="1" set="method" line="435" static="1"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getInteger>
		<getIntegerv public="1" set="method" line="446" static="1"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getIntegerv>
		<getListener3f public="1" set="method" line="457" static="1"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getListener3f>
		<getListener3i public="1" set="method" line="468" static="1"><f a="param">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getListener3i>
		<getListenerf public="1" set="method" line="479" static="1"><f a="param">
	<x path="Int"/>
	<x path="Float"/>
</f></getListenerf>
		<getListenerfv public="1" set="method" line="490" static="1"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getListenerfv>
		<getListeneri public="1" set="method" line="501" static="1"><f a="param">
	<x path="Int"/>
	<x path="Int"/>
</f></getListeneri>
		<getListeneriv public="1" set="method" line="512" static="1"><f a="param:?count" v=":1">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getListeneriv>
		<getProcAddress public="1" set="method" line="523" static="1"><f a="fname">
	<c path="String"/>
	<d/>
</f></getProcAddress>
		<getSource3f public="1" set="method" line="530" static="1"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getSource3f>
		<getSourcef public="1" set="method" line="541" static="1"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
</f></getSourcef>
		<getSource3i public="1" set="method" line="552" static="1"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getSource3i>
		<getSourcefv public="1" set="method" line="563" static="1"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
</f></getSourcefv>
		<getSourcei public="1" set="method" line="574" static="1"><f a="source:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getSourcei>
		<getSourceiv public="1" set="method" line="585" static="1"><f a="source:param:?count" v="::1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getSourceiv>
		<getString public="1" set="method" line="596" static="1"><f a="param">
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<isBuffer public="1" set="method" line="607" static="1"><f a="buffer">
	<x path="Int"/>
	<x path="Bool"/>
</f></isBuffer>
		<isEnabled public="1" set="method" line="618" static="1"><f a="capability">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isExtensionPresent public="1" set="method" line="629" static="1"><f a="extname">
	<c path="String"/>
	<x path="Bool"/>
</f></isExtensionPresent>
		<isSource public="1" set="method" line="640" static="1"><f a="source">
	<x path="Int"/>
	<x path="Bool"/>
</f></isSource>
		<listener3f public="1" set="method" line="651" static="1"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listener3f>
		<listener3i public="1" set="method" line="660" static="1"><f a="param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listener3i>
		<listenerf public="1" set="method" line="669" static="1"><f a="param:value">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></listenerf>
		<listenerfv public="1" set="method" line="678" static="1"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></listenerfv>
		<listeneri public="1" set="method" line="687" static="1"><f a="param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></listeneri>
		<listeneriv public="1" set="method" line="696" static="1"><f a="param:values">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></listeneriv>
		<source3f public="1" set="method" line="705" static="1"><f a="source:param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></source3f>
		<source3i public="1" set="method" line="714" static="1"><f a="source:param:value1:value2:value3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></source3i>
		<sourcef public="1" set="method" line="723" static="1"><f a="source:param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></sourcef>
		<sourcefv public="1" set="method" line="732" static="1"><f a="source:param:values">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Void"/>
</f></sourcefv>
		<sourcei public="1" set="method" line="741" static="1"><f a="source:param:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></sourcei>
		<sourceiv public="1" set="method" line="750" static="1"><f a="source:param:values">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceiv>
		<sourcePlay public="1" set="method" line="759" static="1"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></sourcePlay>
		<sourcePlayv public="1" set="method" line="768" static="1"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourcePlayv>
		<sourceStop public="1" set="method" line="777" static="1"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></sourceStop>
		<sourceStopv public="1" set="method" line="786" static="1"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceStopv>
		<sourceRewind public="1" set="method" line="795" static="1"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></sourceRewind>
		<sourceRewindv public="1" set="method" line="804" static="1"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceRewindv>
		<sourcePause public="1" set="method" line="813" static="1"><f a="source">
	<x path="Int"/>
	<x path="Void"/>
</f></sourcePause>
		<sourcePausev public="1" set="method" line="822" static="1"><f a="sources">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourcePausev>
		<sourceQueueBuffer public="1" set="method" line="831" static="1"><f a="source:buffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></sourceQueueBuffer>
		<sourceQueueBuffers public="1" set="method" line="840" static="1"><f a="source:nb:buffers">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></sourceQueueBuffers>
		<sourceUnqueueBuffer public="1" set="method" line="849" static="1"><f a="source">
	<x path="Int"/>
	<x path="Int"/>
</f></sourceUnqueueBuffer>
		<sourceUnqueueBuffers public="1" set="method" line="861" static="1"><f a="source:nb">
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></sourceUnqueueBuffers>
		<speedOfSound public="1" set="method" line="872" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></speedOfSound>
	</class>
	<class path="lime.audio.openal.ALC" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/openal/ALC.hx">
		<FALSE public="1" get="inline" set="null" line="10" static="1"><x path="Int"/></FALSE>
		<TRUE public="1" get="inline" set="null" line="11" static="1"><x path="Int"/></TRUE>
		<FREQUENCY public="1" get="inline" set="null" line="12" static="1"><x path="Int"/></FREQUENCY>
		<REFRESH public="1" get="inline" set="null" line="13" static="1"><x path="Int"/></REFRESH>
		<SYNC public="1" get="inline" set="null" line="14" static="1"><x path="Int"/></SYNC>
		<MONO_SOURCES public="1" get="inline" set="null" line="15" static="1"><x path="Int"/></MONO_SOURCES>
		<STEREO_SOURCES public="1" get="inline" set="null" line="16" static="1"><x path="Int"/></STEREO_SOURCES>
		<NO_ERROR public="1" get="inline" set="null" line="17" static="1"><x path="Int"/></NO_ERROR>
		<INVALID_DEVICE public="1" get="inline" set="null" line="18" static="1"><x path="Int"/></INVALID_DEVICE>
		<INVALID_CONTEXT public="1" get="inline" set="null" line="19" static="1"><x path="Int"/></INVALID_CONTEXT>
		<INVALID_ENUM public="1" get="inline" set="null" line="20" static="1"><x path="Int"/></INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" line="21" static="1"><x path="Int"/></INVALID_VALUE>
		<OUT_OF_MEMORY public="1" get="inline" set="null" line="22" static="1"><x path="Int"/></OUT_OF_MEMORY>
		<ATTRIBUTES_SIZE public="1" get="inline" set="null" line="23" static="1"><x path="Int"/></ATTRIBUTES_SIZE>
		<ALL_ATTRIBUTES public="1" get="inline" set="null" line="24" static="1"><x path="Int"/></ALL_ATTRIBUTES>
		<DEFAULT_DEVICE_SPECIFIER public="1" get="inline" set="null" line="25" static="1"><x path="Int"/></DEFAULT_DEVICE_SPECIFIER>
		<DEVICE_SPECIFIER public="1" get="inline" set="null" line="26" static="1"><x path="Int"/></DEVICE_SPECIFIER>
		<EXTENSIONS public="1" get="inline" set="null" line="27" static="1"><x path="Int"/></EXTENSIONS>
		<ENUMERATE_ALL_EXT public="1" get="inline" set="null" line="28" static="1"><x path="Int"/></ENUMERATE_ALL_EXT>
		<DEFAULT_ALL_DEVICES_SPECIFIER public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></DEFAULT_ALL_DEVICES_SPECIFIER>
		<ALL_DEVICES_SPECIFIER public="1" get="inline" set="null" line="30" static="1"><x path="Int"/></ALL_DEVICES_SPECIFIER>
		<closeDevice public="1" set="method" line="33" static="1"><f a="device">
	<x path="lime.audio.openal.ALDevice"/>
	<x path="Bool"/>
</f></closeDevice>
		<createContext public="1" set="method" line="44" static="1"><f a="device:?attrlist" v=":null">
	<x path="lime.audio.openal.ALDevice"/>
	<c path="Array"><x path="Int"/></c>
	<x path="lime.audio.openal.ALContext"/>
</f></createContext>
		<destroyContext public="1" set="method" line="61" static="1"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="Void"/>
</f></destroyContext>
		<getContextsDevice public="1" set="method" line="70" static="1"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="lime.audio.openal.ALDevice"/>
</f></getContextsDevice>
		<getCurrentContext public="1" set="method" line="87" static="1"><f a=""><x path="lime.audio.openal.ALContext"/></f></getCurrentContext>
		<getError public="1" set="method" line="104" static="1"><f a="device">
	<x path="lime.audio.openal.ALDevice"/>
	<x path="Int"/>
</f></getError>
		<getErrorString public="1" set="method" line="115" static="1"><f a="device">
	<x path="lime.audio.openal.ALDevice"/>
	<c path="String"/>
</f></getErrorString>
		<getIntegerv public="1" set="method" line="131" static="1"><f a="device:param:size">
	<x path="lime.audio.openal.ALDevice"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
</f></getIntegerv>
		<getString public="1" set="method" line="142" static="1"><f a="device:param">
	<x path="lime.audio.openal.ALDevice"/>
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<makeContextCurrent public="1" set="method" line="153" static="1"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="Bool"/>
</f></makeContextCurrent>
		<openDevice public="1" set="method" line="164" static="1"><f a="?deviceName" v="null">
	<c path="String"/>
	<x path="lime.audio.openal.ALDevice"/>
</f></openDevice>
		<processContext public="1" set="method" line="181" static="1"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="Void"/>
</f></processContext>
		<suspendContext public="1" set="method" line="190" static="1"><f a="context">
	<x path="lime.audio.openal.ALContext"/>
	<x path="Void"/>
</f></suspendContext>
	</class>
	<abstract path="lime.audio.openal.ALContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/openal/ALContext.hx">
		<from><icast><t path="Null"><x path="Float"/></t></icast></from>
		<this><t path="Null"><x path="Float"/></t></this>
		<to><icast><t path="Null"><x path="Float"/></t></icast></to>
		<meta>
			<m n=":allow"><e>'???'</e></m>
			<m n=":allow"><e>'???'</e></m>
		</meta>
		<impl><class path="lime.audio.openal._ALContext.ALContext_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/openal/ALContext.hx" private="1" module="lime.audio.openal.ALContext">
	<_new set="method" line="11" static="1">
		<f a="handle">
			<x path="Float"/>
			<t path="Null"><x path="Float"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<meta>
		<m n=":allow"><e>'???'</e></m>
		<m n=":allow"><e>'???'</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.audio.openal._ALContext.ALContext_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/openal/ALContext.hx" private="1" module="lime.audio.openal.ALContext">
		<_new set="method" line="11" static="1">
			<f a="handle">
				<x path="Float"/>
				<t path="Null"><x path="Float"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<meta>
			<m n=":allow"><e>'???'</e></m>
			<m n=":allow"><e>'???'</e></m>
		</meta>
	</class>
	<abstract path="lime.audio.openal.ALDevice" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/openal/ALDevice.hx">
		<from><icast><t path="Null"><x path="Float"/></t></icast></from>
		<this><t path="Null"><x path="Float"/></t></this>
		<to><icast><t path="Null"><x path="Float"/></t></icast></to>
		<meta>
			<m n=":allow"><e>'???'</e></m>
			<m n=":allow"><e>'???'</e></m>
		</meta>
		<impl><class path="lime.audio.openal._ALDevice.ALDevice_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/openal/ALDevice.hx" private="1" module="lime.audio.openal.ALDevice">
	<_new set="method" line="11" static="1">
		<f a="handle">
			<x path="Float"/>
			<t path="Null"><x path="Float"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<meta>
		<m n=":allow"><e>'???'</e></m>
		<m n=":allow"><e>'???'</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.audio.openal._ALDevice.ALDevice_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/audio/openal/ALDevice.hx" private="1" module="lime.audio.openal.ALDevice">
		<_new set="method" line="11" static="1">
			<f a="handle">
				<x path="Float"/>
				<t path="Null"><x path="Float"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<meta>
			<m n=":allow"><e>'???'</e></m>
			<m n=":allow"><e>'???'</e></m>
		</meta>
	</class>
	<typedef path="lime.graphics.CanvasRenderContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/CanvasRenderContext.hx"><c path="js.html.CanvasRenderingContext2D"/></typedef>
	<typedef path="lime.graphics.DOMRenderContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/DOMRenderContext.hx"><c path="js.html.DivElement"/></typedef>
	<class path="lime.graphics.FlashRenderContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/FlashRenderContext.hx">
		<accessibilityImplementation public="1"><d/></accessibilityImplementation>
		<accessibilityProperties public="1"><d/></accessibilityProperties>
		<alpha public="1"><x path="Float"/></alpha>
		<blendMode public="1"><d/></blendMode>
		<blendShader public="1" get="null"><d/></blendShader>
		<buttonMode public="1"><x path="Bool"/></buttonMode>
		<cacheAsBitmap public="1"><x path="Bool"/></cacheAsBitmap>
		<contextMenu public="1"><d/></contextMenu>
		<doubleClickEnabled public="1"><x path="Bool"/></doubleClickEnabled>
		<dropTarget public="1" set="null"><d/></dropTarget>
		<filters public="1"><c path="Array"><d/></c></filters>
		<focusRect public="1"><d/></focusRect>
		<graphics public="1" set="null"><d/></graphics>
		<height public="1"><x path="Float"/></height>
		<hitArea public="1"><d/></hitArea>
		<loaderInfo public="1" set="null"><d/></loaderInfo>
		<mask public="1"><d/></mask>
		<mouseChildren public="1"><x path="Bool"/></mouseChildren>
		<mouseEnabled public="1"><x path="Bool"/></mouseEnabled>
		<mouseX public="1" set="null"><x path="Float"/></mouseX>
		<mouseY public="1" set="null"><x path="Float"/></mouseY>
		<name public="1"><c path="String"/></name>
		<needsSoftKeyboard public="1"><x path="Bool"/></needsSoftKeyboard>
		<numChildren public="1" set="null"><x path="Int"/></numChildren>
		<opaqueBackground public="1"><t path="Null"><x path="UInt"/></t></opaqueBackground>
		<parent public="1" set="null"><d/></parent>
		<root public="1" set="null"><d/></root>
		<rotation public="1"><x path="Float"/></rotation>
		<rotationX public="1"><x path="Float"/></rotationX>
		<rotationY public="1"><x path="Float"/></rotationY>
		<rotationZ public="1"><x path="Float"/></rotationZ>
		<scale9Grid public="1"><d/></scale9Grid>
		<scaleX public="1"><x path="Float"/></scaleX>
		<scaleY public="1"><x path="Float"/></scaleY>
		<scaleZ public="1"><x path="Float"/></scaleZ>
		<scrollRect public="1"><d/></scrollRect>
		<softKeyboardInputAreaOfInterest public="1"><d/></softKeyboardInputAreaOfInterest>
		<soundTransform public="1"><d/></soundTransform>
		<stage public="1" set="null"><d/></stage>
		<tabChildren public="1"><x path="Bool"/></tabChildren>
		<tabEnabled public="1"><x path="Bool"/></tabEnabled>
		<tabIndex public="1"><x path="Int"/></tabIndex>
		<textSnapshot public="1" set="null"><d/></textSnapshot>
		<transform public="1"><d/></transform>
		<useHandCursor public="1"><x path="Bool"/></useHandCursor>
		<visible public="1"><x path="Bool"/></visible>
		<width public="1"><x path="Float"/></width>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<z public="1"><x path="Float"/></z>
		<addChild public="1" set="method" line="69"><f a="child">
	<d/>
	<d/>
</f></addChild>
		<addChildAt public="1" set="method" line="70"><f a="child:index">
	<d/>
	<x path="Int"/>
	<d/>
</f></addChildAt>
		<addEventListener public="1" set="method" line="71"><f a="type:listener:?useCapture:?priority:?useWeakReference" v="::false:0:false">
	<c path="String"/>
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></addEventListener>
		<areInaccessibleObjectsUnderPoint public="1" set="method" line="72"><f a="point">
	<d/>
	<x path="Bool"/>
</f></areInaccessibleObjectsUnderPoint>
		<contains public="1" set="method" line="73"><f a="child">
	<d/>
	<x path="Bool"/>
</f></contains>
		<dispatchEvent public="1" set="method" line="74"><f a="event">
	<d/>
	<x path="Bool"/>
</f></dispatchEvent>
		<getBounds public="1" set="method" line="75"><f a="targetCoordinateSpace">
	<d/>
	<d/>
</f></getBounds>
		<getChildAt public="1" set="method" line="76"><f a="index">
	<x path="Int"/>
	<d/>
</f></getChildAt>
		<getChildByName public="1" set="method" line="77"><f a="name">
	<c path="String"/>
	<d/>
</f></getChildByName>
		<getChildIndex public="1" set="method" line="78"><f a="child">
	<d/>
	<x path="Int"/>
</f></getChildIndex>
		<getObjectsUnderPoint public="1" set="method" line="79"><f a="point">
	<d/>
	<c path="Array"><d/></c>
</f></getObjectsUnderPoint>
		<getRect public="1" set="method" line="80"><f a="targetCoordinateSpace">
	<d/>
	<d/>
</f></getRect>
		<globalToLocal public="1" set="method" line="81"><f a="point">
	<d/>
	<d/>
</f></globalToLocal>
		<globalToLocal3D public="1" set="method" line="82"><f a="point">
	<d/>
	<d/>
</f></globalToLocal3D>
		<hasEventListener public="1" set="method" line="83"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasEventListener>
		<hitTestObject public="1" set="method" line="84"><f a="obj">
	<d/>
	<x path="Bool"/>
</f></hitTestObject>
		<hitTestPoint public="1" set="method" line="85"><f a="x:y:?shapeFlag" v="::false">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></hitTestPoint>
		<local3DToGlobal public="1" set="method" line="86"><f a="point3d">
	<d/>
	<d/>
</f></local3DToGlobal>
		<localToGlobal public="1" set="method" line="87"><f a="point">
	<d/>
	<d/>
</f></localToGlobal>
		<removeChild public="1" set="method" line="88"><f a="child">
	<d/>
	<d/>
</f></removeChild>
		<removeChildAt public="1" set="method" line="89"><f a="index">
	<x path="Int"/>
	<d/>
</f></removeChildAt>
		<removeChildren public="1" set="method" line="90"><f a="?beginIndex:?endIndex" v="0:2147483647">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></removeChildren>
		<removeEventListener public="1" set="method" line="91"><f a="type:listener:?useCapture" v="::false">
	<c path="String"/>
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Void"/>
</f></removeEventListener>
		<requestSoftKeyboard public="1" set="method" line="92"><f a=""><x path="Bool"/></f></requestSoftKeyboard>
		<setChildIndex public="1" set="method" line="93"><f a="child:index">
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></setChildIndex>
		<startDrag public="1" set="method" line="94"><f a="?lockCenter:?bounds" v="false:null">
	<x path="Bool"/>
	<d/>
	<x path="Void"/>
</f></startDrag>
		<startTouchDrag public="1" set="method" line="95"><f a="touchPointID:?lockCenter:?bounds" v=":false:null">
	<x path="Int"/>
	<x path="Bool"/>
	<d/>
	<x path="Void"/>
</f></startTouchDrag>
		<stopAllMovieClips public="1" set="method" line="96"><f a=""><x path="Void"/></f></stopAllMovieClips>
		<stopDrag public="1" set="method" line="97"><f a=""><x path="Void"/></f></stopDrag>
		<stopTouchDrag public="1" set="method" line="98"><f a="touchPointID">
	<x path="Int"/>
	<x path="Void"/>
</f></stopTouchDrag>
		<swapChildren public="1" set="method" line="99"><f a="child1:child2">
	<d/>
	<d/>
	<x path="Void"/>
</f></swapChildren>
		<swapChildrenAt public="1" set="method" line="100"><f a="index1:index2">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></swapChildrenAt>
		<toString public="1" set="method" line="101"><f a=""><c path="String"/></f></toString>
		<willTrigger public="1" set="method" line="102"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></willTrigger>
		<new public="1" set="method" line="62"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="lime.graphics.Font" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Font.hx">
		<fromBytes public="1" set="method" line="227" static="1"><f a="bytes">
	<c path="lime.utils.ByteArray"/>
	<c path="lime.graphics.Font"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="236" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.graphics.Font"/>
</f></fromFile>
		<fontName public="1" set="null"><c path="String"/></fontName>
		<image public="1"><c path="lime.graphics.Image"/></image>
		<glyphs public="1"><x path="Map">
	<x path="Int"/>
	<x path="Map">
		<x path="Int"/>
		<c path="lime.graphics.GlyphRect"/>
	</x>
</x></glyphs>
		<__fontPath>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontPath>
		<__handle>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__handle>
		<createImage public="1" set="method" line="36"><f a=""><c path="lime.graphics.ImageBuffer"/></f></createImage>
		<decompose public="1" set="method" line="212"><f a=""><t path="lime.graphics.NativeFontData"/></f></decompose>
		<loadRange public="1" set="method" line="245"><f a="size:start:end">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></loadRange>
		<loadGlyphs public="1" set="method" line="260"><f a="size:?glyphs" v=":null">
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></loadGlyphs>
		<__fromFile set="method" line="281">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromFile>
		<new public="1" set="method" line="28"><f a="?fontName" v="null">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":autoBuild"><e>'???'</e></m></meta>
	</class>
	<class path="lime.graphics.GlyphRect" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Font.hx" module="lime.graphics.Font">
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<width public="1"><x path="Float"/></width>
		<height public="1"><x path="Float"/></height>
		<xOffset public="1"><x path="Int"/></xOffset>
		<yOffset public="1"><x path="Int"/></yOffset>
		<new public="1" set="method" line="324"><f a="x:y:width:height:?xOffset:?yOffset" v="::::0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<typedef path="lime.graphics.NativeFontData" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Font.hx" module="lime.graphics.Font"><a>
	<style_name><c path="String"/></style_name>
	<num_glyphs><x path="Int"/></num_glyphs>
	<kerning><c path="Array"><t path="lime.graphics.NativeKerningData"/></c></kerning>
	<is_italic><x path="Bool"/></is_italic>
	<is_fixed_width><x path="Bool"/></is_fixed_width>
	<is_bold><x path="Bool"/></is_bold>
	<height><x path="Int"/></height>
	<has_kerning><x path="Bool"/></has_kerning>
	<has_glyph_names><x path="Bool"/></has_glyph_names>
	<glyphs><c path="Array"><t path="lime.graphics.NativeGlyphData"/></c></glyphs>
	<family_name><c path="String"/></family_name>
	<em_size><x path="Int"/></em_size>
	<descend><x path="Int"/></descend>
	<ascend><x path="Int"/></ascend>
</a></typedef>
	<typedef path="lime.graphics.NativeGlyphData" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Font.hx" module="lime.graphics.Font"><a>
	<points><c path="Array"><x path="Int"/></c></points>
	<min_y><x path="Int"/></min_y>
	<min_x><x path="Int"/></min_x>
	<max_y><x path="Int"/></max_y>
	<max_x><x path="Int"/></max_x>
	<char_code><x path="Int"/></char_code>
	<advance><x path="Int"/></advance>
</a></typedef>
	<typedef path="lime.graphics.NativeKerningData" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Font.hx" module="lime.graphics.Font"><a>
	<y><x path="Int"/></y>
	<x><x path="Int"/></x>
	<right_glyph><x path="Int"/></right_glyph>
	<left_glyph><x path="Int"/></left_glyph>
</a></typedef>
	<class path="lime.graphics.GLRenderContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/GLRenderContext.hx" extern="1">
		<extends path="js.html.CanvasRenderingContext"/>
		<ACTIVE_ATTRIBUTES public="1"><x path="Int"/></ACTIVE_ATTRIBUTES>
		<ACTIVE_TEXTURE public="1"><x path="Int"/></ACTIVE_TEXTURE>
		<ACTIVE_UNIFORMS public="1"><x path="Int"/></ACTIVE_UNIFORMS>
		<ALIASED_LINE_WIDTH_RANGE public="1"><x path="Int"/></ALIASED_LINE_WIDTH_RANGE>
		<ALIASED_POINT_SIZE_RANGE public="1"><x path="Int"/></ALIASED_POINT_SIZE_RANGE>
		<ALPHA public="1"><x path="Int"/></ALPHA>
		<ALPHA_BITS public="1"><x path="Int"/></ALPHA_BITS>
		<ALWAYS public="1"><x path="Int"/></ALWAYS>
		<ARRAY_BUFFER public="1"><x path="Int"/></ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1"><x path="Int"/></ARRAY_BUFFER_BINDING>
		<ATTACHED_SHADERS public="1"><x path="Int"/></ATTACHED_SHADERS>
		<BACK public="1"><x path="Int"/></BACK>
		<BLEND public="1"><x path="Int"/></BLEND>
		<BLEND_COLOR public="1"><x path="Int"/></BLEND_COLOR>
		<BLEND_DST_ALPHA public="1"><x path="Int"/></BLEND_DST_ALPHA>
		<BLEND_DST_RGB public="1"><x path="Int"/></BLEND_DST_RGB>
		<BLEND_EQUATION public="1"><x path="Int"/></BLEND_EQUATION>
		<BLEND_EQUATION_ALPHA public="1"><x path="Int"/></BLEND_EQUATION_ALPHA>
		<BLEND_EQUATION_RGB public="1"><x path="Int"/></BLEND_EQUATION_RGB>
		<BLEND_SRC_ALPHA public="1"><x path="Int"/></BLEND_SRC_ALPHA>
		<BLEND_SRC_RGB public="1"><x path="Int"/></BLEND_SRC_RGB>
		<BLUE_BITS public="1"><x path="Int"/></BLUE_BITS>
		<BOOL public="1"><x path="Int"/></BOOL>
		<BOOL_VEC2 public="1"><x path="Int"/></BOOL_VEC2>
		<BOOL_VEC3 public="1"><x path="Int"/></BOOL_VEC3>
		<BOOL_VEC4 public="1"><x path="Int"/></BOOL_VEC4>
		<BROWSER_DEFAULT_WEBGL public="1"><x path="Int"/></BROWSER_DEFAULT_WEBGL>
		<BUFFER_SIZE public="1"><x path="Int"/></BUFFER_SIZE>
		<BUFFER_USAGE public="1"><x path="Int"/></BUFFER_USAGE>
		<BYTE public="1"><x path="Int"/></BYTE>
		<CCW public="1"><x path="Int"/></CCW>
		<CLAMP_TO_EDGE public="1"><x path="Int"/></CLAMP_TO_EDGE>
		<COLOR_ATTACHMENT0 public="1"><x path="Int"/></COLOR_ATTACHMENT0>
		<COLOR_BUFFER_BIT public="1"><x path="Int"/></COLOR_BUFFER_BIT>
		<COLOR_CLEAR_VALUE public="1"><x path="Int"/></COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1"><x path="Int"/></COLOR_WRITEMASK>
		<COMPILE_STATUS public="1"><x path="Int"/></COMPILE_STATUS>
		<COMPRESSED_TEXTURE_FORMATS public="1"><x path="Int"/></COMPRESSED_TEXTURE_FORMATS>
		<CONSTANT_ALPHA public="1"><x path="Int"/></CONSTANT_ALPHA>
		<CONSTANT_COLOR public="1"><x path="Int"/></CONSTANT_COLOR>
		<CONTEXT_LOST_WEBGL public="1"><x path="Int"/></CONTEXT_LOST_WEBGL>
		<CULL_FACE public="1"><x path="Int"/></CULL_FACE>
		<CULL_FACE_MODE public="1"><x path="Int"/></CULL_FACE_MODE>
		<CURRENT_PROGRAM public="1"><x path="Int"/></CURRENT_PROGRAM>
		<CURRENT_VERTEX_ATTRIB public="1"><x path="Int"/></CURRENT_VERTEX_ATTRIB>
		<CW public="1"><x path="Int"/></CW>
		<DECR public="1"><x path="Int"/></DECR>
		<DECR_WRAP public="1"><x path="Int"/></DECR_WRAP>
		<DELETE_STATUS public="1"><x path="Int"/></DELETE_STATUS>
		<DEPTH_ATTACHMENT public="1"><x path="Int"/></DEPTH_ATTACHMENT>
		<DEPTH_BITS public="1"><x path="Int"/></DEPTH_BITS>
		<DEPTH_BUFFER_BIT public="1"><x path="Int"/></DEPTH_BUFFER_BIT>
		<DEPTH_CLEAR_VALUE public="1"><x path="Int"/></DEPTH_CLEAR_VALUE>
		<DEPTH_COMPONENT public="1"><x path="Int"/></DEPTH_COMPONENT>
		<DEPTH_COMPONENT16 public="1"><x path="Int"/></DEPTH_COMPONENT16>
		<DEPTH_FUNC public="1"><x path="Int"/></DEPTH_FUNC>
		<DEPTH_RANGE public="1"><x path="Int"/></DEPTH_RANGE>
		<DEPTH_STENCIL public="1"><x path="Int"/></DEPTH_STENCIL>
		<DEPTH_STENCIL_ATTACHMENT public="1"><x path="Int"/></DEPTH_STENCIL_ATTACHMENT>
		<DEPTH_TEST public="1"><x path="Int"/></DEPTH_TEST>
		<DEPTH_WRITEMASK public="1"><x path="Int"/></DEPTH_WRITEMASK>
		<DITHER public="1"><x path="Int"/></DITHER>
		<DONT_CARE public="1"><x path="Int"/></DONT_CARE>
		<DST_ALPHA public="1"><x path="Int"/></DST_ALPHA>
		<DST_COLOR public="1"><x path="Int"/></DST_COLOR>
		<DYNAMIC_DRAW public="1"><x path="Int"/></DYNAMIC_DRAW>
		<ELEMENT_ARRAY_BUFFER public="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER_BINDING>
		<EQUAL public="1"><x path="Int"/></EQUAL>
		<FASTEST public="1"><x path="Int"/></FASTEST>
		<FLOAT public="1"><x path="Int"/></FLOAT>
		<FLOAT_MAT2 public="1"><x path="Int"/></FLOAT_MAT2>
		<FLOAT_MAT3 public="1"><x path="Int"/></FLOAT_MAT3>
		<FLOAT_MAT4 public="1"><x path="Int"/></FLOAT_MAT4>
		<FLOAT_VEC2 public="1"><x path="Int"/></FLOAT_VEC2>
		<FLOAT_VEC3 public="1"><x path="Int"/></FLOAT_VEC3>
		<FLOAT_VEC4 public="1"><x path="Int"/></FLOAT_VEC4>
		<FRAGMENT_SHADER public="1"><x path="Int"/></FRAGMENT_SHADER>
		<FRAMEBUFFER public="1"><x path="Int"/></FRAMEBUFFER>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_BINDING public="1"><x path="Int"/></FRAMEBUFFER_BINDING>
		<FRAMEBUFFER_COMPLETE public="1"><x path="Int"/></FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_UNSUPPORTED public="1"><x path="Int"/></FRAMEBUFFER_UNSUPPORTED>
		<FRONT public="1"><x path="Int"/></FRONT>
		<FRONT_AND_BACK public="1"><x path="Int"/></FRONT_AND_BACK>
		<FRONT_FACE public="1"><x path="Int"/></FRONT_FACE>
		<FUNC_ADD public="1"><x path="Int"/></FUNC_ADD>
		<FUNC_REVERSE_SUBTRACT public="1"><x path="Int"/></FUNC_REVERSE_SUBTRACT>
		<FUNC_SUBTRACT public="1"><x path="Int"/></FUNC_SUBTRACT>
		<GENERATE_MIPMAP_HINT public="1"><x path="Int"/></GENERATE_MIPMAP_HINT>
		<GEQUAL public="1"><x path="Int"/></GEQUAL>
		<GREATER public="1"><x path="Int"/></GREATER>
		<GREEN_BITS public="1"><x path="Int"/></GREEN_BITS>
		<HIGH_FLOAT public="1"><x path="Int"/></HIGH_FLOAT>
		<HIGH_INT public="1"><x path="Int"/></HIGH_INT>
		<INCR public="1"><x path="Int"/></INCR>
		<INCR_WRAP public="1"><x path="Int"/></INCR_WRAP>
		<INT public="1"><x path="Int"/></INT>
		<INT_VEC2 public="1"><x path="Int"/></INT_VEC2>
		<INT_VEC3 public="1"><x path="Int"/></INT_VEC3>
		<INT_VEC4 public="1"><x path="Int"/></INT_VEC4>
		<INVALID_ENUM public="1"><x path="Int"/></INVALID_ENUM>
		<INVALID_FRAMEBUFFER_OPERATION public="1"><x path="Int"/></INVALID_FRAMEBUFFER_OPERATION>
		<INVALID_OPERATION public="1"><x path="Int"/></INVALID_OPERATION>
		<INVALID_VALUE public="1"><x path="Int"/></INVALID_VALUE>
		<INVERT public="1"><x path="Int"/></INVERT>
		<KEEP public="1"><x path="Int"/></KEEP>
		<LEQUAL public="1"><x path="Int"/></LEQUAL>
		<LESS public="1"><x path="Int"/></LESS>
		<LINEAR public="1"><x path="Int"/></LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1"><x path="Int"/></LINEAR_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_NEAREST public="1"><x path="Int"/></LINEAR_MIPMAP_NEAREST>
		<LINES public="1"><x path="Int"/></LINES>
		<LINE_LOOP public="1"><x path="Int"/></LINE_LOOP>
		<LINE_STRIP public="1"><x path="Int"/></LINE_STRIP>
		<LINE_WIDTH public="1"><x path="Int"/></LINE_WIDTH>
		<LINK_STATUS public="1"><x path="Int"/></LINK_STATUS>
		<LOW_FLOAT public="1"><x path="Int"/></LOW_FLOAT>
		<LOW_INT public="1"><x path="Int"/></LOW_INT>
		<LUMINANCE public="1"><x path="Int"/></LUMINANCE>
		<LUMINANCE_ALPHA public="1"><x path="Int"/></LUMINANCE_ALPHA>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1"><x path="Int"/></MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1"><x path="Int"/></MAX_CUBE_MAP_TEXTURE_SIZE>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1"><x path="Int"/></MAX_FRAGMENT_UNIFORM_VECTORS>
		<MAX_RENDERBUFFER_SIZE public="1"><x path="Int"/></MAX_RENDERBUFFER_SIZE>
		<MAX_TEXTURE_IMAGE_UNITS public="1"><x path="Int"/></MAX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_SIZE public="1"><x path="Int"/></MAX_TEXTURE_SIZE>
		<MAX_VARYING_VECTORS public="1"><x path="Int"/></MAX_VARYING_VECTORS>
		<MAX_VERTEX_ATTRIBS public="1"><x path="Int"/></MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1"><x path="Int"/></MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1"><x path="Int"/></MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VIEWPORT_DIMS public="1"><x path="Int"/></MAX_VIEWPORT_DIMS>
		<MEDIUM_FLOAT public="1"><x path="Int"/></MEDIUM_FLOAT>
		<MEDIUM_INT public="1"><x path="Int"/></MEDIUM_INT>
		<MIRRORED_REPEAT public="1"><x path="Int"/></MIRRORED_REPEAT>
		<NEAREST public="1"><x path="Int"/></NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1"><x path="Int"/></NEAREST_MIPMAP_LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1"><x path="Int"/></NEAREST_MIPMAP_NEAREST>
		<NEVER public="1"><x path="Int"/></NEVER>
		<NICEST public="1"><x path="Int"/></NICEST>
		<NONE public="1"><x path="Int"/></NONE>
		<NOTEQUAL public="1"><x path="Int"/></NOTEQUAL>
		<NO_ERROR public="1"><x path="Int"/></NO_ERROR>
		<ONE public="1"><x path="Int"/></ONE>
		<ONE_MINUS_CONSTANT_ALPHA public="1"><x path="Int"/></ONE_MINUS_CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_COLOR public="1"><x path="Int"/></ONE_MINUS_CONSTANT_COLOR>
		<ONE_MINUS_DST_ALPHA public="1"><x path="Int"/></ONE_MINUS_DST_ALPHA>
		<ONE_MINUS_DST_COLOR public="1"><x path="Int"/></ONE_MINUS_DST_COLOR>
		<ONE_MINUS_SRC_ALPHA public="1"><x path="Int"/></ONE_MINUS_SRC_ALPHA>
		<ONE_MINUS_SRC_COLOR public="1"><x path="Int"/></ONE_MINUS_SRC_COLOR>
		<OUT_OF_MEMORY public="1"><x path="Int"/></OUT_OF_MEMORY>
		<PACK_ALIGNMENT public="1"><x path="Int"/></PACK_ALIGNMENT>
		<POINTS public="1"><x path="Int"/></POINTS>
		<POLYGON_OFFSET_FACTOR public="1"><x path="Int"/></POLYGON_OFFSET_FACTOR>
		<POLYGON_OFFSET_FILL public="1"><x path="Int"/></POLYGON_OFFSET_FILL>
		<POLYGON_OFFSET_UNITS public="1"><x path="Int"/></POLYGON_OFFSET_UNITS>
		<RED_BITS public="1"><x path="Int"/></RED_BITS>
		<RENDERBUFFER public="1"><x path="Int"/></RENDERBUFFER>
		<RENDERBUFFER_ALPHA_SIZE public="1"><x path="Int"/></RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_BINDING public="1"><x path="Int"/></RENDERBUFFER_BINDING>
		<RENDERBUFFER_BLUE_SIZE public="1"><x path="Int"/></RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1"><x path="Int"/></RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1"><x path="Int"/></RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_HEIGHT public="1"><x path="Int"/></RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1"><x path="Int"/></RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1"><x path="Int"/></RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1"><x path="Int"/></RENDERBUFFER_STENCIL_SIZE>
		<RENDERBUFFER_WIDTH public="1"><x path="Int"/></RENDERBUFFER_WIDTH>
		<RENDERER public="1"><x path="Int"/></RENDERER>
		<REPEAT public="1"><x path="Int"/></REPEAT>
		<REPLACE public="1"><x path="Int"/></REPLACE>
		<RGB public="1"><x path="Int"/></RGB>
		<RGB565 public="1"><x path="Int"/></RGB565>
		<RGB5_A1 public="1"><x path="Int"/></RGB5_A1>
		<RGBA public="1"><x path="Int"/></RGBA>
		<RGBA4 public="1"><x path="Int"/></RGBA4>
		<SAMPLER_2D public="1"><x path="Int"/></SAMPLER_2D>
		<SAMPLER_CUBE public="1"><x path="Int"/></SAMPLER_CUBE>
		<SAMPLES public="1"><x path="Int"/></SAMPLES>
		<SAMPLE_ALPHA_TO_COVERAGE public="1"><x path="Int"/></SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_BUFFERS public="1"><x path="Int"/></SAMPLE_BUFFERS>
		<SAMPLE_COVERAGE public="1"><x path="Int"/></SAMPLE_COVERAGE>
		<SAMPLE_COVERAGE_INVERT public="1"><x path="Int"/></SAMPLE_COVERAGE_INVERT>
		<SAMPLE_COVERAGE_VALUE public="1"><x path="Int"/></SAMPLE_COVERAGE_VALUE>
		<SCISSOR_BOX public="1"><x path="Int"/></SCISSOR_BOX>
		<SCISSOR_TEST public="1"><x path="Int"/></SCISSOR_TEST>
		<SHADER_TYPE public="1"><x path="Int"/></SHADER_TYPE>
		<SHADING_LANGUAGE_VERSION public="1"><x path="Int"/></SHADING_LANGUAGE_VERSION>
		<SHORT public="1"><x path="Int"/></SHORT>
		<SRC_ALPHA public="1"><x path="Int"/></SRC_ALPHA>
		<SRC_ALPHA_SATURATE public="1"><x path="Int"/></SRC_ALPHA_SATURATE>
		<SRC_COLOR public="1"><x path="Int"/></SRC_COLOR>
		<STATIC_DRAW public="1"><x path="Int"/></STATIC_DRAW>
		<STENCIL_ATTACHMENT public="1"><x path="Int"/></STENCIL_ATTACHMENT>
		<STENCIL_BACK_FAIL public="1"><x path="Int"/></STENCIL_BACK_FAIL>
		<STENCIL_BACK_FUNC public="1"><x path="Int"/></STENCIL_BACK_FUNC>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1"><x path="Int"/></STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1"><x path="Int"/></STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1"><x path="Int"/></STENCIL_BACK_WRITEMASK>
		<STENCIL_BITS public="1"><x path="Int"/></STENCIL_BITS>
		<STENCIL_BUFFER_BIT public="1"><x path="Int"/></STENCIL_BUFFER_BIT>
		<STENCIL_CLEAR_VALUE public="1"><x path="Int"/></STENCIL_CLEAR_VALUE>
		<STENCIL_FAIL public="1"><x path="Int"/></STENCIL_FAIL>
		<STENCIL_FUNC public="1"><x path="Int"/></STENCIL_FUNC>
		<STENCIL_INDEX public="1"><x path="Int"/></STENCIL_INDEX>
		<STENCIL_INDEX8 public="1"><x path="Int"/></STENCIL_INDEX8>
		<STENCIL_PASS_DEPTH_FAIL public="1"><x path="Int"/></STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1"><x path="Int"/></STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1"><x path="Int"/></STENCIL_REF>
		<STENCIL_TEST public="1"><x path="Int"/></STENCIL_TEST>
		<STENCIL_VALUE_MASK public="1"><x path="Int"/></STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1"><x path="Int"/></STENCIL_WRITEMASK>
		<STREAM_DRAW public="1"><x path="Int"/></STREAM_DRAW>
		<SUBPIXEL_BITS public="1"><x path="Int"/></SUBPIXEL_BITS>
		<TEXTURE public="1"><x path="Int"/></TEXTURE>
		<TEXTURE0 public="1"><x path="Int"/></TEXTURE0>
		<TEXTURE1 public="1"><x path="Int"/></TEXTURE1>
		<TEXTURE10 public="1"><x path="Int"/></TEXTURE10>
		<TEXTURE11 public="1"><x path="Int"/></TEXTURE11>
		<TEXTURE12 public="1"><x path="Int"/></TEXTURE12>
		<TEXTURE13 public="1"><x path="Int"/></TEXTURE13>
		<TEXTURE14 public="1"><x path="Int"/></TEXTURE14>
		<TEXTURE15 public="1"><x path="Int"/></TEXTURE15>
		<TEXTURE16 public="1"><x path="Int"/></TEXTURE16>
		<TEXTURE17 public="1"><x path="Int"/></TEXTURE17>
		<TEXTURE18 public="1"><x path="Int"/></TEXTURE18>
		<TEXTURE19 public="1"><x path="Int"/></TEXTURE19>
		<TEXTURE2 public="1"><x path="Int"/></TEXTURE2>
		<TEXTURE20 public="1"><x path="Int"/></TEXTURE20>
		<TEXTURE21 public="1"><x path="Int"/></TEXTURE21>
		<TEXTURE22 public="1"><x path="Int"/></TEXTURE22>
		<TEXTURE23 public="1"><x path="Int"/></TEXTURE23>
		<TEXTURE24 public="1"><x path="Int"/></TEXTURE24>
		<TEXTURE25 public="1"><x path="Int"/></TEXTURE25>
		<TEXTURE26 public="1"><x path="Int"/></TEXTURE26>
		<TEXTURE27 public="1"><x path="Int"/></TEXTURE27>
		<TEXTURE28 public="1"><x path="Int"/></TEXTURE28>
		<TEXTURE29 public="1"><x path="Int"/></TEXTURE29>
		<TEXTURE3 public="1"><x path="Int"/></TEXTURE3>
		<TEXTURE30 public="1"><x path="Int"/></TEXTURE30>
		<TEXTURE31 public="1"><x path="Int"/></TEXTURE31>
		<TEXTURE4 public="1"><x path="Int"/></TEXTURE4>
		<TEXTURE5 public="1"><x path="Int"/></TEXTURE5>
		<TEXTURE6 public="1"><x path="Int"/></TEXTURE6>
		<TEXTURE7 public="1"><x path="Int"/></TEXTURE7>
		<TEXTURE8 public="1"><x path="Int"/></TEXTURE8>
		<TEXTURE9 public="1"><x path="Int"/></TEXTURE9>
		<TEXTURE_2D public="1"><x path="Int"/></TEXTURE_2D>
		<TEXTURE_BINDING_2D public="1"><x path="Int"/></TEXTURE_BINDING_2D>
		<TEXTURE_BINDING_CUBE_MAP public="1"><x path="Int"/></TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP public="1"><x path="Int"/></TEXTURE_CUBE_MAP>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_MAG_FILTER public="1"><x path="Int"/></TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1"><x path="Int"/></TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1"><x path="Int"/></TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1"><x path="Int"/></TEXTURE_WRAP_T>
		<TRIANGLES public="1"><x path="Int"/></TRIANGLES>
		<TRIANGLE_FAN public="1"><x path="Int"/></TRIANGLE_FAN>
		<TRIANGLE_STRIP public="1"><x path="Int"/></TRIANGLE_STRIP>
		<UNPACK_ALIGNMENT public="1"><x path="Int"/></UNPACK_ALIGNMENT>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1"><x path="Int"/></UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<UNPACK_FLIP_Y_WEBGL public="1"><x path="Int"/></UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1"><x path="Int"/></UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<UNSIGNED_BYTE public="1"><x path="Int"/></UNSIGNED_BYTE>
		<UNSIGNED_INT public="1"><x path="Int"/></UNSIGNED_INT>
		<UNSIGNED_SHORT public="1"><x path="Int"/></UNSIGNED_SHORT>
		<UNSIGNED_SHORT_4_4_4_4 public="1"><x path="Int"/></UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1"><x path="Int"/></UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1"><x path="Int"/></UNSIGNED_SHORT_5_6_5>
		<VALIDATE_STATUS public="1"><x path="Int"/></VALIDATE_STATUS>
		<VENDOR public="1"><x path="Int"/></VENDOR>
		<VERSION public="1"><x path="Int"/></VERSION>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_SHADER public="1"><x path="Int"/></VERTEX_SHADER>
		<VIEWPORT public="1"><x path="Int"/></VIEWPORT>
		<ZERO public="1"><x path="Int"/></ZERO>
		<drawingBufferHeight public="1" set="null"><x path="Int"/></drawingBufferHeight>
		<drawingBufferWidth public="1" set="null"><x path="Int"/></drawingBufferWidth>
		<activeTexture public="1" set="method"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" set="method"><f a="program:shader">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></attachShader>
		<bindAttribLocation public="1" set="method"><f a="program:index:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" set="method"><f a="target:buffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindFramebuffer public="1" set="method"><f a="target:framebuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" set="method"><f a="target:renderbuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindTexture public="1" set="method"><f a="target:texture">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></bindTexture>
		<blendColor public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" set="method"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" set="method"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" set="method"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" set="method">
			<f a="target:size:usage">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads>
				<bufferData public="1" set="method">
					<f a="target:data:usage">
						<x path="Int"/>
						<t path="lime.utils.ArrayBuffer"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</bufferData>
				<bufferData public="1" set="method">
					<f a="target:data:usage">
						<x path="Int"/>
						<t path="lime.utils.ArrayBufferView"/>
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</bufferData>
			</overloads>
		</bufferData>
		<bufferSubData public="1" set="method">
			<f a="target:offset:data">
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><bufferSubData public="1" set="method">
	<f a="target:offset:data">
		<x path="Int"/>
		<x path="Int"/>
		<t path="lime.utils.ArrayBuffer"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</bufferSubData></overloads>
		</bufferSubData>
		<checkFramebufferStatus public="1" set="method"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" set="method"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearColor public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepth public="1" set="method"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepth>
		<clearStencil public="1" set="method"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<colorMask public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" set="method"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" set="method"><f a="target:level:internalformat:width:height:border:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexSubImage2D public="1" set="method"><f a="target:level:xoffset:yoffset:width:height:format:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<copyTexImage2D public="1" set="method"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" set="method"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<createBuffer public="1" set="method"><f a=""><t path="lime.graphics.opengl.GLBuffer"/></f></createBuffer>
		<createFramebuffer public="1" set="method"><f a=""><t path="lime.graphics.opengl.GLFramebuffer"/></f></createFramebuffer>
		<createProgram public="1" set="method"><f a=""><t path="lime.graphics.opengl.GLProgram"/></f></createProgram>
		<createRenderbuffer public="1" set="method"><f a=""><t path="lime.graphics.opengl.GLRenderbuffer"/></f></createRenderbuffer>
		<createShader public="1" set="method"><f a="type">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShader"/>
</f></createShader>
		<createTexture public="1" set="method"><f a=""><t path="lime.graphics.opengl.GLTexture"/></f></createTexture>
		<cullFace public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" set="method"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" set="method"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" set="method"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteRenderbuffer public="1" set="method"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteShader public="1" set="method"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteTexture public="1" set="method"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></deleteTexture>
		<depthFunc public="1" set="method"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" set="method"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRange public="1" set="method"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRange>
		<detachShader public="1" set="method"><f a="program:shader">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" set="method"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawElements public="1" set="method"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElements>
		<enable public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<finish public="1" set="method"><f a=""><x path="Void"/></f></finish>
		<flush public="1" set="method"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" set="method"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" set="method"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<frontFace public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" set="method"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" set="method"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" set="method"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveUniform>
		<getAttachedShaders public="1" set="method">
			<f a="program">
				<t path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><getAttachedShaders public="1" set="method">
	<f a="program">
		<t path="lime.graphics.opengl.GLProgram"/>
		<x path="Void"/>
	</f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</getAttachedShaders></overloads>
		</getAttachedShaders>
		<getAttribLocation public="1" set="method"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBufferParameter public="1" set="method">
			<f a="target:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getBufferParameter public="1" set="method"><f a=""><x path="Void"/></f></getBufferParameter></overloads>
		</getBufferParameter>
		<getContextAttributes public="1" set="method"><f a=""><t path="lime.graphics.opengl.GLContextAttributes"/></f></getContextAttributes>
		<getError public="1" set="method"><f a=""><x path="Int"/></f></getError>
		<getExtension public="1" set="method"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFramebufferAttachmentParameter public="1" set="method">
			<f a="target:attachment:pname">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getFramebufferAttachmentParameter public="1" set="method"><f a=""><x path="Void"/></f></getFramebufferAttachmentParameter></overloads>
		</getFramebufferAttachmentParameter>
		<getParameter public="1" set="method">
			<f a="pname">
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getParameter public="1" set="method"><f a=""><x path="Void"/></f></getParameter></overloads>
		</getParameter>
		<getProgramInfoLog public="1" set="method"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" set="method">
			<f a="program:pname">
				<t path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getProgramParameter public="1" set="method"><f a=""><x path="Void"/></f></getProgramParameter></overloads>
		</getProgramParameter>
		<getRenderbufferParameter public="1" set="method">
			<f a="target:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getRenderbufferParameter public="1" set="method"><f a=""><x path="Void"/></f></getRenderbufferParameter></overloads>
		</getRenderbufferParameter>
		<getShaderInfoLog public="1" set="method"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" set="method">
			<f a="shader:pname">
				<t path="lime.graphics.opengl.GLShader"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads><getShaderParameter public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>Throws DOMException.</haxe_doc>
</getShaderParameter></overloads>
		</getShaderParameter>
		<getShaderPrecisionFormat public="1" set="method"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" set="method"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderSource>
		<getSupportedExtensions public="1" set="method"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getTexParameter public="1" set="method">
			<f a="target:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getTexParameter public="1" set="method"><f a=""><x path="Void"/></f></getTexParameter></overloads>
		</getTexParameter>
		<getUniform public="1" set="method">
			<f a="program:location">
				<t path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
			</f>
			<overloads><getUniform public="1" set="method"><f a=""><x path="Void"/></f></getUniform></overloads>
		</getUniform>
		<getUniformLocation public="1" set="method"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" set="method">
			<f a="index:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<overloads><getVertexAttrib public="1" set="method"><f a=""><x path="Void"/></f></getVertexAttrib></overloads>
		</getVertexAttrib>
		<getVertexAttribOffset public="1" set="method"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribOffset>
		<hint public="1" set="method"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<isBuffer public="1" set="method"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isContextLost public="1" set="method"><f a=""><x path="Bool"/></f></isContextLost>
		<isEnabled public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" set="method"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" set="method"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Bool"/>
</f></isProgram>
		<isRenderbuffer public="1" set="method"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isShader public="1" set="method"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Bool"/>
</f></isShader>
		<isTexture public="1" set="method"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Bool"/>
</f></isTexture>
		<lineWidth public="1" set="method"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" set="method"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></linkProgram>
		<pixelStorei public="1" set="method"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" set="method"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<readPixels public="1" set="method"><f a="x:y:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></readPixels>
		<releaseShaderCompiler public="1" set="method"><f a=""><x path="Void"/></f></releaseShaderCompiler>
		<renderbufferStorage public="1" set="method"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<sampleCoverage public="1" set="method"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<scissor public="1" set="method"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderSource public="1" set="method"><f a="shader:string">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" set="method"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" set="method"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" set="method"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" set="method"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" set="method"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" set="method"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" set="method">
			<f a="target:level:internalformat:format:type:video">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.VideoElement"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:width:height:border:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<t path="lime.utils.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageData"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:image">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:canvas">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.CanvasElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texImage2D>
			</overloads>
		</texImage2D>
		<texParameterf public="1" set="method"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" set="method"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" set="method">
			<f a="target:level:xoffset:yoffset:format:type:video">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.VideoElement"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Throws DOMException.</haxe_doc>
			<overloads>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<t path="lime.utils.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageData"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:image">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:canvas">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.CanvasElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>Throws DOMException.</haxe_doc>
				</texSubImage2D>
			</overloads>
		</texSubImage2D>
		<uniform1f public="1" set="method"><f a="location:x">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" set="method"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" set="method"><f a="location:x">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" set="method"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Int32Array"/>
	<x path="Void"/>
</f></uniform1iv>
		<uniform2f public="1" set="method"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" set="method"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" set="method"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" set="method"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Int32Array"/>
	<x path="Void"/>
</f></uniform2iv>
		<uniform3f public="1" set="method"><f a="location:x:y:z">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" set="method"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" set="method"><f a="location:x:y:z">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" set="method"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Int32Array"/>
	<x path="Void"/>
</f></uniform3iv>
		<uniform4f public="1" set="method"><f a="location:x:y:z:w">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" set="method"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" set="method"><f a="location:x:y:z:w">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" set="method"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Int32Array"/>
	<x path="Void"/>
</f></uniform4iv>
		<uniformMatrix2fv public="1" set="method"><f a="location:transpose:array">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix3fv public="1" set="method"><f a="location:transpose:array">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix4fv public="1" set="method"><f a="location:transpose:array">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix4fv>
		<useProgram public="1" set="method"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" set="method"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" set="method"><f a="indx:x">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" set="method"><f a="indx:x:y">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" set="method"><f a="indx:x:y:z">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" set="method"><f a="indx:x:y:z:w">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribPointer public="1" set="method"><f a="indx:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" set="method"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<meta><m n=":native"><e>"WebGLRenderingContext"</e></m></meta>
	</class>
	<class path="lime.graphics.Image" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Image.hx">
		<__base64Chars line="50" static="1"><c path="String"/></__base64Chars>
		<__base64Encoder static="1"><c path="haxe.crypto.BaseCode"/></__base64Encoder>
		<fromBase64 public="1" set="method" line="410" static="1"><f a="base64:type:onload">
	<c path="String"/>
	<c path="String"/>
	<f a="">
		<c path="lime.graphics.Image"/>
		<x path="Void"/>
	</f>
	<c path="lime.graphics.Image"/>
</f></fromBase64>
		<fromBitmapData public="1" set="method" line="419" static="1"><f a="bitmapData">
	<d/>
	<c path="lime.graphics.Image"/>
</f></fromBitmapData>
		<fromBytes public="1" set="method" line="428" static="1"><f a="bytes:?onload" v=":null">
	<c path="lime.utils.ByteArray"/>
	<f a="">
		<c path="lime.graphics.Image"/>
		<x path="Void"/>
	</f>
	<c path="lime.graphics.Image"/>
</f></fromBytes>
		<fromCanvas public="1" set="method" line="437" static="1"><f a="canvas">
	<c path="js.html.CanvasElement"/>
	<c path="lime.graphics.Image"/>
</f></fromCanvas>
		<fromFile public="1" set="method" line="446" static="1"><f a="path:?onload:?onerror" v=":null:null">
	<c path="String"/>
	<f a="">
		<c path="lime.graphics.Image"/>
		<x path="Void"/>
	</f>
	<f a=""><x path="Void"/></f>
	<c path="lime.graphics.Image"/>
</f></fromFile>
		<fromImageElement public="1" set="method" line="455" static="1"><f a="image">
	<c path="js.html.ImageElement"/>
	<c path="lime.graphics.Image"/>
</f></fromImageElement>
		<__base64Encode set="method" line="684" static="1"><f a="bytes">
	<c path="lime.utils.ByteArray"/>
	<c path="String"/>
</f></__base64Encode>
		<__isJPG set="method" line="966" static="1"><f a="bytes">
	<c path="lime.utils.ByteArray"/>
	<x path="Bool"/>
</f></__isJPG>
		<__isPNG set="method" line="974" static="1"><f a="bytes">
	<c path="lime.utils.ByteArray"/>
	<x path="Bool"/>
</f></__isPNG>
		<__isGIF set="method" line="981" static="1"><f a="bytes">
	<c path="lime.utils.ByteArray"/>
	<x path="Bool"/>
</f></__isGIF>
		<buffer public="1"><c path="lime.graphics.ImageBuffer"/></buffer>
		<data public="1" get="accessor" set="accessor"><t path="lime.utils.UInt8Array"/></data>
		<dirty public="1"><x path="Bool"/></dirty>
		<height public="1"><x path="Int"/></height>
		<offsetX public="1"><x path="Int"/></offsetX>
		<offsetY public="1"><x path="Int"/></offsetY>
		<powerOfTwo public="1" get="accessor" set="accessor"><x path="Bool"/></powerOfTwo>
		<premultiplied public="1" get="accessor" set="accessor"><x path="Bool"/></premultiplied>
		<rect public="1" get="accessor" set="null"><c path="lime.math.Rectangle"/></rect>
		<src public="1" get="accessor" set="accessor"><d/></src>
		<transparent public="1" get="accessor" set="accessor"><x path="Bool"/></transparent>
		<type public="1"><e path="lime.graphics.ImageType"/></type>
		<width public="1"><x path="Int"/></width>
		<clone public="1" set="method" line="148"><f a=""><c path="lime.graphics.Image"/></f></clone>
		<colorTransform public="1" set="method" line="160"><f a="rect:colorMatrix">
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<copyChannel public="1" set="method" line="191"><f a="sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="243"><f a="sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v=":::null:null:false">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Vector2"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></copyPixels>
		<encode public="1" set="method" line="286"><f a="?format:?quality" v="'png':90">
	<c path="String"/>
	<x path="Int"/>
	<c path="lime.utils.ByteArray"/>
</f></encode>
		<fillRect public="1" set="method" line="350"><f a="rect:color">
	<c path="lime.math.Rectangle"/>
	<x path="Int"/>
	<x path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method" line="381"><f a="x:y:color">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></floodFill>
		<getPixel public="1" set="method" line="464"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method" line="495"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method" line="526"><f a="rect">
	<c path="lime.math.Rectangle"/>
	<c path="lime.utils.ByteArray"/>
</f></getPixels>
		<resize public="1" set="method" line="558"><f a="newWidth:newHeight">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<setPixel public="1" set="method" line="595"><f a="x:y:color">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method" line="624"><f a="x:y:color">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method" line="653"><f a="rect:byteArray">
	<c path="lime.math.Rectangle"/>
	<c path="lime.utils.ByteArray"/>
	<x path="Void"/>
</f></setPixels>
		<__clipRect set="method" line="709"><f a="r">
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Rectangle"/>
</f></__clipRect>
		<__fromBase64 set="method" line="752"><f a="base64:type:?onload" v="::null">
	<c path="String"/>
	<c path="String"/>
	<f a="">
		<c path="lime.graphics.Image"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></__fromBase64>
		<__fromBytes set="method" line="782"><f a="bytes:onload">
	<c path="lime.utils.ByteArray"/>
	<f a="">
		<c path="lime.graphics.Image"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></__fromBytes>
		<__fromFile set="method" line="833"><f a="path:onload:onerror">
	<c path="String"/>
	<f a="">
		<c path="lime.graphics.Image"/>
		<x path="Void"/>
	</f>
	<f a=""><x path="Void"/></f>
	<x path="Void"/>
</f></__fromFile>
		<__fromImageBuffer set="method" line="943"><f a="buffer">
	<c path="lime.graphics.ImageBuffer"/>
	<x path="Void"/>
</f></__fromImageBuffer>
		<get_data set="method" line="1004"><f a=""><t path="lime.utils.UInt8Array"/></f></get_data>
		<set_data set="method" line="1023"><f a="value">
	<t path="lime.utils.UInt8Array"/>
	<t path="lime.utils.UInt8Array"/>
</f></set_data>
		<get_powerOfTwo set="method" line="1030"><f a=""><x path="Bool"/></f></get_powerOfTwo>
		<set_powerOfTwo set="method" line="1037"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_powerOfTwo>
		<get_premultiplied set="method" line="1087"><f a=""><x path="Bool"/></f></get_premultiplied>
		<set_premultiplied set="method" line="1094"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_premultiplied>
		<get_rect public="1" set="method" line="1139"><f a=""><c path="lime.math.Rectangle"/></f></get_rect>
		<get_src public="1" set="method" line="1146"><f a=""><d/></f></get_src>
		<set_src set="method" line="1153"><f a="value">
	<d/>
	<d/>
</f></set_src>
		<get_transparent set="method" line="1160"><f a=""><x path="Bool"/></f></get_transparent>
		<set_transparent set="method" line="1167"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_transparent>
		<new public="1" set="method" line="68"><f a="?buffer:?offsetX:?offsetY:?width:?height:?color:?type" v="null:0:0:0:0:null:null">
	<c path="lime.graphics.ImageBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<e path="lime.graphics.ImageType"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":allow"><e>'???'</e></m>
			<m n=":allow"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<enum path="lime.graphics.ImageChannel" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Image.hx" module="lime.graphics.Image">
		<RED/>
		<GREEN/>
		<BLUE/>
		<ALPHA/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="lime.graphics.ImageBuffer" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/ImageBuffer.hx">
		<bitsPerPixel public="1"><x path="Int"/></bitsPerPixel>
		<data public="1"><t path="lime.utils.UInt8Array"/></data>
		<height public="1"><x path="Int"/></height>
		<premultiplied public="1"><x path="Bool"/></premultiplied>
		<src public="1" get="accessor" set="accessor"><d/></src>
		<transparent public="1"><x path="Bool"/></transparent>
		<width public="1"><x path="Int"/></width>
		<__srcBitmapData>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcBitmapData>
		<__srcCanvas>
			<c path="js.html.CanvasElement"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCanvas>
		<__srcContext>
			<c path="js.html.CanvasRenderingContext2D"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcContext>
		<__srcCustom>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCustom>
		<__srcImage>
			<t path="js.html._Image.HTMLImage"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcImage>
		<__srcImageData>
			<c path="js.html.ImageData"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcImageData>
		<clone public="1" set="method" line="48"><f a=""><c path="lime.graphics.ImageBuffer"/></f></clone>
		<get_src set="method" line="66"><f a=""><d/></f></get_src>
		<set_src set="method" line="80"><f a="value">
	<d/>
	<d/>
</f></set_src>
		<new public="1" set="method" line="37"><f a="?data:?width:?height:?bitsPerPixel" v="null:0:0:4">
	<t path="lime.utils.UInt8Array"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":allow"><e>'???'</e></m></meta>
	</class>
	<enum path="lime.graphics.ImageType" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/ImageType.hx">
		<CANVAS/>
		<DATA/>
		<FLASH/>
		<CUSTOM/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="lime.graphics.RenderContext" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/RenderContext.hx">
		<OPENGL a="gl"><c path="lime.graphics.GLRenderContext"/></OPENGL>
		<CANVAS a="context"><t path="lime.graphics.CanvasRenderContext"/></CANVAS>
		<DOM a="element"><t path="lime.graphics.DOMRenderContext"/></DOM>
		<FLASH a="stage"><c path="lime.graphics.FlashRenderContext"/></FLASH>
		<CUSTOM a="data"><d/></CUSTOM>
	</enum>
	<class path="lime.graphics._Renderer.RenderEventInfo" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Renderer.hx" private="1" module="lime.graphics.Renderer">
		<context public="1"><e path="lime.graphics.RenderContext"/></context>
		<type public="1"><x path="lime.graphics._Renderer.RenderEventType"/></type>
		<clone public="1" set="method" line="264"><f a=""><c path="lime.graphics._Renderer.RenderEventInfo"/></f></clone>
		<new public="1" set="method" line="256"><f a="?type:?context" v="null:null">
	<x path="lime.graphics._Renderer.RenderEventType"/>
	<e path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.graphics.Renderer" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Renderer.hx">
		<onRenderContextLost public="1" line="26" static="1"><c path="lime.app.Event"><f a=""><x path="Void"/></f></c></onRenderContextLost>
		<onRenderContextRestored public="1" line="27" static="1"><c path="lime.app.Event"><f a="">
	<e path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></c></onRenderContextRestored>
		<onRender public="1" line="28" static="1"><c path="lime.app.Event"><f a="">
	<e path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></c></onRender>
		<eventInfo line="30" static="1"><c path="lime.graphics._Renderer.RenderEventInfo"/></eventInfo>
		<registered static="1"><x path="Bool"/></registered>
		<render set="method" line="218" static="1"><f a=""><x path="Void"/></f></render>
		<context public="1"><e path="lime.graphics.RenderContext"/></context>
		<handle public="1"><d/></handle>
		<window><c path="lime.ui.Window"/></window>
		<create public="1" set="method" line="47"><f a=""><x path="Void"/></f></create>
		<createContext set="method" line="85"><f a=""><x path="Void"/></f></createContext>
		<dispatch set="method" line="148"><f a=""><x path="Void"/></f></dispatch>
		<flip public="1" set="method" line="183"><f a=""><x path="Void"/></f></flip>
		<handleCanvasEvent set="method" line="193"><f a="event">
	<c path="js.html.Event"/>
	<x path="Void"/>
</f></handleCanvasEvent>
		<new public="1" set="method" line="39"><f a="window">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":allow"><e>'???'</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics._Renderer.RenderEventType" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Renderer.hx" private="1" module="lime.graphics.Renderer">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics._Renderer.RenderEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Renderer.hx" private="1" module="lime.graphics.Renderer">
	<RENDER public="1" get="inline" set="null" line="276" static="1">
		<x path="lime.graphics._Renderer.RenderEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDER>
	<RENDER_CONTEXT_LOST public="1" get="inline" set="null" line="277" static="1">
		<x path="lime.graphics._Renderer.RenderEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDER_CONTEXT_LOST>
	<RENDER_CONTEXT_RESTORED public="1" get="inline" set="null" line="278" static="1">
		<x path="lime.graphics._Renderer.RenderEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDER_CONTEXT_RESTORED>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._Renderer.RenderEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/Renderer.hx" private="1" module="lime.graphics.Renderer">
		<RENDER public="1" get="inline" set="null" line="276" static="1">
			<x path="lime.graphics._Renderer.RenderEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDER>
		<RENDER_CONTEXT_LOST public="1" get="inline" set="null" line="277" static="1">
			<x path="lime.graphics._Renderer.RenderEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDER_CONTEXT_LOST>
		<RENDER_CONTEXT_RESTORED public="1" get="inline" set="null" line="278" static="1">
			<x path="lime.graphics._Renderer.RenderEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDER_CONTEXT_RESTORED>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.graphics.opengl.GL" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GL.hx">
		<DEPTH_BUFFER_BIT public="1" get="inline" set="null" line="21" static="1"><x path="Int"/></DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="inline" set="null" line="22" static="1"><x path="Int"/></STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="inline" set="null" line="23" static="1"><x path="Int"/></COLOR_BUFFER_BIT>
		<POINTS public="1" get="inline" set="null" line="25" static="1"><x path="Int"/></POINTS>
		<LINES public="1" get="inline" set="null" line="26" static="1"><x path="Int"/></LINES>
		<LINE_LOOP public="1" get="inline" set="null" line="27" static="1"><x path="Int"/></LINE_LOOP>
		<LINE_STRIP public="1" get="inline" set="null" line="28" static="1"><x path="Int"/></LINE_STRIP>
		<TRIANGLES public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></TRIANGLES>
		<TRIANGLE_STRIP public="1" get="inline" set="null" line="30" static="1"><x path="Int"/></TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></TRIANGLE_FAN>
		<ZERO public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></ZERO>
		<ONE public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></ONE>
		<SRC_COLOR public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></FUNC_ADD>
		<BLEND_EQUATION public="1" get="inline" set="null" line="47" static="1"><x path="Int"/></BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" line="49" static="1"><x path="Int"/></BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="inline" set="null" line="51" static="1"><x path="Int"/></FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" line="52" static="1"><x path="Int"/></FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="inline" set="null" line="54" static="1"><x path="Int"/></BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="inline" set="null" line="55" static="1"><x path="Int"/></BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="inline" set="null" line="56" static="1"><x path="Int"/></BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="inline" set="null" line="58" static="1"><x path="Int"/></CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="inline" set="null" line="60" static="1"><x path="Int"/></CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" line="61" static="1"><x path="Int"/></ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="inline" set="null" line="62" static="1"><x path="Int"/></BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="inline" set="null" line="64" static="1"><x path="Int"/></ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" line="65" static="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="66" static="1"><x path="Int"/></ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="67" static="1"><x path="Int"/></ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="inline" set="null" line="69" static="1"><x path="Int"/></STREAM_DRAW>
		<STATIC_DRAW public="1" get="inline" set="null" line="70" static="1"><x path="Int"/></STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="inline" set="null" line="71" static="1"><x path="Int"/></DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="inline" set="null" line="73" static="1"><x path="Int"/></BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="inline" set="null" line="74" static="1"><x path="Int"/></BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" line="76" static="1"><x path="Int"/></CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="inline" set="null" line="78" static="1"><x path="Int"/></FRONT>
		<BACK public="1" get="inline" set="null" line="79" static="1"><x path="Int"/></BACK>
		<FRONT_AND_BACK public="1" get="inline" set="null" line="80" static="1"><x path="Int"/></FRONT_AND_BACK>
		<CULL_FACE public="1" get="inline" set="null" line="82" static="1"><x path="Int"/></CULL_FACE>
		<BLEND public="1" get="inline" set="null" line="83" static="1"><x path="Int"/></BLEND>
		<DITHER public="1" get="inline" set="null" line="84" static="1"><x path="Int"/></DITHER>
		<STENCIL_TEST public="1" get="inline" set="null" line="85" static="1"><x path="Int"/></STENCIL_TEST>
		<DEPTH_TEST public="1" get="inline" set="null" line="86" static="1"><x path="Int"/></DEPTH_TEST>
		<SCISSOR_TEST public="1" get="inline" set="null" line="87" static="1"><x path="Int"/></SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" line="88" static="1"><x path="Int"/></POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" line="89" static="1"><x path="Int"/></SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="inline" set="null" line="90" static="1"><x path="Int"/></SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="inline" set="null" line="92" static="1"><x path="Int"/></NO_ERROR>
		<INVALID_ENUM public="1" get="inline" set="null" line="93" static="1"><x path="Int"/></INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" line="94" static="1"><x path="Int"/></INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" line="95" static="1"><x path="Int"/></INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" line="96" static="1"><x path="Int"/></OUT_OF_MEMORY>
		<CW public="1" get="inline" set="null" line="98" static="1"><x path="Int"/></CW>
		<CCW public="1" get="inline" set="null" line="99" static="1"><x path="Int"/></CCW>
		<LINE_WIDTH public="1" get="inline" set="null" line="101" static="1"><x path="Int"/></LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" line="102" static="1"><x path="Int"/></ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" line="103" static="1"><x path="Int"/></ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="inline" set="null" line="104" static="1"><x path="Int"/></CULL_FACE_MODE>
		<FRONT_FACE public="1" get="inline" set="null" line="105" static="1"><x path="Int"/></FRONT_FACE>
		<DEPTH_RANGE public="1" get="inline" set="null" line="106" static="1"><x path="Int"/></DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="inline" set="null" line="107" static="1"><x path="Int"/></DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" line="108" static="1"><x path="Int"/></DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="inline" set="null" line="109" static="1"><x path="Int"/></DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" line="110" static="1"><x path="Int"/></STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="inline" set="null" line="111" static="1"><x path="Int"/></STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="inline" set="null" line="112" static="1"><x path="Int"/></STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" line="113" static="1"><x path="Int"/></STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" line="114" static="1"><x path="Int"/></STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="inline" set="null" line="115" static="1"><x path="Int"/></STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="inline" set="null" line="116" static="1"><x path="Int"/></STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="inline" set="null" line="117" static="1"><x path="Int"/></STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="inline" set="null" line="118" static="1"><x path="Int"/></STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="inline" set="null" line="119" static="1"><x path="Int"/></STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" line="120" static="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" line="121" static="1"><x path="Int"/></STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="inline" set="null" line="122" static="1"><x path="Int"/></STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" line="123" static="1"><x path="Int"/></STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" line="124" static="1"><x path="Int"/></STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="inline" set="null" line="125" static="1"><x path="Int"/></VIEWPORT>
		<SCISSOR_BOX public="1" get="inline" set="null" line="126" static="1"><x path="Int"/></SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="inline" set="null" line="128" static="1"><x path="Int"/></COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="inline" set="null" line="129" static="1"><x path="Int"/></COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" line="130" static="1"><x path="Int"/></UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="inline" set="null" line="131" static="1"><x path="Int"/></PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="inline" set="null" line="132" static="1"><x path="Int"/></MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" line="133" static="1"><x path="Int"/></MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="inline" set="null" line="134" static="1"><x path="Int"/></SUBPIXEL_BITS>
		<RED_BITS public="1" get="inline" set="null" line="135" static="1"><x path="Int"/></RED_BITS>
		<GREEN_BITS public="1" get="inline" set="null" line="136" static="1"><x path="Int"/></GREEN_BITS>
		<BLUE_BITS public="1" get="inline" set="null" line="137" static="1"><x path="Int"/></BLUE_BITS>
		<ALPHA_BITS public="1" get="inline" set="null" line="138" static="1"><x path="Int"/></ALPHA_BITS>
		<DEPTH_BITS public="1" get="inline" set="null" line="139" static="1"><x path="Int"/></DEPTH_BITS>
		<STENCIL_BITS public="1" get="inline" set="null" line="140" static="1"><x path="Int"/></STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" line="141" static="1"><x path="Int"/></POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" line="143" static="1"><x path="Int"/></POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="inline" set="null" line="144" static="1"><x path="Int"/></TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="inline" set="null" line="145" static="1"><x path="Int"/></SAMPLE_BUFFERS>
		<SAMPLES public="1" get="inline" set="null" line="146" static="1"><x path="Int"/></SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" line="147" static="1"><x path="Int"/></SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" line="148" static="1"><x path="Int"/></SAMPLE_COVERAGE_INVERT>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" line="150" static="1"><x path="Int"/></COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="inline" set="null" line="152" static="1"><x path="Int"/></DONT_CARE>
		<FASTEST public="1" get="inline" set="null" line="153" static="1"><x path="Int"/></FASTEST>
		<NICEST public="1" get="inline" set="null" line="154" static="1"><x path="Int"/></NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" line="156" static="1"><x path="Int"/></GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="inline" set="null" line="158" static="1"><x path="Int"/></BYTE>
		<UNSIGNED_BYTE public="1" get="inline" set="null" line="159" static="1"><x path="Int"/></UNSIGNED_BYTE>
		<SHORT public="1" get="inline" set="null" line="160" static="1"><x path="Int"/></SHORT>
		<UNSIGNED_SHORT public="1" get="inline" set="null" line="161" static="1"><x path="Int"/></UNSIGNED_SHORT>
		<INT public="1" get="inline" set="null" line="162" static="1"><x path="Int"/></INT>
		<UNSIGNED_INT public="1" get="inline" set="null" line="163" static="1"><x path="Int"/></UNSIGNED_INT>
		<FLOAT public="1" get="inline" set="null" line="164" static="1"><x path="Int"/></FLOAT>
		<DEPTH_COMPONENT public="1" get="inline" set="null" line="166" static="1"><x path="Int"/></DEPTH_COMPONENT>
		<ALPHA public="1" get="inline" set="null" line="167" static="1"><x path="Int"/></ALPHA>
		<RGB public="1" get="inline" set="null" line="168" static="1"><x path="Int"/></RGB>
		<RGBA public="1" get="inline" set="null" line="169" static="1"><x path="Int"/></RGBA>
		<LUMINANCE public="1" get="inline" set="null" line="170" static="1"><x path="Int"/></LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="inline" set="null" line="171" static="1"><x path="Int"/></LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" line="173" static="1"><x path="Int"/></UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" line="174" static="1"><x path="Int"/></UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" line="175" static="1"><x path="Int"/></UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="inline" set="null" line="177" static="1"><x path="Int"/></FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="inline" set="null" line="178" static="1"><x path="Int"/></VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" line="179" static="1"><x path="Int"/></MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" line="180" static="1"><x path="Int"/></MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="inline" set="null" line="181" static="1"><x path="Int"/></MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="182" static="1"><x path="Int"/></MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="183" static="1"><x path="Int"/></MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" line="184" static="1"><x path="Int"/></MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" line="185" static="1"><x path="Int"/></MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="inline" set="null" line="186" static="1"><x path="Int"/></SHADER_TYPE>
		<DELETE_STATUS public="1" get="inline" set="null" line="187" static="1"><x path="Int"/></DELETE_STATUS>
		<LINK_STATUS public="1" get="inline" set="null" line="188" static="1"><x path="Int"/></LINK_STATUS>
		<VALIDATE_STATUS public="1" get="inline" set="null" line="189" static="1"><x path="Int"/></VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="inline" set="null" line="190" static="1"><x path="Int"/></ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="inline" set="null" line="191" static="1"><x path="Int"/></ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" line="192" static="1"><x path="Int"/></ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" line="193" static="1"><x path="Int"/></SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="inline" set="null" line="194" static="1"><x path="Int"/></CURRENT_PROGRAM>
		<NEVER public="1" get="inline" set="null" line="196" static="1"><x path="Int"/></NEVER>
		<LESS public="1" get="inline" set="null" line="197" static="1"><x path="Int"/></LESS>
		<EQUAL public="1" get="inline" set="null" line="198" static="1"><x path="Int"/></EQUAL>
		<LEQUAL public="1" get="inline" set="null" line="199" static="1"><x path="Int"/></LEQUAL>
		<GREATER public="1" get="inline" set="null" line="200" static="1"><x path="Int"/></GREATER>
		<NOTEQUAL public="1" get="inline" set="null" line="201" static="1"><x path="Int"/></NOTEQUAL>
		<GEQUAL public="1" get="inline" set="null" line="202" static="1"><x path="Int"/></GEQUAL>
		<ALWAYS public="1" get="inline" set="null" line="203" static="1"><x path="Int"/></ALWAYS>
		<KEEP public="1" get="inline" set="null" line="205" static="1"><x path="Int"/></KEEP>
		<REPLACE public="1" get="inline" set="null" line="206" static="1"><x path="Int"/></REPLACE>
		<INCR public="1" get="inline" set="null" line="207" static="1"><x path="Int"/></INCR>
		<DECR public="1" get="inline" set="null" line="208" static="1"><x path="Int"/></DECR>
		<INVERT public="1" get="inline" set="null" line="209" static="1"><x path="Int"/></INVERT>
		<INCR_WRAP public="1" get="inline" set="null" line="210" static="1"><x path="Int"/></INCR_WRAP>
		<DECR_WRAP public="1" get="inline" set="null" line="211" static="1"><x path="Int"/></DECR_WRAP>
		<VENDOR public="1" get="inline" set="null" line="213" static="1"><x path="Int"/></VENDOR>
		<RENDERER public="1" get="inline" set="null" line="214" static="1"><x path="Int"/></RENDERER>
		<VERSION public="1" get="inline" set="null" line="215" static="1"><x path="Int"/></VERSION>
		<NEAREST public="1" get="inline" set="null" line="217" static="1"><x path="Int"/></NEAREST>
		<LINEAR public="1" get="inline" set="null" line="218" static="1"><x path="Int"/></LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" line="220" static="1"><x path="Int"/></NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" line="221" static="1"><x path="Int"/></LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" line="222" static="1"><x path="Int"/></NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" line="223" static="1"><x path="Int"/></LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="inline" set="null" line="225" static="1"><x path="Int"/></TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="inline" set="null" line="226" static="1"><x path="Int"/></TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="inline" set="null" line="227" static="1"><x path="Int"/></TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="inline" set="null" line="228" static="1"><x path="Int"/></TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="inline" set="null" line="230" static="1"><x path="Int"/></TEXTURE_2D>
		<TEXTURE public="1" get="inline" set="null" line="231" static="1"><x path="Int"/></TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="inline" set="null" line="233" static="1"><x path="Int"/></TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" line="234" static="1"><x path="Int"/></TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" line="235" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" line="236" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" line="237" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" line="238" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" line="239" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" line="240" static="1"><x path="Int"/></TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" line="241" static="1"><x path="Int"/></MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="inline" set="null" line="243" static="1"><x path="Int"/></TEXTURE0>
		<TEXTURE1 public="1" get="inline" set="null" line="244" static="1"><x path="Int"/></TEXTURE1>
		<TEXTURE2 public="1" get="inline" set="null" line="245" static="1"><x path="Int"/></TEXTURE2>
		<TEXTURE3 public="1" get="inline" set="null" line="246" static="1"><x path="Int"/></TEXTURE3>
		<TEXTURE4 public="1" get="inline" set="null" line="247" static="1"><x path="Int"/></TEXTURE4>
		<TEXTURE5 public="1" get="inline" set="null" line="248" static="1"><x path="Int"/></TEXTURE5>
		<TEXTURE6 public="1" get="inline" set="null" line="249" static="1"><x path="Int"/></TEXTURE6>
		<TEXTURE7 public="1" get="inline" set="null" line="250" static="1"><x path="Int"/></TEXTURE7>
		<TEXTURE8 public="1" get="inline" set="null" line="251" static="1"><x path="Int"/></TEXTURE8>
		<TEXTURE9 public="1" get="inline" set="null" line="252" static="1"><x path="Int"/></TEXTURE9>
		<TEXTURE10 public="1" get="inline" set="null" line="253" static="1"><x path="Int"/></TEXTURE10>
		<TEXTURE11 public="1" get="inline" set="null" line="254" static="1"><x path="Int"/></TEXTURE11>
		<TEXTURE12 public="1" get="inline" set="null" line="255" static="1"><x path="Int"/></TEXTURE12>
		<TEXTURE13 public="1" get="inline" set="null" line="256" static="1"><x path="Int"/></TEXTURE13>
		<TEXTURE14 public="1" get="inline" set="null" line="257" static="1"><x path="Int"/></TEXTURE14>
		<TEXTURE15 public="1" get="inline" set="null" line="258" static="1"><x path="Int"/></TEXTURE15>
		<TEXTURE16 public="1" get="inline" set="null" line="259" static="1"><x path="Int"/></TEXTURE16>
		<TEXTURE17 public="1" get="inline" set="null" line="260" static="1"><x path="Int"/></TEXTURE17>
		<TEXTURE18 public="1" get="inline" set="null" line="261" static="1"><x path="Int"/></TEXTURE18>
		<TEXTURE19 public="1" get="inline" set="null" line="262" static="1"><x path="Int"/></TEXTURE19>
		<TEXTURE20 public="1" get="inline" set="null" line="263" static="1"><x path="Int"/></TEXTURE20>
		<TEXTURE21 public="1" get="inline" set="null" line="264" static="1"><x path="Int"/></TEXTURE21>
		<TEXTURE22 public="1" get="inline" set="null" line="265" static="1"><x path="Int"/></TEXTURE22>
		<TEXTURE23 public="1" get="inline" set="null" line="266" static="1"><x path="Int"/></TEXTURE23>
		<TEXTURE24 public="1" get="inline" set="null" line="267" static="1"><x path="Int"/></TEXTURE24>
		<TEXTURE25 public="1" get="inline" set="null" line="268" static="1"><x path="Int"/></TEXTURE25>
		<TEXTURE26 public="1" get="inline" set="null" line="269" static="1"><x path="Int"/></TEXTURE26>
		<TEXTURE27 public="1" get="inline" set="null" line="270" static="1"><x path="Int"/></TEXTURE27>
		<TEXTURE28 public="1" get="inline" set="null" line="271" static="1"><x path="Int"/></TEXTURE28>
		<TEXTURE29 public="1" get="inline" set="null" line="272" static="1"><x path="Int"/></TEXTURE29>
		<TEXTURE30 public="1" get="inline" set="null" line="273" static="1"><x path="Int"/></TEXTURE30>
		<TEXTURE31 public="1" get="inline" set="null" line="274" static="1"><x path="Int"/></TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="inline" set="null" line="275" static="1"><x path="Int"/></ACTIVE_TEXTURE>
		<REPEAT public="1" get="inline" set="null" line="277" static="1"><x path="Int"/></REPEAT>
		<CLAMP_TO_EDGE public="1" get="inline" set="null" line="278" static="1"><x path="Int"/></CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="inline" set="null" line="279" static="1"><x path="Int"/></MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="inline" set="null" line="281" static="1"><x path="Int"/></FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" line="282" static="1"><x path="Int"/></FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" line="283" static="1"><x path="Int"/></FLOAT_VEC4>
		<INT_VEC2 public="1" get="inline" set="null" line="284" static="1"><x path="Int"/></INT_VEC2>
		<INT_VEC3 public="1" get="inline" set="null" line="285" static="1"><x path="Int"/></INT_VEC3>
		<INT_VEC4 public="1" get="inline" set="null" line="286" static="1"><x path="Int"/></INT_VEC4>
		<BOOL public="1" get="inline" set="null" line="287" static="1"><x path="Int"/></BOOL>
		<BOOL_VEC2 public="1" get="inline" set="null" line="288" static="1"><x path="Int"/></BOOL_VEC2>
		<BOOL_VEC3 public="1" get="inline" set="null" line="289" static="1"><x path="Int"/></BOOL_VEC3>
		<BOOL_VEC4 public="1" get="inline" set="null" line="290" static="1"><x path="Int"/></BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="inline" set="null" line="291" static="1"><x path="Int"/></FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" line="292" static="1"><x path="Int"/></FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" line="293" static="1"><x path="Int"/></FLOAT_MAT4>
		<SAMPLER_2D public="1" get="inline" set="null" line="294" static="1"><x path="Int"/></SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="inline" set="null" line="295" static="1"><x path="Int"/></SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" line="297" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" line="298" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" line="299" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" line="300" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" line="301" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" line="302" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" line="303" static="1"><x path="Int"/></VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<VERTEX_PROGRAM_POINT_SIZE public="1" get="inline" set="null" line="305" static="1"><x path="Int"/></VERTEX_PROGRAM_POINT_SIZE>
		<POINT_SPRITE public="1" get="inline" set="null" line="306" static="1"><x path="Int"/></POINT_SPRITE>
		<COMPILE_STATUS public="1" get="inline" set="null" line="308" static="1"><x path="Int"/></COMPILE_STATUS>
		<LOW_FLOAT public="1" get="inline" set="null" line="310" static="1"><x path="Int"/></LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="inline" set="null" line="311" static="1"><x path="Int"/></MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="inline" set="null" line="312" static="1"><x path="Int"/></HIGH_FLOAT>
		<LOW_INT public="1" get="inline" set="null" line="313" static="1"><x path="Int"/></LOW_INT>
		<MEDIUM_INT public="1" get="inline" set="null" line="314" static="1"><x path="Int"/></MEDIUM_INT>
		<HIGH_INT public="1" get="inline" set="null" line="315" static="1"><x path="Int"/></HIGH_INT>
		<FRAMEBUFFER public="1" get="inline" set="null" line="317" static="1"><x path="Int"/></FRAMEBUFFER>
		<RENDERBUFFER public="1" get="inline" set="null" line="318" static="1"><x path="Int"/></RENDERBUFFER>
		<RGBA4 public="1" get="inline" set="null" line="320" static="1"><x path="Int"/></RGBA4>
		<RGB5_A1 public="1" get="inline" set="null" line="321" static="1"><x path="Int"/></RGB5_A1>
		<RGB565 public="1" get="inline" set="null" line="322" static="1"><x path="Int"/></RGB565>
		<DEPTH_COMPONENT16 public="1" get="inline" set="null" line="323" static="1"><x path="Int"/></DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="inline" set="null" line="324" static="1"><x path="Int"/></STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="inline" set="null" line="325" static="1"><x path="Int"/></STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="inline" set="null" line="326" static="1"><x path="Int"/></DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="inline" set="null" line="328" static="1"><x path="Int"/></RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" line="329" static="1"><x path="Int"/></RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" line="330" static="1"><x path="Int"/></RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" line="331" static="1"><x path="Int"/></RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" line="332" static="1"><x path="Int"/></RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" line="333" static="1"><x path="Int"/></RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" line="334" static="1"><x path="Int"/></RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" line="335" static="1"><x path="Int"/></RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" line="336" static="1"><x path="Int"/></RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" line="338" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" line="339" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" line="340" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" line="341" static="1"><x path="Int"/></FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="inline" set="null" line="343" static="1"><x path="Int"/></COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="inline" set="null" line="344" static="1"><x path="Int"/></DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="inline" set="null" line="345" static="1"><x path="Int"/></STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" line="346" static="1"><x path="Int"/></DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="inline" set="null" line="348" static="1"><x path="Int"/></NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" line="350" static="1"><x path="Int"/></FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" line="351" static="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" line="352" static="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" line="353" static="1"><x path="Int"/></FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" line="354" static="1"><x path="Int"/></FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="inline" set="null" line="356" static="1"><x path="Int"/></FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="inline" set="null" line="357" static="1"><x path="Int"/></RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" line="358" static="1"><x path="Int"/></MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" line="360" static="1"><x path="Int"/></INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="inline" set="null" line="362" static="1"><x path="Int"/></UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="inline" set="null" line="363" static="1"><x path="Int"/></UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="inline" set="null" line="364" static="1"><x path="Int"/></CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="inline" set="null" line="365" static="1"><x path="Int"/></UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="inline" set="null" line="366" static="1"><x path="Int"/></BROWSER_DEFAULT_WEBGL>
		<version public="1" get="accessor" set="null" static="1"><x path="Int"/></version>
		<context static="1"><c path="js.html.webgl.RenderingContext"/></context>
		<activeTexture public="1" get="inline" set="null" line="375" static="1"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" get="inline" set="null" line="386" static="1"><f a="program:shader">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></attachShader>
		<bindAttribLocation public="1" get="inline" set="null" line="398" static="1"><f a="program:index:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="409" static="1"><f a="target:buffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindFramebuffer public="1" get="inline" set="null" line="420" static="1"><f a="target:framebuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="431" static="1"><f a="target:renderbuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindTexture public="1" get="inline" set="null" line="442" static="1"><f a="target:texture">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></bindTexture>
		<blendColor public="1" get="inline" set="null" line="453" static="1"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" get="inline" set="null" line="464" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="475" static="1"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="486" static="1"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="497" static="1"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" get="inline" set="null" line="508" static="1"><f a="target:data:usage">
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
		<bufferSubData public="1" get="inline" set="null" line="521" static="1"><f a="target:offset:data">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="534" static="1"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="547" static="1"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearColor public="1" get="inline" set="null" line="558" static="1"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepth public="1" get="inline" set="null" line="569" static="1"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepth>
		<clearStencil public="1" get="inline" set="null" line="580" static="1"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<colorMask public="1" get="inline" set="null" line="591" static="1"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" get="inline" set="null" line="602" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" get="inline" set="null" line="613" static="1"><f a="target:level:internalformat:width:height:border:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="626" static="1"><f a="target:level:xoffset:yoffset:width:height:format:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<copyTexImage2D public="1" get="inline" set="null" line="639" static="1"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="650" static="1"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<createBuffer public="1" get="inline" set="null" line="661" static="1"><f a=""><t path="lime.graphics.opengl.GLBuffer"/></f></createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="674" static="1"><f a=""><t path="lime.graphics.opengl.GLFramebuffer"/></f></createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="687" static="1"><f a=""><t path="lime.graphics.opengl.GLProgram"/></f></createProgram>
		<createRenderbuffer public="1" get="inline" set="null" line="700" static="1"><f a=""><t path="lime.graphics.opengl.GLRenderbuffer"/></f></createRenderbuffer>
		<createShader public="1" get="inline" set="null" line="713" static="1"><f a="type">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShader"/>
</f></createShader>
		<createTexture public="1" get="inline" set="null" line="726" static="1"><f a=""><t path="lime.graphics.opengl.GLTexture"/></f></createTexture>
		<cullFace public="1" get="inline" set="null" line="739" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="750" static="1"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="762" static="1"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="774" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteRenderbuffer public="1" get="inline" set="null" line="786" static="1"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteShader public="1" get="inline" set="null" line="798" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteTexture public="1" get="inline" set="null" line="810" static="1"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></deleteTexture>
		<depthFunc public="1" get="inline" set="null" line="822" static="1"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" get="inline" set="null" line="833" static="1"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRange public="1" get="inline" set="null" line="844" static="1"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRange>
		<detachShader public="1" get="inline" set="null" line="855" static="1"><f a="program:shader">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" get="inline" set="null" line="866" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="877" static="1"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="888" static="1"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawElements public="1" get="inline" set="null" line="899" static="1"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElements>
		<enable public="1" get="inline" set="null" line="910" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="921" static="1"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<finish public="1" get="inline" set="null" line="932" static="1"><f a=""><x path="Void"/></f></finish>
		<flush public="1" get="inline" set="null" line="943" static="1"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="954" static="1"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="965" static="1"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<frontFace public="1" get="inline" set="null" line="976" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" get="inline" set="null" line="987" static="1"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" get="inline" set="null" line="998" static="1"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="1011" static="1"><f a="program:index">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveUniform>
		<getAttachedShaders public="1" get="inline" set="null" line="1024" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><t path="lime.graphics.opengl.GLShader"/></c>
</f></getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="1037" static="1"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBufferParameter public="1" get="inline" set="null" line="1050" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getBufferParameter>
		<getContextAttributes public="1" get="inline" set="null" line="1063" static="1"><f a=""><t path="lime.graphics.opengl.GLContextAttributes"/></f></getContextAttributes>
		<getError public="1" get="inline" set="null" line="1079" static="1"><f a=""><x path="Int"/></f></getError>
		<getExtension public="1" get="inline" set="null" line="1092" static="1"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="1107" static="1"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getFramebufferAttachmentParameter>
		<getParameter public="1" get="inline" set="null" line="1120" static="1"><f a="pname">
	<x path="Int"/>
	<d/>
</f></getParameter>
		<getProgramInfoLog public="1" get="inline" set="null" line="1133" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" get="inline" set="null" line="1146" static="1"><f a="program:pname">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getProgramParameter>
		<getRenderbufferParameter public="1" get="inline" set="null" line="1159" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getRenderbufferParameter>
		<getShaderInfoLog public="1" get="inline" set="null" line="1172" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" get="inline" set="null" line="1185" static="1"><f a="shader:pname">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getShaderParameter>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="1198" static="1"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" get="inline" set="null" line="1211" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderSource>
		<getSupportedExtensions public="1" get="inline" set="null" line="1224" static="1"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getTexParameter public="1" get="inline" set="null" line="1239" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getTexParameter>
		<getUniform public="1" get="inline" set="null" line="1252" static="1"><f a="program:location">
	<t path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
</f></getUniform>
		<getUniformLocation public="1" get="inline" set="null" line="1265" static="1"><f a="program:name">
	<t path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" get="inline" set="null" line="1278" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttrib>
		<getVertexAttribOffset public="1" get="inline" set="null" line="1291" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribOffset>
		<hint public="1" get="inline" set="null" line="1304" static="1"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<isBuffer public="1" get="inline" set="null" line="1315" static="1"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isContextLost public="1" get="inline" set="null" line="1328" static="1"><f a=""><x path="Bool"/></f></isContextLost>
		<isEnabled public="1" get="inline" set="null" line="1339" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" get="inline" set="null" line="1352" static="1"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="1365" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Bool"/>
</f></isProgram>
		<isRenderbuffer public="1" get="inline" set="null" line="1378" static="1"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isShader public="1" get="inline" set="null" line="1391" static="1"><f a="shader">
	<t path="lime.graphics.opengl.GLShader"/>
	<x path="Bool"/>
</f></isShader>
		<isTexture public="1" get="inline" set="null" line="1404" static="1"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Bool"/>
</f></isTexture>
		<lineWidth public="1" get="inline" set="null" line="1417" static="1"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" get="inline" set="null" line="1428" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></linkProgram>
		<pixelStorei public="1" get="inline" set="null" line="1439" static="1"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="1450" static="1"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<readPixels public="1" get="inline" set="null" line="1461" static="1"><f a="x:y:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></readPixels>
		<renderbufferStorage public="1" get="inline" set="null" line="1474" static="1"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<sampleCoverage public="1" get="inline" set="null" line="1485" static="1"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<scissor public="1" get="inline" set="null" line="1496" static="1"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderSource public="1" get="inline" set="null" line="1507" static="1"><f a="shader:source">
	<t path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="1518" static="1"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="1529" static="1"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="1540" static="1"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="1551" static="1"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="1562" static="1"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="1573" static="1"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="1584" static="1"><f a="target:level:internalformat:width:height:border:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></texImage2D>
		<texParameterf public="1" get="inline" set="null" line="1597" static="1"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" get="inline" set="null" line="1608" static="1"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="1619" static="1"><f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.utils.ArrayBufferView"/>
	<x path="Void"/>
</f></texSubImage2D>
		<uniform1f public="1" get="inline" set="null" line="1632" static="1"><f a="location:x">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="1643" static="1"><f a="location:x">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="1656" static="1"><f a="location:x">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="1667" static="1"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Int32Array"/>
	<x path="Void"/>
</f></uniform1iv>
		<uniform2f public="1" get="inline" set="null" line="1680" static="1"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" get="inline" set="null" line="1691" static="1"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="1704" static="1"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="1715" static="1"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Int32Array"/>
	<x path="Void"/>
</f></uniform2iv>
		<uniform3f public="1" get="inline" set="null" line="1728" static="1"><f a="location:x:y:z">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="1739" static="1"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="1752" static="1"><f a="location:x:y:z">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="1763" static="1"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Int32Array"/>
	<x path="Void"/>
</f></uniform3iv>
		<uniform4f public="1" get="inline" set="null" line="1776" static="1"><f a="location:x:y:z:w">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="1787" static="1"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="1800" static="1"><f a="location:x:y:z:w">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="1811" static="1"><f a="location:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<t path="lime.utils.Int32Array"/>
	<x path="Void"/>
</f></uniform4iv>
		<uniformMatrix2fv public="1" get="inline" set="null" line="1824" static="1"><f a="location:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix2fv>
		<uniformMatrix3fv public="1" get="inline" set="null" line="1837" static="1"><f a="location:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix3fv>
		<uniformMatrix4fv public="1" get="inline" set="null" line="1850" static="1"><f a="location:transpose:v">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix4fv>
		<useProgram public="1" get="inline" set="null" line="1870" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" get="inline" set="null" line="1881" static="1"><f a="program">
	<t path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="1892" static="1"><f a="indx:x">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="1903" static="1"><f a="indx:values">
	<x path="Int"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="1916" static="1"><f a="indx:x:y">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="1927" static="1"><f a="indx:values">
	<x path="Int"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="1940" static="1"><f a="indx:x:y:z">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="1951" static="1"><f a="indx:values">
	<x path="Int"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="1964" static="1"><f a="indx:x:y:z:w">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="1975" static="1"><f a="indx:values">
	<x path="Int"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttribPointer public="1" get="inline" set="null" line="1988" static="1"><f a="indx:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="1999" static="1"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<get_version set="method" line="2010" static="1"><f a=""><x path="Int"/></f></get_version>
		<meta><m n=":allow"><e>'???'</e></m></meta>
	</class>
	<typedef path="lime.graphics.opengl.GLActiveInfo" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLActiveInfo.hx"><c path="js.html.webgl.ActiveInfo"/></typedef>
	<typedef path="lime.graphics.opengl.GLBuffer" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLBuffer.hx"><c path="js.html.webgl.Buffer"/></typedef>
	<typedef path="lime.graphics.opengl.GLContextAttributes" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLContextAttributes.hx"><t path="js.html.webgl.ContextAttributes"/></typedef>
	<typedef path="lime.graphics.opengl.GLFramebuffer" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLFramebuffer.hx"><c path="js.html.webgl.Framebuffer"/></typedef>
	<typedef path="lime.graphics.opengl.GLProgram" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLProgram.hx"><c path="js.html.webgl.Program"/></typedef>
	<typedef path="lime.graphics.opengl.GLRenderbuffer" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLRenderbuffer.hx"><c path="js.html.webgl.Renderbuffer"/></typedef>
	<typedef path="lime.graphics.opengl.GLShader" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLShader.hx"><c path="js.html.webgl.Shader"/></typedef>
	<typedef path="lime.graphics.opengl.GLShaderPrecisionFormat" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLShaderPrecisionFormat.hx"><c path="js.html.webgl.ShaderPrecisionFormat"/></typedef>
	<typedef path="lime.graphics.opengl.GLTexture" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLTexture.hx"><c path="js.html.webgl.Texture"/></typedef>
	<typedef path="lime.graphics.opengl.GLUniformLocation" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/opengl/GLUniformLocation.hx"><c path="js.html.webgl.UniformLocation"/></typedef>
	<class path="lime.graphics.utils.ImageCanvasUtil" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/utils/ImageCanvasUtil.hx">
		<colorTransform public="1" set="method" line="23" static="1"><f a="image:rect:colorMatrix">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<convertToCanvas public="1" set="method" line="33" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></convertToCanvas>
		<convertToData public="1" set="method" line="53" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></convertToData>
		<copyChannel public="1" set="method" line="70" static="1"><f a="image:sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="82" static="1"><f a="image:sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v="::::null:null:false">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Vector2"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></copyPixels>
		<createCanvas public="1" set="method" line="119" static="1"><f a="image:width:height">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></createCanvas>
		<createImageData public="1" set="method" line="151" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></createImageData>
		<fillRect public="1" set="method" line="176" static="1"><f a="image:rect:color">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="Int"/>
	<x path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method" line="203" static="1"><f a="image:x:y:color">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></floodFill>
		<getPixel public="1" set="method" line="213" static="1"><f a="image:x:y">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method" line="223" static="1"><f a="image:x:y">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method" line="233" static="1"><f a="image:rect">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.utils.ByteArray"/>
</f></getPixels>
		<resize public="1" set="method" line="243" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<setPixel public="1" set="method" line="264" static="1"><f a="image:x:y:color">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method" line="274" static="1"><f a="image:x:y:color">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method" line="284" static="1"><f a="image:rect:byteArray">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.utils.ByteArray"/>
	<x path="Void"/>
</f></setPixels>
		<sync public="1" set="method" line="294" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></sync>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="lime.graphics.utils.ImageDataUtil" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/graphics/utils/ImageDataUtil.hx">
		<__alpha16 static="1"><x path="haxe.ds.Vector"><x path="Int"/></x></__alpha16>
		<__clamp static="1"><x path="haxe.ds.Vector"><x path="Int"/></x></__clamp>
		<colorTransform public="1" set="method" line="48" static="1"><f a="image:rect:colorMatrix">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<copyChannel public="1" set="method" line="89" static="1"><f a="image:sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="149" static="1"><f a="image:sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v="::::null:null:false">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Vector2"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></copyPixels>
		<fillRect public="1" set="method" line="223" static="1"><f a="image:rect:color">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="Int"/>
	<x path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method" line="286" static="1"><f a="image:x:y:color">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></floodFill>
		<getPixel public="1" set="method" line="353" static="1"><f a="image:x:y">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method" line="373" static="1"><f a="image:x:y">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method" line="393" static="1"><f a="image:rect">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.utils.ByteArray"/>
</f></getPixels>
		<multiplyAlpha public="1" set="method" line="436" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></multiplyAlpha>
		<resize public="1" set="method" line="461" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<resizeBuffer public="1" set="method" line="524" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resizeBuffer>
		<setPixel public="1" set="method" line="554" static="1"><f a="image:x:y:color">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method" line="569" static="1"><f a="image:x:y:color">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method" line="597" static="1"><f a="image:rect:byteArray">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.utils.ByteArray"/>
	<x path="Void"/>
</f></setPixels>
		<unmultiplyAlpha public="1" set="method" line="627" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></unmultiplyAlpha>
	</class>
	<abstract path="lime.math.ColorMatrix" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/ColorMatrix.hx">
		<from><icast><t path="lime.utils.Float32Array"/></icast></from>
		<this><t path="lime.utils.Float32Array"/></this>
		<to><icast><t path="lime.utils.Float32Array"/></icast></to>
		<impl><class path="lime.math._ColorMatrix.ColorMatrix_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/ColorMatrix.hx" private="1" module="lime.math.ColorMatrix">
	<__identity line="14" static="1"><c path="Array"><x path="Float"/></c></__identity>
	<alphaMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</alphaMultiplier>
	<alphaOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</alphaOffset>
	<blueMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</blueMultiplier>
	<blueOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</blueOffset>
	<color public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</color>
	<greenMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</greenMultiplier>
	<greenOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</greenOffset>
	<redMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</redMultiplier>
	<redOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</redOffset>
	<_new public="1" set="method" line="27" static="1">
		<f a="?data" v="null">
			<t path="lime.utils.Float32Array"/>
			<t path="lime.utils.Float32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<clone public="1" set="method" line="42" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clone>
	<concat public="1" set="method" line="49" static="1">
		<f a="this:second">
			<t path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</concat>
	<copyFrom public="1" set="method" line="59" static="1">
		<f a="this:other">
			<t path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyFrom>
	<identity public="1" set="method" line="66" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</identity>
	<__toFlashColorTransform set="method" line="92" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</__toFlashColorTransform>
	<get_alphaMultiplier get="inline" set="null" line="110" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_alphaMultiplier>
	<set_alphaMultiplier get="inline" set="null" line="117" static="1">
		<f a="this:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_alphaMultiplier>
	<get_alphaOffset get="inline" set="null" line="125" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_alphaOffset>
	<set_alphaOffset get="inline" set="null" line="132" static="1">
		<f a="this:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_alphaOffset>
	<get_blueMultiplier get="inline" set="null" line="140" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_blueMultiplier>
	<set_blueMultiplier get="inline" set="null" line="147" static="1">
		<f a="this:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_blueMultiplier>
	<get_blueOffset get="inline" set="null" line="155" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_blueOffset>
	<set_blueOffset get="inline" set="null" line="162" static="1">
		<f a="this:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_blueOffset>
	<get_color set="method" line="170" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_color>
	<set_color set="method" line="177" static="1">
		<f a="this:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_color>
	<get_greenMultiplier get="inline" set="null" line="192" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_greenMultiplier>
	<set_greenMultiplier get="inline" set="null" line="199" static="1">
		<f a="this:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_greenMultiplier>
	<get_greenOffset get="inline" set="null" line="207" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_greenOffset>
	<set_greenOffset get="inline" set="null" line="214" static="1">
		<f a="this:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_greenOffset>
	<get_redMultiplier get="inline" set="null" line="222" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_redMultiplier>
	<set_redMultiplier get="inline" set="null" line="229" static="1">
		<f a="this:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_redMultiplier>
	<get_redOffset get="inline" set="null" line="237" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_redOffset>
	<set_redOffset get="inline" set="null" line="244" static="1">
		<f a="this:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_redOffset>
	<get public="1" set="method" line="252" static="1">
		<f a="this:index">
			<t path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<set public="1" set="method" line="259" static="1">
		<f a="this:index:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
</class></impl>
	</abstract>
	<class path="lime.math._ColorMatrix.ColorMatrix_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/ColorMatrix.hx" private="1" module="lime.math.ColorMatrix">
		<__identity line="14" static="1"><c path="Array"><x path="Float"/></c></__identity>
		<alphaMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</alphaMultiplier>
		<alphaOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</alphaOffset>
		<blueMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</blueMultiplier>
		<blueOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</blueOffset>
		<color public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</color>
		<greenMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</greenMultiplier>
		<greenOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</greenOffset>
		<redMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</redMultiplier>
		<redOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</redOffset>
		<_new public="1" set="method" line="27" static="1">
			<f a="?data" v="null">
				<t path="lime.utils.Float32Array"/>
				<t path="lime.utils.Float32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<clone public="1" set="method" line="42" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clone>
		<concat public="1" set="method" line="49" static="1">
			<f a="this:second">
				<t path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</concat>
		<copyFrom public="1" set="method" line="59" static="1">
			<f a="this:other">
				<t path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyFrom>
		<identity public="1" set="method" line="66" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</identity>
		<__toFlashColorTransform set="method" line="92" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</__toFlashColorTransform>
		<get_alphaMultiplier get="inline" set="null" line="110" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_alphaMultiplier>
		<set_alphaMultiplier get="inline" set="null" line="117" static="1">
			<f a="this:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_alphaMultiplier>
		<get_alphaOffset get="inline" set="null" line="125" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_alphaOffset>
		<set_alphaOffset get="inline" set="null" line="132" static="1">
			<f a="this:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_alphaOffset>
		<get_blueMultiplier get="inline" set="null" line="140" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_blueMultiplier>
		<set_blueMultiplier get="inline" set="null" line="147" static="1">
			<f a="this:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_blueMultiplier>
		<get_blueOffset get="inline" set="null" line="155" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_blueOffset>
		<set_blueOffset get="inline" set="null" line="162" static="1">
			<f a="this:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_blueOffset>
		<get_color set="method" line="170" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_color>
		<set_color set="method" line="177" static="1">
			<f a="this:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_color>
		<get_greenMultiplier get="inline" set="null" line="192" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_greenMultiplier>
		<set_greenMultiplier get="inline" set="null" line="199" static="1">
			<f a="this:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_greenMultiplier>
		<get_greenOffset get="inline" set="null" line="207" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_greenOffset>
		<set_greenOffset get="inline" set="null" line="214" static="1">
			<f a="this:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_greenOffset>
		<get_redMultiplier get="inline" set="null" line="222" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_redMultiplier>
		<set_redMultiplier get="inline" set="null" line="229" static="1">
			<f a="this:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_redMultiplier>
		<get_redOffset get="inline" set="null" line="237" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_redOffset>
		<set_redOffset get="inline" set="null" line="244" static="1">
			<f a="this:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_redOffset>
		<get public="1" set="method" line="252" static="1">
			<f a="this:index">
				<t path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<set public="1" set="method" line="259" static="1">
			<f a="this:index:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
	</class>
	<class path="lime.math.Matrix3" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/Matrix3.hx">
		<__identity line="14" static="1"><c path="lime.math.Matrix3"/></__identity>
		<a public="1"><x path="Float"/></a>
		<b public="1"><x path="Float"/></b>
		<c public="1"><x path="Float"/></c>
		<d public="1"><x path="Float"/></d>
		<tx public="1"><x path="Float"/></tx>
		<ty public="1"><x path="Float"/></ty>
		<clone public="1" get="inline" set="null" line="29"><f a=""><c path="lime.math.Matrix3"/></f></clone>
		<concat public="1" set="method" line="36"><f a="m">
	<c path="lime.math.Matrix3"/>
	<x path="Void"/>
</f></concat>
		<copyColumnFrom public="1" set="method" line="55"><f a="column:vector4">
	<x path="Int"/>
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyColumnFrom>
		<copyColumnTo public="1" set="method" line="81"><f a="column:vector4">
	<x path="Int"/>
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyColumnTo>
		<copyFrom public="1" set="method" line="110"><f a="sourceMatrix3">
	<c path="lime.math.Matrix3"/>
	<x path="Void"/>
</f></copyFrom>
		<copyRowFrom public="1" set="method" line="122"><f a="row:vector4">
	<x path="Int"/>
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyRowFrom>
		<copyRowTo public="1" set="method" line="148"><f a="row:vector4">
	<x path="Int"/>
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyRowTo>
		<createBox public="1" set="method" line="175"><f a="scaleX:scaleY:?rotation:?tx:?ty" v="::0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></createBox>
		<createGradientBox public="1" set="method" line="186"><f a="width:height:?rotation:?tx:?ty" v="::0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></createGradientBox>
		<equals public="1" set="method" line="215"><f a="Matrix3">
	<a>
		<ty set="null"><x path="Float"/></ty>
		<tx set="null"><x path="Float"/></tx>
		<d set="null"><x path="Float"/></d>
		<c set="null"><x path="Float"/></c>
		<b set="null"><x path="Float"/></b>
		<a set="null"><x path="Float"/></a>
	</a>
	<x path="Bool"/>
</f></equals>
		<deltaTransformVector2 public="1" set="method" line="222"><f a="Vector2">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></deltaTransformVector2>
		<identity public="1" set="method" line="229"><f a=""><x path="Void"/></f></identity>
		<invert public="1" set="method" line="241"><f a=""><c path="lime.math.Matrix3"/></f></invert>
		<mult public="1" get="inline" set="null" line="273"><f a="m">
	<c path="lime.math.Matrix3"/>
	<c path="lime.math.Matrix3"/>
</f></mult>
		<rotate public="1" set="method" line="282"><f a="theta">
	<x path="Float"/>
	<x path="Void"/>
</f></rotate>
		<scale public="1" set="method" line="318"><f a="sx:sy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scale>
		<setRotation get="inline" set="null" line="341"><f a="theta:?scale" v=":1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setRotation>
		<setTo public="1" set="method" line="353"><f a="a:b:c:d:tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<to3DString public="1" get="inline" set="null" line="365"><f a="?roundPixels" v="false">
	<x path="Bool"/>
	<c path="String"/>
</f></to3DString>
		<toMozString public="1" get="inline" set="null" line="388"><f a=""><c path="String"/></f></toMozString>
		<toString public="1" get="inline" set="null" line="395"><f a=""><c path="String"/></f></toString>
		<transformVector2 public="1" set="method" line="402"><f a="pos">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></transformVector2>
		<translate public="1" set="method" line="409"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></translate>
		<__cleanValues get="inline" set="null" line="419"><f a=""><x path="Void"/></f></__cleanValues>
		<__transformX public="1" get="inline" set="null" line="431"><f a="pos">
	<c path="lime.math.Vector2"/>
	<x path="Float"/>
</f></__transformX>
		<__transformY public="1" get="inline" set="null" line="438"><f a="pos">
	<c path="lime.math.Vector2"/>
	<x path="Float"/>
</f></__transformY>
		<__translateTransformed public="1" get="inline" set="null" line="445"><f a="pos">
	<c path="lime.math.Vector2"/>
	<x path="Void"/>
</f></__translateTransformed>
		<new public="1" set="method" line="17"><f a="?a:?b:?c:?d:?tx:?ty" v="1:0:0:1:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.math.Matrix4" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/Matrix4.hx">
		<from><icast><t path="lime.utils.Float32Array"/></icast></from>
		<this><t path="lime.utils.Float32Array"/></this>
		<to><icast><t path="lime.utils.Float32Array"/></icast></to>
		<impl><class path="lime.math._Matrix4.Matrix4_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/Matrix4.hx" private="1" module="lime.math.Matrix4">
	<__identity line="10" static="1"><c path="Array"><x path="Float"/></c></__identity>
	<determinant public="1" get="accessor" set="null" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
	</determinant>
	<position public="1" get="accessor" set="accessor" static="1">
		<c path="lime.math.Vector4"/>
		<meta><m n=":impl"/></meta>
	</position>
	<_new public="1" set="method" line="16" static="1">
		<f a="?data" v="null">
			<t path="lime.utils.Float32Array"/>
			<t path="lime.utils.Float32Array"/>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<append public="1" set="method" line="31" static="1">
		<f a="this:lhs">
			<t path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</append>
	<appendRotation public="1" set="method" line="65" static="1">
		<f a="this:degrees:axis:?pivotPoint" v=":::null">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</appendRotation>
	<appendScale public="1" set="method" line="81" static="1">
		<f a="this:xScale:yScale:zScale">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</appendScale>
	<appendTranslation public="1" set="method" line="88" static="1">
		<f a="this:x:y:z">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</appendTranslation>
	<clone public="1" set="method" line="97" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clone>
	<copyColumnFrom public="1" set="method" line="104" static="1">
		<f a="this:column:vector">
			<t path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyColumnFrom>
	<copyColumnTo public="1" set="method" line="136" static="1">
		<f a="this:column:vector">
			<t path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyColumnTo>
	<copyFrom public="1" set="method" line="168" static="1">
		<f a="this:other">
			<t path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyFrom>
	<copythisFrom public="1" set="method" line="174" static="1">
		<f a="this:array:?index:?transposeValues" v="::0:false">
			<t path="lime.utils.Float32Array"/>
			<t path="lime.utils.Float32Array"/>
			<x path="UInt"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copythisFrom>
	<copythisTo public="1" set="method" line="189" static="1">
		<f a="this:array:?index:?transposeValues" v="::0:false">
			<t path="lime.utils.Float32Array"/>
			<t path="lime.utils.Float32Array"/>
			<x path="UInt"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copythisTo>
	<copyRowFrom public="1" set="method" line="204" static="1">
		<f a="this:row:vector">
			<t path="lime.utils.Float32Array"/>
			<x path="UInt"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyRowFrom>
	<create2D public="1" set="method" line="240" static="1"><f a="x:y:?scale:?rotation" v="::1:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></create2D>
	<createABCD public="1" set="method" line="256" static="1"><f a="a:b:c:d:tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></createABCD>
	<createOrtho public="1" set="method" line="268" static="1"><f a="x0:x1:y0:y1:zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></createOrtho>
	<copyRowTo public="1" set="method" line="284" static="1">
		<f a="this:row:vector">
			<t path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyRowTo>
	<copyToMatrix4 public="1" set="method" line="320" static="1">
		<f a="this:other">
			<t path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyToMatrix4>
	<deltaTransformVector public="1" set="method" line="426" static="1">
		<f a="this:v">
			<t path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>* Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.</haxe_doc>
	</deltaTransformVector>
	<identity public="1" set="method" line="439" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</identity>
	<interpolate public="1" set="method" line="461" static="1"><f a="thisMat:toMat:percent">
	<x path="lime.math.Matrix4"/>
	<x path="lime.math.Matrix4"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></interpolate>
	<interpolateTo public="1" set="method" line="476" static="1">
		<f a="this:toMat:percent">
			<t path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</interpolateTo>
	<invert public="1" set="method" line="487" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invert>
	<pointAt public="1" set="method" line="525" static="1">
		<f a="this:pos:?at:?up" v="::null:null">
			<t path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pointAt>
	<prepend public="1" set="method" line="592" static="1">
		<f a="this:rhs">
			<t path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</prepend>
	<prependRotation public="1" set="method" line="626" static="1">
		<f a="this:degrees:axis:?pivotPoint" v=":::null">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</prependRotation>
	<prependScale public="1" set="method" line="642" static="1">
		<f a="this:xScale:yScale:zScale">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</prependScale>
	<prependTranslation public="1" set="method" line="649" static="1">
		<f a="this:x:y:z">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</prependTranslation>
	<transformVector public="1" set="method" line="742" static="1">
		<f a="this:v">
			<t path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transformVector>
	<transformVectors public="1" set="method" line="755" static="1">
		<f a="this:ain:aout">
			<t path="lime.utils.Float32Array"/>
			<t path="lime.utils.Float32Array"/>
			<t path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transformVectors>
	<transpose public="1" set="method" line="774" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transpose>
	<getAxisRotation set="method" line="792" static="1"><f a="x:y:z:degrees">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></getAxisRotation>
	<get_determinant public="1" set="method" line="831" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_determinant>
	<get_position public="1" set="method" line="843" static="1">
		<f a="this">
			<t path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_position>
	<set_position public="1" set="method" line="850" static="1">
		<f a="this:val">
			<t path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set_position>
	<get public="1" set="method" line="860" static="1">
		<f a="this:index">
			<t path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<set public="1" set="method" line="867" static="1">
		<f a="this:index:value">
			<t path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
</class></impl>
	</abstract>
	<class path="lime.math._Matrix4.Matrix4_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/Matrix4.hx" private="1" module="lime.math.Matrix4">
		<__identity line="10" static="1"><c path="Array"><x path="Float"/></c></__identity>
		<determinant public="1" get="accessor" set="null" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
		</determinant>
		<position public="1" get="accessor" set="accessor" static="1">
			<c path="lime.math.Vector4"/>
			<meta><m n=":impl"/></meta>
		</position>
		<_new public="1" set="method" line="16" static="1">
			<f a="?data" v="null">
				<t path="lime.utils.Float32Array"/>
				<t path="lime.utils.Float32Array"/>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<append public="1" set="method" line="31" static="1">
			<f a="this:lhs">
				<t path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</append>
		<appendRotation public="1" set="method" line="65" static="1">
			<f a="this:degrees:axis:?pivotPoint" v=":::null">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</appendRotation>
		<appendScale public="1" set="method" line="81" static="1">
			<f a="this:xScale:yScale:zScale">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</appendScale>
		<appendTranslation public="1" set="method" line="88" static="1">
			<f a="this:x:y:z">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</appendTranslation>
		<clone public="1" set="method" line="97" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clone>
		<copyColumnFrom public="1" set="method" line="104" static="1">
			<f a="this:column:vector">
				<t path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyColumnFrom>
		<copyColumnTo public="1" set="method" line="136" static="1">
			<f a="this:column:vector">
				<t path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyColumnTo>
		<copyFrom public="1" set="method" line="168" static="1">
			<f a="this:other">
				<t path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyFrom>
		<copythisFrom public="1" set="method" line="174" static="1">
			<f a="this:array:?index:?transposeValues" v="::0:false">
				<t path="lime.utils.Float32Array"/>
				<t path="lime.utils.Float32Array"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copythisFrom>
		<copythisTo public="1" set="method" line="189" static="1">
			<f a="this:array:?index:?transposeValues" v="::0:false">
				<t path="lime.utils.Float32Array"/>
				<t path="lime.utils.Float32Array"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copythisTo>
		<copyRowFrom public="1" set="method" line="204" static="1">
			<f a="this:row:vector">
				<t path="lime.utils.Float32Array"/>
				<x path="UInt"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyRowFrom>
		<create2D public="1" set="method" line="240" static="1"><f a="x:y:?scale:?rotation" v="::1:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></create2D>
		<createABCD public="1" set="method" line="256" static="1"><f a="a:b:c:d:tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></createABCD>
		<createOrtho public="1" set="method" line="268" static="1"><f a="x0:x1:y0:y1:zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></createOrtho>
		<copyRowTo public="1" set="method" line="284" static="1">
			<f a="this:row:vector">
				<t path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyRowTo>
		<copyToMatrix4 public="1" set="method" line="320" static="1">
			<f a="this:other">
				<t path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyToMatrix4>
		<deltaTransformVector public="1" set="method" line="426" static="1">
			<f a="this:v">
				<t path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>* Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.</haxe_doc>
		</deltaTransformVector>
		<identity public="1" set="method" line="439" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</identity>
		<interpolate public="1" set="method" line="461" static="1"><f a="thisMat:toMat:percent">
	<x path="lime.math.Matrix4"/>
	<x path="lime.math.Matrix4"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></interpolate>
		<interpolateTo public="1" set="method" line="476" static="1">
			<f a="this:toMat:percent">
				<t path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</interpolateTo>
		<invert public="1" set="method" line="487" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invert>
		<pointAt public="1" set="method" line="525" static="1">
			<f a="this:pos:?at:?up" v="::null:null">
				<t path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pointAt>
		<prepend public="1" set="method" line="592" static="1">
			<f a="this:rhs">
				<t path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</prepend>
		<prependRotation public="1" set="method" line="626" static="1">
			<f a="this:degrees:axis:?pivotPoint" v=":::null">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</prependRotation>
		<prependScale public="1" set="method" line="642" static="1">
			<f a="this:xScale:yScale:zScale">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</prependScale>
		<prependTranslation public="1" set="method" line="649" static="1">
			<f a="this:x:y:z">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</prependTranslation>
		<transformVector public="1" set="method" line="742" static="1">
			<f a="this:v">
				<t path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transformVector>
		<transformVectors public="1" set="method" line="755" static="1">
			<f a="this:ain:aout">
				<t path="lime.utils.Float32Array"/>
				<t path="lime.utils.Float32Array"/>
				<t path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transformVectors>
		<transpose public="1" set="method" line="774" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transpose>
		<getAxisRotation set="method" line="792" static="1"><f a="x:y:z:degrees">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.math.Matrix4"/>
</f></getAxisRotation>
		<get_determinant public="1" set="method" line="831" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_determinant>
		<get_position public="1" set="method" line="843" static="1">
			<f a="this">
				<t path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_position>
		<set_position public="1" set="method" line="850" static="1">
			<f a="this:val">
				<t path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set_position>
		<get public="1" set="method" line="860" static="1">
			<f a="this:index">
				<t path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<set public="1" set="method" line="867" static="1">
			<f a="this:index:value">
				<t path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
	</class>
	<class path="lime.math.Rectangle" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/Rectangle.hx">
		<bottom public="1" get="accessor" set="accessor"><x path="Float"/></bottom>
		<bottomRight public="1" get="accessor" set="accessor"><c path="lime.math.Vector2"/></bottomRight>
		<height public="1"><x path="Float"/></height>
		<left public="1" get="accessor" set="accessor"><x path="Float"/></left>
		<right public="1" get="accessor" set="accessor"><x path="Float"/></right>
		<size public="1" get="accessor" set="accessor"><c path="lime.math.Vector2"/></size>
		<top public="1" get="accessor" set="accessor"><x path="Float"/></top>
		<topLeft public="1" get="accessor" set="accessor"><c path="lime.math.Vector2"/></topLeft>
		<width public="1"><x path="Float"/></width>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<clone public="1" set="method" line="35"><f a=""><c path="lime.math.Rectangle"/></f></clone>
		<contains public="1" set="method" line="42"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></contains>
		<containsPoint public="1" set="method" line="49"><f a="point">
	<c path="lime.math.Vector2"/>
	<x path="Bool"/>
</f></containsPoint>
		<containsRect public="1" set="method" line="56"><f a="rect">
	<c path="lime.math.Rectangle"/>
	<x path="Bool"/>
</f></containsRect>
		<copyFrom public="1" set="method" line="71"><f a="sourceRect">
	<c path="lime.math.Rectangle"/>
	<x path="Void"/>
</f></copyFrom>
		<equals public="1" set="method" line="81"><f a="toCompare">
	<c path="lime.math.Rectangle"/>
	<x path="Bool"/>
</f></equals>
		<inflate public="1" set="method" line="88"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></inflate>
		<inflatePoint public="1" set="method" line="96"><f a="point">
	<c path="lime.math.Vector2"/>
	<x path="Void"/>
</f></inflatePoint>
		<intersection public="1" set="method" line="103"><f a="toIntersect">
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Rectangle"/>
</f></intersection>
		<intersects public="1" set="method" line="128"><f a="toIntersect">
	<c path="lime.math.Rectangle"/>
	<x path="Bool"/>
</f></intersects>
		<isEmpty public="1" set="method" line="147"><f a=""><x path="Bool"/></f></isEmpty>
		<offset public="1" set="method" line="154"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></offset>
		<offsetPoint public="1" set="method" line="162"><f a="point">
	<c path="lime.math.Vector2"/>
	<x path="Void"/>
</f></offsetPoint>
		<setEmpty public="1" set="method" line="170"><f a=""><x path="Void"/></f></setEmpty>
		<setTo public="1" set="method" line="177"><f a="xa:ya:widtha:heighta">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<transform public="1" set="method" line="187"><f a="m">
	<c path="lime.math.Matrix3"/>
	<c path="lime.math.Rectangle"/>
</f></transform>
		<union public="1" set="method" line="223"><f a="toUnion">
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Rectangle"/>
</f></union>
		<__contract public="1" set="method" line="245"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></__contract>
		<__expand public="1" set="method" line="264"><f a="x:y:width:height">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></__expand>
		<__toFlashRectangle set="method" line="287"><f a=""><d/></f></__toFlashRectangle>
		<get_bottom set="method" line="305"><f a=""><x path="Float"/></f></get_bottom>
		<set_bottom set="method" line="306"><f a="b">
	<x path="Float"/>
	<x path="Float"/>
</f></set_bottom>
		<get_bottomRight set="method" line="307"><f a=""><c path="lime.math.Vector2"/></f></get_bottomRight>
		<set_bottomRight set="method" line="308"><f a="p">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></set_bottomRight>
		<get_left set="method" line="309"><f a=""><x path="Float"/></f></get_left>
		<set_left set="method" line="310"><f a="l">
	<x path="Float"/>
	<x path="Float"/>
</f></set_left>
		<get_right set="method" line="311"><f a=""><x path="Float"/></f></get_right>
		<set_right set="method" line="312"><f a="r">
	<x path="Float"/>
	<x path="Float"/>
</f></set_right>
		<get_size set="method" line="313"><f a=""><c path="lime.math.Vector2"/></f></get_size>
		<set_size set="method" line="314"><f a="p">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></set_size>
		<get_top set="method" line="315"><f a=""><x path="Float"/></f></get_top>
		<set_top set="method" line="316"><f a="t">
	<x path="Float"/>
	<x path="Float"/>
</f></set_top>
		<get_topLeft set="method" line="317"><f a=""><c path="lime.math.Vector2"/></f></get_topLeft>
		<set_topLeft set="method" line="318"><f a="p">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></set_topLeft>
		<new public="1" set="method" line="25"><f a="?x:?y:?width:?height" v="0:0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.math.Vector2" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/Vector2.hx">
		<distance public="1" set="method" line="39" static="1"><f a="pt1:pt2">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
	<x path="Float"/>
</f></distance>
		<interpolate public="1" set="method" line="55" static="1"><f a="pt1:pt2:f">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
	<x path="Float"/>
	<c path="lime.math.Vector2"/>
</f></interpolate>
		<polar public="1" set="method" line="87" static="1"><f a="len:angle">
	<x path="Float"/>
	<x path="Float"/>
	<c path="lime.math.Vector2"/>
</f></polar>
		<length public="1" get="accessor" set="null"><x path="Float"/></length>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<add public="1" set="method" line="25"><f a="v">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></add>
		<clone public="1" set="method" line="32"><f a=""><c path="lime.math.Vector2"/></f></clone>
		<equals public="1" set="method" line="48"><f a="toCompare">
	<c path="lime.math.Vector2"/>
	<x path="Bool"/>
</f></equals>
		<normalize public="1" set="method" line="62"><f a="thickness">
	<x path="Float"/>
	<x path="Void"/>
</f></normalize>
		<offset public="1" set="method" line="79"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></offset>
		<setTo public="1" get="inline" set="null" line="94"><f a="xa:ya">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<subtract public="1" set="method" line="101"><f a="v">
	<c path="lime.math.Vector2"/>
	<c path="lime.math.Vector2"/>
</f></subtract>
		<__toFlashPoint set="method" line="108"><f a=""><d/></f></__toFlashPoint>
		<get_length set="method" line="126"><f a=""><x path="Float"/></f></get_length>
		<new public="1" set="method" line="17"><f a="?x:?y" v="0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.math.Vector4" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/math/Vector4.hx">
		<X_AXIS public="1" get="accessor" set="null" static="1"><c path="lime.math.Vector4"/></X_AXIS>
		<Y_AXIS public="1" get="accessor" set="null" static="1"><c path="lime.math.Vector4"/></Y_AXIS>
		<Z_AXIS public="1" get="accessor" set="null" static="1"><c path="lime.math.Vector4"/></Z_AXIS>
		<angleBetween public="1" get="inline" set="null" line="36" static="1"><f a="a:b">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
	<x path="Float"/>
</f></angleBetween>
		<distance public="1" get="inline" set="null" line="80" static="1"><f a="pt1:pt2">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
	<x path="Float"/>
</f></distance>
		<get_X_AXIS public="1" get="inline" set="null" line="209" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_X_AXIS>
		<get_Y_AXIS public="1" get="inline" set="null" line="216" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_Y_AXIS>
		<get_Z_AXIS public="1" get="inline" set="null" line="223" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_Z_AXIS>
		<length public="1" get="accessor" set="null"><x path="Float"/></length>
		<lengthSquared public="1" get="accessor" set="null"><x path="Float"/></lengthSquared>
		<w public="1"><x path="Float"/></w>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<z public="1"><x path="Float"/></z>
		<add public="1" get="inline" set="null" line="29"><f a="a">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
</f></add>
		<clone public="1" get="inline" set="null" line="48"><f a=""><c path="lime.math.Vector4"/></f></clone>
		<copyFrom public="1" get="inline" set="null" line="55"><f a="sourceVector4">
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></copyFrom>
		<crossProduct public="1" get="inline" set="null" line="64"><f a="a">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
</f></crossProduct>
		<decrementBy public="1" get="inline" set="null" line="71"><f a="a">
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></decrementBy>
		<dotProduct public="1" get="inline" set="null" line="91"><f a="a">
	<c path="lime.math.Vector4"/>
	<x path="Float"/>
</f></dotProduct>
		<equals public="1" get="inline" set="null" line="98"><f a="toCompare:?allFour" v=":false">
	<c path="lime.math.Vector4"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></equals>
		<incrementBy public="1" get="inline" set="null" line="105"><f a="a">
	<c path="lime.math.Vector4"/>
	<x path="Void"/>
</f></incrementBy>
		<nearEquals public="1" get="inline" set="null" line="114"><f a="toCompare:tolerance:?allFour" v="::false">
	<c path="lime.math.Vector4"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></nearEquals>
		<negate public="1" get="inline" set="null" line="121"><f a=""><x path="Void"/></f></negate>
		<normalize public="1" get="inline" set="null" line="130"><f a=""><x path="Float"/></f></normalize>
		<project public="1" get="inline" set="null" line="147"><f a=""><x path="Void"/></f></project>
		<scaleBy public="1" get="inline" set="null" line="156"><f a="s">
	<x path="Float"/>
	<x path="Void"/>
</f></scaleBy>
		<setTo public="1" get="inline" set="null" line="165"><f a="xa:ya:za">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<subtract public="1" get="inline" set="null" line="174"><f a="a">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
</f></subtract>
		<toString public="1" get="inline" set="null" line="181"><f a=""><c path="String"/></f></toString>
		<get_length public="1" get="inline" set="null" line="195"><f a=""><x path="Float"/></f></get_length>
		<get_lengthSquared public="1" get="inline" set="null" line="202"><f a=""><x path="Float"/></f></get_lengthSquared>
		<new public="1" set="method" line="19"><f a="?x:?y:?z:?w" v="0.f:0.f:0.f:0.f">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.URLLoader" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/URLLoader.hx">
		<bytesLoaded public="1"><x path="Int"/></bytesLoaded>
		<bytesTotal public="1"><x path="Int"/></bytesTotal>
		<data public="1"><d/></data>
		<dataFormat public="1" set="accessor"><e path="lime.net.URLLoaderDataFormat"/></dataFormat>
		<onComplete public="1"><c path="lime.app.Event"><f a="">
	<c path="lime.net.URLLoader"/>
	<x path="Void"/>
</f></c></onComplete>
		<onHTTPStatus public="1"><c path="lime.app.Event"><f a=":">
	<c path="lime.net.URLLoader"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onHTTPStatus>
		<onIOError public="1"><c path="lime.app.Event"><f a=":">
	<c path="lime.net.URLLoader"/>
	<c path="String"/>
	<x path="Void"/>
</f></c></onIOError>
		<onOpen public="1"><c path="lime.app.Event"><f a="">
	<c path="lime.net.URLLoader"/>
	<x path="Void"/>
</f></c></onOpen>
		<onProgress public="1"><c path="lime.app.Event"><f a="::">
	<c path="lime.net.URLLoader"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onProgress>
		<onSecurityError public="1"><c path="lime.app.Event"><f a=":">
	<c path="lime.net.URLLoader"/>
	<c path="String"/>
	<x path="Void"/>
</f></c></onSecurityError>
		<__curl><x path="lime.net.curl.CURL"/></__curl>
		<__data><c path="String"/></__data>
		<close public="1" set="method" line="62"><f a=""><x path="Void"/></f></close>
		<getData set="dynamic" line="71"><f a=""><d/></f></getData>
		<load public="1" set="method" line="78"><f a="request">
	<c path="lime.net.URLRequest"/>
	<x path="Void"/>
</f></load>
		<registerEvents set="method" line="90"><f a="subject">
	<c path="js.html.EventTarget"/>
	<x path="Void"/>
</f></registerEvents>
		<requestUrl set="method" line="155"><f a="url:method:data:requestHeaders">
	<c path="String"/>
	<x path="lime.net.URLRequestMethod"/>
	<d/>
	<c path="Array"><c path="lime.net.URLRequestHeader"/></c>
	<x path="Void"/>
</f></requestUrl>
		<__onData set="method" line="399"><f a="_">
	<unknown/>
	<x path="Void"/>
</f></__onData>
		<__onProgress set="method" line="417"><f a="event">
	<t path="lime.net.XMLHttpRequestProgressEvent"/>
	<x path="Void"/>
</f></__onProgress>
		<set_dataFormat set="method" line="435"><f a="inputVal">
	<e path="lime.net.URLLoaderDataFormat"/>
	<e path="lime.net.URLLoaderDataFormat"/>
</f></set_dataFormat>
		<new public="1" set="method" line="42"><f a="?request" v="null">
	<c path="lime.net.URLRequest"/>
	<x path="Void"/>
</f></new>
	</class>
	<typedef path="lime.net.XMLHttpRequestProgressEvent" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/URLLoader.hx" module="lime.net.URLLoader"><d/></typedef>
	<enum path="lime.net.URLLoaderDataFormat" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/URLLoaderDataFormat.hx">
		<BINARY/>
		<TEXT/>
		<VARIABLES/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="lime.net.URLRequest" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/URLRequest.hx">
		<contentType public="1"><c path="String"/></contentType>
		<data public="1"><d/></data>
		<method public="1"><x path="lime.net.URLRequestMethod"/></method>
		<requestHeaders public="1"><c path="Array"><c path="lime.net.URLRequestHeader"/></c></requestHeaders>
		<url public="1"><c path="String"/></url>
		<userAgent public="1"><c path="String"/></userAgent>
		<formatRequestHeaders public="1" set="method" line="33"><f a=""><c path="Array"><c path="lime.net.URLRequestHeader"/></c></f></formatRequestHeaders>
		<new public="1" set="method" line="18"><f a="?inURL" v="null">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.URLRequestHeader" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/URLRequestHeader.hx">
		<name public="1"><c path="String"/></name>
		<value public="1"><c path="String"/></value>
		<new public="1" set="method" line="11"><f a="?name:?value" v="'':''">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.net.URLRequestMethod" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/URLRequestMethod.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net._URLRequestMethod.URLRequestMethod_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/URLRequestMethod.hx" private="1" module="lime.net.URLRequestMethod">
	<DELETE public="1" get="inline" set="null" line="6" static="1">
		<x path="lime.net.URLRequestMethod"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<GET public="1" get="inline" set="null" line="7" static="1">
		<x path="lime.net.URLRequestMethod"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GET>
	<HEAD public="1" get="inline" set="null" line="8" static="1">
		<x path="lime.net.URLRequestMethod"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEAD>
	<OPTIONS public="1" get="inline" set="null" line="9" static="1">
		<x path="lime.net.URLRequestMethod"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPTIONS>
	<POST public="1" get="inline" set="null" line="10" static="1">
		<x path="lime.net.URLRequestMethod"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POST>
	<PUT public="1" get="inline" set="null" line="11" static="1">
		<x path="lime.net.URLRequestMethod"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PUT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.net._URLRequestMethod.URLRequestMethod_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/URLRequestMethod.hx" private="1" module="lime.net.URLRequestMethod">
		<DELETE public="1" get="inline" set="null" line="6" static="1">
			<x path="lime.net.URLRequestMethod"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<GET public="1" get="inline" set="null" line="7" static="1">
			<x path="lime.net.URLRequestMethod"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GET>
		<HEAD public="1" get="inline" set="null" line="8" static="1">
			<x path="lime.net.URLRequestMethod"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEAD>
		<OPTIONS public="1" get="inline" set="null" line="9" static="1">
			<x path="lime.net.URLRequestMethod"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPTIONS>
		<POST public="1" get="inline" set="null" line="10" static="1">
			<x path="lime.net.URLRequestMethod"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POST>
		<PUT public="1" get="inline" set="null" line="11" static="1">
			<x path="lime.net.URLRequestMethod"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PUT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.net.URLVariables" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/URLVariables.hx">
		<decode public="1" set="method" line="18"><f a="inVars">
	<c path="String"/>
	<x path="Void"/>
</f></decode>
		<toString public="1" set="method" line="49"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="7"><f a="?inEncoded" v="null">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<abstract path="lime.net.curl.CURL" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURL.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<impl><class path="lime.net.curl._CURL.CURL_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURL.hx" private="1" module="lime.net.curl.CURL">
	<GLOBAL_SSL public="1" get="inline" set="null" line="10" static="1"><x path="Int"/></GLOBAL_SSL>
	<GLOBAL_WIN32 public="1" get="inline" set="null" line="11" static="1"><x path="Int"/></GLOBAL_WIN32>
	<GLOBAL_ALL public="1" get="inline" set="null" line="12" static="1"><x path="Int"/></GLOBAL_ALL>
	<GLOBAL_NOTHING public="1" get="inline" set="null" line="13" static="1"><x path="Int"/></GLOBAL_NOTHING>
	<GLOBAL_DEFAULT public="1" get="inline" set="null" line="14" static="1"><x path="Int"/></GLOBAL_DEFAULT>
	<GLOBAL_ACK_EINTR public="1" get="inline" set="null" line="15" static="1"><x path="Int"/></GLOBAL_ACK_EINTR>
	<getDate public="1" set="method" line="18" static="1"><f a="date:now">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getDate>
	<globalCleanup public="1" set="method" line="29" static="1"><f a=""><x path="Void"/></f></globalCleanup>
	<globalInit public="1" set="method" line="38" static="1"><f a="flags">
	<x path="Int"/>
	<x path="lime.net.curl.CURLCode"/>
</f></globalInit>
	<version public="1" set="method" line="49" static="1"><f a=""><c path="String"/></f></version>
	<versionInfo public="1" set="method" line="60" static="1"><f a="type">
	<x path="lime.net.curl.CURLVersion"/>
	<c path="String"/>
</f></versionInfo>
	<intGt get="inline" set="null" line="71" static="1">
		<f a="a:b">
			<x path="lime.net.curl.CURL"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A>B]]></e></m></meta>
	</intGt>
</class></impl>
	</abstract>
	<class path="lime.net.curl._CURL.CURL_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURL.hx" private="1" module="lime.net.curl.CURL">
		<GLOBAL_SSL public="1" get="inline" set="null" line="10" static="1"><x path="Int"/></GLOBAL_SSL>
		<GLOBAL_WIN32 public="1" get="inline" set="null" line="11" static="1"><x path="Int"/></GLOBAL_WIN32>
		<GLOBAL_ALL public="1" get="inline" set="null" line="12" static="1"><x path="Int"/></GLOBAL_ALL>
		<GLOBAL_NOTHING public="1" get="inline" set="null" line="13" static="1"><x path="Int"/></GLOBAL_NOTHING>
		<GLOBAL_DEFAULT public="1" get="inline" set="null" line="14" static="1"><x path="Int"/></GLOBAL_DEFAULT>
		<GLOBAL_ACK_EINTR public="1" get="inline" set="null" line="15" static="1"><x path="Int"/></GLOBAL_ACK_EINTR>
		<getDate public="1" set="method" line="18" static="1"><f a="date:now">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getDate>
		<globalCleanup public="1" set="method" line="29" static="1"><f a=""><x path="Void"/></f></globalCleanup>
		<globalInit public="1" set="method" line="38" static="1"><f a="flags">
	<x path="Int"/>
	<x path="lime.net.curl.CURLCode"/>
</f></globalInit>
		<version public="1" set="method" line="49" static="1"><f a=""><c path="String"/></f></version>
		<versionInfo public="1" set="method" line="60" static="1"><f a="type">
	<x path="lime.net.curl.CURLVersion"/>
	<c path="String"/>
</f></versionInfo>
		<intGt get="inline" set="null" line="71" static="1">
			<f a="a:b">
				<x path="lime.net.curl.CURL"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A>B]]></e></m></meta>
		</intGt>
	</class>
	<abstract path="lime.net.curl.CURLCode" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLCode.hx">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.curl._CURLCode.CURLCode_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLCode.hx" private="1" module="lime.net.curl.CURLCode">
	<OK public="1" get="inline" set="null" line="6" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OK>
	<UNSUPPORTED_PROTOCOL public="1" get="inline" set="null" line="7" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNSUPPORTED_PROTOCOL>
	<FAILED_INIT public="1" get="inline" set="null" line="8" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FAILED_INIT>
	<URL_MALFORMAT public="1" get="inline" set="null" line="9" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</URL_MALFORMAT>
	<NOT_BUILT_IN public="1" get="inline" set="null" line="10" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOT_BUILT_IN>
	<COULDNT_RESOLVE_PROXY public="1" get="inline" set="null" line="11" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COULDNT_RESOLVE_PROXY>
	<COULDNT_RESOLVE_HOST public="1" get="inline" set="null" line="12" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COULDNT_RESOLVE_HOST>
	<COULDNT_CONNECT public="1" get="inline" set="null" line="13" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COULDNT_CONNECT>
	<FTP_WEIRD_SERVER_REPLY public="1" get="inline" set="null" line="14" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_WEIRD_SERVER_REPLY>
	<REMOTE_ACCESS_DENIED public="1" get="inline" set="null" line="15" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REMOTE_ACCESS_DENIED>
	<FTP_ACCEPT_FAILED public="1" get="inline" set="null" line="16" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ACCEPT_FAILED>
	<FTP_WEIRD_PASS_REPLY public="1" get="inline" set="null" line="17" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_WEIRD_PASS_REPLY>
	<FTP_ACCEPT_TIMEOUT public="1" get="inline" set="null" line="18" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ACCEPT_TIMEOUT>
	<FTP_WEIRD_PASV_REPLY public="1" get="inline" set="null" line="19" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_WEIRD_PASV_REPLY>
	<FTP_WEIRD_227_FORMAT public="1" get="inline" set="null" line="20" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_WEIRD_227_FORMAT>
	<FTP_CANT_GET_HOST public="1" get="inline" set="null" line="21" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_CANT_GET_HOST>
	<FTP_COULDNT_SET_TYPE public="1" get="inline" set="null" line="23" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_COULDNT_SET_TYPE>
	<PARTIAL_FILE public="1" get="inline" set="null" line="24" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PARTIAL_FILE>
	<FTP_COULDNT_RETR_FILE public="1" get="inline" set="null" line="25" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_COULDNT_RETR_FILE>
	<QUOTE_ERROR public="1" get="inline" set="null" line="27" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUOTE_ERROR>
	<HTTP_RETURNED_ERROR public="1" get="inline" set="null" line="28" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_RETURNED_ERROR>
	<WRITE_ERROR public="1" get="inline" set="null" line="29" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITE_ERROR>
	<UPLOAD_FAILED public="1" get="inline" set="null" line="31" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UPLOAD_FAILED>
	<READ_ERROR public="1" get="inline" set="null" line="32" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</READ_ERROR>
	<OUT_OF_MEMORY public="1" get="inline" set="null" line="33" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT_OF_MEMORY>
	<OPERATION_TIMEDOUT public="1" get="inline" set="null" line="34" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPERATION_TIMEDOUT>
	<FTP_PORT_FAILED public="1" get="inline" set="null" line="36" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_PORT_FAILED>
	<FTP_COULDNT_USE_REST public="1" get="inline" set="null" line="37" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_COULDNT_USE_REST>
	<RANGE_ERROR public="1" get="inline" set="null" line="39" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RANGE_ERROR>
	<HTTP_POST_ERROR public="1" get="inline" set="null" line="40" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_POST_ERROR>
	<SSL_CONNECT_ERROR public="1" get="inline" set="null" line="41" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CONNECT_ERROR>
	<BAD_DOWNLOAD_RESUME public="1" get="inline" set="null" line="42" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BAD_DOWNLOAD_RESUME>
	<FILE_COULDNT_READ_FILE public="1" get="inline" set="null" line="43" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILE_COULDNT_READ_FILE>
	<LDAP_CANNOT_BIND public="1" get="inline" set="null" line="44" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LDAP_CANNOT_BIND>
	<LDAP_SEARCH_FAILED public="1" get="inline" set="null" line="45" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LDAP_SEARCH_FAILED>
	<FUNCTION_NOT_FOUND public="1" get="inline" set="null" line="47" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FUNCTION_NOT_FOUND>
	<ABORTED_BY_CALLBACK public="1" get="inline" set="null" line="48" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ABORTED_BY_CALLBACK>
	<BAD_FUNCTION_ARGUMENT public="1" get="inline" set="null" line="49" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BAD_FUNCTION_ARGUMENT>
	<INTERFACE_FAILED public="1" get="inline" set="null" line="51" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INTERFACE_FAILED>
	<TOO_MANY_REDIRECTS public="1" get="inline" set="null" line="53" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOO_MANY_REDIRECTS>
	<UNKNOWN_OPTION public="1" get="inline" set="null" line="54" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN_OPTION>
	<TELNET_OPTION_SYNTAX public="1" get="inline" set="null" line="55" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TELNET_OPTION_SYNTAX>
	<PEER_FAILED_VERIFICATION public="1" get="inline" set="null" line="57" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PEER_FAILED_VERIFICATION>
	<GOT_NOTHING public="1" get="inline" set="null" line="58" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GOT_NOTHING>
	<SSL_ENGINE_NOTFOUND public="1" get="inline" set="null" line="59" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENGINE_NOTFOUND>
	<SSL_ENGINE_SETFAILED public="1" get="inline" set="null" line="60" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENGINE_SETFAILED>
	<SEND_ERROR public="1" get="inline" set="null" line="61" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEND_ERROR>
	<RECV_ERROR public="1" get="inline" set="null" line="62" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RECV_ERROR>
	<SSL_CERTPROBLEM public="1" get="inline" set="null" line="64" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CERTPROBLEM>
	<SSL_CIPHER public="1" get="inline" set="null" line="65" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CIPHER>
	<SSL_CACERT public="1" get="inline" set="null" line="66" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CACERT>
	<BAD_CONTENT_ENCODING public="1" get="inline" set="null" line="67" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BAD_CONTENT_ENCODING>
	<LDAP_INVALID_URL public="1" get="inline" set="null" line="68" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LDAP_INVALID_URL>
	<FILESIZE_EXCEEDED public="1" get="inline" set="null" line="69" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILESIZE_EXCEEDED>
	<USE_SSL_FAILED public="1" get="inline" set="null" line="70" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USE_SSL_FAILED>
	<SEND_FAIL_REWIND public="1" get="inline" set="null" line="71" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEND_FAIL_REWIND>
	<SSL_ENGINE_INITFAILED public="1" get="inline" set="null" line="72" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENGINE_INITFAILED>
	<LOGIN_DENIED public="1" get="inline" set="null" line="73" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOGIN_DENIED>
	<TFTP_NOTFOUND public="1" get="inline" set="null" line="74" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_NOTFOUND>
	<TFTP_PERM public="1" get="inline" set="null" line="75" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_PERM>
	<REMOTE_DISK_FULL public="1" get="inline" set="null" line="76" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REMOTE_DISK_FULL>
	<TFTP_ILLEGAL public="1" get="inline" set="null" line="77" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_ILLEGAL>
	<TFTP_UNKNOWNID public="1" get="inline" set="null" line="78" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_UNKNOWNID>
	<REMOTE_FILE_EXISTS public="1" get="inline" set="null" line="79" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REMOTE_FILE_EXISTS>
	<TFTP_NOSUCHUSER public="1" get="inline" set="null" line="80" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_NOSUCHUSER>
	<CONV_FAILED public="1" get="inline" set="null" line="81" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_FAILED>
	<CONV_REQD public="1" get="inline" set="null" line="82" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_REQD>
	<SSL_CACERT_BADFILE public="1" get="inline" set="null" line="83" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CACERT_BADFILE>
	<REMOTE_FILE_NOT_FOUND public="1" get="inline" set="null" line="84" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REMOTE_FILE_NOT_FOUND>
	<SSH public="1" get="inline" set="null" line="85" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH>
	<SSL_SHUTDOWN_FAILED public="1" get="inline" set="null" line="86" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_SHUTDOWN_FAILED>
	<AGAIN public="1" get="inline" set="null" line="87" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AGAIN>
	<SSL_CRL_BADFILE public="1" get="inline" set="null" line="88" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CRL_BADFILE>
	<SSL_ISSUER_ERROR public="1" get="inline" set="null" line="89" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ISSUER_ERROR>
	<FTP_PRET_FAILED public="1" get="inline" set="null" line="90" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_PRET_FAILED>
	<RTSP_CSEQ_ERROR public="1" get="inline" set="null" line="91" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_CSEQ_ERROR>
	<RTSP_SESSION_ERROR public="1" get="inline" set="null" line="92" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SESSION_ERROR>
	<FTP_BAD_FILE_LIST public="1" get="inline" set="null" line="93" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_BAD_FILE_LIST>
	<CHUNK_FAILED public="1" get="inline" set="null" line="94" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHUNK_FAILED>
	<NO_CONNECTION_AVAILABLE public="1" get="inline" set="null" line="95" static="1">
		<x path="lime.net.curl.CURLCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NO_CONNECTION_AVAILABLE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.net.curl._CURLCode.CURLCode_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLCode.hx" private="1" module="lime.net.curl.CURLCode">
		<OK public="1" get="inline" set="null" line="6" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OK>
		<UNSUPPORTED_PROTOCOL public="1" get="inline" set="null" line="7" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNSUPPORTED_PROTOCOL>
		<FAILED_INIT public="1" get="inline" set="null" line="8" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FAILED_INIT>
		<URL_MALFORMAT public="1" get="inline" set="null" line="9" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</URL_MALFORMAT>
		<NOT_BUILT_IN public="1" get="inline" set="null" line="10" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOT_BUILT_IN>
		<COULDNT_RESOLVE_PROXY public="1" get="inline" set="null" line="11" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COULDNT_RESOLVE_PROXY>
		<COULDNT_RESOLVE_HOST public="1" get="inline" set="null" line="12" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COULDNT_RESOLVE_HOST>
		<COULDNT_CONNECT public="1" get="inline" set="null" line="13" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COULDNT_CONNECT>
		<FTP_WEIRD_SERVER_REPLY public="1" get="inline" set="null" line="14" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_WEIRD_SERVER_REPLY>
		<REMOTE_ACCESS_DENIED public="1" get="inline" set="null" line="15" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REMOTE_ACCESS_DENIED>
		<FTP_ACCEPT_FAILED public="1" get="inline" set="null" line="16" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ACCEPT_FAILED>
		<FTP_WEIRD_PASS_REPLY public="1" get="inline" set="null" line="17" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_WEIRD_PASS_REPLY>
		<FTP_ACCEPT_TIMEOUT public="1" get="inline" set="null" line="18" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ACCEPT_TIMEOUT>
		<FTP_WEIRD_PASV_REPLY public="1" get="inline" set="null" line="19" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_WEIRD_PASV_REPLY>
		<FTP_WEIRD_227_FORMAT public="1" get="inline" set="null" line="20" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_WEIRD_227_FORMAT>
		<FTP_CANT_GET_HOST public="1" get="inline" set="null" line="21" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_CANT_GET_HOST>
		<FTP_COULDNT_SET_TYPE public="1" get="inline" set="null" line="23" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_COULDNT_SET_TYPE>
		<PARTIAL_FILE public="1" get="inline" set="null" line="24" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PARTIAL_FILE>
		<FTP_COULDNT_RETR_FILE public="1" get="inline" set="null" line="25" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_COULDNT_RETR_FILE>
		<QUOTE_ERROR public="1" get="inline" set="null" line="27" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUOTE_ERROR>
		<HTTP_RETURNED_ERROR public="1" get="inline" set="null" line="28" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_RETURNED_ERROR>
		<WRITE_ERROR public="1" get="inline" set="null" line="29" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITE_ERROR>
		<UPLOAD_FAILED public="1" get="inline" set="null" line="31" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UPLOAD_FAILED>
		<READ_ERROR public="1" get="inline" set="null" line="32" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</READ_ERROR>
		<OUT_OF_MEMORY public="1" get="inline" set="null" line="33" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT_OF_MEMORY>
		<OPERATION_TIMEDOUT public="1" get="inline" set="null" line="34" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPERATION_TIMEDOUT>
		<FTP_PORT_FAILED public="1" get="inline" set="null" line="36" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_PORT_FAILED>
		<FTP_COULDNT_USE_REST public="1" get="inline" set="null" line="37" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_COULDNT_USE_REST>
		<RANGE_ERROR public="1" get="inline" set="null" line="39" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RANGE_ERROR>
		<HTTP_POST_ERROR public="1" get="inline" set="null" line="40" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_POST_ERROR>
		<SSL_CONNECT_ERROR public="1" get="inline" set="null" line="41" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CONNECT_ERROR>
		<BAD_DOWNLOAD_RESUME public="1" get="inline" set="null" line="42" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BAD_DOWNLOAD_RESUME>
		<FILE_COULDNT_READ_FILE public="1" get="inline" set="null" line="43" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILE_COULDNT_READ_FILE>
		<LDAP_CANNOT_BIND public="1" get="inline" set="null" line="44" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LDAP_CANNOT_BIND>
		<LDAP_SEARCH_FAILED public="1" get="inline" set="null" line="45" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LDAP_SEARCH_FAILED>
		<FUNCTION_NOT_FOUND public="1" get="inline" set="null" line="47" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FUNCTION_NOT_FOUND>
		<ABORTED_BY_CALLBACK public="1" get="inline" set="null" line="48" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ABORTED_BY_CALLBACK>
		<BAD_FUNCTION_ARGUMENT public="1" get="inline" set="null" line="49" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BAD_FUNCTION_ARGUMENT>
		<INTERFACE_FAILED public="1" get="inline" set="null" line="51" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INTERFACE_FAILED>
		<TOO_MANY_REDIRECTS public="1" get="inline" set="null" line="53" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOO_MANY_REDIRECTS>
		<UNKNOWN_OPTION public="1" get="inline" set="null" line="54" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN_OPTION>
		<TELNET_OPTION_SYNTAX public="1" get="inline" set="null" line="55" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TELNET_OPTION_SYNTAX>
		<PEER_FAILED_VERIFICATION public="1" get="inline" set="null" line="57" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PEER_FAILED_VERIFICATION>
		<GOT_NOTHING public="1" get="inline" set="null" line="58" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GOT_NOTHING>
		<SSL_ENGINE_NOTFOUND public="1" get="inline" set="null" line="59" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENGINE_NOTFOUND>
		<SSL_ENGINE_SETFAILED public="1" get="inline" set="null" line="60" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENGINE_SETFAILED>
		<SEND_ERROR public="1" get="inline" set="null" line="61" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEND_ERROR>
		<RECV_ERROR public="1" get="inline" set="null" line="62" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RECV_ERROR>
		<SSL_CERTPROBLEM public="1" get="inline" set="null" line="64" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CERTPROBLEM>
		<SSL_CIPHER public="1" get="inline" set="null" line="65" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CIPHER>
		<SSL_CACERT public="1" get="inline" set="null" line="66" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CACERT>
		<BAD_CONTENT_ENCODING public="1" get="inline" set="null" line="67" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BAD_CONTENT_ENCODING>
		<LDAP_INVALID_URL public="1" get="inline" set="null" line="68" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LDAP_INVALID_URL>
		<FILESIZE_EXCEEDED public="1" get="inline" set="null" line="69" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILESIZE_EXCEEDED>
		<USE_SSL_FAILED public="1" get="inline" set="null" line="70" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USE_SSL_FAILED>
		<SEND_FAIL_REWIND public="1" get="inline" set="null" line="71" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEND_FAIL_REWIND>
		<SSL_ENGINE_INITFAILED public="1" get="inline" set="null" line="72" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENGINE_INITFAILED>
		<LOGIN_DENIED public="1" get="inline" set="null" line="73" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOGIN_DENIED>
		<TFTP_NOTFOUND public="1" get="inline" set="null" line="74" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_NOTFOUND>
		<TFTP_PERM public="1" get="inline" set="null" line="75" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_PERM>
		<REMOTE_DISK_FULL public="1" get="inline" set="null" line="76" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REMOTE_DISK_FULL>
		<TFTP_ILLEGAL public="1" get="inline" set="null" line="77" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_ILLEGAL>
		<TFTP_UNKNOWNID public="1" get="inline" set="null" line="78" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_UNKNOWNID>
		<REMOTE_FILE_EXISTS public="1" get="inline" set="null" line="79" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REMOTE_FILE_EXISTS>
		<TFTP_NOSUCHUSER public="1" get="inline" set="null" line="80" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_NOSUCHUSER>
		<CONV_FAILED public="1" get="inline" set="null" line="81" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_FAILED>
		<CONV_REQD public="1" get="inline" set="null" line="82" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_REQD>
		<SSL_CACERT_BADFILE public="1" get="inline" set="null" line="83" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CACERT_BADFILE>
		<REMOTE_FILE_NOT_FOUND public="1" get="inline" set="null" line="84" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REMOTE_FILE_NOT_FOUND>
		<SSH public="1" get="inline" set="null" line="85" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH>
		<SSL_SHUTDOWN_FAILED public="1" get="inline" set="null" line="86" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_SHUTDOWN_FAILED>
		<AGAIN public="1" get="inline" set="null" line="87" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AGAIN>
		<SSL_CRL_BADFILE public="1" get="inline" set="null" line="88" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CRL_BADFILE>
		<SSL_ISSUER_ERROR public="1" get="inline" set="null" line="89" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ISSUER_ERROR>
		<FTP_PRET_FAILED public="1" get="inline" set="null" line="90" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_PRET_FAILED>
		<RTSP_CSEQ_ERROR public="1" get="inline" set="null" line="91" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_CSEQ_ERROR>
		<RTSP_SESSION_ERROR public="1" get="inline" set="null" line="92" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SESSION_ERROR>
		<FTP_BAD_FILE_LIST public="1" get="inline" set="null" line="93" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_BAD_FILE_LIST>
		<CHUNK_FAILED public="1" get="inline" set="null" line="94" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHUNK_FAILED>
		<NO_CONNECTION_AVAILABLE public="1" get="inline" set="null" line="95" static="1">
			<x path="lime.net.curl.CURLCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NO_CONNECTION_AVAILABLE>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.net.curl.CURLEasy" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLEasy.hx">
		<cleanup public="1" set="method" line="11" static="1"><f a="handle">
	<x path="lime.net.curl.CURL"/>
	<x path="Void"/>
</f></cleanup>
		<duphandle public="1" set="method" line="20" static="1"><f a="handle">
	<x path="lime.net.curl.CURL"/>
	<x path="lime.net.curl.CURL"/>
</f></duphandle>
		<escape public="1" set="method" line="31" static="1"><f a="handle:url:length">
	<x path="lime.net.curl.CURL"/>
	<c path="String"/>
	<x path="Int"/>
	<c path="String"/>
</f></escape>
		<getinfo public="1" set="method" line="42" static="1"><f a="handle:info">
	<x path="lime.net.curl.CURL"/>
	<x path="lime.net.curl.CURLInfo"/>
	<d/>
</f></getinfo>
		<init public="1" set="method" line="53" static="1"><f a=""><x path="lime.net.curl.CURL"/></f></init>
		<pause public="1" set="method" line="64" static="1"><f a="handle:bitMask">
	<x path="lime.net.curl.CURL"/>
	<x path="Int"/>
	<x path="lime.net.curl.CURLCode"/>
</f></pause>
		<perform public="1" set="method" line="75" static="1"><f a="handle">
	<x path="lime.net.curl.CURL"/>
	<x path="lime.net.curl.CURLCode"/>
</f></perform>
		<reset public="1" set="method" line="97" static="1"><f a="handle">
	<x path="lime.net.curl.CURL"/>
	<x path="lime.net.curl.CURLCode"/>
</f></reset>
		<setopt public="1" set="method" line="119" static="1"><f a="handle:option:parameter">
	<x path="lime.net.curl.CURL"/>
	<x path="lime.net.curl.CURLOption"/>
	<d/>
	<x path="lime.net.curl.CURLCode"/>
</f></setopt>
		<strerror public="1" set="method" line="130" static="1"><f a="code">
	<x path="lime.net.curl.CURLCode"/>
	<c path="String"/>
</f></strerror>
		<unescape public="1" set="method" line="141" static="1"><f a="handle:url:inLength:outLength">
	<x path="lime.net.curl.CURL"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></unescape>
	</class>
	<abstract path="lime.net.curl.CURLInfo" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLInfo.hx">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.curl._CURLInfo.CURLInfo_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLInfo.hx" private="1" module="lime.net.curl.CURLInfo">
	<NONE public="1" get="inline" set="null" line="6" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<EFFECTIVE_URL public="1" get="inline" set="null" line="7" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EFFECTIVE_URL>
	<RESPONSE_CODE public="1" get="inline" set="null" line="8" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESPONSE_CODE>
	<TOTAL_TIME public="1" get="inline" set="null" line="9" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOTAL_TIME>
	<NAMELOOKUP_TIME public="1" get="inline" set="null" line="10" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NAMELOOKUP_TIME>
	<CONNECT_TIME public="1" get="inline" set="null" line="11" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECT_TIME>
	<PRETRANSFER_TIME public="1" get="inline" set="null" line="12" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRETRANSFER_TIME>
	<SIZE_UPLOAD public="1" get="inline" set="null" line="13" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SIZE_UPLOAD>
	<SIZE_DOWNLOAD public="1" get="inline" set="null" line="14" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SIZE_DOWNLOAD>
	<SPEED_DOWNLOAD public="1" get="inline" set="null" line="15" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPEED_DOWNLOAD>
	<SPEED_UPLOAD public="1" get="inline" set="null" line="16" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPEED_UPLOAD>
	<HEADER_SIZE public="1" get="inline" set="null" line="17" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEADER_SIZE>
	<REQUEST_SIZE public="1" get="inline" set="null" line="18" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REQUEST_SIZE>
	<SSL_VERIFYRESULT public="1" get="inline" set="null" line="19" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_VERIFYRESULT>
	<FILETIME public="1" get="inline" set="null" line="20" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILETIME>
	<CONTENT_LENGTH_DOWNLOAD public="1" get="inline" set="null" line="21" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONTENT_LENGTH_DOWNLOAD>
	<CONTENT_LENGTH_UPLOAD public="1" get="inline" set="null" line="22" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONTENT_LENGTH_UPLOAD>
	<STARTTRANSFER_TIME public="1" get="inline" set="null" line="23" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STARTTRANSFER_TIME>
	<CONTENT_TYPE public="1" get="inline" set="null" line="24" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONTENT_TYPE>
	<REDIRECT_TIME public="1" get="inline" set="null" line="25" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REDIRECT_TIME>
	<REDIRECT_COUNT public="1" get="inline" set="null" line="26" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REDIRECT_COUNT>
	<PRIVATE public="1" get="inline" set="null" line="27" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIVATE>
	<HTTP_CONNECTCODE public="1" get="inline" set="null" line="28" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_CONNECTCODE>
	<HTTPAUTH_AVAIL public="1" get="inline" set="null" line="29" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPAUTH_AVAIL>
	<PROXYAUTH_AVAIL public="1" get="inline" set="null" line="30" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYAUTH_AVAIL>
	<OS_ERRNO public="1" get="inline" set="null" line="31" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OS_ERRNO>
	<NUM_CONNECTS public="1" get="inline" set="null" line="32" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_CONNECTS>
	<SSL_ENGINES public="1" get="inline" set="null" line="33" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_ENGINES>
	<COOKIELIST public="1" get="inline" set="null" line="34" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIELIST>
	<LASTSOCKET public="1" get="inline" set="null" line="35" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LASTSOCKET>
	<FTP_ENTRY_PATH public="1" get="inline" set="null" line="36" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ENTRY_PATH>
	<REDIRECT_URL public="1" get="inline" set="null" line="37" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REDIRECT_URL>
	<PRIMARY_IP public="1" get="inline" set="null" line="38" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIMARY_IP>
	<APPCONNECT_TIME public="1" get="inline" set="null" line="39" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPCONNECT_TIME>
	<CERTINFO public="1" get="inline" set="null" line="40" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CERTINFO>
	<CONDITION_UNMET public="1" get="inline" set="null" line="41" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONDITION_UNMET>
	<RTSP_SESSION_ID public="1" get="inline" set="null" line="42" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SESSION_ID>
	<RTSP_CLIENT_CSEQ public="1" get="inline" set="null" line="43" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_CLIENT_CSEQ>
	<RTSP_SERVER_CSEQ public="1" get="inline" set="null" line="44" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SERVER_CSEQ>
	<RTSP_CSEQ_RECV public="1" get="inline" set="null" line="45" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_CSEQ_RECV>
	<PRIMARY_PORT public="1" get="inline" set="null" line="46" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIMARY_PORT>
	<LOCAL_IP public="1" get="inline" set="null" line="47" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOCAL_IP>
	<LOCAL_PORT public="1" get="inline" set="null" line="48" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOCAL_PORT>
	<TLS_SESSION public="1" get="inline" set="null" line="49" static="1">
		<x path="lime.net.curl.CURLInfo"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TLS_SESSION>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.net.curl._CURLInfo.CURLInfo_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLInfo.hx" private="1" module="lime.net.curl.CURLInfo">
		<NONE public="1" get="inline" set="null" line="6" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<EFFECTIVE_URL public="1" get="inline" set="null" line="7" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EFFECTIVE_URL>
		<RESPONSE_CODE public="1" get="inline" set="null" line="8" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESPONSE_CODE>
		<TOTAL_TIME public="1" get="inline" set="null" line="9" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOTAL_TIME>
		<NAMELOOKUP_TIME public="1" get="inline" set="null" line="10" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NAMELOOKUP_TIME>
		<CONNECT_TIME public="1" get="inline" set="null" line="11" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECT_TIME>
		<PRETRANSFER_TIME public="1" get="inline" set="null" line="12" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRETRANSFER_TIME>
		<SIZE_UPLOAD public="1" get="inline" set="null" line="13" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SIZE_UPLOAD>
		<SIZE_DOWNLOAD public="1" get="inline" set="null" line="14" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SIZE_DOWNLOAD>
		<SPEED_DOWNLOAD public="1" get="inline" set="null" line="15" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPEED_DOWNLOAD>
		<SPEED_UPLOAD public="1" get="inline" set="null" line="16" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPEED_UPLOAD>
		<HEADER_SIZE public="1" get="inline" set="null" line="17" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEADER_SIZE>
		<REQUEST_SIZE public="1" get="inline" set="null" line="18" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REQUEST_SIZE>
		<SSL_VERIFYRESULT public="1" get="inline" set="null" line="19" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_VERIFYRESULT>
		<FILETIME public="1" get="inline" set="null" line="20" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILETIME>
		<CONTENT_LENGTH_DOWNLOAD public="1" get="inline" set="null" line="21" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONTENT_LENGTH_DOWNLOAD>
		<CONTENT_LENGTH_UPLOAD public="1" get="inline" set="null" line="22" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONTENT_LENGTH_UPLOAD>
		<STARTTRANSFER_TIME public="1" get="inline" set="null" line="23" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STARTTRANSFER_TIME>
		<CONTENT_TYPE public="1" get="inline" set="null" line="24" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONTENT_TYPE>
		<REDIRECT_TIME public="1" get="inline" set="null" line="25" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REDIRECT_TIME>
		<REDIRECT_COUNT public="1" get="inline" set="null" line="26" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REDIRECT_COUNT>
		<PRIVATE public="1" get="inline" set="null" line="27" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIVATE>
		<HTTP_CONNECTCODE public="1" get="inline" set="null" line="28" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_CONNECTCODE>
		<HTTPAUTH_AVAIL public="1" get="inline" set="null" line="29" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPAUTH_AVAIL>
		<PROXYAUTH_AVAIL public="1" get="inline" set="null" line="30" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYAUTH_AVAIL>
		<OS_ERRNO public="1" get="inline" set="null" line="31" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OS_ERRNO>
		<NUM_CONNECTS public="1" get="inline" set="null" line="32" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_CONNECTS>
		<SSL_ENGINES public="1" get="inline" set="null" line="33" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_ENGINES>
		<COOKIELIST public="1" get="inline" set="null" line="34" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIELIST>
		<LASTSOCKET public="1" get="inline" set="null" line="35" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LASTSOCKET>
		<FTP_ENTRY_PATH public="1" get="inline" set="null" line="36" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ENTRY_PATH>
		<REDIRECT_URL public="1" get="inline" set="null" line="37" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REDIRECT_URL>
		<PRIMARY_IP public="1" get="inline" set="null" line="38" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIMARY_IP>
		<APPCONNECT_TIME public="1" get="inline" set="null" line="39" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPCONNECT_TIME>
		<CERTINFO public="1" get="inline" set="null" line="40" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CERTINFO>
		<CONDITION_UNMET public="1" get="inline" set="null" line="41" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONDITION_UNMET>
		<RTSP_SESSION_ID public="1" get="inline" set="null" line="42" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SESSION_ID>
		<RTSP_CLIENT_CSEQ public="1" get="inline" set="null" line="43" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_CLIENT_CSEQ>
		<RTSP_SERVER_CSEQ public="1" get="inline" set="null" line="44" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SERVER_CSEQ>
		<RTSP_CSEQ_RECV public="1" get="inline" set="null" line="45" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_CSEQ_RECV>
		<PRIMARY_PORT public="1" get="inline" set="null" line="46" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIMARY_PORT>
		<LOCAL_IP public="1" get="inline" set="null" line="47" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOCAL_IP>
		<LOCAL_PORT public="1" get="inline" set="null" line="48" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOCAL_PORT>
		<TLS_SESSION public="1" get="inline" set="null" line="49" static="1">
			<x path="lime.net.curl.CURLInfo"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TLS_SESSION>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.net.curl.CURLOption" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLOption.hx">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.curl._CURLOption.CURLOption_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLOption.hx" private="1" module="lime.net.curl.CURLOption">
	<URL public="1" get="inline" set="null" line="8" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</URL>
	<PORT public="1" get="inline" set="null" line="9" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PORT>
	<PROXY public="1" get="inline" set="null" line="10" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY>
	<USERPWD public="1" get="inline" set="null" line="11" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USERPWD>
	<PROXYUSERPWD public="1" get="inline" set="null" line="12" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYUSERPWD>
	<RANGE public="1" get="inline" set="null" line="13" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RANGE>
	<ERRORBUFFER public="1" get="inline" set="null" line="16" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ERRORBUFFER>
	<WRITEFUNCTION public="1" get="inline" set="null" line="17" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITEFUNCTION>
	<READFUNCTION public="1" get="inline" set="null" line="18" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</READFUNCTION>
	<TIMEOUT public="1" get="inline" set="null" line="19" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIMEOUT>
	<INFILESIZE public="1" get="inline" set="null" line="20" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INFILESIZE>
	<POSTFIELDS public="1" get="inline" set="null" line="21" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTFIELDS>
	<REFERER public="1" get="inline" set="null" line="22" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REFERER>
	<FTPPORT public="1" get="inline" set="null" line="23" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTPPORT>
	<USERAGENT public="1" get="inline" set="null" line="24" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USERAGENT>
	<LOW_SPEED_LIMIT public="1" get="inline" set="null" line="25" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOW_SPEED_LIMIT>
	<LOW_SPEED_TIME public="1" get="inline" set="null" line="26" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOW_SPEED_TIME>
	<RESUME_FROM public="1" get="inline" set="null" line="27" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESUME_FROM>
	<COOKIE public="1" get="inline" set="null" line="28" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIE>
	<HTTPHEADER public="1" get="inline" set="null" line="29" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPHEADER>
	<RTSPHEADER public="1" get="inline" set="null" line="30" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSPHEADER>
	<HTTPPOST public="1" get="inline" set="null" line="31" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPPOST>
	<SSLCERT public="1" get="inline" set="null" line="32" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLCERT>
	<KEYPASSWD public="1" get="inline" set="null" line="33" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KEYPASSWD>
	<CRLF public="1" get="inline" set="null" line="34" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRLF>
	<QUOTE public="1" get="inline" set="null" line="35" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUOTE>
	<WRITEHEADER public="1" get="inline" set="null" line="36" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITEHEADER>
	<HEADERDATA public="1" get="inline" set="null" line="37" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEADERDATA>
	<COOKIEFILE public="1" get="inline" set="null" line="38" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIEFILE>
	<SSLVERSION public="1" get="inline" set="null" line="39" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLVERSION>
	<TIMECONDITION public="1" get="inline" set="null" line="40" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIMECONDITION>
	<TIMEVALUE public="1" get="inline" set="null" line="41" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIMEVALUE>
	<CUSTOMREQUEST public="1" get="inline" set="null" line="42" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUSTOMREQUEST>
	<STDERR public="1" get="inline" set="null" line="43" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STDERR>
	<POSTQUOTE public="1" get="inline" set="null" line="44" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTQUOTE>
	<WRITEINFO public="1" get="inline" set="null" line="45" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WRITEINFO>
	<VERBOSE public="1" get="inline" set="null" line="46" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERBOSE>
	<HEADER public="1" get="inline" set="null" line="47" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEADER>
	<NOPROGRESS public="1" get="inline" set="null" line="48" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOPROGRESS>
	<NOBODY public="1" get="inline" set="null" line="49" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOBODY>
	<FAILONERROR public="1" get="inline" set="null" line="50" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FAILONERROR>
	<UPLOAD public="1" get="inline" set="null" line="51" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UPLOAD>
	<POST public="1" get="inline" set="null" line="52" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POST>
	<DIRLISTONLY public="1" get="inline" set="null" line="53" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DIRLISTONLY>
	<APPEND public="1" get="inline" set="null" line="54" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPEND>
	<NETRC public="1" get="inline" set="null" line="55" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NETRC>
	<FOLLOWLOCATION public="1" get="inline" set="null" line="56" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FOLLOWLOCATION>
	<TRANSFERTEXT public="1" get="inline" set="null" line="57" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRANSFERTEXT>
	<PUT public="1" get="inline" set="null" line="58" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PUT>
	<PROGRESSFUNCTION public="1" get="inline" set="null" line="59" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROGRESSFUNCTION>
	<PROGRESSDATA public="1" get="inline" set="null" line="60" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROGRESSDATA>
	<XFERINFODATA public="1" get="inline" set="null" line="61" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</XFERINFODATA>
	<AUTOREFERER public="1" get="inline" set="null" line="62" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUTOREFERER>
	<PROXYPORT public="1" get="inline" set="null" line="63" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYPORT>
	<POSTFIELDSIZE public="1" get="inline" set="null" line="64" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTFIELDSIZE>
	<HTTPPROXYTUNNEL public="1" get="inline" set="null" line="65" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPPROXYTUNNEL>
	<INTERFACE public="1" get="inline" set="null" line="66" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INTERFACE>
	<KRBLEVEL public="1" get="inline" set="null" line="67" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KRBLEVEL>
	<SSL_VERIFYPEER public="1" get="inline" set="null" line="68" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_VERIFYPEER>
	<CAINFO public="1" get="inline" set="null" line="69" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAINFO>
	<MAXREDIRS public="1" get="inline" set="null" line="70" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAXREDIRS>
	<FILETIME public="1" get="inline" set="null" line="71" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FILETIME>
	<TELNETOPTIONS public="1" get="inline" set="null" line="72" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TELNETOPTIONS>
	<MAXCONNECTS public="1" get="inline" set="null" line="73" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAXCONNECTS>
	<CLOSEPOLICY public="1" get="inline" set="null" line="74" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLOSEPOLICY>
	<FRESH_CONNECT public="1" get="inline" set="null" line="75" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRESH_CONNECT>
	<FORBID_REUSE public="1" get="inline" set="null" line="76" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FORBID_REUSE>
	<RANDOM_FILE public="1" get="inline" set="null" line="77" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RANDOM_FILE>
	<EGDSOCKET public="1" get="inline" set="null" line="78" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EGDSOCKET>
	<CONNECTTIMEOUT public="1" get="inline" set="null" line="79" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECTTIMEOUT>
	<HEADERFUNCTION public="1" get="inline" set="null" line="80" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEADERFUNCTION>
	<HTTPGET public="1" get="inline" set="null" line="81" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPGET>
	<SSL_VERIFYHOST public="1" get="inline" set="null" line="82" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_VERIFYHOST>
	<COOKIEJAR public="1" get="inline" set="null" line="83" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIEJAR>
	<SSL_CIPHER_LIST public="1" get="inline" set="null" line="84" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CIPHER_LIST>
	<HTTP_VERSION public="1" get="inline" set="null" line="85" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_VERSION>
	<FTP_USE_EPSV public="1" get="inline" set="null" line="86" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_USE_EPSV>
	<SSLCERTTYPE public="1" get="inline" set="null" line="87" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLCERTTYPE>
	<SSLKEY public="1" get="inline" set="null" line="88" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLKEY>
	<SSLKEYTYPE public="1" get="inline" set="null" line="89" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLKEYTYPE>
	<SSLENGINE public="1" get="inline" set="null" line="90" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLENGINE>
	<SSLENGINE_DEFAULT public="1" get="inline" set="null" line="91" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSLENGINE_DEFAULT>
	<DNS_USE_GLOBAL_CACHE public="1" get="inline" set="null" line="92" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_USE_GLOBAL_CACHE>
	<DNS_CACHE_TIMEOUT public="1" get="inline" set="null" line="93" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_CACHE_TIMEOUT>
	<PREQUOTE public="1" get="inline" set="null" line="94" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PREQUOTE>
	<DEBUGFUNCTION public="1" get="inline" set="null" line="95" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEBUGFUNCTION>
	<DEBUGDATA public="1" get="inline" set="null" line="96" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEBUGDATA>
	<COOKIESESSION public="1" get="inline" set="null" line="97" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIESESSION>
	<CAPATH public="1" get="inline" set="null" line="98" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPATH>
	<BUFFERSIZE public="1" get="inline" set="null" line="99" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUFFERSIZE>
	<NOSIGNAL public="1" get="inline" set="null" line="100" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOSIGNAL>
	<SHARE public="1" get="inline" set="null" line="101" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHARE>
	<PROXYTYPE public="1" get="inline" set="null" line="102" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYTYPE>
	<ACCEPT_ENCODING public="1" get="inline" set="null" line="103" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ACCEPT_ENCODING>
	<PRIVATE public="1" get="inline" set="null" line="104" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIVATE>
	<HTTP200ALIASES public="1" get="inline" set="null" line="105" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP200ALIASES>
	<UNRESTRICTED_AUTH public="1" get="inline" set="null" line="106" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNRESTRICTED_AUTH>
	<FTP_USE_EPRT public="1" get="inline" set="null" line="107" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_USE_EPRT>
	<HTTPAUTH public="1" get="inline" set="null" line="108" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTPAUTH>
	<SSL_CTX_FUNCTION public="1" get="inline" set="null" line="109" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CTX_FUNCTION>
	<SSL_CTX_DATA public="1" get="inline" set="null" line="110" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_CTX_DATA>
	<FTP_CREATE_MISSING_DIRS public="1" get="inline" set="null" line="111" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_CREATE_MISSING_DIRS>
	<PROXYAUTH public="1" get="inline" set="null" line="112" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYAUTH>
	<FTP_RESPONSE_TIMEOUT public="1" get="inline" set="null" line="113" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_RESPONSE_TIMEOUT>
	<SERVER_RESPONSE_TIMEOUT public="1" get="inline" set="null" line="114" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SERVER_RESPONSE_TIMEOUT>
	<IPRESOLVE public="1" get="inline" set="null" line="115" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IPRESOLVE>
	<MAXFILESIZE public="1" get="inline" set="null" line="116" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAXFILESIZE>
	<INFILESIZE_LARGE public="1" get="inline" set="null" line="117" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INFILESIZE_LARGE>
	<RESUME_FROM_LARGE public="1" get="inline" set="null" line="118" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESUME_FROM_LARGE>
	<MAXFILESIZE_LARGE public="1" get="inline" set="null" line="119" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAXFILESIZE_LARGE>
	<NETRC_FILE public="1" get="inline" set="null" line="120" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NETRC_FILE>
	<USE_SSL public="1" get="inline" set="null" line="121" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USE_SSL>
	<POSTFIELDSIZE_LARGE public="1" get="inline" set="null" line="122" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTFIELDSIZE_LARGE>
	<TCP_NODELAY public="1" get="inline" set="null" line="123" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TCP_NODELAY>
	<FTPSSLAUTH public="1" get="inline" set="null" line="124" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTPSSLAUTH>
	<IOCTLFUNCTION public="1" get="inline" set="null" line="125" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IOCTLFUNCTION>
	<IOCTLDATA public="1" get="inline" set="null" line="126" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IOCTLDATA>
	<FTP_ACCOUNT public="1" get="inline" set="null" line="127" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ACCOUNT>
	<COOKIELIST public="1" get="inline" set="null" line="128" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COOKIELIST>
	<IGNORE_CONTENT_LENGTH public="1" get="inline" set="null" line="129" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IGNORE_CONTENT_LENGTH>
	<FTP_SKIP_PASV_IP public="1" get="inline" set="null" line="130" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_SKIP_PASV_IP>
	<FTP_FILEMETHOD public="1" get="inline" set="null" line="131" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_FILEMETHOD>
	<LOCALPORT public="1" get="inline" set="null" line="132" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOCALPORT>
	<LOCALPORTRANGE public="1" get="inline" set="null" line="133" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOCALPORTRANGE>
	<CONNECT_ONLY public="1" get="inline" set="null" line="134" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECT_ONLY>
	<CONV_FROM_NETWORK_FUNCTION public="1" get="inline" set="null" line="135" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_FROM_NETWORK_FUNCTION>
	<CONV_TO_NETWORK_FUNCTION public="1" get="inline" set="null" line="136" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_TO_NETWORK_FUNCTION>
	<CONV_FROM_UTF8_FUNCTION public="1" get="inline" set="null" line="137" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONV_FROM_UTF8_FUNCTION>
	<MAX_SEND_SPEED_LARGE public="1" get="inline" set="null" line="138" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_SEND_SPEED_LARGE>
	<MAX_RECV_SPEED_LARGE public="1" get="inline" set="null" line="139" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAX_RECV_SPEED_LARGE>
	<FTP_ALTERNATIVE_TO_USER public="1" get="inline" set="null" line="140" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_ALTERNATIVE_TO_USER>
	<SOCKOPTFUNCTION public="1" get="inline" set="null" line="141" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOCKOPTFUNCTION>
	<SOCKOPTDATA public="1" get="inline" set="null" line="142" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOCKOPTDATA>
	<SSL_SESSIONID_CACHE public="1" get="inline" set="null" line="143" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_SESSIONID_CACHE>
	<SSH_AUTH_TYPES public="1" get="inline" set="null" line="144" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_AUTH_TYPES>
	<SSH_PUBLIC_KEYFILE public="1" get="inline" set="null" line="145" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_PUBLIC_KEYFILE>
	<SSH_PRIVATE_KEYFILE public="1" get="inline" set="null" line="146" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_PRIVATE_KEYFILE>
	<FTP_SSL_CCC public="1" get="inline" set="null" line="147" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_SSL_CCC>
	<TIMEOUT_MS public="1" get="inline" set="null" line="148" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TIMEOUT_MS>
	<CONNECTTIMEOUT_MS public="1" get="inline" set="null" line="149" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CONNECTTIMEOUT_MS>
	<HTTP_TRANSFER_DECODING public="1" get="inline" set="null" line="150" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_TRANSFER_DECODING>
	<HTTP_CONTENT_DECODING public="1" get="inline" set="null" line="151" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTTP_CONTENT_DECODING>
	<NEW_FILE_PERMS public="1" get="inline" set="null" line="152" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEW_FILE_PERMS>
	<NEW_DIRECTORY_PERMS public="1" get="inline" set="null" line="153" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NEW_DIRECTORY_PERMS>
	<POSTREDIR public="1" get="inline" set="null" line="154" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POSTREDIR>
	<SSH_HOST_PUBLIC_KEY_MD5 public="1" get="inline" set="null" line="155" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_HOST_PUBLIC_KEY_MD5>
	<OPENSOCKETFUNCTION public="1" get="inline" set="null" line="156" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPENSOCKETFUNCTION>
	<OPENSOCKETDATA public="1" get="inline" set="null" line="157" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPENSOCKETDATA>
	<COPYPOSTFIELDS public="1" get="inline" set="null" line="158" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPYPOSTFIELDS>
	<PROXY_TRANSFER_MODE public="1" get="inline" set="null" line="159" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXY_TRANSFER_MODE>
	<SEEKFUNCTION public="1" get="inline" set="null" line="160" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEEKFUNCTION>
	<SEEKDATA public="1" get="inline" set="null" line="161" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEEKDATA>
	<CRLFILE public="1" get="inline" set="null" line="162" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRLFILE>
	<ISSUERCERT public="1" get="inline" set="null" line="163" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ISSUERCERT>
	<ADDRESS_SCOPE public="1" get="inline" set="null" line="164" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ADDRESS_SCOPE>
	<CERTINFO public="1" get="inline" set="null" line="165" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CERTINFO>
	<USERNAME public="1" get="inline" set="null" line="166" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USERNAME>
	<PASSWORD public="1" get="inline" set="null" line="167" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PASSWORD>
	<PROXYUSERNAME public="1" get="inline" set="null" line="168" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYUSERNAME>
	<PROXYPASSWORD public="1" get="inline" set="null" line="169" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROXYPASSWORD>
	<NOPROXY public="1" get="inline" set="null" line="170" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOPROXY>
	<TFTP_BLKSIZE public="1" get="inline" set="null" line="171" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TFTP_BLKSIZE>
	<SOCKS5_GSSAPI_SERVICE public="1" get="inline" set="null" line="172" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOCKS5_GSSAPI_SERVICE>
	<SOCKS5_GSSAPI_NEC public="1" get="inline" set="null" line="173" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOCKS5_GSSAPI_NEC>
	<PROTOCOLS public="1" get="inline" set="null" line="174" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROTOCOLS>
	<REDIR_PROTOCOLS public="1" get="inline" set="null" line="175" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</REDIR_PROTOCOLS>
	<SSH_KNOWNHOSTS public="1" get="inline" set="null" line="176" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_KNOWNHOSTS>
	<SSH_KEYFUNCTION public="1" get="inline" set="null" line="177" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_KEYFUNCTION>
	<SSH_KEYDATA public="1" get="inline" set="null" line="178" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSH_KEYDATA>
	<MAIL_FROM public="1" get="inline" set="null" line="179" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL_FROM>
	<MAIL_RCPT public="1" get="inline" set="null" line="180" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL_RCPT>
	<FTP_USE_PRET public="1" get="inline" set="null" line="181" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FTP_USE_PRET>
	<RTSP_REQUEST public="1" get="inline" set="null" line="182" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_REQUEST>
	<RTSP_SESSION_ID public="1" get="inline" set="null" line="183" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SESSION_ID>
	<RTSP_STREAM_URI public="1" get="inline" set="null" line="184" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_STREAM_URI>
	<RTSP_TRANSPORT public="1" get="inline" set="null" line="185" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_TRANSPORT>
	<RTSP_CLIENT_CSEQ public="1" get="inline" set="null" line="186" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_CLIENT_CSEQ>
	<RTSP_SERVER_CSEQ public="1" get="inline" set="null" line="187" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RTSP_SERVER_CSEQ>
	<INTERLEAVEDATA public="1" get="inline" set="null" line="188" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INTERLEAVEDATA>
	<INTERLEAVEFUNCTION public="1" get="inline" set="null" line="189" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INTERLEAVEFUNCTION>
	<WILDCARDMATCH public="1" get="inline" set="null" line="190" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WILDCARDMATCH>
	<CHUNK_BGN_FUNCTION public="1" get="inline" set="null" line="191" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHUNK_BGN_FUNCTION>
	<CHUNK_END_FUNCTION public="1" get="inline" set="null" line="192" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHUNK_END_FUNCTION>
	<FNMATCH_FUNCTION public="1" get="inline" set="null" line="193" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FNMATCH_FUNCTION>
	<CHUNK_DATA public="1" get="inline" set="null" line="194" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CHUNK_DATA>
	<FNMATCH_DATA public="1" get="inline" set="null" line="195" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FNMATCH_DATA>
	<RESOLVE public="1" get="inline" set="null" line="196" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RESOLVE>
	<TLSAUTH_USERNAME public="1" get="inline" set="null" line="197" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TLSAUTH_USERNAME>
	<TLSAUTH_PASSWORD public="1" get="inline" set="null" line="198" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TLSAUTH_PASSWORD>
	<TLSAUTH_TYPE public="1" get="inline" set="null" line="199" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TLSAUTH_TYPE>
	<TRANSFER_ENCODING public="1" get="inline" set="null" line="200" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRANSFER_ENCODING>
	<CLOSESOCKETFUNCTION public="1" get="inline" set="null" line="201" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLOSESOCKETFUNCTION>
	<CLOSESOCKETDATA public="1" get="inline" set="null" line="202" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLOSESOCKETDATA>
	<GSSAPI_DELEGATION public="1" get="inline" set="null" line="203" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GSSAPI_DELEGATION>
	<DNS_SERVERS public="1" get="inline" set="null" line="204" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_SERVERS>
	<ACCEPTTIMEOUT_MS public="1" get="inline" set="null" line="205" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ACCEPTTIMEOUT_MS>
	<TCP_KEEPALIVE public="1" get="inline" set="null" line="206" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TCP_KEEPALIVE>
	<TCP_KEEPIDLE public="1" get="inline" set="null" line="207" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TCP_KEEPIDLE>
	<TCP_KEEPINTVL public="1" get="inline" set="null" line="208" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TCP_KEEPINTVL>
	<SSL_OPTIONS public="1" get="inline" set="null" line="209" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SSL_OPTIONS>
	<MAIL_AUTH public="1" get="inline" set="null" line="210" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL_AUTH>
	<SASL_IR public="1" get="inline" set="null" line="211" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SASL_IR>
	<XFERINFOFUNCTION public="1" get="inline" set="null" line="212" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</XFERINFOFUNCTION>
	<XOAUTH2_BEARER public="1" get="inline" set="null" line="213" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</XOAUTH2_BEARER>
	<DNS_INTERFACE public="1" get="inline" set="null" line="214" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_INTERFACE>
	<DNS_LOCAL_IP4 public="1" get="inline" set="null" line="215" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_LOCAL_IP4>
	<DNS_LOCAL_IP6 public="1" get="inline" set="null" line="216" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DNS_LOCAL_IP6>
	<LOGIN_OPTIONS public="1" get="inline" set="null" line="217" static="1">
		<x path="lime.net.curl.CURLOption"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LOGIN_OPTIONS>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.net.curl._CURLOption.CURLOption_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLOption.hx" private="1" module="lime.net.curl.CURLOption">
		<URL public="1" get="inline" set="null" line="8" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</URL>
		<PORT public="1" get="inline" set="null" line="9" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PORT>
		<PROXY public="1" get="inline" set="null" line="10" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY>
		<USERPWD public="1" get="inline" set="null" line="11" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USERPWD>
		<PROXYUSERPWD public="1" get="inline" set="null" line="12" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYUSERPWD>
		<RANGE public="1" get="inline" set="null" line="13" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RANGE>
		<ERRORBUFFER public="1" get="inline" set="null" line="16" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ERRORBUFFER>
		<WRITEFUNCTION public="1" get="inline" set="null" line="17" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITEFUNCTION>
		<READFUNCTION public="1" get="inline" set="null" line="18" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</READFUNCTION>
		<TIMEOUT public="1" get="inline" set="null" line="19" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIMEOUT>
		<INFILESIZE public="1" get="inline" set="null" line="20" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INFILESIZE>
		<POSTFIELDS public="1" get="inline" set="null" line="21" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTFIELDS>
		<REFERER public="1" get="inline" set="null" line="22" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REFERER>
		<FTPPORT public="1" get="inline" set="null" line="23" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTPPORT>
		<USERAGENT public="1" get="inline" set="null" line="24" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USERAGENT>
		<LOW_SPEED_LIMIT public="1" get="inline" set="null" line="25" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOW_SPEED_LIMIT>
		<LOW_SPEED_TIME public="1" get="inline" set="null" line="26" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOW_SPEED_TIME>
		<RESUME_FROM public="1" get="inline" set="null" line="27" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESUME_FROM>
		<COOKIE public="1" get="inline" set="null" line="28" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIE>
		<HTTPHEADER public="1" get="inline" set="null" line="29" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPHEADER>
		<RTSPHEADER public="1" get="inline" set="null" line="30" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSPHEADER>
		<HTTPPOST public="1" get="inline" set="null" line="31" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPPOST>
		<SSLCERT public="1" get="inline" set="null" line="32" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLCERT>
		<KEYPASSWD public="1" get="inline" set="null" line="33" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KEYPASSWD>
		<CRLF public="1" get="inline" set="null" line="34" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRLF>
		<QUOTE public="1" get="inline" set="null" line="35" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUOTE>
		<WRITEHEADER public="1" get="inline" set="null" line="36" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITEHEADER>
		<HEADERDATA public="1" get="inline" set="null" line="37" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEADERDATA>
		<COOKIEFILE public="1" get="inline" set="null" line="38" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIEFILE>
		<SSLVERSION public="1" get="inline" set="null" line="39" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLVERSION>
		<TIMECONDITION public="1" get="inline" set="null" line="40" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIMECONDITION>
		<TIMEVALUE public="1" get="inline" set="null" line="41" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIMEVALUE>
		<CUSTOMREQUEST public="1" get="inline" set="null" line="42" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUSTOMREQUEST>
		<STDERR public="1" get="inline" set="null" line="43" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STDERR>
		<POSTQUOTE public="1" get="inline" set="null" line="44" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTQUOTE>
		<WRITEINFO public="1" get="inline" set="null" line="45" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WRITEINFO>
		<VERBOSE public="1" get="inline" set="null" line="46" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERBOSE>
		<HEADER public="1" get="inline" set="null" line="47" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEADER>
		<NOPROGRESS public="1" get="inline" set="null" line="48" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOPROGRESS>
		<NOBODY public="1" get="inline" set="null" line="49" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOBODY>
		<FAILONERROR public="1" get="inline" set="null" line="50" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FAILONERROR>
		<UPLOAD public="1" get="inline" set="null" line="51" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UPLOAD>
		<POST public="1" get="inline" set="null" line="52" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POST>
		<DIRLISTONLY public="1" get="inline" set="null" line="53" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DIRLISTONLY>
		<APPEND public="1" get="inline" set="null" line="54" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPEND>
		<NETRC public="1" get="inline" set="null" line="55" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NETRC>
		<FOLLOWLOCATION public="1" get="inline" set="null" line="56" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FOLLOWLOCATION>
		<TRANSFERTEXT public="1" get="inline" set="null" line="57" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRANSFERTEXT>
		<PUT public="1" get="inline" set="null" line="58" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PUT>
		<PROGRESSFUNCTION public="1" get="inline" set="null" line="59" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROGRESSFUNCTION>
		<PROGRESSDATA public="1" get="inline" set="null" line="60" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROGRESSDATA>
		<XFERINFODATA public="1" get="inline" set="null" line="61" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</XFERINFODATA>
		<AUTOREFERER public="1" get="inline" set="null" line="62" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUTOREFERER>
		<PROXYPORT public="1" get="inline" set="null" line="63" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYPORT>
		<POSTFIELDSIZE public="1" get="inline" set="null" line="64" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTFIELDSIZE>
		<HTTPPROXYTUNNEL public="1" get="inline" set="null" line="65" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPPROXYTUNNEL>
		<INTERFACE public="1" get="inline" set="null" line="66" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INTERFACE>
		<KRBLEVEL public="1" get="inline" set="null" line="67" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KRBLEVEL>
		<SSL_VERIFYPEER public="1" get="inline" set="null" line="68" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_VERIFYPEER>
		<CAINFO public="1" get="inline" set="null" line="69" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAINFO>
		<MAXREDIRS public="1" get="inline" set="null" line="70" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAXREDIRS>
		<FILETIME public="1" get="inline" set="null" line="71" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FILETIME>
		<TELNETOPTIONS public="1" get="inline" set="null" line="72" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TELNETOPTIONS>
		<MAXCONNECTS public="1" get="inline" set="null" line="73" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAXCONNECTS>
		<CLOSEPOLICY public="1" get="inline" set="null" line="74" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLOSEPOLICY>
		<FRESH_CONNECT public="1" get="inline" set="null" line="75" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRESH_CONNECT>
		<FORBID_REUSE public="1" get="inline" set="null" line="76" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FORBID_REUSE>
		<RANDOM_FILE public="1" get="inline" set="null" line="77" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RANDOM_FILE>
		<EGDSOCKET public="1" get="inline" set="null" line="78" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EGDSOCKET>
		<CONNECTTIMEOUT public="1" get="inline" set="null" line="79" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECTTIMEOUT>
		<HEADERFUNCTION public="1" get="inline" set="null" line="80" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEADERFUNCTION>
		<HTTPGET public="1" get="inline" set="null" line="81" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPGET>
		<SSL_VERIFYHOST public="1" get="inline" set="null" line="82" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_VERIFYHOST>
		<COOKIEJAR public="1" get="inline" set="null" line="83" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIEJAR>
		<SSL_CIPHER_LIST public="1" get="inline" set="null" line="84" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CIPHER_LIST>
		<HTTP_VERSION public="1" get="inline" set="null" line="85" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_VERSION>
		<FTP_USE_EPSV public="1" get="inline" set="null" line="86" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_USE_EPSV>
		<SSLCERTTYPE public="1" get="inline" set="null" line="87" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLCERTTYPE>
		<SSLKEY public="1" get="inline" set="null" line="88" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLKEY>
		<SSLKEYTYPE public="1" get="inline" set="null" line="89" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLKEYTYPE>
		<SSLENGINE public="1" get="inline" set="null" line="90" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLENGINE>
		<SSLENGINE_DEFAULT public="1" get="inline" set="null" line="91" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSLENGINE_DEFAULT>
		<DNS_USE_GLOBAL_CACHE public="1" get="inline" set="null" line="92" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_USE_GLOBAL_CACHE>
		<DNS_CACHE_TIMEOUT public="1" get="inline" set="null" line="93" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_CACHE_TIMEOUT>
		<PREQUOTE public="1" get="inline" set="null" line="94" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PREQUOTE>
		<DEBUGFUNCTION public="1" get="inline" set="null" line="95" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEBUGFUNCTION>
		<DEBUGDATA public="1" get="inline" set="null" line="96" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEBUGDATA>
		<COOKIESESSION public="1" get="inline" set="null" line="97" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIESESSION>
		<CAPATH public="1" get="inline" set="null" line="98" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPATH>
		<BUFFERSIZE public="1" get="inline" set="null" line="99" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUFFERSIZE>
		<NOSIGNAL public="1" get="inline" set="null" line="100" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOSIGNAL>
		<SHARE public="1" get="inline" set="null" line="101" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHARE>
		<PROXYTYPE public="1" get="inline" set="null" line="102" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYTYPE>
		<ACCEPT_ENCODING public="1" get="inline" set="null" line="103" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ACCEPT_ENCODING>
		<PRIVATE public="1" get="inline" set="null" line="104" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIVATE>
		<HTTP200ALIASES public="1" get="inline" set="null" line="105" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP200ALIASES>
		<UNRESTRICTED_AUTH public="1" get="inline" set="null" line="106" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNRESTRICTED_AUTH>
		<FTP_USE_EPRT public="1" get="inline" set="null" line="107" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_USE_EPRT>
		<HTTPAUTH public="1" get="inline" set="null" line="108" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTPAUTH>
		<SSL_CTX_FUNCTION public="1" get="inline" set="null" line="109" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CTX_FUNCTION>
		<SSL_CTX_DATA public="1" get="inline" set="null" line="110" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_CTX_DATA>
		<FTP_CREATE_MISSING_DIRS public="1" get="inline" set="null" line="111" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_CREATE_MISSING_DIRS>
		<PROXYAUTH public="1" get="inline" set="null" line="112" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYAUTH>
		<FTP_RESPONSE_TIMEOUT public="1" get="inline" set="null" line="113" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_RESPONSE_TIMEOUT>
		<SERVER_RESPONSE_TIMEOUT public="1" get="inline" set="null" line="114" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SERVER_RESPONSE_TIMEOUT>
		<IPRESOLVE public="1" get="inline" set="null" line="115" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IPRESOLVE>
		<MAXFILESIZE public="1" get="inline" set="null" line="116" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAXFILESIZE>
		<INFILESIZE_LARGE public="1" get="inline" set="null" line="117" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INFILESIZE_LARGE>
		<RESUME_FROM_LARGE public="1" get="inline" set="null" line="118" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESUME_FROM_LARGE>
		<MAXFILESIZE_LARGE public="1" get="inline" set="null" line="119" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAXFILESIZE_LARGE>
		<NETRC_FILE public="1" get="inline" set="null" line="120" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NETRC_FILE>
		<USE_SSL public="1" get="inline" set="null" line="121" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USE_SSL>
		<POSTFIELDSIZE_LARGE public="1" get="inline" set="null" line="122" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTFIELDSIZE_LARGE>
		<TCP_NODELAY public="1" get="inline" set="null" line="123" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TCP_NODELAY>
		<FTPSSLAUTH public="1" get="inline" set="null" line="124" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTPSSLAUTH>
		<IOCTLFUNCTION public="1" get="inline" set="null" line="125" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IOCTLFUNCTION>
		<IOCTLDATA public="1" get="inline" set="null" line="126" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IOCTLDATA>
		<FTP_ACCOUNT public="1" get="inline" set="null" line="127" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ACCOUNT>
		<COOKIELIST public="1" get="inline" set="null" line="128" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COOKIELIST>
		<IGNORE_CONTENT_LENGTH public="1" get="inline" set="null" line="129" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IGNORE_CONTENT_LENGTH>
		<FTP_SKIP_PASV_IP public="1" get="inline" set="null" line="130" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_SKIP_PASV_IP>
		<FTP_FILEMETHOD public="1" get="inline" set="null" line="131" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_FILEMETHOD>
		<LOCALPORT public="1" get="inline" set="null" line="132" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOCALPORT>
		<LOCALPORTRANGE public="1" get="inline" set="null" line="133" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOCALPORTRANGE>
		<CONNECT_ONLY public="1" get="inline" set="null" line="134" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECT_ONLY>
		<CONV_FROM_NETWORK_FUNCTION public="1" get="inline" set="null" line="135" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_FROM_NETWORK_FUNCTION>
		<CONV_TO_NETWORK_FUNCTION public="1" get="inline" set="null" line="136" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_TO_NETWORK_FUNCTION>
		<CONV_FROM_UTF8_FUNCTION public="1" get="inline" set="null" line="137" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONV_FROM_UTF8_FUNCTION>
		<MAX_SEND_SPEED_LARGE public="1" get="inline" set="null" line="138" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_SEND_SPEED_LARGE>
		<MAX_RECV_SPEED_LARGE public="1" get="inline" set="null" line="139" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAX_RECV_SPEED_LARGE>
		<FTP_ALTERNATIVE_TO_USER public="1" get="inline" set="null" line="140" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_ALTERNATIVE_TO_USER>
		<SOCKOPTFUNCTION public="1" get="inline" set="null" line="141" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOCKOPTFUNCTION>
		<SOCKOPTDATA public="1" get="inline" set="null" line="142" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOCKOPTDATA>
		<SSL_SESSIONID_CACHE public="1" get="inline" set="null" line="143" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_SESSIONID_CACHE>
		<SSH_AUTH_TYPES public="1" get="inline" set="null" line="144" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_AUTH_TYPES>
		<SSH_PUBLIC_KEYFILE public="1" get="inline" set="null" line="145" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_PUBLIC_KEYFILE>
		<SSH_PRIVATE_KEYFILE public="1" get="inline" set="null" line="146" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_PRIVATE_KEYFILE>
		<FTP_SSL_CCC public="1" get="inline" set="null" line="147" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_SSL_CCC>
		<TIMEOUT_MS public="1" get="inline" set="null" line="148" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TIMEOUT_MS>
		<CONNECTTIMEOUT_MS public="1" get="inline" set="null" line="149" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CONNECTTIMEOUT_MS>
		<HTTP_TRANSFER_DECODING public="1" get="inline" set="null" line="150" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_TRANSFER_DECODING>
		<HTTP_CONTENT_DECODING public="1" get="inline" set="null" line="151" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTTP_CONTENT_DECODING>
		<NEW_FILE_PERMS public="1" get="inline" set="null" line="152" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEW_FILE_PERMS>
		<NEW_DIRECTORY_PERMS public="1" get="inline" set="null" line="153" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NEW_DIRECTORY_PERMS>
		<POSTREDIR public="1" get="inline" set="null" line="154" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POSTREDIR>
		<SSH_HOST_PUBLIC_KEY_MD5 public="1" get="inline" set="null" line="155" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_HOST_PUBLIC_KEY_MD5>
		<OPENSOCKETFUNCTION public="1" get="inline" set="null" line="156" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPENSOCKETFUNCTION>
		<OPENSOCKETDATA public="1" get="inline" set="null" line="157" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPENSOCKETDATA>
		<COPYPOSTFIELDS public="1" get="inline" set="null" line="158" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPYPOSTFIELDS>
		<PROXY_TRANSFER_MODE public="1" get="inline" set="null" line="159" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXY_TRANSFER_MODE>
		<SEEKFUNCTION public="1" get="inline" set="null" line="160" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEEKFUNCTION>
		<SEEKDATA public="1" get="inline" set="null" line="161" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEEKDATA>
		<CRLFILE public="1" get="inline" set="null" line="162" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRLFILE>
		<ISSUERCERT public="1" get="inline" set="null" line="163" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ISSUERCERT>
		<ADDRESS_SCOPE public="1" get="inline" set="null" line="164" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ADDRESS_SCOPE>
		<CERTINFO public="1" get="inline" set="null" line="165" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CERTINFO>
		<USERNAME public="1" get="inline" set="null" line="166" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USERNAME>
		<PASSWORD public="1" get="inline" set="null" line="167" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PASSWORD>
		<PROXYUSERNAME public="1" get="inline" set="null" line="168" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYUSERNAME>
		<PROXYPASSWORD public="1" get="inline" set="null" line="169" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROXYPASSWORD>
		<NOPROXY public="1" get="inline" set="null" line="170" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOPROXY>
		<TFTP_BLKSIZE public="1" get="inline" set="null" line="171" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TFTP_BLKSIZE>
		<SOCKS5_GSSAPI_SERVICE public="1" get="inline" set="null" line="172" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOCKS5_GSSAPI_SERVICE>
		<SOCKS5_GSSAPI_NEC public="1" get="inline" set="null" line="173" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOCKS5_GSSAPI_NEC>
		<PROTOCOLS public="1" get="inline" set="null" line="174" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROTOCOLS>
		<REDIR_PROTOCOLS public="1" get="inline" set="null" line="175" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</REDIR_PROTOCOLS>
		<SSH_KNOWNHOSTS public="1" get="inline" set="null" line="176" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_KNOWNHOSTS>
		<SSH_KEYFUNCTION public="1" get="inline" set="null" line="177" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_KEYFUNCTION>
		<SSH_KEYDATA public="1" get="inline" set="null" line="178" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSH_KEYDATA>
		<MAIL_FROM public="1" get="inline" set="null" line="179" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL_FROM>
		<MAIL_RCPT public="1" get="inline" set="null" line="180" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL_RCPT>
		<FTP_USE_PRET public="1" get="inline" set="null" line="181" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FTP_USE_PRET>
		<RTSP_REQUEST public="1" get="inline" set="null" line="182" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_REQUEST>
		<RTSP_SESSION_ID public="1" get="inline" set="null" line="183" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SESSION_ID>
		<RTSP_STREAM_URI public="1" get="inline" set="null" line="184" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_STREAM_URI>
		<RTSP_TRANSPORT public="1" get="inline" set="null" line="185" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_TRANSPORT>
		<RTSP_CLIENT_CSEQ public="1" get="inline" set="null" line="186" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_CLIENT_CSEQ>
		<RTSP_SERVER_CSEQ public="1" get="inline" set="null" line="187" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RTSP_SERVER_CSEQ>
		<INTERLEAVEDATA public="1" get="inline" set="null" line="188" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INTERLEAVEDATA>
		<INTERLEAVEFUNCTION public="1" get="inline" set="null" line="189" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INTERLEAVEFUNCTION>
		<WILDCARDMATCH public="1" get="inline" set="null" line="190" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WILDCARDMATCH>
		<CHUNK_BGN_FUNCTION public="1" get="inline" set="null" line="191" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHUNK_BGN_FUNCTION>
		<CHUNK_END_FUNCTION public="1" get="inline" set="null" line="192" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHUNK_END_FUNCTION>
		<FNMATCH_FUNCTION public="1" get="inline" set="null" line="193" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FNMATCH_FUNCTION>
		<CHUNK_DATA public="1" get="inline" set="null" line="194" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CHUNK_DATA>
		<FNMATCH_DATA public="1" get="inline" set="null" line="195" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FNMATCH_DATA>
		<RESOLVE public="1" get="inline" set="null" line="196" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RESOLVE>
		<TLSAUTH_USERNAME public="1" get="inline" set="null" line="197" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TLSAUTH_USERNAME>
		<TLSAUTH_PASSWORD public="1" get="inline" set="null" line="198" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TLSAUTH_PASSWORD>
		<TLSAUTH_TYPE public="1" get="inline" set="null" line="199" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TLSAUTH_TYPE>
		<TRANSFER_ENCODING public="1" get="inline" set="null" line="200" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRANSFER_ENCODING>
		<CLOSESOCKETFUNCTION public="1" get="inline" set="null" line="201" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLOSESOCKETFUNCTION>
		<CLOSESOCKETDATA public="1" get="inline" set="null" line="202" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLOSESOCKETDATA>
		<GSSAPI_DELEGATION public="1" get="inline" set="null" line="203" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GSSAPI_DELEGATION>
		<DNS_SERVERS public="1" get="inline" set="null" line="204" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_SERVERS>
		<ACCEPTTIMEOUT_MS public="1" get="inline" set="null" line="205" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ACCEPTTIMEOUT_MS>
		<TCP_KEEPALIVE public="1" get="inline" set="null" line="206" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TCP_KEEPALIVE>
		<TCP_KEEPIDLE public="1" get="inline" set="null" line="207" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TCP_KEEPIDLE>
		<TCP_KEEPINTVL public="1" get="inline" set="null" line="208" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TCP_KEEPINTVL>
		<SSL_OPTIONS public="1" get="inline" set="null" line="209" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SSL_OPTIONS>
		<MAIL_AUTH public="1" get="inline" set="null" line="210" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL_AUTH>
		<SASL_IR public="1" get="inline" set="null" line="211" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SASL_IR>
		<XFERINFOFUNCTION public="1" get="inline" set="null" line="212" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</XFERINFOFUNCTION>
		<XOAUTH2_BEARER public="1" get="inline" set="null" line="213" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</XOAUTH2_BEARER>
		<DNS_INTERFACE public="1" get="inline" set="null" line="214" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_INTERFACE>
		<DNS_LOCAL_IP4 public="1" get="inline" set="null" line="215" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_LOCAL_IP4>
		<DNS_LOCAL_IP6 public="1" get="inline" set="null" line="216" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DNS_LOCAL_IP6>
		<LOGIN_OPTIONS public="1" get="inline" set="null" line="217" static="1">
			<x path="lime.net.curl.CURLOption"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LOGIN_OPTIONS>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.net.curl.CURLVersion" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLVersion.hx">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.curl._CURLVersion.CURLVersion_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLVersion.hx" private="1" module="lime.net.curl.CURLVersion">
	<FIRST public="1" get="inline" set="null" line="6" static="1">
		<x path="lime.net.curl.CURLVersion"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FIRST>
	<SECOND public="1" get="inline" set="null" line="7" static="1">
		<x path="lime.net.curl.CURLVersion"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SECOND>
	<THIRD public="1" get="inline" set="null" line="8" static="1">
		<x path="lime.net.curl.CURLVersion"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THIRD>
	<FOURTH public="1" get="inline" set="null" line="9" static="1">
		<x path="lime.net.curl.CURLVersion"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FOURTH>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.net.curl._CURLVersion.CURLVersion_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/net/curl/CURLVersion.hx" private="1" module="lime.net.curl.CURLVersion">
		<FIRST public="1" get="inline" set="null" line="6" static="1">
			<x path="lime.net.curl.CURLVersion"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FIRST>
		<SECOND public="1" get="inline" set="null" line="7" static="1">
			<x path="lime.net.curl.CURLVersion"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SECOND>
		<THIRD public="1" get="inline" set="null" line="8" static="1">
			<x path="lime.net.curl.CURLVersion"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THIRD>
		<FOURTH public="1" get="inline" set="null" line="9" static="1">
			<x path="lime.net.curl.CURLVersion"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FOURTH>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.system.System" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/system/System.hx">
		<disableCFFI public="1" static="1"><x path="Bool"/></disableCFFI>
		<__moduleNames line="21" static="1">
			<x path="Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta><m n=":noCompletion"/></meta>
		</__moduleNames>
		<embed public="1" set="method" line="30" static="1">
			<f a="elementName:?width:?height:?background" v=":null:null:null">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":keep"/>
				<m n=":expose"><e>"lime.embed"</e></m>
			</meta>
		</embed>
		<findHaxeLib set="method" line="86" static="1"><f a="library">
	<c path="String"/>
	<c path="String"/>
</f></findHaxeLib>
		<load public="1" set="method" line="131" static="1"><f a="library:method:?args:?lazy" v="::0:false">
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Bool"/>
	<d/>
</f></load>
		<sysName set="method" line="244" static="1"><f a=""><c path="String"/></f></sysName>
		<tryLoad set="method" line="260" static="1"><f a="name:library:func:args">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<d/>
</f></tryLoad>
		<loaderTrace set="method" line="297" static="1"><f a="message">
	<c path="String"/>
	<x path="Void"/>
</f></loaderTrace>
	</class>
	<abstract path="lime.ui.KeyCode" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/KeyCode.hx">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._KeyCode.KeyCode_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/KeyCode.hx" private="1" module="lime.ui.KeyCode">
	<UNKNOWN public="1" get="inline" set="null" line="7" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<BACKSPACE public="1" get="inline" set="null" line="8" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSPACE>
	<TAB public="1" get="inline" set="null" line="9" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAB>
	<RETURN public="1" get="inline" set="null" line="10" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN>
	<ESCAPE public="1" get="inline" set="null" line="11" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ESCAPE>
	<SPACE public="1" get="inline" set="null" line="12" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPACE>
	<EXCLAMATION public="1" get="inline" set="null" line="13" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXCLAMATION>
	<QUOTE public="1" get="inline" set="null" line="14" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUOTE>
	<HASH public="1" get="inline" set="null" line="15" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HASH>
	<DOLLAR public="1" get="inline" set="null" line="16" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOLLAR>
	<PERCENT public="1" get="inline" set="null" line="17" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERCENT>
	<AMPERSAND public="1" get="inline" set="null" line="18" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AMPERSAND>
	<SINGLE_QUOTE public="1" get="inline" set="null" line="19" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SINGLE_QUOTE>
	<LEFT_PARENTHESIS public="1" get="inline" set="null" line="20" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_PARENTHESIS>
	<RIGHT_PARENTHESIS public="1" get="inline" set="null" line="21" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_PARENTHESIS>
	<ASTERISK public="1" get="inline" set="null" line="22" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ASTERISK>
	<PLUS public="1" get="inline" set="null" line="23" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PLUS>
	<COMMA public="1" get="inline" set="null" line="24" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMMA>
	<MINUS public="1" get="inline" set="null" line="25" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MINUS>
	<PERIOD public="1" get="inline" set="null" line="26" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERIOD>
	<SLASH public="1" get="inline" set="null" line="27" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLASH>
	<NUMBER_0 public="1" get="inline" set="null" line="28" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_0>
	<NUMBER_1 public="1" get="inline" set="null" line="29" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_1>
	<NUMBER_2 public="1" get="inline" set="null" line="30" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_2>
	<NUMBER_3 public="1" get="inline" set="null" line="31" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_3>
	<NUMBER_4 public="1" get="inline" set="null" line="32" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_4>
	<NUMBER_5 public="1" get="inline" set="null" line="33" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_5>
	<NUMBER_6 public="1" get="inline" set="null" line="34" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_6>
	<NUMBER_7 public="1" get="inline" set="null" line="35" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_7>
	<NUMBER_8 public="1" get="inline" set="null" line="36" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_8>
	<NUMBER_9 public="1" get="inline" set="null" line="37" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_9>
	<COLON public="1" get="inline" set="null" line="38" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLON>
	<SEMICOLON public="1" get="inline" set="null" line="39" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEMICOLON>
	<LESS_THAN public="1" get="inline" set="null" line="40" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN>
	<EQUALS public="1" get="inline" set="null" line="41" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<GREATER_THAN public="1" get="inline" set="null" line="42" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN>
	<QUESTION public="1" get="inline" set="null" line="43" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUESTION>
	<AT public="1" get="inline" set="null" line="44" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AT>
	<LEFT_BRACKET public="1" get="inline" set="null" line="45" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_BRACKET>
	<BACKSLASH public="1" get="inline" set="null" line="46" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSLASH>
	<RIGHT_BRACKET public="1" get="inline" set="null" line="47" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_BRACKET>
	<CARET public="1" get="inline" set="null" line="48" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CARET>
	<UNDERSCORE public="1" get="inline" set="null" line="49" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDERSCORE>
	<GRAVE public="1" get="inline" set="null" line="50" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRAVE>
	<A public="1" get="inline" set="null" line="51" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" line="52" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<C public="1" get="inline" set="null" line="53" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</C>
	<D public="1" get="inline" set="null" line="54" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</D>
	<E public="1" get="inline" set="null" line="55" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</E>
	<F public="1" get="inline" set="null" line="56" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F>
	<G public="1" get="inline" set="null" line="57" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</G>
	<H public="1" get="inline" set="null" line="58" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</H>
	<I public="1" get="inline" set="null" line="59" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</I>
	<J public="1" get="inline" set="null" line="60" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</J>
	<K public="1" get="inline" set="null" line="61" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</K>
	<L public="1" get="inline" set="null" line="62" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</L>
	<M public="1" get="inline" set="null" line="63" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</M>
	<N public="1" get="inline" set="null" line="64" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</N>
	<O public="1" get="inline" set="null" line="65" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</O>
	<P public="1" get="inline" set="null" line="66" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</P>
	<Q public="1" get="inline" set="null" line="67" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Q>
	<R public="1" get="inline" set="null" line="68" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</R>
	<S public="1" get="inline" set="null" line="69" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</S>
	<T public="1" get="inline" set="null" line="70" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</T>
	<U public="1" get="inline" set="null" line="71" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</U>
	<V public="1" get="inline" set="null" line="72" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V>
	<W public="1" get="inline" set="null" line="73" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</W>
	<X public="1" get="inline" set="null" line="74" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" line="75" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<Z public="1" get="inline" set="null" line="76" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Z>
	<DELETE public="1" get="inline" set="null" line="77" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<CAPS_LOCK public="1" get="inline" set="null" line="78" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPS_LOCK>
	<F1 public="1" get="inline" set="null" line="79" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F1>
	<F2 public="1" get="inline" set="null" line="80" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F2>
	<F3 public="1" get="inline" set="null" line="81" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F3>
	<F4 public="1" get="inline" set="null" line="82" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F4>
	<F5 public="1" get="inline" set="null" line="83" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F5>
	<F6 public="1" get="inline" set="null" line="84" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F6>
	<F7 public="1" get="inline" set="null" line="85" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F7>
	<F8 public="1" get="inline" set="null" line="86" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F8>
	<F9 public="1" get="inline" set="null" line="87" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F9>
	<F10 public="1" get="inline" set="null" line="88" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F10>
	<F11 public="1" get="inline" set="null" line="89" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F11>
	<F12 public="1" get="inline" set="null" line="90" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F12>
	<PRINT_SCREEN public="1" get="inline" set="null" line="91" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRINT_SCREEN>
	<SCROLL_LOCK public="1" get="inline" set="null" line="92" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCROLL_LOCK>
	<PAUSE public="1" get="inline" set="null" line="93" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAUSE>
	<INSERT public="1" get="inline" set="null" line="94" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INSERT>
	<HOME public="1" get="inline" set="null" line="95" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HOME>
	<PAGE_UP public="1" get="inline" set="null" line="96" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_UP>
	<END public="1" get="inline" set="null" line="97" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</END>
	<PAGE_DOWN public="1" get="inline" set="null" line="98" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_DOWN>
	<RIGHT public="1" get="inline" set="null" line="99" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<LEFT public="1" get="inline" set="null" line="100" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<DOWN public="1" get="inline" set="null" line="101" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOWN>
	<UP public="1" get="inline" set="null" line="102" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UP>
	<NUM_LOCK public="1" get="inline" set="null" line="103" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_LOCK>
	<NUMPAD_DIVIDE public="1" get="inline" set="null" line="104" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DIVIDE>
	<NUMPAD_MULTIPLY public="1" get="inline" set="null" line="105" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MULTIPLY>
	<NUMPAD_MINUS public="1" get="inline" set="null" line="106" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MINUS>
	<NUMPAD_PLUS public="1" get="inline" set="null" line="107" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS>
	<NUMPAD_ENTER public="1" get="inline" set="null" line="108" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_ENTER>
	<NUMPAD_1 public="1" get="inline" set="null" line="109" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_1>
	<NUMPAD_2 public="1" get="inline" set="null" line="110" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_2>
	<NUMPAD_3 public="1" get="inline" set="null" line="111" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_3>
	<NUMPAD_4 public="1" get="inline" set="null" line="112" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_4>
	<NUMPAD_5 public="1" get="inline" set="null" line="113" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_5>
	<NUMPAD_6 public="1" get="inline" set="null" line="114" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_6>
	<NUMPAD_7 public="1" get="inline" set="null" line="115" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_7>
	<NUMPAD_8 public="1" get="inline" set="null" line="116" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_8>
	<NUMPAD_9 public="1" get="inline" set="null" line="117" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_9>
	<NUMPAD_0 public="1" get="inline" set="null" line="118" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_0>
	<NUMPAD_PERIOD public="1" get="inline" set="null" line="119" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERIOD>
	<APPLICATION public="1" get="inline" set="null" line="120" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<POWER public="1" get="inline" set="null" line="121" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POWER>
	<NUMPAD_EQUALS public="1" get="inline" set="null" line="122" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EQUALS>
	<F13 public="1" get="inline" set="null" line="123" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F13>
	<F14 public="1" get="inline" set="null" line="124" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F14>
	<F15 public="1" get="inline" set="null" line="125" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F15>
	<F16 public="1" get="inline" set="null" line="126" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F16>
	<F17 public="1" get="inline" set="null" line="127" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F17>
	<F18 public="1" get="inline" set="null" line="128" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F18>
	<F19 public="1" get="inline" set="null" line="129" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F19>
	<F20 public="1" get="inline" set="null" line="130" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F20>
	<F21 public="1" get="inline" set="null" line="131" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F21>
	<F22 public="1" get="inline" set="null" line="132" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F22>
	<F23 public="1" get="inline" set="null" line="133" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F23>
	<F24 public="1" get="inline" set="null" line="134" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F24>
	<EXECUTE public="1" get="inline" set="null" line="135" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXECUTE>
	<HELP public="1" get="inline" set="null" line="136" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HELP>
	<MENU public="1" get="inline" set="null" line="137" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MENU>
	<SELECT public="1" get="inline" set="null" line="138" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SELECT>
	<STOP public="1" get="inline" set="null" line="139" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STOP>
	<AGAIN public="1" get="inline" set="null" line="140" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AGAIN>
	<UNDO public="1" get="inline" set="null" line="141" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDO>
	<CUT public="1" get="inline" set="null" line="142" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUT>
	<COPY public="1" get="inline" set="null" line="143" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPY>
	<PASTE public="1" get="inline" set="null" line="144" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PASTE>
	<FIND public="1" get="inline" set="null" line="145" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FIND>
	<MUTE public="1" get="inline" set="null" line="146" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUTE>
	<VOLUME_UP public="1" get="inline" set="null" line="147" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_UP>
	<VOLUME_DOWN public="1" get="inline" set="null" line="148" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_DOWN>
	<NUMPAD_COMMA public="1" get="inline" set="null" line="149" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COMMA>
	<ALT_ERASE public="1" get="inline" set="null" line="151" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALT_ERASE>
	<SYSTEM_REQUEST public="1" get="inline" set="null" line="152" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYSTEM_REQUEST>
	<CANCEL public="1" get="inline" set="null" line="153" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CANCEL>
	<CLEAR public="1" get="inline" set="null" line="154" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR>
	<PRIOR public="1" get="inline" set="null" line="155" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIOR>
	<RETURN2 public="1" get="inline" set="null" line="156" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN2>
	<SEPARATOR public="1" get="inline" set="null" line="157" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEPARATOR>
	<OUT public="1" get="inline" set="null" line="158" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT>
	<OPER public="1" get="inline" set="null" line="159" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPER>
	<CLEAR_AGAIN public="1" get="inline" set="null" line="160" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR_AGAIN>
	<CRSEL public="1" get="inline" set="null" line="161" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRSEL>
	<EXSEL public="1" get="inline" set="null" line="162" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXSEL>
	<NUMPAD_00 public="1" get="inline" set="null" line="163" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_00>
	<NUMPAD_000 public="1" get="inline" set="null" line="164" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_000>
	<THOUSAND_SEPARATOR public="1" get="inline" set="null" line="165" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THOUSAND_SEPARATOR>
	<DECIMAL_SEPARATOR public="1" get="inline" set="null" line="166" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECIMAL_SEPARATOR>
	<CURRENCY_UNIT public="1" get="inline" set="null" line="167" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_UNIT>
	<CURRENCY_SUBUNIT public="1" get="inline" set="null" line="168" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_SUBUNIT>
	<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" line="169" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_PARENTHESIS>
	<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" line="170" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_PARENTHESIS>
	<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" line="171" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_BRACE>
	<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" line="172" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_BRACE>
	<NUMPAD_TAB public="1" get="inline" set="null" line="173" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_TAB>
	<NUMPAD_BACKSPACE public="1" get="inline" set="null" line="174" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BACKSPACE>
	<NUMPAD_A public="1" get="inline" set="null" line="175" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_A>
	<NUMPAD_B public="1" get="inline" set="null" line="176" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_B>
	<NUMPAD_C public="1" get="inline" set="null" line="177" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_C>
	<NUMPAD_D public="1" get="inline" set="null" line="178" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_D>
	<NUMPAD_E public="1" get="inline" set="null" line="179" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_E>
	<NUMPAD_F public="1" get="inline" set="null" line="180" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_F>
	<NUMPAD_XOR public="1" get="inline" set="null" line="181" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_XOR>
	<NUMPAD_POWER public="1" get="inline" set="null" line="182" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_POWER>
	<NUMPAD_PERCENT public="1" get="inline" set="null" line="183" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERCENT>
	<NUMPAD_LESS_THAN public="1" get="inline" set="null" line="184" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LESS_THAN>
	<NUMPAD_GREATER_THAN public="1" get="inline" set="null" line="185" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_GREATER_THAN>
	<NUMPAD_AMPERSAND public="1" get="inline" set="null" line="186" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AMPERSAND>
	<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" line="187" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_AMPERSAND>
	<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" line="188" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_VERTICAL_BAR>
	<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" line="189" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_VERTICAL_BAR>
	<NUMPAD_COLON public="1" get="inline" set="null" line="190" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COLON>
	<NUMPAD_HASH public="1" get="inline" set="null" line="191" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HASH>
	<NUMPAD_SPACE public="1" get="inline" set="null" line="192" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_SPACE>
	<NUMPAD_AT public="1" get="inline" set="null" line="193" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AT>
	<NUMPAD_EXCLAMATION public="1" get="inline" set="null" line="194" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EXCLAMATION>
	<NUMPAD_MEM_STORE public="1" get="inline" set="null" line="195" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_STORE>
	<NUMPAD_MEM_RECALL public="1" get="inline" set="null" line="196" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_RECALL>
	<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" line="197" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_CLEAR>
	<NUMPAD_MEM_ADD public="1" get="inline" set="null" line="198" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_ADD>
	<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" line="199" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_SUBTRACT>
	<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" line="200" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_MULTIPLY>
	<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" line="201" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_DIVIDE>
	<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" line="202" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS_MINUS>
	<NUMPAD_CLEAR public="1" get="inline" set="null" line="203" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR>
	<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" line="204" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR_ENTRY>
	<NUMPAD_BINARY public="1" get="inline" set="null" line="205" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BINARY>
	<NUMPAD_OCTAL public="1" get="inline" set="null" line="206" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_OCTAL>
	<NUMPAD_DECIMAL public="1" get="inline" set="null" line="207" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DECIMAL>
	<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" line="208" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HEXADECIMAL>
	<LEFT_CTRL public="1" get="inline" set="null" line="209" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_CTRL>
	<LEFT_SHIFT public="1" get="inline" set="null" line="210" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHIFT>
	<LEFT_ALT public="1" get="inline" set="null" line="211" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_ALT>
	<LEFT_META public="1" get="inline" set="null" line="212" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_META>
	<RIGHT_CTRL public="1" get="inline" set="null" line="213" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_CTRL>
	<RIGHT_SHIFT public="1" get="inline" set="null" line="214" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHIFT>
	<RIGHT_ALT public="1" get="inline" set="null" line="215" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_ALT>
	<RIGHT_META public="1" get="inline" set="null" line="216" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_META>
	<MODE public="1" get="inline" set="null" line="217" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MODE>
	<AUDIO_NEXT public="1" get="inline" set="null" line="218" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_NEXT>
	<AUDIO_PREVIOUS public="1" get="inline" set="null" line="219" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PREVIOUS>
	<AUDIO_STOP public="1" get="inline" set="null" line="220" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_STOP>
	<AUDIO_PLAY public="1" get="inline" set="null" line="221" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PLAY>
	<AUDIO_MUTE public="1" get="inline" set="null" line="222" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_MUTE>
	<MEDIA_SELECT public="1" get="inline" set="null" line="223" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIA_SELECT>
	<WWW public="1" get="inline" set="null" line="224" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WWW>
	<MAIL public="1" get="inline" set="null" line="225" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL>
	<CALCULATOR public="1" get="inline" set="null" line="226" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CALCULATOR>
	<COMPUTER public="1" get="inline" set="null" line="227" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPUTER>
	<APP_CONTROL_SEARCH public="1" get="inline" set="null" line="228" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_SEARCH>
	<APP_CONTROL_HOME public="1" get="inline" set="null" line="229" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_HOME>
	<APP_CONTROL_BACK public="1" get="inline" set="null" line="230" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BACK>
	<APP_CONTROL_FORWARD public="1" get="inline" set="null" line="231" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_FORWARD>
	<APP_CONTROL_STOP public="1" get="inline" set="null" line="232" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_STOP>
	<APP_CONTROL_REFRESH public="1" get="inline" set="null" line="233" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_REFRESH>
	<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" line="234" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BOOKMARKS>
	<BRIGHTNESS_DOWN public="1" get="inline" set="null" line="235" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_DOWN>
	<BRIGHTNESS_UP public="1" get="inline" set="null" line="236" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_UP>
	<DISPLAY_SWITCH public="1" get="inline" set="null" line="237" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DISPLAY_SWITCH>
	<BACKLIGHT_TOGGLE public="1" get="inline" set="null" line="238" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_TOGGLE>
	<BACKLIGHT_DOWN public="1" get="inline" set="null" line="239" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_DOWN>
	<BACKLIGHT_UP public="1" get="inline" set="null" line="240" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_UP>
	<EJECT public="1" get="inline" set="null" line="241" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EJECT>
	<SLEEP public="1" get="inline" set="null" line="242" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLEEP>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._KeyCode.KeyCode_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/KeyCode.hx" private="1" module="lime.ui.KeyCode">
		<UNKNOWN public="1" get="inline" set="null" line="7" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<BACKSPACE public="1" get="inline" set="null" line="8" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSPACE>
		<TAB public="1" get="inline" set="null" line="9" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAB>
		<RETURN public="1" get="inline" set="null" line="10" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN>
		<ESCAPE public="1" get="inline" set="null" line="11" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ESCAPE>
		<SPACE public="1" get="inline" set="null" line="12" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPACE>
		<EXCLAMATION public="1" get="inline" set="null" line="13" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXCLAMATION>
		<QUOTE public="1" get="inline" set="null" line="14" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUOTE>
		<HASH public="1" get="inline" set="null" line="15" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HASH>
		<DOLLAR public="1" get="inline" set="null" line="16" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOLLAR>
		<PERCENT public="1" get="inline" set="null" line="17" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERCENT>
		<AMPERSAND public="1" get="inline" set="null" line="18" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AMPERSAND>
		<SINGLE_QUOTE public="1" get="inline" set="null" line="19" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SINGLE_QUOTE>
		<LEFT_PARENTHESIS public="1" get="inline" set="null" line="20" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_PARENTHESIS>
		<RIGHT_PARENTHESIS public="1" get="inline" set="null" line="21" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_PARENTHESIS>
		<ASTERISK public="1" get="inline" set="null" line="22" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ASTERISK>
		<PLUS public="1" get="inline" set="null" line="23" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PLUS>
		<COMMA public="1" get="inline" set="null" line="24" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMMA>
		<MINUS public="1" get="inline" set="null" line="25" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MINUS>
		<PERIOD public="1" get="inline" set="null" line="26" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERIOD>
		<SLASH public="1" get="inline" set="null" line="27" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLASH>
		<NUMBER_0 public="1" get="inline" set="null" line="28" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_0>
		<NUMBER_1 public="1" get="inline" set="null" line="29" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_1>
		<NUMBER_2 public="1" get="inline" set="null" line="30" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_2>
		<NUMBER_3 public="1" get="inline" set="null" line="31" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_3>
		<NUMBER_4 public="1" get="inline" set="null" line="32" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_4>
		<NUMBER_5 public="1" get="inline" set="null" line="33" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_5>
		<NUMBER_6 public="1" get="inline" set="null" line="34" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_6>
		<NUMBER_7 public="1" get="inline" set="null" line="35" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_7>
		<NUMBER_8 public="1" get="inline" set="null" line="36" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_8>
		<NUMBER_9 public="1" get="inline" set="null" line="37" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_9>
		<COLON public="1" get="inline" set="null" line="38" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLON>
		<SEMICOLON public="1" get="inline" set="null" line="39" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEMICOLON>
		<LESS_THAN public="1" get="inline" set="null" line="40" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN>
		<EQUALS public="1" get="inline" set="null" line="41" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<GREATER_THAN public="1" get="inline" set="null" line="42" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN>
		<QUESTION public="1" get="inline" set="null" line="43" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUESTION>
		<AT public="1" get="inline" set="null" line="44" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AT>
		<LEFT_BRACKET public="1" get="inline" set="null" line="45" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_BRACKET>
		<BACKSLASH public="1" get="inline" set="null" line="46" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSLASH>
		<RIGHT_BRACKET public="1" get="inline" set="null" line="47" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_BRACKET>
		<CARET public="1" get="inline" set="null" line="48" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CARET>
		<UNDERSCORE public="1" get="inline" set="null" line="49" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDERSCORE>
		<GRAVE public="1" get="inline" set="null" line="50" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRAVE>
		<A public="1" get="inline" set="null" line="51" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" line="52" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<C public="1" get="inline" set="null" line="53" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</C>
		<D public="1" get="inline" set="null" line="54" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</D>
		<E public="1" get="inline" set="null" line="55" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</E>
		<F public="1" get="inline" set="null" line="56" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F>
		<G public="1" get="inline" set="null" line="57" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</G>
		<H public="1" get="inline" set="null" line="58" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</H>
		<I public="1" get="inline" set="null" line="59" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</I>
		<J public="1" get="inline" set="null" line="60" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</J>
		<K public="1" get="inline" set="null" line="61" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</K>
		<L public="1" get="inline" set="null" line="62" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</L>
		<M public="1" get="inline" set="null" line="63" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</M>
		<N public="1" get="inline" set="null" line="64" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</N>
		<O public="1" get="inline" set="null" line="65" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</O>
		<P public="1" get="inline" set="null" line="66" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</P>
		<Q public="1" get="inline" set="null" line="67" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Q>
		<R public="1" get="inline" set="null" line="68" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</R>
		<S public="1" get="inline" set="null" line="69" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</S>
		<T public="1" get="inline" set="null" line="70" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</T>
		<U public="1" get="inline" set="null" line="71" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</U>
		<V public="1" get="inline" set="null" line="72" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V>
		<W public="1" get="inline" set="null" line="73" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</W>
		<X public="1" get="inline" set="null" line="74" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" line="75" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<Z public="1" get="inline" set="null" line="76" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Z>
		<DELETE public="1" get="inline" set="null" line="77" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<CAPS_LOCK public="1" get="inline" set="null" line="78" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPS_LOCK>
		<F1 public="1" get="inline" set="null" line="79" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F1>
		<F2 public="1" get="inline" set="null" line="80" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F2>
		<F3 public="1" get="inline" set="null" line="81" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F3>
		<F4 public="1" get="inline" set="null" line="82" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F4>
		<F5 public="1" get="inline" set="null" line="83" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F5>
		<F6 public="1" get="inline" set="null" line="84" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F6>
		<F7 public="1" get="inline" set="null" line="85" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F7>
		<F8 public="1" get="inline" set="null" line="86" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F8>
		<F9 public="1" get="inline" set="null" line="87" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F9>
		<F10 public="1" get="inline" set="null" line="88" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F10>
		<F11 public="1" get="inline" set="null" line="89" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F11>
		<F12 public="1" get="inline" set="null" line="90" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F12>
		<PRINT_SCREEN public="1" get="inline" set="null" line="91" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRINT_SCREEN>
		<SCROLL_LOCK public="1" get="inline" set="null" line="92" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCROLL_LOCK>
		<PAUSE public="1" get="inline" set="null" line="93" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAUSE>
		<INSERT public="1" get="inline" set="null" line="94" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INSERT>
		<HOME public="1" get="inline" set="null" line="95" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HOME>
		<PAGE_UP public="1" get="inline" set="null" line="96" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_UP>
		<END public="1" get="inline" set="null" line="97" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</END>
		<PAGE_DOWN public="1" get="inline" set="null" line="98" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_DOWN>
		<RIGHT public="1" get="inline" set="null" line="99" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<LEFT public="1" get="inline" set="null" line="100" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<DOWN public="1" get="inline" set="null" line="101" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOWN>
		<UP public="1" get="inline" set="null" line="102" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UP>
		<NUM_LOCK public="1" get="inline" set="null" line="103" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_LOCK>
		<NUMPAD_DIVIDE public="1" get="inline" set="null" line="104" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DIVIDE>
		<NUMPAD_MULTIPLY public="1" get="inline" set="null" line="105" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MULTIPLY>
		<NUMPAD_MINUS public="1" get="inline" set="null" line="106" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MINUS>
		<NUMPAD_PLUS public="1" get="inline" set="null" line="107" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS>
		<NUMPAD_ENTER public="1" get="inline" set="null" line="108" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_ENTER>
		<NUMPAD_1 public="1" get="inline" set="null" line="109" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_1>
		<NUMPAD_2 public="1" get="inline" set="null" line="110" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_2>
		<NUMPAD_3 public="1" get="inline" set="null" line="111" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_3>
		<NUMPAD_4 public="1" get="inline" set="null" line="112" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_4>
		<NUMPAD_5 public="1" get="inline" set="null" line="113" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_5>
		<NUMPAD_6 public="1" get="inline" set="null" line="114" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_6>
		<NUMPAD_7 public="1" get="inline" set="null" line="115" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_7>
		<NUMPAD_8 public="1" get="inline" set="null" line="116" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_8>
		<NUMPAD_9 public="1" get="inline" set="null" line="117" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_9>
		<NUMPAD_0 public="1" get="inline" set="null" line="118" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_0>
		<NUMPAD_PERIOD public="1" get="inline" set="null" line="119" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERIOD>
		<APPLICATION public="1" get="inline" set="null" line="120" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<POWER public="1" get="inline" set="null" line="121" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POWER>
		<NUMPAD_EQUALS public="1" get="inline" set="null" line="122" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EQUALS>
		<F13 public="1" get="inline" set="null" line="123" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F13>
		<F14 public="1" get="inline" set="null" line="124" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F14>
		<F15 public="1" get="inline" set="null" line="125" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F15>
		<F16 public="1" get="inline" set="null" line="126" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F16>
		<F17 public="1" get="inline" set="null" line="127" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F17>
		<F18 public="1" get="inline" set="null" line="128" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F18>
		<F19 public="1" get="inline" set="null" line="129" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F19>
		<F20 public="1" get="inline" set="null" line="130" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F20>
		<F21 public="1" get="inline" set="null" line="131" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F21>
		<F22 public="1" get="inline" set="null" line="132" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F22>
		<F23 public="1" get="inline" set="null" line="133" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F23>
		<F24 public="1" get="inline" set="null" line="134" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F24>
		<EXECUTE public="1" get="inline" set="null" line="135" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXECUTE>
		<HELP public="1" get="inline" set="null" line="136" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HELP>
		<MENU public="1" get="inline" set="null" line="137" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MENU>
		<SELECT public="1" get="inline" set="null" line="138" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SELECT>
		<STOP public="1" get="inline" set="null" line="139" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STOP>
		<AGAIN public="1" get="inline" set="null" line="140" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AGAIN>
		<UNDO public="1" get="inline" set="null" line="141" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDO>
		<CUT public="1" get="inline" set="null" line="142" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUT>
		<COPY public="1" get="inline" set="null" line="143" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPY>
		<PASTE public="1" get="inline" set="null" line="144" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PASTE>
		<FIND public="1" get="inline" set="null" line="145" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FIND>
		<MUTE public="1" get="inline" set="null" line="146" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUTE>
		<VOLUME_UP public="1" get="inline" set="null" line="147" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_UP>
		<VOLUME_DOWN public="1" get="inline" set="null" line="148" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_DOWN>
		<NUMPAD_COMMA public="1" get="inline" set="null" line="149" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COMMA>
		<ALT_ERASE public="1" get="inline" set="null" line="151" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALT_ERASE>
		<SYSTEM_REQUEST public="1" get="inline" set="null" line="152" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYSTEM_REQUEST>
		<CANCEL public="1" get="inline" set="null" line="153" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CANCEL>
		<CLEAR public="1" get="inline" set="null" line="154" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR>
		<PRIOR public="1" get="inline" set="null" line="155" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIOR>
		<RETURN2 public="1" get="inline" set="null" line="156" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN2>
		<SEPARATOR public="1" get="inline" set="null" line="157" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEPARATOR>
		<OUT public="1" get="inline" set="null" line="158" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT>
		<OPER public="1" get="inline" set="null" line="159" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPER>
		<CLEAR_AGAIN public="1" get="inline" set="null" line="160" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR_AGAIN>
		<CRSEL public="1" get="inline" set="null" line="161" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRSEL>
		<EXSEL public="1" get="inline" set="null" line="162" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXSEL>
		<NUMPAD_00 public="1" get="inline" set="null" line="163" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_00>
		<NUMPAD_000 public="1" get="inline" set="null" line="164" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_000>
		<THOUSAND_SEPARATOR public="1" get="inline" set="null" line="165" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THOUSAND_SEPARATOR>
		<DECIMAL_SEPARATOR public="1" get="inline" set="null" line="166" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECIMAL_SEPARATOR>
		<CURRENCY_UNIT public="1" get="inline" set="null" line="167" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_UNIT>
		<CURRENCY_SUBUNIT public="1" get="inline" set="null" line="168" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_SUBUNIT>
		<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" line="169" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_PARENTHESIS>
		<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" line="170" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_PARENTHESIS>
		<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" line="171" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_BRACE>
		<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" line="172" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_BRACE>
		<NUMPAD_TAB public="1" get="inline" set="null" line="173" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_TAB>
		<NUMPAD_BACKSPACE public="1" get="inline" set="null" line="174" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BACKSPACE>
		<NUMPAD_A public="1" get="inline" set="null" line="175" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_A>
		<NUMPAD_B public="1" get="inline" set="null" line="176" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_B>
		<NUMPAD_C public="1" get="inline" set="null" line="177" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_C>
		<NUMPAD_D public="1" get="inline" set="null" line="178" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_D>
		<NUMPAD_E public="1" get="inline" set="null" line="179" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_E>
		<NUMPAD_F public="1" get="inline" set="null" line="180" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_F>
		<NUMPAD_XOR public="1" get="inline" set="null" line="181" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_XOR>
		<NUMPAD_POWER public="1" get="inline" set="null" line="182" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_POWER>
		<NUMPAD_PERCENT public="1" get="inline" set="null" line="183" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERCENT>
		<NUMPAD_LESS_THAN public="1" get="inline" set="null" line="184" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LESS_THAN>
		<NUMPAD_GREATER_THAN public="1" get="inline" set="null" line="185" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_GREATER_THAN>
		<NUMPAD_AMPERSAND public="1" get="inline" set="null" line="186" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AMPERSAND>
		<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" line="187" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_AMPERSAND>
		<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" line="188" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_VERTICAL_BAR>
		<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" line="189" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_VERTICAL_BAR>
		<NUMPAD_COLON public="1" get="inline" set="null" line="190" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COLON>
		<NUMPAD_HASH public="1" get="inline" set="null" line="191" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HASH>
		<NUMPAD_SPACE public="1" get="inline" set="null" line="192" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_SPACE>
		<NUMPAD_AT public="1" get="inline" set="null" line="193" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AT>
		<NUMPAD_EXCLAMATION public="1" get="inline" set="null" line="194" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EXCLAMATION>
		<NUMPAD_MEM_STORE public="1" get="inline" set="null" line="195" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_STORE>
		<NUMPAD_MEM_RECALL public="1" get="inline" set="null" line="196" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_RECALL>
		<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" line="197" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_CLEAR>
		<NUMPAD_MEM_ADD public="1" get="inline" set="null" line="198" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_ADD>
		<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" line="199" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_SUBTRACT>
		<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" line="200" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_MULTIPLY>
		<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" line="201" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_DIVIDE>
		<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" line="202" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS_MINUS>
		<NUMPAD_CLEAR public="1" get="inline" set="null" line="203" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR>
		<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" line="204" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR_ENTRY>
		<NUMPAD_BINARY public="1" get="inline" set="null" line="205" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BINARY>
		<NUMPAD_OCTAL public="1" get="inline" set="null" line="206" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_OCTAL>
		<NUMPAD_DECIMAL public="1" get="inline" set="null" line="207" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DECIMAL>
		<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" line="208" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HEXADECIMAL>
		<LEFT_CTRL public="1" get="inline" set="null" line="209" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_CTRL>
		<LEFT_SHIFT public="1" get="inline" set="null" line="210" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHIFT>
		<LEFT_ALT public="1" get="inline" set="null" line="211" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_ALT>
		<LEFT_META public="1" get="inline" set="null" line="212" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_META>
		<RIGHT_CTRL public="1" get="inline" set="null" line="213" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_CTRL>
		<RIGHT_SHIFT public="1" get="inline" set="null" line="214" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHIFT>
		<RIGHT_ALT public="1" get="inline" set="null" line="215" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_ALT>
		<RIGHT_META public="1" get="inline" set="null" line="216" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_META>
		<MODE public="1" get="inline" set="null" line="217" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MODE>
		<AUDIO_NEXT public="1" get="inline" set="null" line="218" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_NEXT>
		<AUDIO_PREVIOUS public="1" get="inline" set="null" line="219" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PREVIOUS>
		<AUDIO_STOP public="1" get="inline" set="null" line="220" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_STOP>
		<AUDIO_PLAY public="1" get="inline" set="null" line="221" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PLAY>
		<AUDIO_MUTE public="1" get="inline" set="null" line="222" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_MUTE>
		<MEDIA_SELECT public="1" get="inline" set="null" line="223" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIA_SELECT>
		<WWW public="1" get="inline" set="null" line="224" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WWW>
		<MAIL public="1" get="inline" set="null" line="225" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL>
		<CALCULATOR public="1" get="inline" set="null" line="226" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CALCULATOR>
		<COMPUTER public="1" get="inline" set="null" line="227" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPUTER>
		<APP_CONTROL_SEARCH public="1" get="inline" set="null" line="228" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_SEARCH>
		<APP_CONTROL_HOME public="1" get="inline" set="null" line="229" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_HOME>
		<APP_CONTROL_BACK public="1" get="inline" set="null" line="230" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BACK>
		<APP_CONTROL_FORWARD public="1" get="inline" set="null" line="231" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_FORWARD>
		<APP_CONTROL_STOP public="1" get="inline" set="null" line="232" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_STOP>
		<APP_CONTROL_REFRESH public="1" get="inline" set="null" line="233" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_REFRESH>
		<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" line="234" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BOOKMARKS>
		<BRIGHTNESS_DOWN public="1" get="inline" set="null" line="235" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_DOWN>
		<BRIGHTNESS_UP public="1" get="inline" set="null" line="236" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_UP>
		<DISPLAY_SWITCH public="1" get="inline" set="null" line="237" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DISPLAY_SWITCH>
		<BACKLIGHT_TOGGLE public="1" get="inline" set="null" line="238" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_TOGGLE>
		<BACKLIGHT_DOWN public="1" get="inline" set="null" line="239" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_DOWN>
		<BACKLIGHT_UP public="1" get="inline" set="null" line="240" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_UP>
		<EJECT public="1" get="inline" set="null" line="241" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EJECT>
		<SLEEP public="1" get="inline" set="null" line="242" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLEEP>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.ui.KeyEventManager" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/KeyEventManager.hx">
		<onKeyDown public="1" line="17" static="1"><c path="lime.app.Event"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onKeyDown>
		<onKeyUp public="1" line="18" static="1"><c path="lime.app.Event"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onKeyUp>
		<eventInfo static="1"><c path="lime.ui._KeyEventManager.KeyEventInfo"/></eventInfo>
		<create public="1" set="method" line="23" static="1"><f a=""><x path="Void"/></f></create>
		<convertKeyCode set="method" line="46" static="1"><f a="keyCode">
	<x path="Int"/>
	<x path="lime.ui.KeyCode"/>
</f></convertKeyCode>
		<handleEvent set="method" line="148" static="1"><f a="event">
	<c path="js.html.KeyboardEvent"/>
	<x path="Void"/>
</f></handleEvent>
	</class>
	<class path="lime.ui._KeyEventManager.KeyEventInfo" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/KeyEventManager.hx" private="1" module="lime.ui.KeyEventManager">
		<keyCode public="1"><x path="Int"/></keyCode>
		<modifier public="1"><x path="Int"/></modifier>
		<type public="1"><x path="lime.ui._KeyEventManager.KeyEventType"/></type>
		<clone public="1" set="method" line="227"><f a=""><c path="lime.ui._KeyEventManager.KeyEventInfo"/></f></clone>
		<new public="1" set="method" line="218"><f a="?type:?keyCode:?modifier" v="null:0:0">
	<x path="lime.ui._KeyEventManager.KeyEventType"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.ui._KeyEventManager.KeyEventType" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/KeyEventManager.hx" private="1" module="lime.ui.KeyEventManager">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._KeyEventManager.KeyEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/KeyEventManager.hx" private="1" module="lime.ui.KeyEventManager">
	<KEY_DOWN public="1" get="inline" set="null" line="239" static="1">
		<x path="lime.ui._KeyEventManager.KeyEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KEY_DOWN>
	<KEY_UP public="1" get="inline" set="null" line="240" static="1">
		<x path="lime.ui._KeyEventManager.KeyEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</KEY_UP>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._KeyEventManager.KeyEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/KeyEventManager.hx" private="1" module="lime.ui.KeyEventManager">
		<KEY_DOWN public="1" get="inline" set="null" line="239" static="1">
			<x path="lime.ui._KeyEventManager.KeyEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KEY_DOWN>
		<KEY_UP public="1" get="inline" set="null" line="240" static="1">
			<x path="lime.ui._KeyEventManager.KeyEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</KEY_UP>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.ui.MouseEventManager" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/MouseEventManager.hx">
		<onMouseDown public="1" line="18" static="1"><c path="lime.app.Event"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onMouseDown>
		<onMouseMove public="1" line="19" static="1"><c path="lime.app.Event"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onMouseMove>
		<onMouseUp public="1" line="20" static="1"><c path="lime.app.Event"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onMouseUp>
		<onMouseWheel public="1" line="21" static="1"><c path="lime.app.Event"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></onMouseWheel>
		<created static="1"><x path="Bool"/></created>
		<eventInfo static="1"><c path="lime.ui._MouseEventManager.MouseEventInfo"/></eventInfo>
		<window static="1"><c path="lime.ui.Window"/></window>
		<create public="1" set="method" line="31" static="1"><f a=""><x path="Void"/></f></create>
		<handleEvent set="method" line="42" static="1"><f a="event">
	<c path="js.html.MouseEvent"/>
	<x path="Void"/>
</f></handleEvent>
		<registerWindow set="method" line="158" static="1"><f a="_window">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></registerWindow>
		<meta><m n=":allow"><e>'???'</e></m></meta>
	</class>
	<class path="lime.ui._MouseEventManager.MouseEventInfo" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/MouseEventManager.hx" private="1" module="lime.ui.MouseEventManager">
		<button public="1"><x path="Int"/></button>
		<type public="1"><x path="lime.ui._MouseEventManager.MouseEventType"/></type>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<clone public="1" set="method" line="224"><f a=""><c path="lime.ui._MouseEventManager.MouseEventInfo"/></f></clone>
		<new public="1" set="method" line="214"><f a="?type:?x:?y:?button" v="null:0:0:0">
	<x path="lime.ui._MouseEventManager.MouseEventType"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.ui._MouseEventManager.MouseEventType" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/MouseEventManager.hx" private="1" module="lime.ui.MouseEventManager">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._MouseEventManager.MouseEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/MouseEventManager.hx" private="1" module="lime.ui.MouseEventManager">
	<MOUSE_DOWN public="1" get="inline" set="null" line="236" static="1">
		<x path="lime.ui._MouseEventManager.MouseEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOUSE_DOWN>
	<MOUSE_UP public="1" get="inline" set="null" line="237" static="1">
		<x path="lime.ui._MouseEventManager.MouseEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOUSE_UP>
	<MOUSE_MOVE public="1" get="inline" set="null" line="238" static="1">
		<x path="lime.ui._MouseEventManager.MouseEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOUSE_MOVE>
	<MOUSE_WHEEL public="1" get="inline" set="null" line="239" static="1">
		<x path="lime.ui._MouseEventManager.MouseEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOUSE_WHEEL>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._MouseEventManager.MouseEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/MouseEventManager.hx" private="1" module="lime.ui.MouseEventManager">
		<MOUSE_DOWN public="1" get="inline" set="null" line="236" static="1">
			<x path="lime.ui._MouseEventManager.MouseEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOUSE_DOWN>
		<MOUSE_UP public="1" get="inline" set="null" line="237" static="1">
			<x path="lime.ui._MouseEventManager.MouseEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOUSE_UP>
		<MOUSE_MOVE public="1" get="inline" set="null" line="238" static="1">
			<x path="lime.ui._MouseEventManager.MouseEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOUSE_MOVE>
		<MOUSE_WHEEL public="1" get="inline" set="null" line="239" static="1">
			<x path="lime.ui._MouseEventManager.MouseEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOUSE_WHEEL>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.ui.TouchEventManager" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/TouchEventManager.hx">
		<onTouchEnd public="1" line="17" static="1"><c path="lime.app.Event"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onTouchEnd>
		<onTouchMove public="1" line="18" static="1"><c path="lime.app.Event"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onTouchMove>
		<onTouchStart public="1" line="19" static="1"><c path="lime.app.Event"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onTouchStart>
		<eventInfo static="1"><c path="lime.ui._TouchEventManager.TouchEventInfo"/></eventInfo>
		<window static="1"><c path="lime.ui.Window"/></window>
		<create public="1" set="method" line="28" static="1"><f a=""><x path="Void"/></f></create>
		<handleEvent set="method" line="39" static="1"><f a="event">
	<c path="js.html.TouchEvent"/>
	<x path="Void"/>
</f></handleEvent>
		<registerWindow set="method" line="132" static="1"><f a="window">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></registerWindow>
		<meta><m n=":allow"><e>'???'</e></m></meta>
	</class>
	<class path="lime.ui._TouchEventManager.TouchEventInfo" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/TouchEventManager.hx" private="1" module="lime.ui.TouchEventManager">
		<id public="1"><x path="Int"/></id>
		<type public="1"><x path="lime.ui._TouchEventManager.TouchEventType"/></type>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<clone public="1" set="method" line="181"><f a=""><c path="lime.ui._TouchEventManager.TouchEventInfo"/></f></clone>
		<new public="1" set="method" line="171"><f a="?type:?x:?y:?id" v="null:0:0:0">
	<x path="lime.ui._TouchEventManager.TouchEventType"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.ui._TouchEventManager.TouchEventType" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/TouchEventManager.hx" private="1" module="lime.ui.TouchEventManager">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._TouchEventManager.TouchEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/TouchEventManager.hx" private="1" module="lime.ui.TouchEventManager">
	<TOUCH_START public="1" get="inline" set="null" line="193" static="1">
		<x path="lime.ui._TouchEventManager.TouchEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOUCH_START>
	<TOUCH_END public="1" get="inline" set="null" line="194" static="1">
		<x path="lime.ui._TouchEventManager.TouchEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOUCH_END>
	<TOUCH_MOVE public="1" get="inline" set="null" line="195" static="1">
		<x path="lime.ui._TouchEventManager.TouchEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TOUCH_MOVE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._TouchEventManager.TouchEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/TouchEventManager.hx" private="1" module="lime.ui.TouchEventManager">
		<TOUCH_START public="1" get="inline" set="null" line="193" static="1">
			<x path="lime.ui._TouchEventManager.TouchEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOUCH_START>
		<TOUCH_END public="1" get="inline" set="null" line="194" static="1">
			<x path="lime.ui._TouchEventManager.TouchEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOUCH_END>
		<TOUCH_MOVE public="1" get="inline" set="null" line="195" static="1">
			<x path="lime.ui._TouchEventManager.TouchEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TOUCH_MOVE>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="lime.ui._Window.WindowEventInfo" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/Window.hx" private="1" module="lime.ui.Window">
		<height public="1"><x path="Int"/></height>
		<type public="1"><x path="lime.ui._Window.WindowEventType"/></type>
		<width public="1"><x path="Int"/></width>
		<x public="1"><x path="Int"/></x>
		<y public="1"><x path="Int"/></y>
		<clone public="1" set="method" line="463"><f a=""><c path="lime.ui._Window.WindowEventInfo"/></f></clone>
		<new public="1" set="method" line="452"><f a="?type:?width:?height:?x:?y" v="null:0:0:0:0">
	<x path="lime.ui._Window.WindowEventType"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.ui.Window" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/Window.hx">
		<onWindowActivate public="1" line="26" static="1"><c path="lime.app.Event"><f a=""><x path="Void"/></f></c></onWindowActivate>
		<onWindowClose public="1" line="27" static="1"><c path="lime.app.Event"><f a=""><x path="Void"/></f></c></onWindowClose>
		<onWindowDeactivate public="1" line="28" static="1"><c path="lime.app.Event"><f a=""><x path="Void"/></f></c></onWindowDeactivate>
		<onWindowFocusIn public="1" line="29" static="1"><c path="lime.app.Event"><f a=""><x path="Void"/></f></c></onWindowFocusIn>
		<onWindowFocusOut public="1" line="30" static="1"><c path="lime.app.Event"><f a=""><x path="Void"/></f></c></onWindowFocusOut>
		<onWindowMove public="1" line="31" static="1"><c path="lime.app.Event"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></onWindowMove>
		<onWindowResize public="1" line="32" static="1"><c path="lime.app.Event"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></onWindowResize>
		<eventInfo line="34" static="1"><c path="lime.ui._Window.WindowEventInfo"/></eventInfo>
		<registered static="1"><x path="Bool"/></registered>
		<currentRenderer public="1"><c path="lime.graphics.Renderer"/></currentRenderer>
		<config public="1"><t path="lime.app.Config"/></config>
		<fullscreen public="1"><x path="Bool"/></fullscreen>
		<height public="1"><x path="Int"/></height>
		<width public="1"><x path="Int"/></width>
		<x public="1"><x path="Int"/></x>
		<y public="1"><x path="Int"/></y>
		<canvas public="1"><c path="js.html.CanvasElement"/></canvas>
		<div public="1"><c path="js.html.DivElement"/></div>
		<element public="1"><c path="js.html.HtmlElement"/></element>
		<setHeight><x path="Int"/></setHeight>
		<setWidth><x path="Int"/></setWidth>
		<create public="1" set="method" line="77"><f a="application">
	<c path="lime.app.Application"/>
	<x path="Void"/>
</f></create>
		<dispatch set="method" line="227"><f a=""><x path="Void"/></f></dispatch>
		<handleDOMEvent set="method" line="271"><f a="event">
	<c path="js.html.Event"/>
	<x path="Void"/>
</f></handleDOMEvent>
		<handleDOMResize set="method" line="317"><f a=""><x path="Void"/></f></handleDOMResize>
		<move public="1" set="method" line="410"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></move>
		<resize public="1" set="method" line="419"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<new public="1" set="method" line="60"><f a="config">
	<t path="lime.app.Config"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<abstract path="lime.ui._Window.WindowFlags" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/Window.hx" private="1" module="lime.ui.Window">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._Window.WindowFlags_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/Window.hx" private="1" module="lime.ui.Window">
	<WINDOW_FLAG_FULLSCREEN public="1" get="inline" set="null" line="475" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_FULLSCREEN>
	<WINDOW_FLAG_BORDERLESS public="1" get="inline" set="null" line="476" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_BORDERLESS>
	<WINDOW_FLAG_RESIZABLE public="1" get="inline" set="null" line="477" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_RESIZABLE>
	<WINDOW_FLAG_HARDWARE public="1" get="inline" set="null" line="478" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_HARDWARE>
	<WINDOW_FLAG_VSYNC public="1" get="inline" set="null" line="479" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_VSYNC>
	<WINDOW_FLAG_HW_AA public="1" get="inline" set="null" line="480" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_HW_AA>
	<WINDOW_FLAG_HW_AA_HIRES public="1" get="inline" set="null" line="481" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_HW_AA_HIRES>
	<WINDOW_FLAG_ALLOW_SHADERS public="1" get="inline" set="null" line="482" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_ALLOW_SHADERS>
	<WINDOW_FLAG_REQUIRE_SHADERS public="1" get="inline" set="null" line="483" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_REQUIRE_SHADERS>
	<WINDOW_FLAG_DEPTH_BUFFER public="1" get="inline" set="null" line="484" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_DEPTH_BUFFER>
	<WINDOW_FLAG_STENCIL_BUFFER public="1" get="inline" set="null" line="485" static="1">
		<x path="lime.ui._Window.WindowFlags"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FLAG_STENCIL_BUFFER>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._Window.WindowFlags_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/Window.hx" private="1" module="lime.ui.Window">
		<WINDOW_FLAG_FULLSCREEN public="1" get="inline" set="null" line="475" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_FULLSCREEN>
		<WINDOW_FLAG_BORDERLESS public="1" get="inline" set="null" line="476" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_BORDERLESS>
		<WINDOW_FLAG_RESIZABLE public="1" get="inline" set="null" line="477" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_RESIZABLE>
		<WINDOW_FLAG_HARDWARE public="1" get="inline" set="null" line="478" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_HARDWARE>
		<WINDOW_FLAG_VSYNC public="1" get="inline" set="null" line="479" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_VSYNC>
		<WINDOW_FLAG_HW_AA public="1" get="inline" set="null" line="480" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_HW_AA>
		<WINDOW_FLAG_HW_AA_HIRES public="1" get="inline" set="null" line="481" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_HW_AA_HIRES>
		<WINDOW_FLAG_ALLOW_SHADERS public="1" get="inline" set="null" line="482" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_ALLOW_SHADERS>
		<WINDOW_FLAG_REQUIRE_SHADERS public="1" get="inline" set="null" line="483" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_REQUIRE_SHADERS>
		<WINDOW_FLAG_DEPTH_BUFFER public="1" get="inline" set="null" line="484" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_DEPTH_BUFFER>
		<WINDOW_FLAG_STENCIL_BUFFER public="1" get="inline" set="null" line="485" static="1">
			<x path="lime.ui._Window.WindowFlags"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FLAG_STENCIL_BUFFER>
		<meta><m n=":enum"/></meta>
	</class>
	<abstract path="lime.ui._Window.WindowEventType" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/Window.hx" private="1" module="lime.ui.Window">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._Window.WindowEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/Window.hx" private="1" module="lime.ui.Window">
	<WINDOW_ACTIVATE public="1" get="inline" set="null" line="492" static="1">
		<x path="lime.ui._Window.WindowEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_ACTIVATE>
	<WINDOW_CLOSE public="1" get="inline" set="null" line="493" static="1">
		<x path="lime.ui._Window.WindowEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_CLOSE>
	<WINDOW_DEACTIVATE public="1" get="inline" set="null" line="494" static="1">
		<x path="lime.ui._Window.WindowEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_DEACTIVATE>
	<WINDOW_FOCUS_IN public="1" get="inline" set="null" line="495" static="1">
		<x path="lime.ui._Window.WindowEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FOCUS_IN>
	<WINDOW_FOCUS_OUT public="1" get="inline" set="null" line="496" static="1">
		<x path="lime.ui._Window.WindowEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_FOCUS_OUT>
	<WINDOW_MOVE public="1" get="inline" set="null" line="497" static="1">
		<x path="lime.ui._Window.WindowEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_MOVE>
	<WINDOW_RESIZE public="1" get="inline" set="null" line="498" static="1">
		<x path="lime.ui._Window.WindowEventType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WINDOW_RESIZE>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._Window.WindowEventType_Impl_" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/ui/Window.hx" private="1" module="lime.ui.Window">
		<WINDOW_ACTIVATE public="1" get="inline" set="null" line="492" static="1">
			<x path="lime.ui._Window.WindowEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_ACTIVATE>
		<WINDOW_CLOSE public="1" get="inline" set="null" line="493" static="1">
			<x path="lime.ui._Window.WindowEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_CLOSE>
		<WINDOW_DEACTIVATE public="1" get="inline" set="null" line="494" static="1">
			<x path="lime.ui._Window.WindowEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_DEACTIVATE>
		<WINDOW_FOCUS_IN public="1" get="inline" set="null" line="495" static="1">
			<x path="lime.ui._Window.WindowEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FOCUS_IN>
		<WINDOW_FOCUS_OUT public="1" get="inline" set="null" line="496" static="1">
			<x path="lime.ui._Window.WindowEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_FOCUS_OUT>
		<WINDOW_MOVE public="1" get="inline" set="null" line="497" static="1">
			<x path="lime.ui._Window.WindowEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_MOVE>
		<WINDOW_RESIZE public="1" get="inline" set="null" line="498" static="1">
			<x path="lime.ui._Window.WindowEventType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WINDOW_RESIZE>
		<meta><m n=":enum"/></meta>
	</class>
	<typedef path="lime.utils.ArrayBuffer" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/ArrayBuffer.hx"><c path="js.html.ArrayBuffer"/></typedef>
	<typedef path="lime.utils.ArrayBufferView" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/ArrayBufferView.hx"><c path="js.html.ArrayBufferView"/></typedef>
	<class path="lime.utils.ByteArray" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/ByteArray.hx">
		<fromBytes public="1" set="method" line="277" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.utils.ByteArray"/>
</f></fromBytes>
		<readFile public="1" set="method" line="386" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.utils.ByteArray"/>
</f></readFile>
		<__ofBuffer public="1" set="method" line="1021" static="1"><f a="buffer">
	<t path="lime.utils.ArrayBuffer"/>
	<c path="lime.utils.ByteArray"/>
</f></__ofBuffer>
		<lime_byte_array_overwrite_file line="1135" static="1"><unknown/></lime_byte_array_overwrite_file>
		<lime_byte_array_read_file line="1136" static="1"><unknown/></lime_byte_array_read_file>
		<lime_lzma_decode line="1137" static="1"><unknown/></lime_lzma_decode>
		<lime_lzma_encode line="1138" static="1"><unknown/></lime_lzma_encode>
		<bytesAvailable public="1" get="accessor" set="null"><x path="Int"/></bytesAvailable>
		<endian public="1" get="accessor" set="accessor"><c path="String"/></endian>
		<length public="1" set="accessor"><x path="Int"/></length>
		<objectEncoding public="1"><x path="Int"/></objectEncoding>
		<position public="1"><x path="Int"/></position>
		<allocated><x path="Int"/></allocated>
		<littleEndian><x path="Bool"/></littleEndian>
		<byteView public="1"><c path="js.html.Uint8Array"/></byteView>
		<data><c path="js.html.DataView"/></data>
		<clear public="1" set="method" line="167"><f a=""><x path="Void"/></f></clear>
		<compress public="1" set="method" line="175"><f a="?algorithm" v="null">
	<e path="lime.utils.CompressionAlgorithm"/>
	<x path="Void"/>
</f></compress>
		<deflate public="1" set="method" line="225"><f a=""><x path="Void"/></f></deflate>
		<inflate public="1" set="method" line="293"><f a=""><x path="Void"/></f></inflate>
		<readBoolean public="1" get="inline" set="null" line="300"><f a=""><x path="Bool"/></f></readBoolean>
		<readByte public="1" get="inline" set="null" line="311"><f a=""><x path="Int"/></f></readByte>
		<readBytes public="1" set="method" line="324"><f a="bytes:?offset:?length" v=":0:0">
	<c path="lime.utils.ByteArray"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></readBytes>
		<readDouble public="1" set="method" line="371"><f a=""><x path="Float"/></f></readDouble>
		<readFloat public="1" set="method" line="399"><f a=""><x path="Float"/></f></readFloat>
		<readInt public="1" set="method" line="414"><f a=""><x path="Int"/></f></readInt>
		<readMultiByte public="1" get="inline" set="null" line="431"><f a="length:charSet">
	<x path="Int"/>
	<c path="String"/>
	<c path="String"/>
</f></readMultiByte>
		<readShort public="1" set="method" line="438"><f a=""><x path="Int"/></f></readShort>
		<readUnsignedByte public="1" get="inline" set="null" line="454"><f a=""><x path="Int"/></f></readUnsignedByte>
		<readUnsignedInt public="1" set="method" line="466"><f a=""><x path="Int"/></f></readUnsignedInt>
		<readUnsignedShort public="1" set="method" line="483"><f a=""><x path="Int"/></f></readUnsignedShort>
		<readUTF public="1" set="method" line="498"><f a=""><c path="String"/></f></readUTF>
		<readUTFBytes public="1" set="method" line="506"><f a="len">
	<x path="Int"/>
	<c path="String"/>
</f></readUTFBytes>
		<toString public="1" set="method" line="628"><f a=""><c path="String"/></f></toString>
		<uncompress public="1" set="method" line="639"><f a="?algorithm" v="null">
	<e path="lime.utils.CompressionAlgorithm"/>
	<x path="Void"/>
</f></uncompress>
		<write_uncheck get="inline" set="null" line="697"><f a="byte">
	<x path="Int"/>
	<x path="Void"/>
</f></write_uncheck>
		<writeBoolean public="1" get="inline" set="null" line="708"><f a="value">
	<x path="Bool"/>
	<x path="Void"/>
</f></writeBoolean>
		<writeByte public="1" set="method" line="715"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeByte>
		<writeBytes public="1" set="method" line="734"><f a="bytes:?offset:?length" v=":0:0">
	<c path="lime.utils.ByteArray"/>
	<x path="UInt"/>
	<x path="UInt"/>
	<x path="Void"/>
</f></writeBytes>
		<writeDouble public="1" set="method" line="754"><f a="x">
	<x path="Float"/>
	<x path="Void"/>
</f></writeDouble>
		<writeFile public="1" set="method" line="769"><f a="path">
	<c path="String"/>
	<x path="Void"/>
</f></writeFile>
		<writeFloat public="1" set="method" line="782"><f a="x">
	<x path="Float"/>
	<x path="Void"/>
</f></writeFloat>
		<writeInt public="1" set="method" line="797"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeInt>
		<writeShort public="1" set="method" line="826"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeShort>
		<writeUnsignedInt public="1" set="method" line="852"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeUnsignedInt>
		<writeUnsignedShort public="1" set="method" line="865"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></writeUnsignedShort>
		<writeUTF public="1" set="method" line="878"><f a="value">
	<c path="String"/>
	<x path="Void"/>
</f></writeUTF>
		<writeUTFBytes public="1" set="method" line="896"><f a="value">
	<c path="String"/>
	<x path="Void"/>
</f></writeUTFBytes>
		<__fromBytes get="inline" set="null" line="941"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Void"/>
</f></__fromBytes>
		<__get public="1" get="inline" set="null" line="958">
			<f a="pos">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":keep"/></meta>
		</__get>
		<__getBuffer public="1" get="inline" set="null" line="976"><f a=""><c path="js.html.ArrayBuffer"/></f></__getBuffer>
		<__getUTFBytesCount set="method" line="985"><f a="value">
	<c path="String"/>
	<x path="Int"/>
</f></__getUTFBytesCount>
		<___resizeBuffer set="method" line="1034"><f a="len">
	<x path="Int"/>
	<x path="Void"/>
</f></___resizeBuffer>
		<__set public="1" get="inline" set="null" line="1053">
			<f a="pos:v">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":keep"/></meta>
		</__set>
		<get_bytesAvailable get="inline" set="null" line="1082"><f a=""><x path="Int"/></f></get_bytesAvailable>
		<get_endian get="inline" set="null" line="1098"><f a=""><c path="String"/></f></get_endian>
		<set_endian get="inline" set="null" line="1105"><f a="endian">
	<c path="String"/>
	<c path="String"/>
</f></set_endian>
		<set_length get="inline" set="null" line="1113"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></set_length>
		<new public="1" set="method" line="115"><f a="?size" v="0">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":autoBuild"><e>'???'</e></m></meta>
	</class>
	<enum path="lime.utils.CompressionAlgorithm" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/CompressionAlgorithm.hx">
		<DEFLATE/>
		<ZLIB/>
		<LZMA/>
		<GZIP/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<typedef path="lime.utils.Float32Array" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/Float32Array.hx"><c path="js.html.Float32Array"/></typedef>
	<class path="lime.utils.GLUtils" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/GLUtils.hx">
		<compileShader public="1" set="method" line="12" static="1"><f a="source:type">
	<c path="String"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShader"/>
</f></compileShader>
		<createProgram public="1" set="method" line="35" static="1"><f a="vertexSource:fragmentSource">
	<c path="String"/>
	<c path="String"/>
	<t path="lime.graphics.opengl.GLProgram"/>
</f></createProgram>
	</class>
	<class path="lime.utils.IDataInput" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/IDataInput.hx" interface="1">
		<bytesAvailable public="1" get="accessor" set="null"><x path="Int"/></bytesAvailable>
		<endian public="1" get="accessor" set="accessor"><c path="String"/></endian>
		<readBoolean public="1" set="method"><f a=""><x path="Bool"/></f></readBoolean>
		<readByte public="1" set="method"><f a=""><x path="Int"/></f></readByte>
		<readBytes public="1" set="method"><f a="outData:?inOffset:?inLen">
	<c path="lime.utils.ByteArray"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></readBytes>
		<readDouble public="1" set="method"><f a=""><x path="Float"/></f></readDouble>
		<readFloat public="1" set="method"><f a=""><x path="Float"/></f></readFloat>
		<readInt public="1" set="method"><f a=""><x path="Int"/></f></readInt>
		<readShort public="1" set="method"><f a=""><x path="Int"/></f></readShort>
		<readUnsignedByte public="1" set="method"><f a=""><x path="Int"/></f></readUnsignedByte>
		<readUnsignedInt public="1" set="method"><f a=""><x path="Int"/></f></readUnsignedInt>
		<readUnsignedShort public="1" set="method"><f a=""><x path="Int"/></f></readUnsignedShort>
		<readUTF public="1" set="method"><f a=""><c path="String"/></f></readUTF>
		<readUTFBytes public="1" set="method"><f a="inLen">
	<x path="Int"/>
	<c path="String"/>
</f></readUTFBytes>
		<get_bytesAvailable set="method"><f a=""><x path="Int"/></f></get_bytesAvailable>
		<get_endian set="method"><f a=""><c path="String"/></f></get_endian>
		<set_endian set="method"><f a="s">
	<c path="String"/>
	<c path="String"/>
</f></set_endian>
	</class>
	<class path="lime.utils.IMemoryRange" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/IMemoryRange.hx" interface="1">
		<getByteBuffer public="1" set="method"><f a=""><c path="lime.utils.ByteArray"/></f></getByteBuffer>
		<getStart public="1" set="method"><f a=""><x path="Int"/></f></getStart>
		<getLength public="1" set="method"><f a=""><x path="Int"/></f></getLength>
	</class>
	<typedef path="lime.utils.Int16Array" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/Int16Array.hx"><c path="js.html.Int16Array"/></typedef>
	<typedef path="lime.utils.Int32Array" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/Int32Array.hx"><c path="js.html.Int32Array"/></typedef>
	<typedef path="lime.utils.UInt16Array" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/UInt16Array.hx"><c path="js.html.Uint16Array"/></typedef>
	<typedef path="lime.utils.UInt8Array" params="" file="/usr/lib/haxe/lib/lime/2,0,1/lime/utils/UInt8Array.hx"><c path="js.html.Uint8Array"/></typedef>
	<class path="openfl.IAssetCache" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Assets.hx" module="openfl.Assets" interface="1">
		<enabled public="1" get="null" set="null"><x path="Bool"/></enabled>
		<clear public="1" set="method"><f a="?prefix">
	<c path="String"/>
	<x path="Void"/>
</f></clear>
		<getBitmapData public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="openfl.display.BitmapData"/>
</f></getBitmapData>
		<getFont public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="openfl.text.Font"/>
</f></getFont>
		<getSound public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="openfl.media.Sound"/>
</f></getSound>
		<hasBitmapData public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></hasBitmapData>
		<hasFont public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></hasFont>
		<hasSound public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></hasSound>
		<removeBitmapData public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></removeBitmapData>
		<removeFont public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></removeFont>
		<removeSound public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></removeSound>
		<setBitmapData public="1" set="method"><f a="id:bitmapData">
	<c path="String"/>
	<c path="openfl.display.BitmapData"/>
	<x path="Void"/>
</f></setBitmapData>
		<setFont public="1" set="method"><f a="id:font">
	<c path="String"/>
	<c path="openfl.text.Font"/>
	<x path="Void"/>
</f></setFont>
		<setSound public="1" set="method"><f a="id:sound">
	<c path="String"/>
	<c path="openfl.media.Sound"/>
	<x path="Void"/>
</f></setSound>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<class path="openfl.AssetCache" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Assets.hx" module="openfl.Assets">
		<implements path="openfl.IAssetCache"/>
		<enabled public="1" get="accessor" set="accessor"><x path="Bool"/></enabled>
		<bitmapData public="1">
			<x path="Map">
				<c path="String"/>
				<c path="openfl.display.BitmapData"/>
			</x>
			<meta><m n=":dox"><e>hide</e></m></meta>
		</bitmapData>
		<font public="1">
			<x path="Map">
				<c path="String"/>
				<c path="openfl.text.Font"/>
			</x>
			<meta><m n=":dox"><e>hide</e></m></meta>
		</font>
		<sound public="1">
			<x path="Map">
				<c path="String"/>
				<c path="openfl.media.Sound"/>
			</x>
			<meta><m n=":dox"><e>hide</e></m></meta>
		</sound>
		<__enabled><x path="Bool"/></__enabled>
		<clear public="1" set="method" line="892"><f a="?prefix" v="null">
	<c path="String"/>
	<x path="Void"/>
</f></clear>
		<getBitmapData public="1" set="method" line="943"><f a="id">
	<c path="String"/>
	<c path="openfl.display.BitmapData"/>
</f></getBitmapData>
		<getFont public="1" set="method" line="950"><f a="id">
	<c path="String"/>
	<c path="openfl.text.Font"/>
</f></getFont>
		<getSound public="1" set="method" line="957"><f a="id">
	<c path="String"/>
	<c path="openfl.media.Sound"/>
</f></getSound>
		<hasBitmapData public="1" set="method" line="964"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></hasBitmapData>
		<hasFont public="1" set="method" line="971"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></hasFont>
		<hasSound public="1" set="method" line="978"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></hasSound>
		<removeBitmapData public="1" set="method" line="985"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></removeBitmapData>
		<removeFont public="1" set="method" line="992"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></removeFont>
		<removeSound public="1" set="method" line="999"><f a="id">
	<c path="String"/>
	<x path="Bool"/>
</f></removeSound>
		<setBitmapData public="1" set="method" line="1006"><f a="id:bitmapData">
	<c path="String"/>
	<c path="openfl.display.BitmapData"/>
	<x path="Void"/>
</f></setBitmapData>
		<setFont public="1" set="method" line="1013"><f a="id:font">
	<c path="String"/>
	<c path="openfl.text.Font"/>
	<x path="Void"/>
</f></setFont>
		<setSound public="1" set="method" line="1020"><f a="id:sound">
	<c path="String"/>
	<c path="openfl.media.Sound"/>
	<x path="Void"/>
</f></setSound>
		<get_enabled set="method" line="1034"><f a=""><x path="Bool"/></f></get_enabled>
		<set_enabled set="method" line="1041"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_enabled>
		<new public="1" set="method" line="883"><f a=""><x path="Void"/></f></new>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<class path="openfl.Assets" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Assets.hx">
		<cache public="1" line="43" static="1"><c path="openfl.IAssetCache"/></cache>
		<dispatcher line="45" static="1"><c path="openfl.events.EventDispatcher"/></dispatcher>
		<addEventListener public="1" set="method" line="48" static="1"><f a="type:listener:?useCapture:?priority:?useWeakReference" v="::false:0:false">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></addEventListener>
		<dispatchEvent public="1" set="method" line="55" static="1"><f a="event">
	<c path="openfl.events.Event"/>
	<x path="Bool"/>
</f></dispatchEvent>
		<exists public="1" set="method" line="67" static="1">
			<f a="id:?type" v=":null">
				<c path="String"/>
				<x path="openfl.AssetType"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Returns whether a specific asset exists
	 * @param	id 		The ID or asset path for the file
	 * @param	type	The type of assets AssetType.BINARY | AssetType.FONT | AssetType.IMAGE | AssetType.MOVIE_CLIP | AssetType.MUSIC | AssetType.SOUND | AssetType.TEMPLATE | AssetType.TEXT
	 * @return	TRUE if an asset with a given id, and type exists FALSE otherwise</haxe_doc>
		</exists>
		<getBitmapData public="1" set="method" line="81" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="openfl.display.BitmapData"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded bitmap
	 * @usage		var bitmap = new Bitmap(Assets.getBitmapData("image.jpg"));
	 * @param	id		The ID or asset path for the bitmap
	 * @param	useCache		(Optional) Whether to use BitmapData from the cache(Default: true)
	 * @return		A new BitmapData object</haxe_doc>
		</getBitmapData>
		<getBytes public="1" set="method" line="130" static="1">
			<f a="id">
				<c path="String"/>
				<t path="openfl.utils.ByteArray"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded binary asset
	 * @usage		var bytes = Assets.getBytes("file.zip");
	 * @param	id		The ID or asset path for the file
	 * @return		A new ByteArray object</haxe_doc>
		</getBytes>
		<getFont public="1" set="method" line="143" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="openfl.text.Font"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded font
	 * @usage		var fontName = Assets.getFont("font.ttf").fontName;
	 * @param	id		The ID or asset path for the font
	 * @return		A new Font object</haxe_doc>
		</getFont>
		<getLibrary set="method" line="168" static="1"><f a="name">
	<c path="String"/>
	<c path="lime.AssetLibrary"/>
</f></getLibrary>
		<getMovieClip public="1" set="method" line="189" static="1">
			<f a="id">
				<c path="String"/>
				<c path="openfl.display.MovieClip"/>
			</f>
			<haxe_doc>* Gets an instance of a library MovieClip
	 * @usage		var movieClip = Assets.getMovieClip("library:BouncingBall");
	 * @param	id		The library and ID for the MovieClip
	 * @return		A new Sound object</haxe_doc>
		</getMovieClip>
		<getMusic public="1" set="method" line="236" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="openfl.media.Sound"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded streaming sound
	 * @usage		var sound = Assets.getMusic("sound.ogg");
	 * @param	id		The ID or asset path for the music track
	 * @return		A new Sound object</haxe_doc>
		</getMusic>
		<getPath public="1" set="method" line="266" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets the file path (if available) for an asset
	 * @usage		var path = Assets.getPath("image.jpg");
	 * @param	id		The ID or asset path for the asset
	 * @return		The path to the asset (or null)</haxe_doc>
		</getPath>
		<getSound public="1" set="method" line="279" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="openfl.media.Sound"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded sound
	 * @usage		var sound = Assets.getSound("sound.wav");
	 * @param	id		The ID or asset path for the sound
	 * @return		A new Sound object</haxe_doc>
		</getSound>
		<getText public="1" set="method" line="338" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded text asset
	 * @usage		var text = Assets.getText("text.txt");
	 * @param	id		The ID or asset path for the file
	 * @return		A new String object</haxe_doc>
		</getText>
		<hasEventListener public="1" set="method" line="345" static="1"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasEventListener>
		<isLocal public="1" set="method" line="358" static="1">
			<f a="id:?type:?useCache" v=":null:true">
				<c path="String"/>
				<x path="openfl.AssetType"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Returns whether an asset with a given id and "AssetType" exists within the cache or Asset Library
	 * @param	id 		The ID or asset path for the file
	 * @param	type	The type of assets AssetType.BINARY | AssetType.FONT | AssetType.IMAGE | AssetType.MOVIE_CLIP | AssetType.MUSIC | AssetType.SOUND | AssetType.TEMPLATE | AssetType.TEXT
	 * @param	useCache Whether or not to use the cache. if FALSE this function will search for the asset in any known library
	 * @return	whether or not an asset with the given id exists within the asset cache or any asset library;</haxe_doc>
		</isLocal>
		<isValidBitmapData set="method" line="401" static="1"><f a="bitmapData">
	<c path="openfl.display.BitmapData"/>
	<x path="Bool"/>
</f></isValidBitmapData>
		<isValidSound set="method" line="428" static="1"><f a="sound">
	<c path="openfl.media.Sound"/>
	<x path="Bool"/>
</f></isValidSound>
		<list public="1" set="method" line="448" static="1">
			<f a="?type" v="null">
				<x path="openfl.AssetType"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>* Returns an array of embeded assets
	 * @param	type	The type of assets to include AssetType.BINARY | AssetType.FONT | AssetType.IMAGE | AssetType.MOVIE_CLIP | AssetType.MUSIC | AssetType.SOUND | AssetType.TEMPLATE | AssetType.TEXT
	 * @return an Array of embeded assets</haxe_doc>
		</list>
		<loadBitmapData public="1" set="method" line="463" static="1">
			<f a="id:handler:?useCache" v="::true">
				<c path="String"/>
				<f a="">
					<c path="openfl.display.BitmapData"/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Asynchronously loads an instance of an embeded bitmap
	 * @usage 	Asset.loadBitmapData("MyReallyBigPic.jpg", function(_loadedBitmapData):Void{
	 * 				var myReallyBigBitmap = new Bitmap(_loadedBitmapData);
	 * 			});
	 * @param	id 		The ID or asset path for the file
	 * @param	handler	a funtion to handle the loaded BitmapData
	 * @param	useCache whether or not to add / retrieve the asset from the cache</haxe_doc>
		</loadBitmapData>
		<loadBytes public="1" set="method" line="515" static="1">
			<f a="id:handler">
				<c path="String"/>
				<f a="">
					<t path="openfl.utils.ByteArray"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<haxe_doc>* Asynchronously loads an instance of an embedded binary file
	 * @usage Asset.loadBytes("MyReallyBigBin.bin", function(_loadedByteArray):Void{
	 * 				myParserFunction(_loadedByteArray)
	 * 			});
	 * @param	id 		The ID or asset path for the file
	 * @param	handler	a funtion to handle the loaded ByteArray
	 * @param	useCache whether or not to add / retrieve the asset from the cache</haxe_doc>
		</loadBytes>
		<loadFont public="1" set="method" line="556" static="1">
			<f a="id:handler:?useCache" v="::true">
				<c path="String"/>
				<f a="">
					<c path="openfl.text.Font"/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Asynchronously loads an instance of an embedded font
	 * @usage Asset.loadFont("MyReallyLongSong.ttf", function(_loadedFont):Void{
	 * 				myTextFortmat.font = _loadedFont.fontName;
	 * 			});
	 * @param	id 		The ID or asset path for the file
	 * @param	handler	a funtion to handle the loaded font
	 * @param	useCache whether or not to add / retrieve the asset from the cache</haxe_doc>
		</loadFont>
		<loadLibrary public="1" set="method" line="615" static="1">
			<f a="name:handler">
				<c path="String"/>
				<f a="">
					<t path="lime._Assets.LimeAssetLibrary"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<haxe_doc>* Loads an Asset Library with a given Name
	 * @param	name the name of the library to load
	 * @param	handler the function to handle the loaded AssetLibrary</haxe_doc>
		</loadLibrary>
		<loadMusic public="1" set="method" line="630" static="1">
			<f a="id:handler:?useCache" v="::true">
				<c path="String"/>
				<f a="">
					<c path="openfl.media.Sound"/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Asynchronously loads an instance of an embedded streaming sound
	 * @usage Asset.loadMusic("MyReallyLongSong.ogg", function(_loadedSound):Void{
	 * 				_loadedSound.play();
	 * 			});
	 * @param	id 		The ID or asset path for the file
	 * @param	handler	a funtion to handle the loaded music
	 * @param	useCache whether or not to add / retrieve the asset from the cache</haxe_doc>
		</loadMusic>
		<loadMovieClip public="1" set="method" line="661" static="1">
			<f a="id:handler">
				<c path="String"/>
				<f a="">
					<c path="openfl.display.MovieClip"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<haxe_doc>* Asynchronously loads an instance of a MovieClip from a library
	 * @usage Asset.loadMovieClip("libary:MovieClip", function(_loadedMovieClip):Void{
	 * 				sprite.addChild(_loadedMovieClip);
	 * 			});
	 * @param	id 		The ID or asset path for the file
	 * @param	handler	a funtion to handle the loaded movieclip
	 * @param	useCache whether or not to add / retrieve the asset from the cache</haxe_doc>
		</loadMovieClip>
		<loadSound public="1" set="method" line="704" static="1">
			<f a="id:handler:?useCache" v="::true">
				<c path="String"/>
				<f a="">
					<c path="openfl.media.Sound"/>
					<x path="Void"/>
				</f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Asynchronously loads an instance of a sound.
	 * @usage Asset.loadSound("MyReallyShortSong.wav", function(_loadedSound):Void{
	 * 				_loadedSound.play();
	 * 			});
	 * @param	id 		The ID or asset path for the file
	 * @param	handler	a funtion to handle the loaded sound
	 * @param	useCache whether or not to add / retrieve the asset from the cache</haxe_doc>
		</loadSound>
		<loadText public="1" set="method" line="736" static="1">
			<f a="id:handler">
				<c path="String"/>
				<f a="">
					<c path="String"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<haxe_doc>* Asynchronously loads an instance of an embedded text
	 * @usage Asset.loadText("MyReallyLongText.txt", function(_loadedText):Void{
	 * 				myTextField.text = _loadedText;
	 * 			});
	 * @param	id 		The ID or asset path for the file
	 * @param	handler	a funtion to handle the loaded text
	 * @param	useCache whether or not to add / retrieve the asset from the cache</haxe_doc>
		</loadText>
		<registerLibrary public="1" set="method" line="747" static="1">
			<f a="name:library">
				<c path="String"/>
				<c path="openfl.AssetLibrary"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Registers an AssetLibrary
	 * @param	name the name of the library
	 * @param	library the AssetLibrary to register</haxe_doc>
		</registerLibrary>
		<removeEventListener public="1" set="method" line="754" static="1"><f a="type:listener:?capture" v="::false">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
	<x path="Void"/>
</f></removeEventListener>
		<resolveClass set="method" line="761" static="1"><f a="name">
	<c path="String"/>
	<x path="Class"><d/></x>
</f></resolveClass>
		<resolveEnum set="method" line="768" static="1"><f a="name">
	<c path="String"/>
	<x path="Enum"><d/></x>
</f></resolveEnum>
		<unloadLibrary public="1" set="method" line="787" static="1"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></unloadLibrary>
		<library_onEvent set="method" line="801" static="1"><f a="library:type">
	<c path="openfl.AssetLibrary"/>
	<c path="String"/>
	<x path="Void"/>
</f></library_onEvent>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl.AssetLibrary" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Assets.hx" module="openfl.Assets">
		<extends path="lime.AssetLibrary"/>
		<getMovieClip public="1" set="method" line="826"><f a="id">
	<c path="String"/>
	<c path="openfl.display.MovieClip"/>
</f></getMovieClip>
		<getMusic public="1" set="method" line="833"><f a="id">
	<c path="String"/>
	<c path="openfl.media.Sound"/>
</f></getMusic>
		<getSound public="1" set="method" line="840"><f a="id">
	<c path="String"/>
	<c path="openfl.media.Sound"/>
</f></getSound>
		<loadMovieClip public="1" set="method" line="847"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="openfl.display.MovieClip"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadMovieClip>
		<loadMusic public="1" set="method" line="854"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="openfl.media.Sound"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadMusic>
		<loadSound public="1" set="method" line="861"><f a="id:handler">
	<c path="String"/>
	<f a="">
		<c path="openfl.media.Sound"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></loadSound>
		<new public="1" set="method" line="819"><f a=""><x path="Void"/></f></new>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<abstract path="openfl.AssetType" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Assets.hx" module="openfl.Assets">
		<this><c path="String"/></this>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="openfl._Assets.AssetType_Impl_" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Assets.hx" private="1" module="openfl.Assets">
	<BINARY public="1" get="inline" set="null" line="1074" static="1">
		<x path="openfl.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BINARY>
	<FONT public="1" get="inline" set="null" line="1075" static="1">
		<x path="openfl.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONT>
	<IMAGE public="1" get="inline" set="null" line="1076" static="1">
		<x path="openfl.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IMAGE>
	<MOVIE_CLIP public="1" get="inline" set="null" line="1077" static="1">
		<x path="openfl.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MOVIE_CLIP>
	<MUSIC public="1" get="inline" set="null" line="1078" static="1">
		<x path="openfl.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUSIC>
	<SOUND public="1" get="inline" set="null" line="1079" static="1">
		<x path="openfl.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOUND>
	<TEMPLATE public="1" get="inline" set="null" line="1080" static="1">
		<x path="openfl.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEMPLATE>
	<TEXT public="1" get="inline" set="null" line="1081" static="1">
		<x path="openfl.AssetType"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="openfl._Assets.AssetType_Impl_" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Assets.hx" private="1" module="openfl.Assets">
		<BINARY public="1" get="inline" set="null" line="1074" static="1">
			<x path="openfl.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BINARY>
		<FONT public="1" get="inline" set="null" line="1075" static="1">
			<x path="openfl.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONT>
		<IMAGE public="1" get="inline" set="null" line="1076" static="1">
			<x path="openfl.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IMAGE>
		<MOVIE_CLIP public="1" get="inline" set="null" line="1077" static="1">
			<x path="openfl.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MOVIE_CLIP>
		<MUSIC public="1" get="inline" set="null" line="1078" static="1">
			<x path="openfl.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUSIC>
		<SOUND public="1" get="inline" set="null" line="1079" static="1">
			<x path="openfl.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOUND>
		<TEMPLATE public="1" get="inline" set="null" line="1080" static="1">
			<x path="openfl.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEMPLATE>
		<TEXT public="1" get="inline" set="null" line="1081" static="1">
			<x path="openfl.AssetType"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="openfl.display.MovieClip" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/MovieClip.hx">
		<extends path="openfl.display.Sprite"/>
		<currentFrame public="1" get="accessor" set="null"><x path="Int"/></currentFrame>
		<currentFrameLabel public="1" get="accessor" set="null"><c path="String"/></currentFrameLabel>
		<currentLabel public="1" get="accessor" set="null"><c path="String"/></currentLabel>
		<currentLabels public="1" get="accessor" set="null"><c path="Array"><c path="openfl.display.FrameLabel"/></c></currentLabels>
		<enabled public="1"><x path="Bool"/></enabled>
		<framesLoaded public="1" get="accessor" set="null"><x path="Int"/></framesLoaded>
		<totalFrames public="1" get="accessor" set="null"><x path="Int"/></totalFrames>
		<__currentFrame>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__currentFrame>
		<__currentFrameLabel>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__currentFrameLabel>
		<__currentLabel>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__currentLabel>
		<__currentLabels>
			<c path="Array"><c path="openfl.display.FrameLabel"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__currentLabels>
		<__totalFrames>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__totalFrames>
		<gotoAndPlay public="1" set="method" line="36"><f a="frame:?scene" v=":null">
	<d/>
	<c path="String"/>
	<x path="Void"/>
</f></gotoAndPlay>
		<gotoAndStop public="1" set="method" line="43"><f a="frame:?scene" v=":null">
	<d/>
	<c path="String"/>
	<x path="Void"/>
</f></gotoAndStop>
		<nextFrame public="1" set="method" line="50"><f a=""><x path="Void"/></f></nextFrame>
		<play public="1" set="method" line="57"><f a=""><x path="Void"/></f></play>
		<prevFrame public="1" set="method" line="64"><f a=""><x path="Void"/></f></prevFrame>
		<stop public="1" set="method" line="71"><f a=""><x path="Void"/></f></stop>
		<get_currentFrame set="method" line="85">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_currentFrame>
		<get_currentFrameLabel set="method" line="86">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_currentFrameLabel>
		<get_currentLabel set="method" line="87">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_currentLabel>
		<get_currentLabels set="method" line="88">
			<f a=""><c path="Array"><c path="openfl.display.FrameLabel"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_currentLabels>
		<get_framesLoaded set="method" line="89">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_framesLoaded>
		<get_totalFrames set="method" line="90">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_totalFrames>
		<new public="1" set="method" line="22"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.display.LoaderInfo" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/LoaderInfo.hx">
		<extends path="openfl.events.EventDispatcher"/>
		<create public="1" set="method" line="47" static="1"><f a="loader">
	<c path="openfl.display.Loader"/>
	<c path="openfl.display.LoaderInfo"/>
</f></create>
		<applicationDomain public="1"><c path="openfl.system.ApplicationDomain"/></applicationDomain>
		<bytes public="1" set="null"><t path="openfl.utils.ByteArray"/></bytes>
		<bytesLoaded public="1" set="null"><x path="Int"/></bytesLoaded>
		<bytesTotal public="1" set="null"><x path="Int"/></bytesTotal>
		<childAllowsParent public="1" set="null"><x path="Bool"/></childAllowsParent>
		<content public="1" set="null"><c path="openfl.display.DisplayObject"/></content>
		<contentType public="1" set="null"><c path="String"/></contentType>
		<frameRate public="1" set="null"><x path="Float"/></frameRate>
		<height public="1" set="null"><x path="Int"/></height>
		<loader public="1" set="null"><c path="openfl.display.Loader"/></loader>
		<loaderURL public="1" set="null"><c path="String"/></loaderURL>
		<parameters public="1" set="null"><d><c path="String"/></d></parameters>
		<parentAllowsChild public="1" set="null"><x path="Bool"/></parentAllowsChild>
		<sameDomain public="1" set="null"><x path="Bool"/></sameDomain>
		<sharedEvents public="1" set="null"><c path="openfl.events.EventDispatcher"/></sharedEvents>
		<uncaughtErrorEvents public="1" set="null"><c path="openfl.events.UncaughtErrorEvents"/></uncaughtErrorEvents>
		<url public="1" set="null"><c path="String"/></url>
		<width public="1" set="null"><x path="Int"/></width>
		<new set="method" line="34"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.system.ApplicationDomain" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/system/ApplicationDomain.hx">
		<currentDomain public="1" set="null" line="7" static="1"><c path="openfl.system.ApplicationDomain"/></currentDomain>
		<parentDomain public="1" set="null"><c path="openfl.system.ApplicationDomain"/></parentDomain>
		<getDefinition public="1" set="method" line="27"><f a="name">
	<c path="String"/>
	<d/>
</f></getDefinition>
		<hasDefinition public="1" set="method" line="34"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasDefinition>
		<new public="1" set="method" line="12"><f a="?parentDomain" v="null">
	<c path="openfl.system.ApplicationDomain"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.UncaughtErrorEvents" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/UncaughtErrorEvents.hx">
		<extends path="openfl.events.EventDispatcher"/>
		<new public="1" set="method" line="4"><f a="?target">
	<c path="openfl.events.IEventDispatcher"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.geom.Matrix" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/geom/Matrix.hx">
		<__identity line="20" static="1">
			<c path="openfl.geom.Matrix"/>
			<meta><m n=":noCompletion"/></meta>
		</__identity>
		<a public="1"><x path="Float"/></a>
		<b public="1"><x path="Float"/></b>
		<c public="1"><x path="Float"/></c>
		<d public="1"><x path="Float"/></d>
		<tx public="1"><x path="Float"/></tx>
		<ty public="1"><x path="Float"/></ty>
		<__array>
			<t path="lime.utils.Float32Array"/>
			<meta><m n=":noCompletion"/></meta>
		</__array>
		<clone public="1" get="inline" set="null" line="37"><f a=""><c path="openfl.geom.Matrix"/></f></clone>
		<concat public="1" set="method" line="44"><f a="m">
	<c path="openfl.geom.Matrix"/>
	<x path="Void"/>
</f></concat>
		<copyColumnFrom public="1" set="method" line="63"><f a="column:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyColumnFrom>
		<copyColumnTo public="1" set="method" line="89"><f a="column:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyColumnTo>
		<copyFrom public="1" set="method" line="118"><f a="sourceMatrix">
	<c path="openfl.geom.Matrix"/>
	<x path="Void"/>
</f></copyFrom>
		<copyRowFrom public="1" set="method" line="130"><f a="row:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyRowFrom>
		<copyRowTo public="1" set="method" line="156"><f a="row:vector3D">
	<x path="Int"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyRowTo>
		<createBox public="1" set="method" line="183"><f a="scaleX:scaleY:?rotation:?tx:?ty" v="::0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></createBox>
		<createGradientBox public="1" set="method" line="194"><f a="width:height:?rotation:?tx:?ty" v="::0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></createGradientBox>
		<equals public="1" set="method" line="223"><f a="matrix">
	<a>
		<ty set="null"><x path="Float"/></ty>
		<tx set="null"><x path="Float"/></tx>
		<d set="null"><x path="Float"/></d>
		<c set="null"><x path="Float"/></c>
		<b set="null"><x path="Float"/></b>
		<a set="null"><x path="Float"/></a>
	</a>
	<x path="Bool"/>
</f></equals>
		<deltaTransformPoint public="1" set="method" line="230"><f a="point">
	<c path="openfl.geom.Point"/>
	<c path="openfl.geom.Point"/>
</f></deltaTransformPoint>
		<identity public="1" set="method" line="237"><f a=""><x path="Void"/></f></identity>
		<invert public="1" set="method" line="249"><f a=""><c path="openfl.geom.Matrix"/></f></invert>
		<mult public="1" get="inline" set="null" line="281"><f a="m">
	<c path="openfl.geom.Matrix"/>
	<c path="openfl.geom.Matrix"/>
</f></mult>
		<rotate public="1" set="method" line="298"><f a="theta">
	<x path="Float"/>
	<x path="Void"/>
</f></rotate>
		<scale public="1" set="method" line="334"><f a="sx:sy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scale>
		<setRotation get="inline" set="null" line="357"><f a="theta:?scale" v=":1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setRotation>
		<setTo public="1" set="method" line="369"><f a="a:b:c:d:tx:ty">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<to3DString public="1" get="inline" set="null" line="381"><f a="?roundPixels" v="false">
	<x path="Bool"/>
	<c path="String"/>
</f></to3DString>
		<toMozString public="1" get="inline" set="null" line="404"><f a=""><c path="String"/></f></toMozString>
		<toString public="1" get="inline" set="null" line="411"><f a=""><c path="String"/></f></toString>
		<transformPoint public="1" set="method" line="418"><f a="pos">
	<c path="openfl.geom.Point"/>
	<c path="openfl.geom.Point"/>
</f></transformPoint>
		<translate public="1" set="method" line="425"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></translate>
		<toArray set="method" line="435">
			<f a="?transpose" v="false">
				<x path="Bool"/>
				<t path="lime.utils.Float32Array"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</toArray>
		<__cleanValues get="inline" set="null" line="468">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__cleanValues>
		<__transformX public="1" get="inline" set="null" line="480">
			<f a="pos">
				<c path="openfl.geom.Point"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__transformX>
		<__transformY public="1" get="inline" set="null" line="487">
			<f a="pos">
				<c path="openfl.geom.Point"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__transformY>
		<__translateTransformed public="1" get="inline" set="null" line="494">
			<f a="pos">
				<c path="openfl.geom.Point"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__translateTransformed>
		<new public="1" set="method" line="23"><f a="?a:?b:?c:?d:?tx:?ty" v="1:0:0:1:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.Lib" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Lib.hx">
		<application public="1" static="1"><c path="openfl.display.Application"/></application>
		<current public="1" set="null" line="24" static="1"><c path="openfl.display.MovieClip"/></current>
		<__sentWarnings line="29" static="1">
			<x path="Map">
				<c path="String"/>
				<x path="Bool"/>
			</x>
			<meta><m n=":noCompletion"/></meta>
		</__sentWarnings>
		<__startTime line="30" static="1">
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__startTime>
		<as public="1" params="T" set="method" line="33" static="1"><f a="v:c">
	<d/>
	<x path="Class"><c path="as.T"/></x>
	<t path="Null"><c path="as.T"/></t>
</f></as>
		<attach public="1" set="method" line="44" static="1"><f a="name">
	<c path="String"/>
	<c path="openfl.display.MovieClip"/>
</f></attach>
		<embed public="1" set="method" line="57" static="1">
			<f a="elementName:?width:?height:?background" v=":null:null:null">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":keep"/>
				<m n=":expose"><e>"openfl.embed"</e></m>
			</meta>
		</embed>
		<getTimer public="1" set="method" line="83" static="1"><f a=""><x path="Int"/></f></getTimer>
		<getURL public="1" set="method" line="94" static="1"><f a="request:?target" v=":null">
	<c path="openfl.net.URLRequest"/>
	<c path="String"/>
	<x path="Void"/>
</f></getURL>
		<notImplemented public="1" set="method" line="111" static="1"><f a="api">
	<c path="String"/>
	<x path="Void"/>
</f></notImplemented>
		<preventDefaultTouchMove public="1" set="method" line="124" static="1"><f a=""><x path="Void"/></f></preventDefaultTouchMove>
		<trace public="1" set="method" line="146" static="1"><f a="arg">
	<d/>
	<x path="Void"/>
</f></trace>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl.Memory" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Memory.hx">
		<gcRef static="1"><t path="openfl.utils.ByteArray"/></gcRef>
		<len static="1"><x path="Int"/></len>
		<_setPositionTemporarily params="T" set="method" line="15" static="1">
			<f a="position:action">
				<x path="Int"/>
				<f a=""><c path="_setPositionTemporarily.T"/></f>
				<c path="_setPositionTemporarily.T"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</_setPositionTemporarily>
		<getByte public="1" get="inline" set="null" line="27" static="1"><f a="addr">
	<x path="Int"/>
	<x path="Int"/>
</f></getByte>
		<getDouble public="1" get="inline" set="null" line="36" static="1"><f a="addr">
	<x path="Int"/>
	<x path="Float"/>
</f></getDouble>
		<getFloat public="1" get="inline" set="null" line="49" static="1"><f a="addr">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<getI32 public="1" get="inline" set="null" line="62" static="1"><f a="addr">
	<x path="Int"/>
	<x path="Int"/>
</f></getI32>
		<getUI16 public="1" get="inline" set="null" line="75" static="1"><f a="addr">
	<x path="Int"/>
	<x path="Int"/>
</f></getUI16>
		<select public="1" set="method" line="88" static="1"><f a="inBytes">
	<t path="openfl.utils.ByteArray"/>
	<x path="Void"/>
</f></select>
		<setByte public="1" get="inline" set="null" line="96" static="1"><f a="addr:v">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setByte>
		<setDouble public="1" get="inline" set="null" line="105" static="1"><f a="addr:v">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setDouble>
		<setFloat public="1" get="inline" set="null" line="118" static="1"><f a="addr:v">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat>
		<setI16 public="1" get="inline" set="null" line="131" static="1"><f a="addr:v">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setI16>
		<setI32 public="1" get="inline" set="null" line="144" static="1"><f a="addr:v">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setI32>
	</class>
	<abstract path="openfl.Vector" params="T" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Vector.hx">
		<from>
			<icast field="fromArray"><c path="Array"><c path="fromArray.T"/></c></icast>
			<icast field="fromHaxeVector"><x path="haxe.ds.Vector"><c path="fromHaxeVector.T"/></x></icast>
			<icast field="fromVectorData"><c path="openfl.VectorData"><c path="fromVectorData.T"/></c></icast>
		</from>
		<this><c path="openfl.VectorData"><c path="openfl.Vector.T"/></c></this>
		<to>
			<icast field="toArray"><c path="Array"><c path="toArray.T"/></c></icast>
			<icast field="toHaxeVector"><x path="haxe.ds.Vector"><c path="toHaxeVector.T"/></x></icast>
			<icast field="toVectorData"><c path="openfl.VectorData"><c path="toVectorData.T"/></c></icast>
		</to>
		<impl><class path="openfl._Vector.Vector_Impl_" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Vector.hx" private="1" module="openfl.Vector">
	<length public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<fixed public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</fixed>
	<_new public="1" get="inline" set="null" line="215" static="1">
		<f a="?length:?fixed" v="0:false">
			<x path="Int"/>
			<x path="Bool"/>
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</_new>
	<concat public="1" get="inline" set="null" line="229" static="1">
		<f a="this:?a" v=":null">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</concat>
	<copy public="1" get="inline" set="null" line="250" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</copy>
	<iterator public="1" params="T" get="inline" set="null" line="266" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="iterator.T"/></c>
			<t path="Iterator"><c path="iterator.T"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</iterator>
	<join public="1" get="inline" set="null" line="273" static="1">
		<f a="this:sep">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</join>
	<pop public="1" get="inline" set="null" line="289" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<t path="Null"><c path="openfl.Vector.T"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</pop>
	<push public="1" get="inline" set="null" line="309" static="1">
		<f a="this:x">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<c path="openfl.Vector.T"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</push>
	<reverse public="1" get="inline" set="null" line="336" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</reverse>
	<shift public="1" get="inline" set="null" line="352" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<t path="Null"><c path="openfl.Vector.T"/></t>
		</f>
		<meta><m n=":impl"/></meta>
	</shift>
	<unshift public="1" get="inline" set="null" line="373" static="1">
		<f a="this:x">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<c path="openfl.Vector.T"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</unshift>
	<slice public="1" get="inline" set="null" line="408" static="1">
		<f a="this:?pos:?end" v=":0:0">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<x path="Int"/>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</slice>
	<sort public="1" get="inline" set="null" line="430" static="1">
		<f a="this:f">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<f a=":">
				<c path="openfl.Vector.T"/>
				<c path="openfl.Vector.T"/>
				<x path="Int"/>
			</f>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</sort>
	<splice public="1" get="inline" set="null" line="443" static="1">
		<f a="this:pos:len">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<x path="Int"/>
			<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</splice>
	<toString public="1" get="inline" set="null" line="475" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<indexOf public="1" get="inline" set="null" line="486" static="1">
		<f a="this:x:?from" v="::0">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<c path="openfl.Vector.T"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</indexOf>
	<lastIndexOf public="1" get="inline" set="null" line="506" static="1">
		<f a="this:x:?from" v="::0">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<c path="openfl.Vector.T"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</lastIndexOf>
	<ofArray public="1" params="T" get="inline" set="null" line="529" static="1"><f a="a">
	<c path="Array"><d/></c>
	<x path="openfl.Vector"><c path="ofArray.T"/></x>
</f></ofArray>
	<convert public="1" params="T:U" get="inline" set="null" line="544" static="1"><f a="v">
	<x path="openfl.Vector"><c path="convert.T"/></x>
	<x path="openfl.Vector"><c path="convert.U"/></x>
</f></convert>
	<get public="1" get="inline" set="null" line="551" static="1">
		<f a="this:index">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<t path="Null"><c path="openfl.Vector.T"/></t>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<set public="1" get="inline" set="null" line="558" static="1">
		<f a="this:key:value">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<c path="openfl.Vector.T"/>
			<c path="openfl.Vector.T"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
	<fromArray public="1" params="T" get="inline" set="null" line="581" static="1">
		<f a="value">
			<c path="Array"><c path="fromArray.T"/></c>
			<x path="openfl.Vector"><c path="fromArray.T"/></x>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":from"/>
		</meta>
	</fromArray>
	<toArray public="1" params="T" get="inline" set="null" line="596" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="toArray.T"/></c>
			<c path="Array"><c path="toArray.T"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":to"/>
		</meta>
	</toArray>
	<fromHaxeVector public="1" params="T" get="inline" set="null" line="611" static="1">
		<f a="value">
			<x path="haxe.ds.Vector"><c path="fromHaxeVector.T"/></x>
			<x path="openfl.Vector"><c path="fromHaxeVector.T"/></x>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":from"/>
		</meta>
	</fromHaxeVector>
	<toHaxeVector public="1" params="T" get="inline" set="null" line="630" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="toHaxeVector.T"/></c>
			<x path="haxe.ds.Vector"><c path="toHaxeVector.T"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":to"/>
		</meta>
	</toHaxeVector>
	<fromVectorData public="1" params="T" get="inline" set="null" line="641" static="1">
		<f a="value">
			<c path="openfl.VectorData"><c path="fromVectorData.T"/></c>
			<x path="openfl.Vector"><c path="fromVectorData.T"/></x>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":from"/>
		</meta>
	</fromVectorData>
	<toVectorData public="1" params="T" get="inline" set="null" line="648" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="toVectorData.T"/></c>
			<c path="openfl.VectorData"><c path="toVectorData.T"/></c>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":to"/>
		</meta>
	</toVectorData>
	<get_length get="inline" set="null" line="662" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_length>
	<set_length get="inline" set="null" line="669" static="1">
		<f a="this:value">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_length>
	<get_fixed get="inline" set="null" line="694" static="1">
		<f a="this">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_fixed>
	<set_fixed get="inline" set="null" line="701" static="1">
		<f a="this:value">
			<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_fixed>
</class></impl>
	</abstract>
	<class path="openfl._Vector.Vector_Impl_" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Vector.hx" private="1" module="openfl.Vector">
		<length public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<fixed public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</fixed>
		<_new public="1" get="inline" set="null" line="215" static="1">
			<f a="?length:?fixed" v="0:false">
				<x path="Int"/>
				<x path="Bool"/>
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</_new>
		<concat public="1" get="inline" set="null" line="229" static="1">
			<f a="this:?a" v=":null">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</concat>
		<copy public="1" get="inline" set="null" line="250" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</copy>
		<iterator public="1" params="T" get="inline" set="null" line="266" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="iterator.T"/></c>
				<t path="Iterator"><c path="iterator.T"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</iterator>
		<join public="1" get="inline" set="null" line="273" static="1">
			<f a="this:sep">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</join>
		<pop public="1" get="inline" set="null" line="289" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<t path="Null"><c path="openfl.Vector.T"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</pop>
		<push public="1" get="inline" set="null" line="309" static="1">
			<f a="this:x">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<c path="openfl.Vector.T"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</push>
		<reverse public="1" get="inline" set="null" line="336" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</reverse>
		<shift public="1" get="inline" set="null" line="352" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<t path="Null"><c path="openfl.Vector.T"/></t>
			</f>
			<meta><m n=":impl"/></meta>
		</shift>
		<unshift public="1" get="inline" set="null" line="373" static="1">
			<f a="this:x">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<c path="openfl.Vector.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</unshift>
		<slice public="1" get="inline" set="null" line="408" static="1">
			<f a="this:?pos:?end" v=":0:0">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</slice>
		<sort public="1" get="inline" set="null" line="430" static="1">
			<f a="this:f">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<f a=":">
					<c path="openfl.Vector.T"/>
					<c path="openfl.Vector.T"/>
					<x path="Int"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</sort>
		<splice public="1" get="inline" set="null" line="443" static="1">
			<f a="this:pos:len">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="openfl.Vector"><c path="openfl.Vector.T"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</splice>
		<toString public="1" get="inline" set="null" line="475" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<indexOf public="1" get="inline" set="null" line="486" static="1">
			<f a="this:x:?from" v="::0">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<c path="openfl.Vector.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</indexOf>
		<lastIndexOf public="1" get="inline" set="null" line="506" static="1">
			<f a="this:x:?from" v="::0">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<c path="openfl.Vector.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</lastIndexOf>
		<ofArray public="1" params="T" get="inline" set="null" line="529" static="1"><f a="a">
	<c path="Array"><d/></c>
	<x path="openfl.Vector"><c path="ofArray.T"/></x>
</f></ofArray>
		<convert public="1" params="T:U" get="inline" set="null" line="544" static="1"><f a="v">
	<x path="openfl.Vector"><c path="convert.T"/></x>
	<x path="openfl.Vector"><c path="convert.U"/></x>
</f></convert>
		<get public="1" get="inline" set="null" line="551" static="1">
			<f a="this:index">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<t path="Null"><c path="openfl.Vector.T"/></t>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<set public="1" get="inline" set="null" line="558" static="1">
			<f a="this:key:value">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<c path="openfl.Vector.T"/>
				<c path="openfl.Vector.T"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
		<fromArray public="1" params="T" get="inline" set="null" line="581" static="1">
			<f a="value">
				<c path="Array"><c path="fromArray.T"/></c>
				<x path="openfl.Vector"><c path="fromArray.T"/></x>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":from"/>
			</meta>
		</fromArray>
		<toArray public="1" params="T" get="inline" set="null" line="596" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="toArray.T"/></c>
				<c path="Array"><c path="toArray.T"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":to"/>
			</meta>
		</toArray>
		<fromHaxeVector public="1" params="T" get="inline" set="null" line="611" static="1">
			<f a="value">
				<x path="haxe.ds.Vector"><c path="fromHaxeVector.T"/></x>
				<x path="openfl.Vector"><c path="fromHaxeVector.T"/></x>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":from"/>
			</meta>
		</fromHaxeVector>
		<toHaxeVector public="1" params="T" get="inline" set="null" line="630" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="toHaxeVector.T"/></c>
				<x path="haxe.ds.Vector"><c path="toHaxeVector.T"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":to"/>
			</meta>
		</toHaxeVector>
		<fromVectorData public="1" params="T" get="inline" set="null" line="641" static="1">
			<f a="value">
				<c path="openfl.VectorData"><c path="fromVectorData.T"/></c>
				<x path="openfl.Vector"><c path="fromVectorData.T"/></x>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":from"/>
			</meta>
		</fromVectorData>
		<toVectorData public="1" params="T" get="inline" set="null" line="648" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="toVectorData.T"/></c>
				<c path="openfl.VectorData"><c path="toVectorData.T"/></c>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":to"/>
			</meta>
		</toVectorData>
		<get_length get="inline" set="null" line="662" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_length>
		<set_length get="inline" set="null" line="669" static="1">
			<f a="this:value">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_length>
		<get_fixed get="inline" set="null" line="694" static="1">
			<f a="this">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_fixed>
		<set_fixed get="inline" set="null" line="701" static="1">
			<f a="this:value">
				<c path="openfl.VectorData"><c path="openfl.Vector.T"/></c>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_fixed>
	</class>
	<class path="openfl.VectorData" params="T" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Vector.hx" module="openfl.Vector">
		<data public="1"><x path="haxe.ds.Vector"><c path="openfl.VectorData.T"/></x></data>
		<fixed public="1"><x path="Bool"/></fixed>
		<length public="1"><x path="Int"/></length>
		<new public="1" set="method" line="723"><f a=""><x path="Void"/></f></new>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<class path="openfl.VectorDataIterator" params="T" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/Vector.hx" module="openfl.Vector">
		<index><x path="Int"/></index>
		<vectorData><c path="openfl.VectorData"><c path="openfl.VectorDataIterator.T"/></c></vectorData>
		<hasNext public="1" set="method" line="748"><f a=""><x path="Bool"/></f></hasNext>
		<next public="1" set="method" line="755"><f a=""><c path="openfl.VectorDataIterator.T"/></f></next>
		<new public="1" set="method" line="740"><f a="data">
	<c path="openfl.VectorData"><c path="openfl.VectorDataIterator.T"/></c>
	<x path="Void"/>
</f></new>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<class path="openfl._internal.renderer.AbstractRenderer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/AbstractRenderer.hx">
		<height public="1"><x path="Int"/></height>
		<width public="1"><x path="Int"/></width>
		<renderSession><c path="openfl._internal.renderer.RenderSession"/></renderSession>
		<render public="1" set="method" line="25"><f a="stage">
	<c path="openfl.display.Stage"/>
	<x path="Void"/>
</f></render>
		<renderShape public="1" set="method" line="32"><f a="shape">
	<c path="openfl.display.Shape"/>
	<x path="Void"/>
</f></renderShape>
		<resize public="1" set="method" line="39"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<new set="method" line="17"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.RenderSession" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/RenderSession.hx">
		<context public="1"><t path="lime.graphics.CanvasRenderContext"/></context>
		<element public="1"><t path="lime.graphics.DOMRenderContext"/></element>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<projectionMatrix public="1"><x path="lime.math.Matrix4"/></projectionMatrix>
		<renderer public="1"><c path="openfl._internal.renderer.AbstractRenderer"/></renderer>
		<roundPixels public="1"><x path="Bool"/></roundPixels>
		<transformProperty public="1"><c path="String"/></transformProperty>
		<transformOriginProperty public="1"><c path="String"/></transformOriginProperty>
		<vendorPrefix public="1"><c path="String"/></vendorPrefix>
		<z public="1"><x path="Int"/></z>
		<drawCount public="1"><x path="Int"/></drawCount>
		<currentBlendMode public="1"><e path="openfl.display.BlendMode"/></currentBlendMode>
		<projection public="1"><c path="openfl.geom.Point"/></projection>
		<offset public="1"><c path="openfl.geom.Point"/></offset>
		<shaderManager public="1"><c path="openfl._internal.renderer.opengl.utils.ShaderManager"/></shaderManager>
		<maskManager public="1"><d/></maskManager>
		<filterManager public="1"><c path="openfl._internal.renderer.opengl.utils.FilterManager"/></filterManager>
		<blendModeManager public="1"><c path="openfl._internal.renderer.opengl.utils.BlendModeManager"/></blendModeManager>
		<spriteBatch public="1"><c path="openfl._internal.renderer.opengl.utils.SpriteBatch"/></spriteBatch>
		<stencilManager public="1"><c path="openfl._internal.renderer.opengl.utils.StencilManager"/></stencilManager>
		<new public="1" set="method" line="50"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl._internal.renderer.canvas.CanvasBitmap" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/canvas/CanvasBitmap.hx">
		<render public="1" get="inline" set="null" line="14" static="1"><f a="bitmap:renderSession">
	<c path="openfl.display.Bitmap"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.canvas.CanvasGraphics" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/canvas/CanvasGraphics.hx">
		<SIN45 line="31" static="1"><x path="Float"/></SIN45>
		<TAN22 line="32" static="1"><x path="Float"/></TAN22>
		<bounds static="1"><c path="openfl.geom.Rectangle"/></bounds>
		<hasFill static="1"><x path="Bool"/></hasFill>
		<hasStroke static="1"><x path="Bool"/></hasStroke>
		<inPath static="1"><x path="Bool"/></inPath>
		<inversePendingMatrix static="1"><c path="openfl.geom.Matrix"/></inversePendingMatrix>
		<pendingMatrix static="1"><c path="openfl.geom.Matrix"/></pendingMatrix>
		<positionX static="1"><x path="Float"/></positionX>
		<positionY static="1"><x path="Float"/></positionY>
		<setFill static="1"><x path="Bool"/></setFill>
		<context static="1"><c path="js.html.CanvasRenderingContext2D"/></context>
		<pattern static="1"><c path="js.html.CanvasPattern"/></pattern>
		<beginPath set="method" line="50" static="1"><f a=""><x path="Void"/></f></beginPath>
		<beginPatternFill set="method" line="64" static="1"><f a="bitmapFill:bitmapRepeat">
	<c path="openfl.display.BitmapData"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></beginPatternFill>
		<closePath set="method" line="82" static="1"><f a="closeFill">
	<x path="Bool"/>
	<x path="Void"/>
</f></closePath>
		<drawRoundRect set="method" line="132" static="1"><f a="x:y:width:height:rx:ry">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></drawRoundRect>
		<render public="1" set="method" line="359" static="1"><f a="graphics:renderSession">
	<c path="openfl.display.Graphics"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<renderMask public="1" set="method" line="860" static="1"><f a="graphics:renderSession">
	<c path="openfl.display.Graphics"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></renderMask>
		<createTempPatternCanvas set="method" line="944" static="1"><f a="bitmap:repeat:width:height">
	<c path="openfl.display.BitmapData"/>
	<x path="Bool"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.CanvasElement"/>
</f></createTempPatternCanvas>
		<isCCW get="inline" set="null" line="966" static="1"><f a="x1:y1:x2:y2:x3:y3">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></isCCW>
		<normalizeUvt set="method" line="970" static="1"><f a="uvt:?skipT" v=":false">
	<x path="openfl.Vector"><x path="Float"/></x>
	<x path="Bool"/>
	<a>
		<uvt><x path="openfl.Vector"><x path="Float"/></x></uvt>
		<max><x path="Float"/></max>
	</a>
</f></normalizeUvt>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.canvas.CanvasRenderer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/canvas/CanvasRenderer.hx">
		<extends path="openfl._internal.renderer.AbstractRenderer"/>
		<context><t path="lime.graphics.CanvasRenderContext"/></context>
		<render public="1" set="method" line="33" override="1"><f a="stage">
	<c path="openfl.display.Stage"/>
	<x path="Void"/>
</f></render>
		<new public="1" set="method" line="18"><f a="width:height:context">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.CanvasRenderContext"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl._internal.renderer.canvas.CanvasShape" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/canvas/CanvasShape.hx">
		<render public="1" get="inline" set="null" line="13" static="1"><f a="shape:renderSession">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.canvas.CanvasTextField" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/canvas/CanvasTextField.hx">
		<context static="1"><c path="js.html.CanvasRenderingContext2D"/></context>
		<render public="1" get="inline" set="null" line="26" static="1"><f a="textField:renderSession">
	<c path="openfl.text.TextField"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<renderText get="inline" set="null" line="69" static="1"><f a="textField:text:format:offsetX">
	<c path="openfl.text.TextField"/>
	<c path="String"/>
	<c path="openfl.text.TextFormat"/>
	<x path="Float"/>
	<x path="Void"/>
</f></renderText>
		<update public="1" set="method" line="109" static="1"><f a="textField">
	<c path="openfl.text.TextField"/>
	<x path="Bool"/>
</f></update>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl._internal.renderer.canvas.MaskManager" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/canvas/MaskManager.hx">
		<renderSession><c path="openfl._internal.renderer.RenderSession"/></renderSession>
		<pushMask public="1" set="method" line="19"><f a="mask">
	<c path="openfl.display.IBitmapDrawable"/>
	<x path="Void"/>
</f></pushMask>
		<pushRect public="1" set="method" line="41"><f a="rect:transform">
	<c path="openfl.geom.Rectangle"/>
	<c path="openfl.geom.Matrix"/>
	<x path="Void"/>
</f></pushRect>
		<popMask public="1" set="method" line="55"><f a=""><x path="Void"/></f></popMask>
		<new public="1" set="method" line="12"><f a="renderSession">
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.dom.DOMBitmap" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/dom/DOMBitmap.hx">
		<render public="1" get="inline" set="null" line="20" static="1"><f a="bitmap:renderSession">
	<c path="openfl.display.Bitmap"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<renderCanvas set="method" line="59" static="1"><f a="bitmap:renderSession">
	<c path="openfl.display.Bitmap"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></renderCanvas>
		<renderImage set="method" line="100" static="1"><f a="bitmap:renderSession">
	<c path="openfl.display.Bitmap"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></renderImage>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.dom.DOMRenderer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/dom/DOMRenderer.hx">
		<extends path="openfl._internal.renderer.AbstractRenderer"/>
		<applyStyle public="1" set="method" line="61" static="1"><f a="displayObject:renderSession:setTransform:setAlpha:setClip">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></applyStyle>
		<initializeElement public="1" set="method" line="113" static="1"><f a="displayObject:element:renderSession">
	<c path="openfl.display.DisplayObject"/>
	<c path="js.html.Element"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></initializeElement>
		<element><t path="lime.graphics.DOMRenderContext"/></element>
		<render public="1" set="method" line="134" override="1"><f a="stage">
	<c path="openfl.display.Stage"/>
	<x path="Void"/>
</f></render>
		<new public="1" set="method" line="24"><f a="width:height:element">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.DOMRenderContext"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.dom.DOMShape" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/dom/DOMShape.hx">
		<render public="1" get="inline" set="null" line="19" static="1"><f a="shape:renderSession">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.dom.DOMTextField" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/dom/DOMTextField.hx">
		<render public="1" get="inline" set="null" line="19" static="1"><f a="textField:renderSession">
	<c path="openfl.text.TextField"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl._internal.renderer.opengl.GLBitmap" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/GLBitmap.hx">
		<render public="1" get="inline" set="null" line="13" static="1"><f a="bitmap:renderSession">
	<c path="openfl.display.Bitmap"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl._internal.renderer.opengl.GLRenderer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/GLRenderer.hx">
		<extends path="openfl._internal.renderer.AbstractRenderer"/>
		<blendModesWebGL public="1" line="24" static="1"><x path="Map">
	<e path="openfl.display.BlendMode"/>
	<c path="Array"><x path="Int"/></c>
</x></blendModesWebGL>
		<glContextId public="1" line="25" static="1"><x path="Int"/></glContextId>
		<glContexts public="1" line="26" static="1"><c path="Array"><c path="lime.graphics.GLRenderContext"/></c></glContexts>
		<blendModeManager public="1"><c path="openfl._internal.renderer.opengl.utils.BlendModeManager"/></blendModeManager>
		<contextLost public="1"><x path="Bool"/></contextLost>
		<filterManager public="1"><c path="openfl._internal.renderer.opengl.utils.FilterManager"/></filterManager>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<_glContextId public="1"><x path="Int"/></_glContextId>
		<maskManager public="1"><c path="openfl._internal.renderer.opengl.utils.MaskManager"/></maskManager>
		<offset public="1"><c path="openfl.geom.Point"/></offset>
		<options public="1"><d/></options>
		<preserveDrawingBuffer public="1"><x path="Bool"/></preserveDrawingBuffer>
		<projection public="1"><c path="openfl.geom.Point"/></projection>
		<shaderManager public="1"><c path="openfl._internal.renderer.opengl.utils.ShaderManager"/></shaderManager>
		<spriteBatch public="1"><c path="openfl._internal.renderer.opengl.utils.SpriteBatch"/></spriteBatch>
		<stencilManager public="1"><c path="openfl._internal.renderer.opengl.utils.StencilManager"/></stencilManager>
		<transparent public="1"><x path="Bool"/></transparent>
		<view public="1"><d/></view>
		<__stage><d/></__stage>
		<destroy public="1" set="method" line="129"><f a=""><x path="Void"/></f></destroy>
		<handleContextLost set="method" line="180"><f a="event">
	<d/>
	<x path="Void"/>
</f></handleContextLost>
		<handleContextRestored set="method" line="188"><f a=""><x path="Void"/></f></handleContextRestored>
		<render public="1" set="method" line="238" override="1"><f a="stage">
	<c path="openfl.display.Stage"/>
	<x path="Void"/>
</f></render>
		<renderDisplayObject public="1" set="method" line="264"><f a="displayObject:projection:?buffer" v="::null">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl.geom.Point"/>
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></renderDisplayObject>
		<resize public="1" set="method" line="283" override="1"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<new public="1" set="method" line="47"><f a="?width:?height:gl:?transparent:?antialias:?preserveDrawingBuffer" v="800:600::false:false:false">
	<x path="Int"/>
	<x path="Int"/>
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.opengl.GLTextField" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/GLTextField.hx">
		<render public="1" set="method" line="14" static="1"><f a="textField:renderSession">
	<c path="openfl.text.TextField"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl._internal.renderer.opengl.shaders.AbstractShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/shaders/AbstractShader.hx">
		<__UID line="12" static="1"><x path="Int"/></__UID>
		<compileProgram public="1" set="method" line="65" static="1"><f a="gl:vertexSrc:fragmentSrc">
	<c path="lime.graphics.GLRenderContext"/>
	<a><join set="null"><f a="">
	<c path="String"/>
	<c path="String"/>
</f></join></a>
	<a><join set="null"><f a="">
	<c path="String"/>
	<c path="String"/>
</f></join></a>
	<d/>
</f></compileProgram>
		<CompileVertexShader public="1" set="method" line="91" static="1"><f a="gl:shaderSrc">
	<d/>
	<a><join set="null"><f a="">
	<c path="String"/>
	<c path="String"/>
</f></join></a>
	<t path="lime.graphics.opengl.GLShader"/>
</f></CompileVertexShader>
		<CompileFragmentShader public="1" set="method" line="98" static="1"><f a="gl:shaderSrc">
	<d/>
	<a><join set="null"><f a="">
	<c path="String"/>
	<c path="String"/>
</f></join></a>
	<t path="lime.graphics.opengl.GLShader"/>
</f></CompileFragmentShader>
		<_CompileShader public="1" set="method" line="105" static="1"><f a="gl:shaderSrc:shaderType">
	<d/>
	<a><join set="null"><f a="">
	<c path="String"/>
	<c path="String"/>
</f></join></a>
	<unknown/>
	<t path="lime.graphics.opengl.GLShader"/>
</f></_CompileShader>
		<attributes public="1"><c path="Array"><x path="Int"/></c></attributes>
		<aTextureCoord public="1"><x path="Int"/></aTextureCoord>
		<aVertexPosition public="1"><x path="Int"/></aVertexPosition>
		<colorAttribute public="1"><x path="Int"/></colorAttribute>
		<fragmentSrc public="1"><c path="Array"><c path="String"/></c></fragmentSrc>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<program public="1"><t path="lime.graphics.opengl.GLProgram"/></program>
		<projectionVector public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></projectionVector>
		<uniforms public="1"><x path="Map">
	<c path="String"/>
	<d/>
</x></uniforms>
		<vertexSrc public="1"><c path="Array"><c path="String"/></c></vertexSrc>
		<_UID public="1"><x path="Int"/></_UID>
		<destroy public="1" set="method" line="38"><f a=""><x path="Void"/></f></destroy>
		<init public="1" set="method" line="53"><f a=""><x path="Void"/></f></init>
		<new set="method" line="27"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.shaders.ComplexPrimitiveShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/shaders/ComplexPrimitiveShader.hx">
		<extends path="openfl._internal.renderer.opengl.shaders.AbstractShader"/>
		<alpha public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></alpha>
		<color public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></color>
		<offsetVector public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></offsetVector>
		<tintColor public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></tintColor>
		<translationMatrix public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></translationMatrix>
		<init public="1" set="method" line="59" override="1"><f a=""><x path="Void"/></f></init>
		<new public="1" set="method" line="19"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.shaders.DefaultShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/shaders/DefaultShader.hx">
		<extends path="openfl._internal.renderer.opengl.shaders.AbstractShader"/>
		<defaultVertexSrc public="1" line="12" static="1"><c path="Array"><c path="String"/></c></defaultVertexSrc>
		<dimensions public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></dimensions>
		<offsetVector public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></offsetVector>
		<textureCount public="1"><x path="Int"/></textureCount>
		<uSampler public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></uSampler>
		<init public="1" set="method" line="63" override="1"><f a=""><x path="Void"/></f></init>
		<initSampler2D public="1" set="method" line="107"><f a="uniform">
	<d/>
	<x path="Void"/>
</f></initSampler2D>
		<initUniforms public="1" set="method" line="169"><f a=""><x path="Void"/></f></initUniforms>
		<syncUniforms public="1" set="method" line="240"><f a=""><x path="Void"/></f></syncUniforms>
		<new public="1" set="method" line="39"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.shaders.DrawTrianglesShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/shaders/DrawTrianglesShader.hx">
		<extends path="openfl._internal.renderer.opengl.shaders.AbstractShader"/>
		<offsetVector public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></offsetVector>
		<translationMatrix public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></translationMatrix>
		<patternTL public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></patternTL>
		<patternBR public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></patternBR>
		<sampler public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></sampler>
		<color public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></color>
		<useTexture public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></useTexture>
		<alpha public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></alpha>
		<init public="1" set="method" line="71" override="1"><f a=""><x path="Void"/></f></init>
		<new public="1" set="method" line="17"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.shaders.FastShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/shaders/FastShader.hx">
		<extends path="openfl._internal.renderer.opengl.shaders.AbstractShader"/>
		<aPositionCoord public="1"><x path="Int"/></aPositionCoord>
		<aRotation public="1"><x path="Int"/></aRotation>
		<aScale public="1"><x path="Int"/></aScale>
		<dimensions public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></dimensions>
		<offsetVector public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></offsetVector>
		<textureCount public="1"><x path="Int"/></textureCount>
		<uMatrix public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></uMatrix>
		<uSampler public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></uSampler>
		<init public="1" set="method" line="75" override="1"><f a=""><x path="Void"/></f></init>
		<new public="1" set="method" line="22"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.shaders.FillShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/shaders/FillShader.hx">
		<extends path="openfl._internal.renderer.opengl.shaders.AbstractShader"/>
		<offsetVector public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></offsetVector>
		<translationMatrix public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></translationMatrix>
		<alpha public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></alpha>
		<color public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></color>
		<init public="1" set="method" line="46" override="1"><f a=""><x path="Void"/></f></init>
		<new public="1" set="method" line="13"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.shaders.PatternFillShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/shaders/PatternFillShader.hx">
		<extends path="openfl._internal.renderer.opengl.shaders.AbstractShader"/>
		<offsetVector public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></offsetVector>
		<translationMatrix public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></translationMatrix>
		<patternMatrix public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></patternMatrix>
		<patternTL public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></patternTL>
		<patternBR public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></patternBR>
		<sampler public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></sampler>
		<alpha public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></alpha>
		<init public="1" set="method" line="59" override="1"><f a=""><x path="Void"/></f></init>
		<new public="1" set="method" line="16"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.shaders.PrimitiveShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/shaders/PrimitiveShader.hx">
		<extends path="openfl._internal.renderer.opengl.shaders.AbstractShader"/>
		<alpha public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></alpha>
		<offsetVector public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></offsetVector>
		<tintColor public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></tintColor>
		<translationMatrix public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></translationMatrix>
		<init public="1" set="method" line="57" override="1"><f a=""><x path="Void"/></f></init>
		<new public="1" set="method" line="18"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.shaders.StripShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/shaders/StripShader.hx">
		<extends path="openfl._internal.renderer.opengl.shaders.AbstractShader"/>
		<alpha public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></alpha>
		<offsetVector public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></offsetVector>
		<translationMatrix public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></translationMatrix>
		<uSampler public="1"><t path="lime.graphics.opengl.GLUniformLocation"/></uSampler>
		<init public="1" set="method" line="62" override="1"><f a=""><x path="Void"/></f></init>
		<new public="1" set="method" line="18"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.BlendModeManager" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/BlendModeManager.hx">
		<currentBlendMode public="1"><e path="openfl.display.BlendMode"/></currentBlendMode>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<destroy public="1" set="method" line="23"><f a=""><x path="Void"/></f></destroy>
		<setBlendMode public="1" set="method" line="30"><f a="blendMode">
	<e path="openfl.display.BlendMode"/>
	<x path="Bool"/>
</f></setBlendMode>
		<new public="1" set="method" line="15"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.DrawPath" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/DrawPath.hx">
		<getStack public="1" set="method" line="56" static="1"><f a="graphics:gl">
	<c path="openfl.display.Graphics"/>
	<c path="lime.graphics.GLRenderContext"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
</f></getStack>
		<line public="1"><c path="openfl._internal.renderer.opengl.utils.LineStyle"/></line>
		<fill public="1"><e path="openfl._internal.renderer.opengl.utils.FillType"/></fill>
		<fillIndex public="1"><x path="Int"/></fillIndex>
		<isRemovable public="1"><x path="Bool"/></isRemovable>
		<points public="1"><c path="Array"><x path="Float"/></c></points>
		<type public="1"><e path="openfl._internal.renderer.opengl.utils.GraphicType"/></type>
		<update public="1" set="method" line="40"><f a="line:fill:fillIndex">
	<c path="openfl._internal.renderer.opengl.utils.LineStyle"/>
	<e path="openfl._internal.renderer.opengl.utils.FillType"/>
	<x path="Int"/>
	<x path="Void"/>
</f></update>
		<updateLine public="1" set="method" line="46"><f a="line">
	<c path="openfl._internal.renderer.opengl.utils.LineStyle"/>
	<x path="Void"/>
</f></updateLine>
		<new public="1" set="method" line="35"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.PathBuiler" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/DrawPath.hx" module="openfl._internal.renderer.opengl.utils.DrawPath">
		<__currentPath static="1"><c path="openfl._internal.renderer.opengl.utils.DrawPath"/></__currentPath>
		<__drawPaths static="1"><c path="Array"><c path="openfl._internal.renderer.opengl.utils.DrawPath"/></c></__drawPaths>
		<__line static="1"><c path="openfl._internal.renderer.opengl.utils.LineStyle"/></__line>
		<__fill static="1"><e path="openfl._internal.renderer.opengl.utils.FillType"/></__fill>
		<__fillIndex line="70" static="1"><x path="Int"/></__fillIndex>
		<closePath set="method" line="72" static="1"><f a=""><x path="Void"/></f></closePath>
		<endFill set="method" line="89" static="1"><f a=""><x path="Void"/></f></endFill>
		<moveTo set="method" line="96" static="1"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<graphicDataPop get="inline" set="null" line="109" static="1"><f a=""><x path="Void"/></f></graphicDataPop>
		<build public="1" set="method" line="119" static="1"><f a="graphics:gl">
	<c path="openfl.display.Graphics"/>
	<c path="lime.graphics.GLRenderContext"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
</f></build>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.LineStyle" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/DrawPath.hx" module="openfl._internal.renderer.opengl.utils.DrawPath">
		<width public="1"><x path="Float"/></width>
		<color public="1"><x path="Int"/></color>
		<alpha public="1"><t path="Null"><x path="Float"/></t></alpha>
		<scaleMode public="1"><e path="openfl.display.LineScaleMode"/></scaleMode>
		<caps public="1"><e path="openfl.display.CapsStyle"/></caps>
		<joints public="1"><e path="openfl.display.JointStyle"/></joints>
		<miterLimit public="1"><x path="Float"/></miterLimit>
		<new public="1" set="method" line="419"><f a=""><x path="Void"/></f></new>
	</class>
	<enum path="openfl._internal.renderer.opengl.utils.FillType" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/DrawPath.hx" module="openfl._internal.renderer.opengl.utils.DrawPath">
		<None/>
		<Color a="color:alpha">
			<x path="Int"/>
			<x path="Float"/>
		</Color>
		<Texture a="bitmap:matrix:repeat:smooth">
			<c path="openfl.display.BitmapData"/>
			<c path="openfl.geom.Matrix"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</Texture>
		<Gradient/>
	</enum>
	<class path="openfl._internal.renderer.opengl.utils.FilterManager" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/FilterManager.hx">
		<buffer public="1"><t path="lime.graphics.opengl.GLFramebuffer"/></buffer>
		<colorArray public="1"><t path="lime.utils.Float32Array"/></colorArray>
		<colorBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></colorBuffer>
		<defaultShader public="1"><c path="openfl._internal.renderer.opengl.shaders.DefaultShader"/></defaultShader>
		<filterStack public="1"><c path="Array"><d/></c></filterStack>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<height public="1"><x path="Int"/></height>
		<indexBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></indexBuffer>
		<offsetX public="1"><x path="Float"/></offsetX>
		<offsetY public="1"><x path="Float"/></offsetY>
		<renderSession public="1"><c path="openfl._internal.renderer.RenderSession"/></renderSession>
		<texturePool public="1"><c path="Array"><c path="openfl._internal.renderer.opengl.utils.FilterTexture"/></c></texturePool>
		<transparent public="1"><x path="Bool"/></transparent>
		<uvArray public="1"><t path="lime.utils.Float32Array"/></uvArray>
		<uvBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></uvBuffer>
		<vertexArray public="1"><t path="lime.utils.Float32Array"/></vertexArray>
		<vertexBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></vertexBuffer>
		<width public="1"><x path="Int"/></width>
		<applyFilterPass public="1" set="method" line="52"><f a="filter:filterArea:width:height">
	<d/>
	<c path="openfl.geom.Rectangle"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></applyFilterPass>
		<begin public="1" set="method" line="101"><f a="renderSession:?buffer" v=":null">
	<c path="openfl._internal.renderer.RenderSession"/>
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></begin>
		<destroy public="1" set="method" line="115"><f a=""><x path="Void"/></f></destroy>
		<initShaderBuffers public="1" set="method" line="140"><f a=""><x path="Void"/></f></initShaderBuffers>
		<popFilter public="1" set="method" line="170"><f a=""><x path="Void"/></f></popFilter>
		<pushFilter public="1" set="method" line="327"><f a="filterBlock">
	<d/>
	<x path="Void"/>
</f></pushFilter>
		<setContext public="1" set="method" line="401"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></setContext>
		<new public="1" set="method" line="38"><f a="gl:transparent">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.FilterTexture" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/FilterTexture.hx">
		<frameBuffer public="1"><t path="lime.graphics.opengl.GLFramebuffer"/></frameBuffer>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<renderBuffer public="1"><t path="lime.graphics.opengl.GLRenderbuffer"/></renderBuffer>
		<smoothing public="1"><x path="Bool"/></smoothing>
		<texture public="1"><t path="lime.graphics.opengl.GLTexture"/></texture>
		<width public="1"><x path="Int"/></width>
		<height public="1"><x path="Int"/></height>
		<clear public="1" set="method" line="47"><f a=""><x path="Void"/></f></clear>
		<destroy public="1" set="method" line="57"><f a=""><x path="Void"/></f></destroy>
		<resize public="1" set="method" line="69"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<new public="1" set="method" line="22"><f a="gl:width:height:?smoothing" v=":::true">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.geom.Rectangle" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/geom/Rectangle.hx">
		<bottom public="1" get="accessor" set="accessor"><x path="Float"/></bottom>
		<bottomRight public="1" get="accessor" set="accessor"><c path="openfl.geom.Point"/></bottomRight>
		<height public="1"><x path="Float"/></height>
		<left public="1" get="accessor" set="accessor"><x path="Float"/></left>
		<right public="1" get="accessor" set="accessor"><x path="Float"/></right>
		<size public="1" get="accessor" set="accessor"><c path="openfl.geom.Point"/></size>
		<top public="1" get="accessor" set="accessor"><x path="Float"/></top>
		<topLeft public="1" get="accessor" set="accessor"><c path="openfl.geom.Point"/></topLeft>
		<width public="1"><x path="Float"/></width>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<clone public="1" set="method" line="33"><f a=""><c path="openfl.geom.Rectangle"/></f></clone>
		<contains public="1" set="method" line="40"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></contains>
		<containsPoint public="1" set="method" line="47"><f a="point">
	<c path="openfl.geom.Point"/>
	<x path="Bool"/>
</f></containsPoint>
		<containsRect public="1" set="method" line="54"><f a="rect">
	<c path="openfl.geom.Rectangle"/>
	<x path="Bool"/>
</f></containsRect>
		<copyFrom public="1" set="method" line="69"><f a="sourceRect">
	<c path="openfl.geom.Rectangle"/>
	<x path="Void"/>
</f></copyFrom>
		<equals public="1" set="method" line="79"><f a="toCompare">
	<c path="openfl.geom.Rectangle"/>
	<x path="Bool"/>
</f></equals>
		<inflate public="1" set="method" line="86"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></inflate>
		<inflatePoint public="1" set="method" line="94"><f a="point">
	<c path="openfl.geom.Point"/>
	<x path="Void"/>
</f></inflatePoint>
		<intersection public="1" set="method" line="101"><f a="toIntersect">
	<c path="openfl.geom.Rectangle"/>
	<c path="openfl.geom.Rectangle"/>
</f></intersection>
		<intersects public="1" set="method" line="126"><f a="toIntersect">
	<c path="openfl.geom.Rectangle"/>
	<x path="Bool"/>
</f></intersects>
		<isEmpty public="1" set="method" line="145"><f a=""><x path="Bool"/></f></isEmpty>
		<offset public="1" set="method" line="152"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></offset>
		<offsetPoint public="1" set="method" line="160"><f a="point">
	<c path="openfl.geom.Point"/>
	<x path="Void"/>
</f></offsetPoint>
		<setEmpty public="1" set="method" line="168"><f a=""><x path="Void"/></f></setEmpty>
		<setTo public="1" set="method" line="175"><f a="xa:ya:widtha:heighta">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<transform public="1" set="method" line="185"><f a="m">
	<c path="openfl.geom.Matrix"/>
	<c path="openfl.geom.Rectangle"/>
</f></transform>
		<union public="1" set="method" line="221"><f a="toUnion">
	<c path="openfl.geom.Rectangle"/>
	<c path="openfl.geom.Rectangle"/>
</f></union>
		<__contract public="1" set="method" line="243">
			<f a="x:y:width:height">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__contract>
		<__expand public="1" set="method" line="262">
			<f a="x:y:width:height">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__expand>
		<__toLimeRectangle set="method" line="285">
			<f a=""><t path="lime.math._Rectangle.LimeRectangle"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__toLimeRectangle>
		<get_bottom set="method" line="299">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_bottom>
		<set_bottom set="method" line="300">
			<f a="b">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_bottom>
		<get_bottomRight set="method" line="301">
			<f a=""><c path="openfl.geom.Point"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_bottomRight>
		<set_bottomRight set="method" line="302">
			<f a="p">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_bottomRight>
		<get_left set="method" line="303">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_left>
		<set_left set="method" line="304">
			<f a="l">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_left>
		<get_right set="method" line="305">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_right>
		<set_right set="method" line="306">
			<f a="r">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_right>
		<get_size set="method" line="307">
			<f a=""><c path="openfl.geom.Point"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_size>
		<set_size set="method" line="308">
			<f a="p">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_size>
		<get_top set="method" line="309">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_top>
		<set_top set="method" line="310">
			<f a="t">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_top>
		<get_topLeft set="method" line="311">
			<f a=""><c path="openfl.geom.Point"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_topLeft>
		<set_topLeft set="method" line="312">
			<f a="p">
				<c path="openfl.geom.Point"/>
				<c path="openfl.geom.Point"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_topLeft>
		<new public="1" set="method" line="23"><f a="?x:?y:?width:?height" v="0:0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.geom.Point" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/geom/Point.hx">
		<distance public="1" set="method" line="37" static="1"><f a="pt1:pt2">
	<c path="openfl.geom.Point"/>
	<c path="openfl.geom.Point"/>
	<x path="Float"/>
</f></distance>
		<interpolate public="1" set="method" line="53" static="1"><f a="pt1:pt2:f">
	<c path="openfl.geom.Point"/>
	<c path="openfl.geom.Point"/>
	<x path="Float"/>
	<c path="openfl.geom.Point"/>
</f></interpolate>
		<polar public="1" set="method" line="85" static="1"><f a="len:angle">
	<x path="Float"/>
	<x path="Float"/>
	<c path="openfl.geom.Point"/>
</f></polar>
		<length public="1" get="accessor" set="null"><x path="Float"/></length>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<add public="1" set="method" line="23"><f a="v">
	<c path="openfl.geom.Point"/>
	<c path="openfl.geom.Point"/>
</f></add>
		<clone public="1" set="method" line="30"><f a=""><c path="openfl.geom.Point"/></f></clone>
		<equals public="1" set="method" line="46"><f a="toCompare">
	<c path="openfl.geom.Point"/>
	<x path="Bool"/>
</f></equals>
		<normalize public="1" set="method" line="60"><f a="thickness">
	<x path="Float"/>
	<x path="Void"/>
</f></normalize>
		<offset public="1" set="method" line="77"><f a="dx:dy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></offset>
		<setTo public="1" get="inline" set="null" line="92"><f a="xa:ya">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<subtract public="1" set="method" line="99"><f a="v">
	<c path="openfl.geom.Point"/>
	<c path="openfl.geom.Point"/>
</f></subtract>
		<toString public="1" set="method" line="106"><f a=""><c path="String"/></f></toString>
		<__toLimeVector2 set="method" line="113">
			<f a=""><c path="lime.math.Vector2"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__toLimeVector2>
		<get_length set="method" line="127">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<new public="1" set="method" line="15"><f a="?x:?y" v="0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.GraphicsRenderer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx">
		<graphicsDataPool public="1" line="41" static="1"><c path="Array"><c path="openfl._internal.renderer.opengl.utils.GLGraphicsData"/></c></graphicsDataPool>
		<bucketPool public="1" line="42" static="1"><c path="Array"><c path="openfl._internal.renderer.opengl.utils.GLBucket"/></c></bucketPool>
		<objectPosition line="44" static="1"><c path="openfl.geom.Point"/></objectPosition>
		<objectBounds line="45" static="1"><c path="openfl.geom.Rectangle"/></objectBounds>
		<lastVertsBuffer static="1"><t path="lime.graphics.opengl.GLBuffer"/></lastVertsBuffer>
		<lastBucketMode static="1"><e path="openfl._internal.renderer.opengl.utils.BucketMode"/></lastBucketMode>
		<lastTexture static="1"><t path="openfl.gl.GLTexture"/></lastTexture>
		<lastTextureRepeat static="1"><x path="Bool"/></lastTextureRepeat>
		<lastTextureSmooth static="1"><x path="Bool"/></lastTextureSmooth>
		<buildCircle public="1" set="method" line="53" static="1"><f a="path:glStack:?localCoords" v="::false">
	<c path="openfl._internal.renderer.opengl.utils.DrawPath"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></buildCircle>
		<buildComplexPoly public="1" set="method" line="124" static="1"><f a="path:glStack:?localCoords" v="::false">
	<c path="openfl._internal.renderer.opengl.utils.DrawPath"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></buildComplexPoly>
		<buildLine public="1" set="method" line="155" static="1"><f a="path:bucket:?localCoords" v="::false">
	<c path="openfl._internal.renderer.opengl.utils.DrawPath"/>
	<c path="openfl._internal.renderer.opengl.utils.GLBucketData"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></buildLine>
		<buildPoly public="1" set="method" line="403" static="1"><f a="path:glStack">
	<c path="openfl._internal.renderer.opengl.utils.DrawPath"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<x path="Void"/>
</f></buildPoly>
		<buildRectangle public="1" set="method" line="453" static="1"><f a="path:glStack:?localCoords" v="::false">
	<c path="openfl._internal.renderer.opengl.utils.DrawPath"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></buildRectangle>
		<buildRoundedRectangle public="1" set="method" line="501" static="1"><f a="path:glStack:?localCoords" v="::false">
	<c path="openfl._internal.renderer.opengl.utils.DrawPath"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></buildRoundedRectangle>
		<buildDrawTriangles public="1" set="method" line="564" static="1"><f a="path:object:glStack:?localCoords" v=":::false">
	<c path="openfl._internal.renderer.opengl.utils.DrawPath"/>
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></buildDrawTriangles>
		<buildDrawTiles public="1" get="inline" set="null" line="702" static="1"><f a="path:glStack">
	<c path="openfl._internal.renderer.opengl.utils.DrawPath"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<x path="Void"/>
</f></buildDrawTiles>
		<quadraticBezierCurve set="method" line="706" static="1"><f a="fromX:fromY:cpX:cpY:toX:toY">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="Array"><x path="Float"/></c>
</f></quadraticBezierCurve>
		<render public="1" set="method" line="741" static="1"><f a="object:renderSession">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></render>
		<renderGraphics public="1" set="method" line="792" static="1"><f a="object:renderSession:projection:?localCoords" v=":::false">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<c path="openfl.geom.Point"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></renderGraphics>
		<updateGraphics public="1" set="method" line="867" static="1"><f a="object:gl:?localCoords" v="::false">
	<c path="openfl.display.DisplayObject"/>
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></updateGraphics>
		<prepareBucket set="method" line="917" static="1"><f a="path:glStack">
	<c path="openfl._internal.renderer.opengl.utils.DrawPath"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<c path="openfl._internal.renderer.opengl.utils.GLBucketData"/>
</f></prepareBucket>
		<getBucket set="method" line="979" static="1"><f a="glStack:mode">
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<e path="openfl._internal.renderer.opengl.utils.BucketMode"/>
	<c path="openfl._internal.renderer.opengl.utils.GLBucket"/>
</f></getBucket>
		<switchBucket set="method" line="989" static="1"><f a="fillIndex:glStack:mode">
	<x path="Int"/>
	<c path="openfl._internal.renderer.opengl.utils.GLStack"/>
	<e path="openfl._internal.renderer.opengl.utils.BucketMode"/>
	<c path="openfl._internal.renderer.opengl.utils.GLBucket"/>
</f></switchBucket>
		<prepareShader set="method" line="1007" static="1"><f a="bucket:renderSession:object:projection:translationMatrix">
	<c path="openfl._internal.renderer.opengl.utils.GLBucket"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl.geom.Point"/>
	<t path="lime.utils.Float32Array"/>
	<unknown/>
</f></prepareShader>
		<renderFill set="method" line="1063" static="1"><f a="bucket:shader:renderSession">
	<c path="openfl._internal.renderer.opengl.utils.GLBucket"/>
	<d/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></renderFill>
		<renderDrawTriangles set="method" line="1075" static="1"><f a="bucket:shader:renderSession">
	<c path="openfl._internal.renderer.opengl.utils.GLBucket"/>
	<c path="openfl._internal.renderer.opengl.shaders.DrawTrianglesShader"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></renderDrawTriangles>
		<renderDrawTiles get="inline" set="null" line="1092" static="1"><f a="object:bucket:renderSession">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.opengl.utils.GLBucket"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></renderDrawTiles>
		<bindDrawTrianglesBuffer set="method" line="1097" static="1"><f a="gl:shader:data">
	<c path="lime.graphics.GLRenderContext"/>
	<c path="openfl._internal.renderer.opengl.shaders.DrawTrianglesShader"/>
	<c path="openfl._internal.renderer.opengl.utils.GLBucketData"/>
	<x path="Void"/>
</f></bindDrawTrianglesBuffer>
		<bindTexture set="method" line="1110" static="1"><f a="gl:bucket">
	<c path="lime.graphics.GLRenderContext"/>
	<c path="openfl._internal.renderer.opengl.utils.GLBucket"/>
	<x path="Void"/>
</f></bindTexture>
		<isCCW get="inline" set="null" line="1138" static="1"><f a="x1:y1:x2:y2:x3:y3">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></isCCW>
		<hex2rgb public="1" get="inline" set="null" line="1142" static="1"><f a="hex">
	<t path="Null"><x path="Int"/></t>
	<c path="Array"><x path="Float"/></c>
</f></hex2rgb>
		<hex2rgba public="1" get="inline" set="null" line="1146" static="1"><f a="hex">
	<t path="Null"><x path="Int"/></t>
	<c path="Array"><x path="Float"/></c>
</f></hex2rgba>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.GLStack" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
		<lastIndex public="1"><x path="Int"/></lastIndex>
		<buckets public="1"><c path="Array"><c path="openfl._internal.renderer.opengl.utils.GLBucket"/></c></buckets>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<reset public="1" set="method" line="1164"><f a=""><x path="Void"/></f></reset>
		<upload public="1" set="method" line="1169"><f a=""><x path="Void"/></f></upload>
		<new public="1" set="method" line="1158"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.GLBucket" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<color public="1"><c path="Array"><x path="Float"/></c></color>
		<alpha public="1"><x path="Float"/></alpha>
		<dirty public="1"><x path="Bool"/></dirty>
		<graphicType public="1"><e path="openfl._internal.renderer.opengl.utils.GraphicType"/></graphicType>
		<lastIndex public="1"><x path="Int"/></lastIndex>
		<fillIndex public="1"><x path="Int"/></fillIndex>
		<mode public="1"><e path="openfl._internal.renderer.opengl.utils.BucketMode"/></mode>
		<data public="1"><c path="Array"><c path="openfl._internal.renderer.opengl.utils.GLBucketData"/></c></data>
		<bitmap public="1"><c path="openfl.display.BitmapData"/></bitmap>
		<texture public="1"><t path="openfl.gl.GLTexture"/></texture>
		<textureMatrix public="1"><c path="openfl.geom.Matrix"/></textureMatrix>
		<textureRepeat public="1"><x path="Bool"/></textureRepeat>
		<textureSmooth public="1"><x path="Bool"/></textureSmooth>
		<textureTL public="1"><c path="openfl.geom.Point"/></textureTL>
		<textureBR public="1"><c path="openfl.geom.Point"/></textureBR>
		<tileBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></tileBuffer>
		<glTile public="1"><t path="openfl.utils.Int16Array"/></glTile>
		<tile public="1"><c path="Array"><x path="Int"/></c></tile>
		<uploadTileBuffer public="1"><x path="Bool"/></uploadTileBuffer>
		<getData public="1" set="method" line="1224"><f a=""><c path="openfl._internal.renderer.opengl.utils.GLBucketData"/></f></getData>
		<reset public="1" set="method" line="1248"><f a=""><x path="Void"/></f></reset>
		<upload public="1" set="method" line="1257"><f a=""><x path="Void"/></f></upload>
		<new public="1" set="method" line="1208"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.GLBucketData" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<drawMode public="1"><x path="Int"/></drawMode>
		<glLength public="1"><x path="Int"/></glLength>
		<glStart public="1"><x path="Int"/></glStart>
		<vertsBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></vertsBuffer>
		<lastVertsSize public="1"><x path="Int"/></lastVertsSize>
		<glVerts public="1"><t path="lime.utils.Float32Array"/></glVerts>
		<verts public="1"><c path="Array"><x path="Float"/></c></verts>
		<rawVerts public="1"><x path="Bool"/></rawVerts>
		<stride public="1"><x path="Int"/></stride>
		<indexBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></indexBuffer>
		<glIndices public="1"><t path="lime.utils.UInt16Array"/></glIndices>
		<indices public="1"><c path="Array"><x path="Int"/></c></indices>
		<rawIndices public="1"><x path="Bool"/></rawIndices>
		<line public="1"><c path="openfl._internal.renderer.opengl.utils.GLBucketData"/></line>
		<destroyed public="1"><x path="Bool"/></destroyed>
		<parent public="1"><c path="openfl._internal.renderer.opengl.utils.GLBucket"/></parent>
		<destroy public="1" set="method" line="1322"><f a=""><x path="Void"/></f></destroy>
		<upload public="1" set="method" line="1334"><f a=""><x path="Void"/></f></upload>
		<new public="1" set="method" line="1309"><f a="gl:?initLine" v=":true">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
	</class>
	<enum path="openfl._internal.renderer.opengl.utils.BucketMode" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
		<None/>
		<Fill/>
		<PatternFill/>
		<Line/>
		<PatternLine/>
		<DrawTriangles/>
		<DrawTiles/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl._internal.renderer.opengl.utils.GLGraphicsData" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<tint public="1"><c path="Array"><x path="Float"/></c></tint>
		<alpha public="1"><x path="Float"/></alpha>
		<dirty public="1"><x path="Bool"/></dirty>
		<mode public="1"><x path="openfl._internal.renderer.opengl.utils.RenderMode"/></mode>
		<lastIndex public="1"><x path="Int"/></lastIndex>
		<data public="1"><c path="Array"><x path="Float"/></c></data>
		<glData public="1"><t path="lime.utils.Float32Array"/></glData>
		<dataBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></dataBuffer>
		<indices public="1"><c path="Array"><x path="Int"/></c></indices>
		<glIndices public="1"><t path="lime.utils.UInt16Array"/></glIndices>
		<indexBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></indexBuffer>
		<reset public="1" set="method" line="1407"><f a=""><x path="Void"/></f></reset>
		<upload public="1" set="method" line="1416"><f a=""><x path="Void"/></f></upload>
		<new public="1" set="method" line="1397"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.PolyK" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
		<triangulate public="1" set="method" line="1438" static="1"><f a="p">
	<c path="Array"><x path="Float"/></c>
	<c path="Array"><x path="Int"/></c>
</f></triangulate>
		<_PointInTriangle public="1" set="method" line="1523" static="1"><f a="px:py:ax:ay:bx:by:cx:cy">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></_PointInTriangle>
		<_convex public="1" set="method" line="1547" static="1"><f a="ax:ay:bx:by:cx:cy:sign">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></_convex>
	</class>
	<enum path="openfl._internal.renderer.opengl.utils.GraphicType" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
		<Polygon/>
		<Rectangle a="rounded"><x path="Bool"/></Rectangle>
		<Circle/>
		<Ellipse/>
		<DrawTriangles a="vertices:indices:uvtData:culling:colors:blendMode">
			<x path="openfl.Vector"><x path="Float"/></x>
			<x path="openfl.Vector"><x path="Int"/></x>
			<x path="openfl.Vector"><x path="Float"/></x>
			<e path="openfl.display.TriangleCulling"/>
			<x path="openfl.Vector"><x path="Int"/></x>
			<x path="Int"/>
		</DrawTriangles>
		<DrawTiles a="sheet:tileData:smooth:flags:count">
			<c path="openfl.display.Tilesheet"/>
			<c path="Array"><x path="Float"/></c>
			<x path="Bool"/>
			<x path="Int"/>
			<x path="Int"/>
		</DrawTiles>
	</enum>
	<abstract path="openfl._internal.renderer.opengl.utils.RenderMode" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl._internal.renderer.opengl.utils._GraphicsRenderer.RenderMode_Impl_" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" private="1" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
	<DEFAULT public="1" get="inline" set="null" line="1568" static="1">
		<x path="openfl._internal.renderer.opengl.utils.RenderMode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEFAULT>
	<STENCIL public="1" get="inline" set="null" line="1569" static="1">
		<x path="openfl._internal.renderer.opengl.utils.RenderMode"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STENCIL>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="openfl._internal.renderer.opengl.utils._GraphicsRenderer.RenderMode_Impl_" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/GraphicsRenderer.hx" private="1" module="openfl._internal.renderer.opengl.utils.GraphicsRenderer">
		<DEFAULT public="1" get="inline" set="null" line="1568" static="1">
			<x path="openfl._internal.renderer.opengl.utils.RenderMode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEFAULT>
		<STENCIL public="1" get="inline" set="null" line="1569" static="1">
			<x path="openfl._internal.renderer.opengl.utils.RenderMode"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STENCIL>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.MaskManager" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/MaskManager.hx">
		<count public="1"><x path="Int"/></count>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<maskPosition public="1"><x path="Int"/></maskPosition>
		<maskStack public="1"><c path="Array"><d/></c></maskStack>
		<reverse public="1"><x path="Bool"/></reverse>
		<destroy public="1" set="method" line="30"><f a=""><x path="Void"/></f></destroy>
		<popMask public="1" set="method" line="38"><f a="maskData:renderSession">
	<d/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></popMask>
		<pushMask public="1" set="method" line="46"><f a="maskData:renderSession">
	<d/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></pushMask>
		<setContext public="1" set="method" line="62"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></setContext>
		<new public="1" set="method" line="17"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.ShaderManager" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/ShaderManager.hx">
		<attribState public="1"><c path="Array"><x path="Bool"/></c></attribState>
		<complexPrimitiveShader public="1"><c path="openfl._internal.renderer.opengl.shaders.ComplexPrimitiveShader"/></complexPrimitiveShader>
		<currentShader public="1"><c path="openfl._internal.renderer.opengl.shaders.AbstractShader"/></currentShader>
		<defaultShader public="1"><c path="openfl._internal.renderer.opengl.shaders.DefaultShader"/></defaultShader>
		<fastShader public="1"><c path="openfl._internal.renderer.opengl.shaders.FastShader"/></fastShader>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<maxAttibs public="1"><x path="Int"/></maxAttibs>
		<primitiveShader public="1"><c path="openfl._internal.renderer.opengl.shaders.PrimitiveShader"/></primitiveShader>
		<fillShader public="1"><c path="openfl._internal.renderer.opengl.shaders.FillShader"/></fillShader>
		<patternFillShader public="1"><c path="openfl._internal.renderer.opengl.shaders.PatternFillShader"/></patternFillShader>
		<drawTrianglesShader public="1"><c path="openfl._internal.renderer.opengl.shaders.DrawTrianglesShader"/></drawTrianglesShader>
		<shaderMap public="1"><c path="Array"><c path="openfl._internal.renderer.opengl.shaders.AbstractShader"/></c></shaderMap>
		<stripShader public="1"><c path="openfl._internal.renderer.opengl.shaders.StripShader"/></stripShader>
		<tempAttribState public="1"><c path="Array"><x path="Bool"/></c></tempAttribState>
		<_currentId><x path="Int"/></_currentId>
		<destroy public="1" set="method" line="57"><f a=""><x path="Void"/></f></destroy>
		<setAttribs public="1" set="method" line="75"><f a="attribs">
	<c path="Array"><d/></c>
	<x path="Void"/>
</f></setAttribs>
		<setContext public="1" set="method" line="115"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></setContext>
		<setShader public="1" set="method" line="134"><f a="shader">
	<c path="openfl._internal.renderer.opengl.shaders.AbstractShader"/>
	<x path="Bool"/>
</f></setShader>
		<new public="1" set="method" line="39"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.SpriteBatch" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx">
		<states public="1"><c path="Array"><c path="openfl._internal.renderer.opengl.utils._SpriteBatch.State"/></c></states>
		<currentState public="1"><c path="openfl._internal.renderer.opengl.utils._SpriteBatch.State"/></currentState>
		<currentBaseTexture public="1"><t path="lime.graphics.opengl.GLTexture"/></currentBaseTexture>
		<currentBatchSize public="1"><x path="Int"/></currentBatchSize>
		<currentBlendMode public="1"><e path="openfl.display.BlendMode"/></currentBlendMode>
		<dirty public="1"><x path="Bool"/></dirty>
		<drawing public="1"><x path="Bool"/></drawing>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<indexBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></indexBuffer>
		<indices public="1"><t path="lime.utils.UInt16Array"/></indices>
		<lastIndexCount public="1"><x path="Int"/></lastIndexCount>
		<renderSession public="1"><c path="openfl._internal.renderer.RenderSession"/></renderSession>
		<shader public="1"><c path="openfl._internal.renderer.opengl.shaders.AbstractShader"/></shader>
		<size public="1"><x path="Int"/></size>
		<vertexBuffer public="1"><t path="lime.graphics.opengl.GLBuffer"/></vertexBuffer>
		<vertices public="1"><t path="lime.utils.Float32Array"/></vertices>
		<vertSize public="1"><x path="Int"/></vertSize>
		<begin public="1" set="method" line="92"><f a="renderSession">
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></begin>
		<destroy public="1" set="method" line="102"><f a=""><x path="Void"/></f></destroy>
		<end public="1" set="method" line="117"><f a=""><x path="Void"/></f></end>
		<flush set="method" line="125"><f a=""><x path="Void"/></f></flush>
		<render public="1" set="method" line="200"><f a="sprite">
	<c path="openfl.display.Bitmap"/>
	<x path="Void"/>
</f></render>
		<renderCachedGraphics public="1" set="method" line="235"><f a="object">
	<c path="openfl.display.DisplayObject"/>
	<x path="Void"/>
</f></renderCachedGraphics>
		<renderTiles public="1" set="method" line="270"><f a="object:sheet:tileData:?smooth:?flags:?count" v=":::false:0:-1">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl.display.Tilesheet"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderTiles>
		<fillVertices get="inline" set="null" line="434"><f a="index:aX:aY:width:height:tint:alpha:uvs:matrix">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Float"/>
	<c path="openfl.display.TextureUvs"/>
	<c path="openfl.geom.Matrix"/>
	<x path="Void"/>
</f></fillVertices>
		<setState set="method" line="484"><f a="index:texture:?smooth:blendMode" v="::true:">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Bool"/>
	<e path="openfl.display.BlendMode"/>
	<x path="Void"/>
</f></setState>
		<renderBatch set="method" line="495"><f a="state:size:startIndex">
	<c path="openfl._internal.renderer.opengl.utils._SpriteBatch.State"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderBatch>
		<renderTilingSprite public="1" set="method" line="525"><f a="tilingSprite">
	<d/>
	<x path="Void"/>
</f></renderTilingSprite>
		<setContext public="1" set="method" line="622"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></setContext>
		<start public="1" set="method" line="640"><f a=""><x path="Void"/></f></start>
		<stop public="1" set="method" line="647"><f a=""><x path="Void"/></f></stop>
		<new public="1" set="method" line="50"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl._internal.renderer.opengl.utils._SpriteBatch.State" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/SpriteBatch.hx" private="1" module="openfl._internal.renderer.opengl.utils.SpriteBatch">
		<texture public="1"><t path="lime.graphics.opengl.GLTexture"/></texture>
		<textureSmooth public="1"><x path="Bool"/></textureSmooth>
		<blendMode public="1"><e path="openfl.display.BlendMode"/></blendMode>
		<new public="1" set="method" line="663"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl._internal.renderer.opengl.utils.StencilManager" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/_internal/renderer/opengl/utils/StencilManager.hx">
		<count public="1"><x path="Int"/></count>
		<gl public="1"><c path="lime.graphics.GLRenderContext"/></gl>
		<maskStack public="1"><c path="Array"><d/></c></maskStack>
		<reverse public="1"><x path="Bool"/></reverse>
		<stencilStack public="1"><c path="Array"><c path="openfl._internal.renderer.opengl.utils.GLGraphicsData"/></c></stencilStack>
		<bucketStack public="1"><c path="Array"><c path="openfl._internal.renderer.opengl.utils.GLBucket"/></c></bucketStack>
		<prepareGraphics public="1" get="inline" set="null" line="39"><f a="bucketData:renderSession:projection:translationMatrix">
	<c path="openfl._internal.renderer.opengl.utils.GLBucketData"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<c path="openfl.geom.Point"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></prepareGraphics>
		<pushBucket public="1" set="method" line="53"><f a="bucket:renderSession:projection:translationMatrix">
	<c path="openfl._internal.renderer.opengl.utils.GLBucket"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<c path="openfl.geom.Point"/>
	<t path="lime.utils.Float32Array"/>
	<x path="Void"/>
</f></pushBucket>
		<popBucket public="1" set="method" line="81"><f a="object:bucket:renderSession">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.opengl.utils.GLBucket"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></popBucket>
		<bindGraphics public="1" set="method" line="88"><f a="object:glData:renderSession">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.opengl.utils.GLGraphicsData"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></bindGraphics>
		<destroy public="1" set="method" line="144"><f a=""><x path="Void"/></f></destroy>
		<popStencil public="1" set="method" line="153"><f a="object:glData:renderSession">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.opengl.utils.GLGraphicsData"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></popStencil>
		<pushStencil public="1" set="method" line="239"><f a="object:glData:renderSession">
	<c path="openfl.display.DisplayObject"/>
	<c path="openfl._internal.renderer.opengl.utils.GLGraphicsData"/>
	<c path="openfl._internal.renderer.RenderSession"/>
	<x path="Void"/>
</f></pushStencil>
		<setContext public="1" set="method" line="329"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></setContext>
		<new public="1" set="method" line="29"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl.display.Application" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Application.hx">
		<extends path="lime.app.Application"/>
		<stage><c path="openfl.display.Stage"/></stage>
		<convertKeyCode set="method" line="38">
			<f a="keyCode">
				<x path="lime.ui.KeyCode"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</convertKeyCode>
		<create public="1" set="method" line="284" override="1"><f a="config">
	<t path="lime.app._Config.LimeConfig"/>
	<x path="Void"/>
</f></create>
		<onKey set="method" line="294">
			<f a="event">
				<c path="openfl.events.KeyboardEvent"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</onKey>
		<onKeyDown public="1" set="method" line="318" override="1"><f a="keyCode:modifier">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onKeyDown>
		<onKeyUp public="1" set="method" line="329" override="1"><f a="keyCode:modifier">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onKeyUp>
		<onMouse set="method" line="340">
			<f a="type:x:y:button">
				<c path="String"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</onMouse>
		<onMouseDown public="1" set="method" line="410" override="1"><f a="x:y:button">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onMouseDown>
		<onMouseMove public="1" set="method" line="425" override="1"><f a="x:y:button">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onMouseMove>
		<onMouseUp public="1" set="method" line="432" override="1"><f a="x:y:button">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onMouseUp>
		<onTouch set="method" line="447">
			<f a="type:x:y:id">
				<c path="String"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</onTouch>
		<onTouchMove public="1" set="method" line="522" override="1"><f a="x:y:id">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onTouchMove>
		<onTouchEnd public="1" set="method" line="529" override="1"><f a="x:y:id">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onTouchEnd>
		<onTouchStart public="1" set="method" line="536" override="1"><f a="x:y:id">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onTouchStart>
		<onWindowActivate public="1" set="method" line="543" override="1"><f a=""><x path="Void"/></f></onWindowActivate>
		<onWindowDeactivate public="1" set="method" line="551" override="1"><f a=""><x path="Void"/></f></onWindowDeactivate>
		<onWindowResize public="1" set="method" line="559" override="1"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></onWindowResize>
		<render public="1" set="method" line="570" override="1"><f a="context">
	<e path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></render>
		<new public="1" set="method" line="26"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl.display.Bitmap" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Bitmap.hx">
		<extends path="openfl.display.DisplayObjectContainer"/>
		<bitmapData public="1">
			<c path="openfl.display.BitmapData"/>
			<haxe_doc>* The BitmapData object being referenced.</haxe_doc>
		</bitmapData>
		<pixelSnapping public="1">
			<e path="openfl.display.PixelSnapping"/>
			<haxe_doc><![CDATA[* Controls whether or not the Bitmap object is snapped to the nearest pixel.
	 * This value is ignored in the native and HTML5 targets.
	 * The PixelSnapping class includes possible values:
	 * <ul>
	 *   <li><code>PixelSnapping.NEVER</code> - No pixel snapping occurs.</li>
	 *   <li><code>PixelSnapping.ALWAYS</code> - The image is always snapped to
	 * the nearest pixel, independent of transformation.</li>
	 *   <li><code>PixelSnapping.AUTO</code> - The image is snapped to the
	 * nearest pixel if it is drawn with no rotation or skew and it is drawn at a
	 * scale factor of 99.9% to 100.1%. If these conditions are satisfied, the
	 * bitmap image is drawn at 100% scale, snapped to the nearest pixel.
	 * When targeting Flash Player, this value allows the image to be drawn as fast 
	 * as possible using the internal vector renderer.</li>
	 * </ul>]]></haxe_doc>
		</pixelSnapping>
		<smoothing public="1">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* Controls whether or not the bitmap is smoothed when scaled. If
	 * <code>true</code>, the bitmap is smoothed when scaled. If
	 * <code>false</code>, the bitmap is not smoothed when scaled.]]></haxe_doc>
		</smoothing>
		<__image>
			<c path="js.html.ImageElement"/>
			<meta><m n=":noCompletion"/></meta>
		</__image>
		<__getBounds set="method" line="108" override="1">
			<f a="rect:matrix">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getBounds>
		<__hitTest set="method" line="122" override="1">
			<f a="x:y:shapeFlag:stack:interactiveOnly">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__hitTest>
		<__renderCanvas public="1" set="method" line="145" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderCanvas>
		<__renderDOM public="1" set="method" line="152" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderDOM>
		<__renderGL public="1" set="method" line="159" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderGL>
		<__renderMask public="1" set="method" line="166" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderMask>
		<get_height set="method" line="180" override="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_height>
		<set_height set="method" line="193" override="1">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_height>
		<get_width set="method" line="213" override="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_width>
		<set_width set="method" line="226" override="1">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_width>
		<new public="1" set="method" line="91"><f a="?bitmapData:?pixelSnapping:?smoothing" v="null:null:false">
	<c path="openfl.display.BitmapData"/>
	<e path="openfl.display.PixelSnapping"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl.display.BitmapData" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/BitmapData.hx">
		<implements path="openfl.display.IBitmapDrawable"/>
		<fromBase64 public="1" set="method" line="588" static="1"><f a="base64:type:?onload" v="::null">
	<c path="String"/>
	<c path="String"/>
	<f a="">
		<c path="openfl.display.BitmapData"/>
		<x path="Void"/>
	</f>
	<c path="openfl.display.BitmapData"/>
</f></fromBase64>
		<fromBytes public="1" set="method" line="597" static="1"><f a="bytes:?rawAlpha:?onload" v=":null:null">
	<t path="openfl.utils.ByteArray"/>
	<t path="openfl.utils.ByteArray"/>
	<f a="">
		<c path="openfl.display.BitmapData"/>
		<x path="Void"/>
	</f>
	<c path="openfl.display.BitmapData"/>
</f></fromBytes>
		<fromCanvas public="1" set="method" line="607" static="1"><f a="canvas:?transparent" v=":true">
	<c path="js.html.CanvasElement"/>
	<x path="Bool"/>
	<c path="openfl.display.BitmapData"/>
</f></fromCanvas>
		<fromFile public="1" set="method" line="618" static="1"><f a="path:?onload:?onerror" v=":null:null">
	<c path="String"/>
	<f a="">
		<c path="openfl.display.BitmapData"/>
		<x path="Void"/>
	</f>
	<f a=""><x path="Void"/></f>
	<c path="openfl.display.BitmapData"/>
</f></fromFile>
		<fromImage public="1" set="method" line="627" static="1"><f a="image:?transparent" v=":true">
	<c path="lime.graphics.Image"/>
	<x path="Bool"/>
	<c path="openfl.display.BitmapData"/>
</f></fromImage>
		<__flipPixel get="inline" set="null" line="1438" static="1">
			<f a="pixel">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__flipPixel>
		<__ucompare set="method" line="1573" static="1">
			<f a="n1:n2">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__ucompare>
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The height of the bitmap image in pixels.</haxe_doc>
		</height>
		<rect public="1" set="null">
			<c path="openfl.geom.Rectangle"/>
			<haxe_doc>* The rectangle that defines the size and location of the bitmap image. The
	 * top and left of the rectangle are 0; the width and height are equal to the
	 * width and height in pixels of the BitmapData object.</haxe_doc>
		</rect>
		<transparent public="1" set="null">
			<x path="Bool"/>
			<haxe_doc><![CDATA[* Defines whether the bitmap image supports per-pixel transparency. You can
	 * set this value only when you construct a BitmapData object by passing in
	 * <code>true</code> for the <code>transparent</code> parameter of the
	 * constructor. Then, after you create a BitmapData object, you can check
	 * whether it supports per-pixel transparency by determining if the value of
	 * the <code>transparent</code> property is <code>true</code>.]]></haxe_doc>
		</transparent>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* The width of the bitmap image in pixels.</haxe_doc>
		</width>
		<__worldTransform public="1">
			<c path="openfl.geom.Matrix"/>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__worldTransform>
		<__buffer>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<meta><m n=":noCompletion"/></meta>
		</__buffer>
		<__image>
			<c path="lime.graphics.Image"/>
			<meta><m n=":noCompletion"/></meta>
		</__image>
		<__isValid>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__isValid>
		<__texture>
			<t path="lime.graphics.opengl.GLTexture"/>
			<meta><m n=":noCompletion"/></meta>
		</__texture>
		<__textureImage>
			<c path="lime.graphics.Image"/>
			<meta><m n=":noCompletion"/></meta>
		</__textureImage>
		<__uvData>
			<c path="openfl.display.TextureUvs"/>
			<meta><m n=":noCompletion"/></meta>
		</__uvData>
		<applyFilter public="1" set="method" line="206">
			<f a="sourceBitmapData:sourceRect:destPoint:filter">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<c path="openfl.filters.BitmapFilter"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Takes a source image and a filter object and generates the filtered image. 
	 * 
	 * This method relies on the behavior of built-in filter objects, which determine the 
	 * destination rectangle that is affected by an input source rectangle.
	 * 
	 * After a filter is applied, the resulting image can be larger than the input image. 
	 * For example, if you use a BlurFilter class to blur a source rectangle of(50,50,100,100) 
	 * and a destination point of(10,10), the area that changes in the destination image is 
	 * larger than(10,10,60,60) because of the blurring. This happens internally during the 
	 * applyFilter() call.
	 * 
	 * If the <code>sourceRect</code> parameter of the sourceBitmapData parameter is an 
	 * interior region, such as(50,50,100,100) in a 200 x 200 image, the filter uses the source 
	 * pixels outside the <code>sourceRect</code> parameter to generate the destination rectangle.
	 * 
	 * If the BitmapData object and the object specified as the <code>sourceBitmapData</code> 
	 * parameter are the same object, the application uses a temporary copy of the object to 
	 * perform the filter. For best performance, avoid this situation.
	 * 
	 * @param	sourceBitmapData		The input bitmap image to use. The source image can be a different BitmapData object or it can refer to the current BitmapData instance.
	 * @param	sourceRect		A rectangle that defines the area of the source image to use as input.
	 * @param	destPoint		The point within the destination image(the current BitmapData instance) that corresponds to the upper-left corner of the source rectangle. 
	 * @param	filter		The filter object that you use to perform the filtering operation.]]></haxe_doc>
		</applyFilter>
		<clone public="1" set="method" line="230">
			<f a=""><c path="openfl.display.BitmapData"/></f>
			<haxe_doc>* Returns a new BitmapData object that is a clone of the original instance with an exact copy of the contained bitmap. 
	 * @return		A new BitmapData object that is identical to the original.</haxe_doc>
		</clone>
		<colorTransform public="1" set="method" line="252">
			<f a="rect:colorTransform">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.ColorTransform"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Adjusts the color values in a specified area of a bitmap image by using a <code>ColorTransform</code>
	 * object. If the rectangle matches the boundaries of the bitmap image, this method transforms the color 
	 * values of the entire image. 
	 * @param	rect		A Rectangle object that defines the area of the image in which the ColorTransform object is applied.
	 * @param	colorTransform		A ColorTransform object that describes the color transformation values to apply.]]></haxe_doc>
		</colorTransform>
		<copyChannel public="1" set="method" line="302">
			<f a="sourceBitmapData:sourceRect:destPoint:sourceChannel:destChannel">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Transfers data from one channel of another BitmapData object or the
	 * current BitmapData object into a channel of the current BitmapData object.
	 * All of the data in the other channels in the destination BitmapData object
	 * are preserved.
	 *
	 * <p>The source channel value and destination channel value can be one of
	 * following values: </p>
	 *
	 * <ul>
	 *   <li><code>BitmapDataChannel.RED</code></li>
	 *   <li><code>BitmapDataChannel.GREEN</code></li>
	 *   <li><code>BitmapDataChannel.BLUE</code></li>
	 *   <li><code>BitmapDataChannel.ALPHA</code></li>
	 * </ul>
	 * 
	 * @param sourceBitmapData The input bitmap image to use. The source image
	 *                         can be a different BitmapData object or it can
	 *                         refer to the current BitmapData object.
	 * @param sourceRect       The source Rectangle object. To copy only channel
	 *                         data from a smaller area within the bitmap,
	 *                         specify a source rectangle that is smaller than
	 *                         the overall size of the BitmapData object.
	 * @param destPoint        The destination Point object that represents the
	 *                         upper-left corner of the rectangular area where
	 *                         the new channel data is placed. To copy only
	 *                         channel data from one area to a different area in
	 *                         the destination image, specify a point other than
	 *                        (0,0).
	 * @param sourceChannel    The source channel. Use a value from the
	 *                         BitmapDataChannel class
	 *                        (<code>BitmapDataChannel.RED</code>,
	 *                         <code>BitmapDataChannel.BLUE</code>,
	 *                         <code>BitmapDataChannel.GREEN</code>,
	 *                         <code>BitmapDataChannel.ALPHA</code>).
	 * @param destChannel      The destination channel. Use a value from the
	 *                         BitmapDataChannel class
	 *                        (<code>BitmapDataChannel.RED</code>,
	 *                         <code>BitmapDataChannel.BLUE</code>,
	 *                         <code>BitmapDataChannel.GREEN</code>,
	 *                         <code>BitmapDataChannel.ALPHA</code>).
	 * @throws TypeError The sourceBitmapData, sourceRect or destPoint are null.]]></haxe_doc>
		</copyChannel>
		<copyPixels public="1" set="method" line="370">
			<f a="sourceBitmapData:sourceRect:destPoint:?alphaBitmapData:?alphaPoint:?mergeAlpha" v=":::null:null:false">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Point"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Provides a fast routine to perform pixel manipulation between images with
	 * no stretching, rotation, or color effects. This method copies a
	 * rectangular area of a source image to a rectangular area of the same size
	 * at the destination point of the destination BitmapData object.
	 *
	 * <p>If you include the <code>alphaBitmap</code> and <code>alphaPoint</code>
	 * parameters, you can use a secondary image as an alpha source for the
	 * source image. If the source image has alpha data, both sets of alpha data
	 * are used to composite pixels from the source image to the destination
	 * image. The <code>alphaPoint</code> parameter is the point in the alpha
	 * image that corresponds to the upper-left corner of the source rectangle.
	 * Any pixels outside the intersection of the source image and alpha image
	 * are not copied to the destination image.</p>
	 *
	 * <p>The <code>mergeAlpha</code> property controls whether or not the alpha
	 * channel is used when a transparent image is copied onto another
	 * transparent image. To copy pixels with the alpha channel data, set the
	 * <code>mergeAlpha</code> property to <code>true</code>. By default, the
	 * <code>mergeAlpha</code> property is <code>false</code>.</p>
	 * 
	 * @param sourceBitmapData The input bitmap image from which to copy pixels.
	 *                         The source image can be a different BitmapData
	 *                         instance, or it can refer to the current
	 *                         BitmapData instance.
	 * @param sourceRect       A rectangle that defines the area of the source
	 *                         image to use as input.
	 * @param destPoint        The destination point that represents the
	 *                         upper-left corner of the rectangular area where
	 *                         the new pixels are placed.
	 * @param alphaBitmapData  A secondary, alpha BitmapData object source.
	 * @param alphaPoint       The point in the alpha BitmapData object source
	 *                         that corresponds to the upper-left corner of the
	 *                         <code>sourceRect</code> parameter.
	 * @param mergeAlpha       To use the alpha channel, set the value to
	 *                         <code>true</code>. To copy pixels with no alpha
	 *                         channel, set the value to <code>false</code>.
	 * @throws TypeError The sourceBitmapData, sourceRect, destPoint are null.]]></haxe_doc>
		</copyPixels>
		<dispose public="1" set="method" line="398">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[* Frees memory that is used to store the BitmapData object.
	 *
	 * <p>When the <code>dispose()</code> method is called on an image, the width
	 * and height of the image are set to 0. All subsequent calls to methods or
	 * properties of this BitmapData instance fail, and an exception is thrown.
	 * </p>
	 *
	 * <p><code>BitmapData.dispose()</code> releases the memory occupied by the
	 * actual bitmap data, immediately(a bitmap can consume up to 64 MB of
	 * memory). After using <code>BitmapData.dispose()</code>, the BitmapData
	 * object is no longer usable and an exception may be thrown if
	 * you call functions on the BitmapData object. However,
	 * <code>BitmapData.dispose()</code> does not garbage collect the BitmapData
	 * object(approximately 128 bytes); the memory occupied by the actual
	 * BitmapData object is released at the time the BitmapData object is
	 * collected by the garbage collector.</p>
	 *]]></haxe_doc>
		</dispose>
		<draw public="1" set="method" line="482">
			<f a="source:?matrix:?colorTransform:?blendMode:?clipRect:?smoothing" v=":null:null:null:null:false">
				<c path="openfl.display.IBitmapDrawable"/>
				<c path="openfl.geom.Matrix"/>
				<c path="openfl.geom.ColorTransform"/>
				<e path="openfl.display.BlendMode"/>
				<c path="openfl.geom.Rectangle"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Draws the <code>source</code> display object onto the bitmap image, using
	 * the NME software renderer. You can specify <code>matrix</code>,
	 * <code>colorTransform</code>, <code>blendMode</code>, and a destination
	 * <code>clipRect</code> parameter to control how the rendering performs.
	 * Optionally, you can specify whether the bitmap should be smoothed when
	 * scaled(this works only if the source object is a BitmapData object).
	 *
	 * <p>The source display object does not use any of its applied
	 * transformations for this call. It is treated as it exists in the library
	 * or file, with no matrix transform, no color transform, and no blend mode.
	 * To draw a display object(such as a movie clip) by using its own transform
	 * properties, you can copy its <code>transform</code> property object to the
	 * <code>transform</code> property of the Bitmap object that uses the
	 * BitmapData object.</p>
	 * 
	 * @param source         The display object or BitmapData object to draw to
	 *                       the BitmapData object.(The DisplayObject and
	 *                       BitmapData classes implement the IBitmapDrawable
	 *                       interface.)
	 * @param matrix         A Matrix object used to scale, rotate, or translate
	 *                       the coordinates of the bitmap. If you do not want to
	 *                       apply a matrix transformation to the image, set this
	 *                       parameter to an identity matrix, created with the
	 *                       default <code>new Matrix()</code> constructor, or
	 *                       pass a <code>null</code> value.
	 * @param colorTransform A ColorTransform object that you use to adjust the
	 *                       color values of the bitmap. If no object is
	 *                       supplied, the bitmap image's colors are not
	 *                       transformed. If you must pass this parameter but you
	 *                       do not want to transform the image, set this
	 *                       parameter to a ColorTransform object created with
	 *                       the default <code>new ColorTransform()</code>
	 *                       constructor.
	 * @param blendMode      A string value, from the openfl.display.BlendMode
	 *                       class, specifying the blend mode to be applied to
	 *                       the resulting bitmap.
	 * @param clipRect       A Rectangle object that defines the area of the
	 *                       source object to draw. If you do not supply this
	 *                       value, no clipping occurs and the entire source
	 *                       object is drawn.
	 * @param smoothing      A Boolean value that determines whether a BitmapData
	 *                       object is smoothed when scaled or rotated, due to a
	 *                       scaling or rotation in the <code>matrix</code>
	 *                       parameter. The <code>smoothing</code> parameter only
	 *                       applies if the <code>source</code> parameter is a
	 *                       BitmapData object. With <code>smoothing</code> set
	 *                       to <code>false</code>, the rotated or scaled
	 *                       BitmapData image can appear pixelated or jagged. For
	 *                       example, the following two images use the same
	 *                       BitmapData object for the <code>source</code>
	 *                       parameter, but the <code>smoothing</code> parameter
	 *                       is set to <code>true</code> on the left and
	 *                       <code>false</code> on the right:
	 *
	 *                       <p>Drawing a bitmap with <code>smoothing</code> set
	 *                       to <code>true</code> takes longer than doing so with
	 *                       <code>smoothing</code> set to
	 *                       <code>false</code>.</p>
	 * @throws ArgumentError The <code>source</code> parameter is not a
	 *                       BitmapData or DisplayObject object.
	 * @throws ArgumentError The source is null or not a valid IBitmapDrawable
	 *                       object.
	 * @throws SecurityError The <code>source</code> object and(in the case of a
	 *                       Sprite or MovieClip object) all of its child objects
	 *                       do not come from the same domain as the caller, or
	 *                       are not in a content that is accessible to the
	 *                       caller by having called the
	 *                       <code>Security.allowDomain()</code> method. This
	 *                       restriction does not apply to AIR content in the
	 *                       application security sandbox.]]></haxe_doc>
		</draw>
		<encode public="1" set="method" line="544">
			<f a="rect:compressor:?byteArray" v="::null">
				<c path="openfl.geom.Rectangle"/>
				<d/>
				<t path="openfl.utils.ByteArray"/>
				<t path="openfl.utils.ByteArray"/>
			</f>
			<haxe_doc>* Encodes the current image as a JPG or PNG format ByteArray.
	 * 
	 * This method is not available to the HTML5 and Flash targets.
	 * 
	 * @param format  The encoding format, either "png" or "jpg".
	 * @param quality The encoding quality, when encoding with the JPG format.
	 * @return  A ByteArray in the specified encoding format</haxe_doc>
		</encode>
		<fillRect public="1" set="method" line="561">
			<f a="rect:color">
				<c path="openfl.geom.Rectangle"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>* Fills a rectangular area of pixels with a specified ARGB color.
	 * 
	 * @param rect  The rectangular area to fill.
	 * @param color The ARGB color value that fills the area. ARGB colors are
	 *              often specified in hexadecimal format; for example,
	 *              0xFF336699.
	 * @throws TypeError The rect is null.</haxe_doc>
		</fillRect>
		<floodFill public="1" set="method" line="580">
			<f a="x:y:color">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Performs a flood fill operation on an image starting at an(<i>x</i>,
	 * <i>y</i>) coordinate and filling with a certain color. The
	 * <code>floodFill()</code> method is similar to the paint bucket tool in
	 * various paint programs. The color is an ARGB color that contains alpha
	 * information and color information.
	 * 
	 * @param x     The <i>x</i> coordinate of the image.
	 * @param y     The <i>y</i> coordinate of the image.
	 * @param color The ARGB color to use as a fill.]]></haxe_doc>
		</floodFill>
		<generateFilterRect public="1" set="method" line="664">
			<f a="sourceRect:filter">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.filters.BitmapFilter"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc><![CDATA[* Determines the destination rectangle that the <code>applyFilter()</code>
	 * method call affects, given a BitmapData object, a source rectangle, and a
	 * filter object.
	 *
	 * <p>For example, a blur filter normally affects an area larger than the
	 * size of the original image. A 100 x 200 pixel image that is being filtered
	 * by a default BlurFilter instance, where <code>blurX = blurY = 4</code>
	 * generates a destination rectangle of <code>(-2,-2,104,204)</code>. The
	 * <code>generateFilterRect()</code> method lets you find out the size of
	 * this destination rectangle in advance so that you can size the destination
	 * image appropriately before you perform a filter operation.</p>
	 *
	 * <p>Some filters clip their destination rectangle based on the source image
	 * size. For example, an inner <code>DropShadow</code> does not generate a
	 * larger result than its source image. In this API, the BitmapData object is
	 * used as the source bounds and not the source <code>rect</code>
	 * parameter.</p>
	 * 
	 * @param sourceRect A rectangle defining the area of the source image to use
	 *                   as input.
	 * @param filter     A filter object that you use to calculate the
	 *                   destination rectangle.
	 * @return A destination rectangle computed by using an image, the
	 *         <code>sourceRect</code> parameter, and a filter.
	 * @throws TypeError The sourceRect or filter are null.]]></haxe_doc>
		</generateFilterRect>
		<getBuffer public="1" set="method" line="671"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
</f></getBuffer>
		<getColorBoundsRect public="1" set="method" line="730">
			<f a="mask:color:?findColor" v="::true">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<c path="openfl.geom.Rectangle"/>
			</f>
			<haxe_doc><![CDATA[* Determines a rectangular region that either fully encloses all pixels of a
	 * specified color within the bitmap image(if the <code>findColor</code>
	 * parameter is set to <code>true</code>) or fully encloses all pixels that
	 * do not include the specified color(if the <code>findColor</code>
	 * parameter is set to <code>false</code>).
	 *
	 * <p>For example, if you have a source image and you want to determine the
	 * rectangle of the image that contains a nonzero alpha channel, pass
	 * <code>{mask: 0xFF000000, color: 0x00000000}</code> as parameters. If the
	 * <code>findColor</code> parameter is set to <code>true</code>, the entire
	 * image is searched for the bounds of pixels for which <code>(value & mask)
	 * == color</code>(where <code>value</code> is the color value of the
	 * pixel). If the <code>findColor</code> parameter is set to
	 * <code>false</code>, the entire image is searched for the bounds of pixels
	 * for which <code>(value & mask) != color</code>(where <code>value</code>
	 * is the color value of the pixel). To determine white space around an
	 * image, pass <code>{mask: 0xFFFFFFFF, color: 0xFFFFFFFF}</code> to find the
	 * bounds of nonwhite pixels.</p>
	 * 
	 * @param mask      A hexadecimal value, specifying the bits of the ARGB
	 *                  color to consider. The color value is combined with this
	 *                  hexadecimal value, by using the <code>&</code>(bitwise
	 *                  AND) operator.
	 * @param color     A hexadecimal value, specifying the ARGB color to match
	 *                 (if <code>findColor</code> is set to <code>true</code>)
	 *                  or <i>not</i> to match(if <code>findColor</code> is set
	 *                  to <code>false</code>).
	 * @param findColor If the value is set to <code>true</code>, returns the
	 *                  bounds of a color value in an image. If the value is set
	 *                  to <code>false</code>, returns the bounds of where this
	 *                  color doesn't exist in an image.
	 * @return The region of the image that is the specified color.]]></haxe_doc>
		</getColorBoundsRect>
		<getPixel public="1" set="method" line="760">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc><![CDATA[* Returns an integer that represents an RGB pixel value from a BitmapData
	 * object at a specific point(<i>x</i>, <i>y</i>). The
	 * <code>getPixel()</code> method returns an unmultiplied pixel value. No
	 * alpha information is returned.
	 *
	 * <p>All pixels in a BitmapData object are stored as premultiplied color
	 * values. A premultiplied image pixel has the red, green, and blue color
	 * channel values already multiplied by the alpha data. For example, if the
	 * alpha value is 0, the values for the RGB channels are also 0, independent
	 * of their unmultiplied values. This loss of data can cause some problems
	 * when you perform operations. All BitmapData methods take and return
	 * unmultiplied values. The internal pixel representation is converted from
	 * premultiplied to unmultiplied before it is returned as a value. During a
	 * set operation, the pixel value is premultiplied before the raw image pixel
	 * is set.</p>
	 * 
	 * @param x The <i>x</i> position of the pixel.
	 * @param y The <i>y</i> position of the pixel.
	 * @return A number that represents an RGB pixel value. If the(<i>x</i>,
	 *         <i>y</i>) coordinates are outside the bounds of the image, the
	 *         method returns 0.]]></haxe_doc>
		</getPixel>
		<getPixel32 public="1" set="method" line="790">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc><![CDATA[* Returns an ARGB color value that contains alpha channel data and RGB data.
	 * This method is similar to the <code>getPixel()</code> method, which
	 * returns an RGB color without alpha channel data.
	 *
	 * <p>All pixels in a BitmapData object are stored as premultiplied color
	 * values. A premultiplied image pixel has the red, green, and blue color
	 * channel values already multiplied by the alpha data. For example, if the
	 * alpha value is 0, the values for the RGB channels are also 0, independent
	 * of their unmultiplied values. This loss of data can cause some problems
	 * when you perform operations. All BitmapData methods take and return
	 * unmultiplied values. The internal pixel representation is converted from
	 * premultiplied to unmultiplied before it is returned as a value. During a
	 * set operation, the pixel value is premultiplied before the raw image pixel
	 * is set.</p>
	 * 
	 * @param x The <i>x</i> position of the pixel.
	 * @param y The <i>y</i> position of the pixel.
	 * @return A number representing an ARGB pixel value. If the(<i>x</i>,
	 *         <i>y</i>) coordinates are outside the bounds of the image, 0 is
	 *         returned.]]></haxe_doc>
		</getPixel32>
		<getPixels public="1" set="method" line="807">
			<f a="rect">
				<c path="openfl.geom.Rectangle"/>
				<t path="openfl.utils.ByteArray"/>
			</f>
			<haxe_doc>* Generates a byte array from a rectangular region of pixel data. Writes an
	 * unsigned integer(a 32-bit unmultiplied pixel value) for each pixel into
	 * the byte array.
	 * 
	 * @param rect A rectangular area in the current BitmapData object.
	 * @return A ByteArray representing the pixels in the given Rectangle.
	 * @throws TypeError The rect is null.</haxe_doc>
		</getPixels>
		<getTexture public="1" set="method" line="816"><f a="gl">
	<c path="lime.graphics.GLRenderContext"/>
	<t path="lime.graphics.opengl.GLTexture"/>
</f></getTexture>
		<getVector public="1" set="method" line="855">
			<f a="rect">
				<c path="openfl.geom.Rectangle"/>
				<x path="openfl.Vector"><x path="UInt"/></x>
			</f>
			<haxe_doc>* Generates a vector array from a rectangular region of pixel data. Returns
	 * a Vector object of unsigned integers(a 32-bit unmultiplied pixel value)
	 * for the specified rectangle.
	 * 
	 * @param rect A rectangular area in the current BitmapData object.
	 * @return A Vector representing the given Rectangle.
	 * @throws TypeError The rect is null.</haxe_doc>
		</getVector>
		<histogram public="1" set="method" line="871"><f a="?hRect" v="null">
	<c path="openfl.geom.Rectangle"/>
	<c path="Array"><c path="Array"><x path="Int"/></c></c>
</f></histogram>
		<hitTest public="1" set="method" line="888"><f a="firstPoint:firstAlphaThreshold:secondObject:?secondBitmapDataPoint:?secondAlphaThreshold" v=":::null:1">
	<c path="openfl.geom.Point"/>
	<x path="Int"/>
	<d/>
	<c path="openfl.geom.Point"/>
	<x path="Int"/>
	<x path="Bool"/>
</f></hitTest>
		<lock public="1" set="method" line="907">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[* Locks an image so that any objects that reference the BitmapData object,
	 * such as Bitmap objects, are not updated when this BitmapData object
	 * changes. To improve performance, use this method along with the
	 * <code>unlock()</code> method before and after numerous calls to the
	 * <code>setPixel()</code> or <code>setPixel32()</code> method.
	 *]]></haxe_doc>
		</lock>
		<noise public="1" set="method" line="942">
			<f a="randomSeed:?low:?high:?channelOptions:?grayScale" v=":0:255:7:false">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Fills an image with pixels representing random noise.
	 * 
	 * @param randomSeed     The random seed number to use. If you keep all other
	 *                       parameters the same, you can generate different
	 *                       pseudo-random results by varying the random seed
	 *                       value. The noise function is a mapping function, not
	 *                       a true random-number generation function, so it
	 *                       creates the same results each time from the same
	 *                       random seed.
	 * @param low            The lowest value to generate for each channel(0 to
	 *                       255).
	 * @param high           The highest value to generate for each channel(0 to
	 *                       255).
	 * @param channelOptions A number that can be a combination of any of the
	 *                       four color channel values
	 *                      (<code>BitmapDataChannel.RED</code>,
	 *                       <code>BitmapDataChannel.BLUE</code>,
	 *                       <code>BitmapDataChannel.GREEN</code>, and
	 *                       <code>BitmapDataChannel.ALPHA</code>). You can use
	 *                       the logical OR operator(<code>|</code>) to combine
	 *                       channel values.
	 * @param grayScale      A Boolean value. If the value is <code>true</code>,
	 *                       a grayscale image is created by setting all of the
	 *                       color channels to the same value. The alpha channel
	 *                       selection is not affected by setting this parameter
	 *                       to <code>true</code>.]]></haxe_doc>
		</noise>
		<paletteMap public="1" set="method" line="951"><f a="sourceBitmapData:sourceRect:destPoint:?redArray:?greenArray:?blueArray:?alphaArray" v=":::null:null:null:null">
	<c path="openfl.display.BitmapData"/>
	<c path="openfl.geom.Rectangle"/>
	<c path="openfl.geom.Point"/>
	<c path="Array"><x path="Int"/></c>
	<c path="Array"><x path="Int"/></c>
	<c path="Array"><x path="Int"/></c>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></paletteMap>
		<perlinNoise public="1" set="method" line="1058">
			<f a="baseX:baseY:numOctaves:randomSeed:stitch:fractalNoise:?channelOptions:?grayScale:?offsets" v="::::::7:false:null">
				<x path="Float"/>
				<x path="Float"/>
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<c path="Array"><c path="openfl.geom.Point"/></c>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Generates a Perlin noise image.
	 *
	 * <p>The Perlin noise generation algorithm interpolates and combines
	 * individual random noise functions(called octaves) into a single function
	 * that generates more natural-seeming random noise. Like musical octaves,
	 * each octave function is twice the frequency of the one before it. Perlin
	 * noise has been described as a "fractal sum of noise" because it combines
	 * multiple sets of noise data with different levels of detail.</p>
	 *
	 * <p>You can use Perlin noise functions to simulate natural phenomena and
	 * landscapes, such as wood grain, clouds, and mountain ranges. In most
	 * cases, the output of a Perlin noise function is not displayed directly but
	 * is used to enhance other images and give them pseudo-random
	 * variations.</p>
	 *
	 * <p>Simple digital random noise functions often produce images with harsh,
	 * contrasting points. This kind of harsh contrast is not often found in
	 * nature. The Perlin noise algorithm blends multiple noise functions that
	 * operate at different levels of detail. This algorithm results in smaller
	 * variations among neighboring pixel values.</p>
	 * 
	 * @param baseX          Frequency to use in the <i>x</i> direction. For
	 *                       example, to generate a noise that is sized for a 64
	 *                       x 128 image, pass 64 for the <code>baseX</code>
	 *                       value.
	 * @param baseY          Frequency to use in the <i>y</i> direction. For
	 *                       example, to generate a noise that is sized for a 64
	 *                       x 128 image, pass 128 for the <code>baseY</code>
	 *                       value.
	 * @param numOctaves     Number of octaves or individual noise functions to
	 *                       combine to create this noise. Larger numbers of
	 *                       octaves create images with greater detail. Larger
	 *                       numbers of octaves also require more processing
	 *                       time.
	 * @param randomSeed     The random seed number to use. If you keep all other
	 *                       parameters the same, you can generate different
	 *                       pseudo-random results by varying the random seed
	 *                       value. The Perlin noise function is a mapping
	 *                       function, not a true random-number generation
	 *                       function, so it creates the same results each time
	 *                       from the same random seed.
	 * @param stitch         A Boolean value. If the value is <code>true</code>,
	 *                       the method attempts to smooth the transition edges
	 *                       of the image to create seamless textures for tiling
	 *                       as a bitmap fill.
	 * @param fractalNoise   A Boolean value. If the value is <code>true</code>,
	 *                       the method generates fractal noise; otherwise, it
	 *                       generates turbulence. An image with turbulence has
	 *                       visible discontinuities in the gradient that can
	 *                       make it better approximate sharper visual effects
	 *                       like flames and ocean waves.
	 * @param channelOptions A number that can be a combination of any of the
	 *                       four color channel values
	 *                      (<code>BitmapDataChannel.RED</code>,
	 *                       <code>BitmapDataChannel.BLUE</code>,
	 *                       <code>BitmapDataChannel.GREEN</code>, and
	 *                       <code>BitmapDataChannel.ALPHA</code>). You can use
	 *                       the logical OR operator(<code>|</code>) to combine
	 *                       channel values.
	 * @param grayScale      A Boolean value. If the value is <code>true</code>,
	 *                       a grayscale image is created by setting each of the
	 *                       red, green, and blue color channels to identical
	 *                       values. The alpha channel value is not affected if
	 *                       this value is set to <code>true</code>.]]></haxe_doc>
		</perlinNoise>
		<scroll public="1" set="method" line="1072">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Scrolls an image by a certain(<i>x</i>, <i>y</i>) pixel amount. Edge
	 * regions outside the scrolling area are left unchanged.
	 * 
	 * @param x The amount by which to scroll horizontally.
	 * @param y The amount by which to scroll vertically.]]></haxe_doc>
		</scroll>
		<setPixel public="1" set="method" line="1096">
			<f a="x:y:color">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Sets a single pixel of a BitmapData object. The current alpha channel
	 * value of the image pixel is preserved during this operation. The value of
	 * the RGB color parameter is treated as an unmultiplied color value.
	 *
	 * <p><b>Note:</b> To increase performance, when you use the
	 * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,
	 * call the <code>lock()</code> method before you call the
	 * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call
	 * the <code>unlock()</code> method when you have made all pixel changes.
	 * This process prevents objects that reference this BitmapData instance from
	 * updating until you finish making the pixel changes.</p>
	 * 
	 * @param x     The <i>x</i> position of the pixel whose value changes.
	 * @param y     The <i>y</i> position of the pixel whose value changes.
	 * @param color The resulting RGB color for the pixel.]]></haxe_doc>
		</setPixel>
		<setPixel32 public="1" set="method" line="1135">
			<f a="x:y:color">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Sets the color and alpha transparency values of a single pixel of a
	 * BitmapData object. This method is similar to the <code>setPixel()</code>
	 * method; the main difference is that the <code>setPixel32()</code> method
	 * takes an ARGB color value that contains alpha channel information.
	 *
	 * <p>All pixels in a BitmapData object are stored as premultiplied color
	 * values. A premultiplied image pixel has the red, green, and blue color
	 * channel values already multiplied by the alpha data. For example, if the
	 * alpha value is 0, the values for the RGB channels are also 0, independent
	 * of their unmultiplied values. This loss of data can cause some problems
	 * when you perform operations. All BitmapData methods take and return
	 * unmultiplied values. The internal pixel representation is converted from
	 * premultiplied to unmultiplied before it is returned as a value. During a
	 * set operation, the pixel value is premultiplied before the raw image pixel
	 * is set.</p>
	 *
	 * <p><b>Note:</b> To increase performance, when you use the
	 * <code>setPixel()</code> or <code>setPixel32()</code> method repeatedly,
	 * call the <code>lock()</code> method before you call the
	 * <code>setPixel()</code> or <code>setPixel32()</code> method, and then call
	 * the <code>unlock()</code> method when you have made all pixel changes.
	 * This process prevents objects that reference this BitmapData instance from
	 * updating until you finish making the pixel changes.</p>
	 * 
	 * @param x     The <i>x</i> position of the pixel whose value changes.
	 * @param y     The <i>y</i> position of the pixel whose value changes.
	 * @param color The resulting ARGB color for the pixel. If the bitmap is
	 *              opaque(not transparent), the alpha transparency portion of
	 *              this color value is ignored.]]></haxe_doc>
		</setPixel32>
		<setPixels public="1" set="method" line="1162">
			<f a="rect:byteArray">
				<c path="openfl.geom.Rectangle"/>
				<t path="openfl.utils.ByteArray"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Converts a byte array into a rectangular region of pixel data. For each
	 * pixel, the <code>ByteArray.readUnsignedInt()</code> method is called and
	 * the return value is written into the pixel. If the byte array ends before
	 * the full rectangle is written, the function returns. The data in the byte
	 * array is expected to be 32-bit ARGB pixel values. No seeking is performed
	 * on the byte array before or after the pixels are read.
	 * 
	 * @param rect           Specifies the rectangular region of the BitmapData
	 *                       object.
	 * @param inputByteArray A ByteArray object that consists of 32-bit
	 *                       unmultiplied pixel values to be used in the
	 *                       rectangular region.
	 * @throws EOFError  The <code>inputByteArray</code> object does not include
	 *                   enough data to fill the area of the <code>rect</code>
	 *                   rectangle. The method fills as many pixels as possible
	 *                   before throwing the exception.
	 * @throws TypeError The rect or inputByteArray are null.]]></haxe_doc>
		</setPixels>
		<setVector public="1" set="method" line="1179">
			<f a="rect:inputVector">
				<c path="openfl.geom.Rectangle"/>
				<x path="openfl.Vector"><x path="UInt"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>* Converts a Vector into a rectangular region of pixel data. For each pixel,
	 * a Vector element is read and written into the BitmapData pixel. The data
	 * in the Vector is expected to be 32-bit ARGB pixel values.
	 * 
	 * @param rect Specifies the rectangular region of the BitmapData object.
	 * @throws RangeError The vector array is not large enough to read all the
	 *                    pixel data.</haxe_doc>
		</setVector>
		<threshold public="1" set="method" line="1248">
			<f a="sourceBitmapData:sourceRect:destPoint:operation:threshold:?color:?mask:?copySource" v=":::::0:-1:false">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<haxe_doc><![CDATA[* Tests pixel values in an image against a specified threshold and sets
	 * pixels that pass the test to new color values. Using the
	 * <code>threshold()</code> method, you can isolate and replace color ranges
	 * in an image and perform other logical operations on image pixels.
	 *
	 * <p>The <code>threshold()</code> method's test logic is as follows:</p>
	 *
	 * <ol>
	 *   <li>If <code>((pixelValue & mask) operation(threshold & mask))</code>,
	 * then set the pixel to <code>color</code>;</li>
	 *   <li>Otherwise, if <code>copySource == true</code>, then set the pixel to
	 * corresponding pixel value from <code>sourceBitmap</code>.</li>
	 * </ol>
	 *
	 * <p>The <code>operation</code> parameter specifies the comparison operator
	 * to use for the threshold test. For example, by using "==" as the
	 * <code>operation</code> parameter, you can isolate a specific color value
	 * in an image. Or by using <code>{operation: "<", mask: 0xFF000000,
	 * threshold: 0x7F000000, color: 0x00000000}</code>, you can set all
	 * destination pixels to be fully transparent when the source image pixel's
	 * alpha is less than 0x7F. You can use this technique for animated
	 * transitions and other effects.</p>
	 * 
	 * @param sourceBitmapData The input bitmap image to use. The source image
	 *                         can be a different BitmapData object or it can
	 *                         refer to the current BitmapData instance.
	 * @param sourceRect       A rectangle that defines the area of the source
	 *                         image to use as input.
	 * @param destPoint        The point within the destination image(the
	 *                         current BitmapData instance) that corresponds to
	 *                         the upper-left corner of the source rectangle.
	 * @param operation        One of the following comparison operators, passed
	 *                         as a String: "<", "<=", ">", ">=", "==", "!="
	 * @param threshold        The value that each pixel is tested against to see
	 *                         if it meets or exceeds the threshhold.
	 * @param color            The color value that a pixel is set to if the
	 *                         threshold test succeeds. The default value is
	 *                         0x00000000.
	 * @param mask             The mask to use to isolate a color component.
	 * @param copySource       If the value is <code>true</code>, pixel values
	 *                         from the source image are copied to the
	 *                         destination when the threshold test fails. If the
	 *                         value is <code>false</code>, the source image is
	 *                         not copied when the threshold test fails.
	 * @return The number of pixels that were changed.
	 * @throws ArgumentError The operation string is not a valid operation
	 * @throws TypeError     The sourceBitmapData, sourceRect destPoint or
	 *                       operation are null.]]></haxe_doc>
		</threshold>
		<unlock public="1" set="method" line="1415">
			<f a="?changeRect" v="null">
				<c path="openfl.geom.Rectangle"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Unlocks an image so that any objects that reference the BitmapData object,
	 * such as Bitmap objects, are updated when this BitmapData object changes.
	 * To improve performance, use this method along with the <code>lock()</code>
	 * method before and after numerous calls to the <code>setPixel()</code> or
	 * <code>setPixel32()</code> method.
	 * 
	 * @param changeRect The area of the BitmapData object that has changed. If
	 *                   you do not specify a value for this parameter, the
	 *                   entire area of the BitmapData object is considered
	 *                   changed.]]></haxe_doc>
		</unlock>
		<__createUVs set="method" line="1422">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__createUVs>
		<__loadFromBase64 get="inline" set="null" line="1445">
			<f a="base64:type:?onload" v="::null">
				<c path="String"/>
				<c path="String"/>
				<f a="">
					<c path="openfl.display.BitmapData"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__loadFromBase64>
		<__loadFromBytes get="inline" set="null" line="1462">
			<f a="bytes:?rawAlpha:?onload" v=":null:null">
				<t path="openfl.utils.ByteArray"/>
				<t path="openfl.utils.ByteArray"/>
				<f a="">
					<c path="openfl.display.BitmapData"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__loadFromBytes>
		<__loadFromFile set="method" line="1498">
			<f a="path:onload:onerror">
				<c path="String"/>
				<f a="">
					<c path="openfl.display.BitmapData"/>
					<x path="Void"/>
				</f>
				<f a=""><x path="Void"/></f>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__loadFromFile>
		<__loadFromImage set="method" line="1515">
			<f a="image">
				<c path="lime.graphics.Image"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__loadFromImage>
		<__renderCanvas public="1" set="method" line="1527">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderCanvas>
		<__renderMask public="1" set="method" line="1557">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__renderMask>
		<__sync set="method" line="1564">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__sync>
		<__updateChildren public="1" set="method" line="1627">
			<f a="transformOnly">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__updateChildren>
		<new public="1" set="method" line="154">
			<f a="width:height:?transparent:?fillColor" v="::true:-1">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Creates a BitmapData object with a specified width and height. If you specify a value for 
	 * the <code>fillColor</code> parameter, every pixel in the bitmap is set to that color. 
	 * 
	 * By default, the bitmap is created as transparent, unless you pass the value <code>false</code>
	 * for the transparent parameter. After you create an opaque bitmap, you cannot change it 
	 * to a transparent bitmap. Every pixel in an opaque bitmap uses only 24 bits of color channel 
	 * information. If you define the bitmap as transparent, every pixel uses 32 bits of color 
	 * channel information, including an alpha transparency channel.
	 * 
	 * @param	width		The width of the bitmap image in pixels. 
	 * @param	height		The height of the bitmap image in pixels. 
	 * @param	transparent		Specifies whether the bitmap image supports per-pixel transparency. The default value is <code>true</code>(transparent). To create a fully transparent bitmap, set the value of the <code>transparent</code> parameter to <code>true</code> and the value of the <code>fillColor</code> parameter to 0x00000000(or to 0). Setting the <code>transparent</code> property to <code>false</code> can result in minor improvements in rendering performance.
	 * @param	fillColor		A 32-bit ARGB color value that you use to fill the bitmap image area. The default value is 0xFFFFFFFF(solid white).]]></haxe_doc>
		</new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
			<m n=":autoBuild"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl.display.TextureUvs" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/BitmapData.hx" module="openfl.display.BitmapData">
		<x0 public="1"><x path="Float"/></x0>
		<x1 public="1"><x path="Float"/></x1>
		<x2 public="1"><x path="Float"/></x2>
		<x3 public="1"><x path="Float"/></x3>
		<y0 public="1"><x path="Float"/></y0>
		<y1 public="1"><x path="Float"/></y1>
		<y2 public="1"><x path="Float"/></y2>
		<y3 public="1"><x path="Float"/></y3>
		<new public="1" set="method" line="1650"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<enum path="openfl.display.BlendMode" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/BlendMode.hx">
		<ADD><haxe_doc><![CDATA[* Adds the values of the constituent colors of the display object to the
	 * colors of its background, applying a ceiling of 0xFF. This setting is
	 * commonly used for animating a lightening dissolve between two objects.
	 *
	 * <p>For example, if the display object has a pixel with an RGB value of
	 * 0xAAA633, and the background pixel has an RGB value of 0xDD2200, the
	 * resulting RGB value for the displayed pixel is 0xFFC833(because 0xAA +
	 * 0xDD > 0xFF, 0xA6 + 0x22 = 0xC8, and 0x33 + 0x00 = 0x33).</p>]]></haxe_doc></ADD>
		<ALPHA><haxe_doc><![CDATA[* Applies the alpha value of each pixel of the display object to the
	 * background. This requires the <code>blendMode</code> property of the
	 * parent display object be set to
	 * <code>openfl.display.BlendMode.LAYER</code>.
	 *
	 * <p>Not supported under GPU rendering.</p>]]></haxe_doc></ALPHA>
		<DARKEN><haxe_doc><![CDATA[* Selects the darker of the constituent colors of the display object and the
	 * colors of the background(the colors with the smaller values). This
	 * setting is commonly used for superimposing type.
	 *
	 * <p>For example, if the display object has a pixel with an RGB value of
	 * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the
	 * resulting RGB value for the displayed pixel is 0xDDCC00(because 0xFF >
	 * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>
	 *
	 * <p>Not supported under GPU rendering.</p>]]></haxe_doc></DARKEN>
		<DIFFERENCE><haxe_doc><![CDATA[* Compares the constituent colors of the display object with the colors of
	 * its background, and subtracts the darker of the values of the two
	 * constituent colors from the lighter value. This setting is commonly used
	 * for more vibrant colors.
	 *
	 * <p>For example, if the display object has a pixel with an RGB value of
	 * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the
	 * resulting RGB value for the displayed pixel is 0x222C33(because 0xFF -
	 * 0xDD = 0x22, 0xF8 - 0xCC = 0x2C, and 0x33 - 0x00 = 0x33).</p>]]></haxe_doc></DIFFERENCE>
		<ERASE><haxe_doc><![CDATA[* Erases the background based on the alpha value of the display object. This
	 * process requires that the <code>blendMode</code> property of the parent
	 * display object be set to <code>openfl.display.BlendMode.LAYER</code>.
	 *
	 * <p>Not supported under GPU rendering.</p>]]></haxe_doc></ERASE>
		<HARDLIGHT><haxe_doc><![CDATA[* Adjusts the color of each pixel based on the darkness of the display
	 * object. If the display object is lighter than 50% gray, the display object
	 * and background colors are screened, which results in a lighter color. If
	 * the display object is darker than 50% gray, the colors are multiplied,
	 * which results in a darker color. This setting is commonly used for shading
	 * effects.
	 *
	 * <p>Not supported under GPU rendering.</p>]]></haxe_doc></HARDLIGHT>
		<INVERT><haxe_doc>* Inverts the background.</haxe_doc></INVERT>
		<LAYER><haxe_doc><![CDATA[* Forces the creation of a transparency group for the display object. This
	 * means that the display object is precomposed in a temporary buffer before
	 * it is processed further. The precomposition is done automatically if the
	 * display object is precached by means of bitmap caching or if the display
	 * object is a display object container that has at least one child object
	 * with a <code>blendMode</code> setting other than <code>"normal"</code>.
	 *
	 * <p>Not supported under GPU rendering.</p>]]></haxe_doc></LAYER>
		<LIGHTEN><haxe_doc><![CDATA[* Selects the lighter of the constituent colors of the display object and
	 * the colors of the background(the colors with the larger values). This
	 * setting is commonly used for superimposing type.
	 *
	 * <p>For example, if the display object has a pixel with an RGB value of
	 * 0xFFCC33, and the background pixel has an RGB value of 0xDDF800, the
	 * resulting RGB value for the displayed pixel is 0xFFF833(because 0xFF >
	 * 0xDD, 0xCC < 0xF8, and 0x33 > 0x00 = 33).</p>
	 *
	 * <p>Not supported under GPU rendering.</p>]]></haxe_doc></LIGHTEN>
		<MULTIPLY><haxe_doc><![CDATA[* Multiplies the values of the display object constituent colors by the
	 * constituent colors of the background color, and normalizes by dividing by
	 * 0xFF, resulting in darker colors. This setting is commonly used for
	 * shadows and depth effects.
	 *
	 * <p>For example, if a constituent color(such as red) of one pixel in the
	 * display object and the corresponding color of the pixel in the background
	 * both have the value 0x88, the multiplied result is 0x4840. Dividing by
	 * 0xFF yields a value of 0x48 for that constituent color, which is a darker
	 * shade than the color of the display object or the color of the
	 * background.</p>]]></haxe_doc></MULTIPLY>
		<NORMAL><haxe_doc>* The display object appears in front of the background. Pixel values of the
	 * display object override the pixel values of the background. Where the
	 * display object is transparent, the background is visible.</haxe_doc></NORMAL>
		<OVERLAY><haxe_doc><![CDATA[* Adjusts the color of each pixel based on the darkness of the background.
	 * If the background is lighter than 50% gray, the display object and
	 * background colors are screened, which results in a lighter color. If the
	 * background is darker than 50% gray, the colors are multiplied, which
	 * results in a darker color. This setting is commonly used for shading
	 * effects.
	 *
	 * <p>Not supported under GPU rendering.</p>]]></haxe_doc></OVERLAY>
		<SCREEN><haxe_doc>* Multiplies the complement(inverse) of the display object color by the
	 * complement of the background color, resulting in a bleaching effect. This
	 * setting is commonly used for highlights or to remove black areas of the
	 * display object.</haxe_doc></SCREEN>
		<SUBTRACT><haxe_doc><![CDATA[* Subtracts the values of the constituent colors in the display object from
	 * the values of the background color, applying a floor of 0. This setting is
	 * commonly used for animating a darkening dissolve between two objects.
	 *
	 * <p>For example, if the display object has a pixel with an RGB value of
	 * 0xAA2233, and the background pixel has an RGB value of 0xDDA600, the
	 * resulting RGB value for the displayed pixel is 0x338400(because 0xDD -
	 * 0xAA = 0x33, 0xA6 - 0x22 = 0x84, and 0x00 - 0x33 < 0x00).</p>]]></haxe_doc></SUBTRACT>
		<haxe_doc><![CDATA[* A class that provides constant values for visual blend mode effects. These
 * constants are used in the following:
 * <ul>
 *   <li> The <code>blendMode</code> property of the
 * openfl.display.DisplayObject class.</li>
 *   <li> The <code>blendMode</code> parameter of the <code>draw()</code>
 * method of the openfl.display.BitmapData class</li>
 * </ul>]]></haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="openfl.display.CapsStyle" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/CapsStyle.hx">
		<NONE><haxe_doc><![CDATA[* Used to specify no caps in the <code>caps</code> parameter of the
	 * <code>openfl.display.Graphics.lineStyle()</code> method.]]></haxe_doc></NONE>
		<ROUND><haxe_doc><![CDATA[* Used to specify round caps in the <code>caps</code> parameter of the
	 * <code>openfl.display.Graphics.lineStyle()</code> method.]]></haxe_doc></ROUND>
		<SQUARE><haxe_doc><![CDATA[* Used to specify square caps in the <code>caps</code> parameter of the
	 * <code>openfl.display.Graphics.lineStyle()</code> method.]]></haxe_doc></SQUARE>
		<haxe_doc><![CDATA[* The CapsStyle class is an enumeration of constant values that specify the
 * caps style to use in drawing lines. The constants are provided for use as
 * values in the <code>caps</code> parameter of the
 * <code>openfl.display.Graphics.lineStyle()</code> method. You can specify the
 * following three types of caps:]]></haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.display.DirectRenderer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/DirectRenderer.hx">
		<extends path="openfl.display.DisplayObject"/>
		<render public="1" get="accessor" set="accessor"><d/></render>
		<__render>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__render>
		<get_render set="method" line="30">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_render>
		<set_render set="method" line="37">
			<f a="value">
				<d/>
				<d/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_render>
		<new public="1" set="method" line="16"><f a="?type" v="'DirectRenderer'">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.text.TextField" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/TextField.hx">
		<extends path="openfl.display.InteractiveObject"/>
		<__defaultTextFormat static="1">
			<c path="openfl.text.TextFormat"/>
			<meta><m n=":noCompletion"/></meta>
		</__defaultTextFormat>
		<antiAliasType public="1"><e path="openfl.text.AntiAliasType"/></antiAliasType>
		<autoSize public="1" set="accessor">
			<e path="openfl.text.TextFieldAutoSize"/>
			<meta><m n=":isVar"/></meta>
		</autoSize>
		<background public="1" set="accessor">
			<x path="Bool"/>
			<meta><m n=":isVar"/></meta>
		</background>
		<backgroundColor public="1" set="accessor">
			<x path="Int"/>
			<meta><m n=":isVar"/></meta>
		</backgroundColor>
		<border public="1" set="accessor">
			<x path="Bool"/>
			<meta><m n=":isVar"/></meta>
		</border>
		<borderColor public="1" set="accessor">
			<x path="Int"/>
			<meta><m n=":isVar"/></meta>
		</borderColor>
		<bottomScrollV public="1" get="accessor" set="null"><x path="Int"/></bottomScrollV>
		<caretIndex public="1"><x path="Int"/></caretIndex>
		<caretPos public="1" get="accessor" set="null"><x path="Int"/></caretPos>
		<defaultTextFormat public="1" get="accessor" set="accessor"><c path="openfl.text.TextFormat"/></defaultTextFormat>
		<displayAsPassword public="1"><x path="Bool"/></displayAsPassword>
		<embedFonts public="1"><x path="Bool"/></embedFonts>
		<gridFitType public="1"><e path="openfl.text.GridFitType"/></gridFitType>
		<htmlText public="1" get="accessor" set="accessor"><c path="String"/></htmlText>
		<length public="1" set="null"><x path="Int"/></length>
		<maxChars public="1"><x path="Int"/></maxChars>
		<maxScrollH public="1" get="accessor" set="null"><x path="Int"/></maxScrollH>
		<maxScrollV public="1" get="accessor" set="null"><x path="Int"/></maxScrollV>
		<multiline public="1"><x path="Bool"/></multiline>
		<numLines public="1" get="accessor" set="null"><x path="Int"/></numLines>
		<restrict public="1"><c path="String"/></restrict>
		<scrollH public="1"><x path="Int"/></scrollH>
		<scrollV public="1"><x path="Int"/></scrollV>
		<selectable public="1"><x path="Bool"/></selectable>
		<selectionBeginIndex public="1"><x path="Int"/></selectionBeginIndex>
		<selectionEndIndex public="1"><x path="Int"/></selectionEndIndex>
		<sharpness public="1"><x path="Float"/></sharpness>
		<text public="1" get="accessor" set="accessor"><c path="String"/></text>
		<textColor public="1" get="accessor" set="accessor"><x path="Int"/></textColor>
		<textHeight public="1" get="accessor" set="null"><x path="Float"/></textHeight>
		<textWidth public="1" get="accessor" set="null"><x path="Float"/></textWidth>
		<type public="1" set="accessor">
			<e path="openfl.text.TextFieldType"/>
			<meta><m n=":isVar"/></meta>
		</type>
		<wordWrap public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<meta><m n=":isVar"/></meta>
		</wordWrap>
		<__dirty>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__dirty>
		<__height>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__height>
		<__isHTML>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__isHTML>
		<__measuredHeight>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__measuredHeight>
		<__measuredWidth>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__measuredWidth>
		<__ranges>
			<c path="Array"><c path="openfl.text.TextFormatRange"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__ranges>
		<__text>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__text>
		<__textFormat>
			<c path="openfl.text.TextFormat"/>
			<meta><m n=":noCompletion"/></meta>
		</__textFormat>
		<__texture>
			<t path="lime.graphics.opengl.GLTexture"/>
			<meta><m n=":noCompletion"/></meta>
		</__texture>
		<__width>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__width>
		<__div><c path="js.html.DivElement"/></__div>
		<appendText public="1" set="method" line="126"><f a="text">
	<c path="String"/>
	<x path="Void"/>
</f></appendText>
		<getCharBoundaries public="1" set="method" line="133"><f a="a">
	<x path="Int"/>
	<c path="openfl.geom.Rectangle"/>
</f></getCharBoundaries>
		<getCharIndexAtPoint public="1" set="method" line="142"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
</f></getCharIndexAtPoint>
		<getLineIndexAtPoint public="1" set="method" line="151"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
</f></getLineIndexAtPoint>
		<getLineMetrics public="1" set="method" line="160"><f a="lineIndex">
	<x path="Int"/>
	<c path="openfl.text.TextLineMetrics"/>
</f></getLineMetrics>
		<getLineOffset public="1" set="method" line="169"><f a="lineIndex">
	<x path="Int"/>
	<x path="Int"/>
</f></getLineOffset>
		<getLineText public="1" set="method" line="178"><f a="lineIndex">
	<x path="Int"/>
	<c path="String"/>
</f></getLineText>
		<getTextFormat public="1" set="method" line="187"><f a="?beginIndex:?endIndex" v="0:0">
	<x path="Int"/>
	<x path="Int"/>
	<c path="openfl.text.TextFormat"/>
</f></getTextFormat>
		<setSelection public="1" set="method" line="194"><f a="beginIndex:endIndex">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setSelection>
		<setTextFormat public="1" set="method" line="201"><f a="format:?beginIndex:?endIndex" v=":0:0">
	<c path="openfl.text.TextFormat"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setTextFormat>
		<__getBounds set="method" line="227" override="1">
			<f a="rect:matrix">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getBounds>
		<__getFont set="method" line="237">
			<f a="format">
				<c path="openfl.text.TextFormat"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getFont>
		<__hitTest set="method" line="261" override="1">
			<f a="x:y:shapeFlag:stack:interactiveOnly">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__hitTest>
		<__measureText set="method" line="284">
			<f a=""><c path="Array"><x path="Float"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</__measureText>
		<__measureTextWithDOM set="method" line="317">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__measureTextWithDOM>
		<__renderCanvas public="1" set="method" line="357" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderCanvas>
		<__renderDOM public="1" set="method" line="364" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderDOM>
		<__renderGL public="1" set="method" line="371" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderGL>
		<set_autoSize set="method" line="385">
			<f a="value">
				<e path="openfl.text.TextFieldAutoSize"/>
				<e path="openfl.text.TextFieldAutoSize"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_autoSize>
		<set_background set="method" line="393">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_background>
		<set_backgroundColor set="method" line="401">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_backgroundColor>
		<set_border set="method" line="409">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_border>
		<set_borderColor set="method" line="417">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_borderColor>
		<get_bottomScrollV set="method" line="425">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_bottomScrollV>
		<get_caretPos set="method" line="434">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_caretPos>
		<get_defaultTextFormat set="method" line="441">
			<f a=""><c path="openfl.text.TextFormat"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_defaultTextFormat>
		<set_defaultTextFormat set="method" line="448">
			<f a="value">
				<c path="openfl.text.TextFormat"/>
				<c path="openfl.text.TextFormat"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_defaultTextFormat>
		<get_height set="method" line="457" override="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_height>
		<set_height set="method" line="464" override="1">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_height>
		<get_htmlText set="method" line="479">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_htmlText>
		<set_htmlText set="method" line="488">
			<f a="value">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_htmlText>
		<get_maxScrollH set="method" line="585">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_maxScrollH>
		<get_maxScrollV set="method" line="586">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_maxScrollV>
		<get_numLines set="method" line="589">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numLines>
		<get_text public="1" set="method" line="610">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_text>
		<set_text public="1" set="method" line="623">
			<f a="value">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_text>
		<get_textColor public="1" set="method" line="633">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_textColor>
		<set_textColor public="1" set="method" line="640">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_textColor>
		<get_textWidth public="1" set="method" line="659">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_textWidth>
		<get_textHeight public="1" set="method" line="696">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_textHeight>
		<set_type public="1" set="method" line="727">
			<f a="value">
				<e path="openfl.text.TextFieldType"/>
				<e path="openfl.text.TextFieldType"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_type>
		<get_width public="1" set="method" line="735" override="1"><f a=""><x path="Float"/></f></get_width>
		<set_width public="1" set="method" line="751" override="1"><f a="value">
	<x path="Float"/>
	<x path="Float"/>
</f></set_width>
		<get_wordWrap public="1" set="method" line="766">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_wordWrap>
		<set_wordWrap public="1" set="method" line="773">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_wordWrap>
		<new public="1" set="method" line="86"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":access"><e>'???'</e></m>
			<m n=":access"><e>'???'</e></m>
		</meta>
	</class>
	<class path="openfl.display.FPS" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/FPS.hx">
		<extends path="openfl.text.TextField"/>
		<currentFPS public="1" set="null"><x path="Float"/></currentFPS>
		<cacheCount><x path="Int"/></cacheCount>
		<times><c path="Array"><x path="Float"/></c></times>
		<this_onEnterFrame set="method" line="46">
			<f a="event">
				<c path="openfl.events.Event"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</this_onEnterFrame>
		<new public="1" set="method" line="19"><f a="?x:?y:?color" v="10:10:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.display.FrameLabel" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/FrameLabel.hx">
		<extends path="openfl.events.EventDispatcher"/>
		<frame public="1" get="accessor" set="null"><x path="Int"/></frame>
		<name public="1" get="accessor" set="null"><c path="String"/></name>
		<__frame>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__frame>
		<__name>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__name>
		<get_frame set="method" line="34">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_frame>
		<get_name set="method" line="35">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_name>
		<new public="1" set="method" line="17"><f a="name:frame">
	<c path="String"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<enum path="openfl.display.GradientType" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/GradientType.hx">
		<RADIAL><haxe_doc>* Value used to specify a radial gradient fill.</haxe_doc></RADIAL>
		<LINEAR><haxe_doc>* Value used to specify a linear gradient fill.</haxe_doc></LINEAR>
		<haxe_doc><![CDATA[* The GradientType class provides values for the <code>type</code> parameter
 * in the <code>beginGradientFill()</code> and
 * <code>lineGradientStyle()</code> methods of the openfl.display.Graphics
 * class.]]></haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.display.Graphics" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Graphics.hx">
		<TILE_SCALE public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></TILE_SCALE>
		<TILE_ROTATION public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></TILE_ROTATION>
		<TILE_RGB public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></TILE_RGB>
		<TILE_ALPHA public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></TILE_ALPHA>
		<TILE_TRANS_2x2 public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></TILE_TRANS_2x2>
		<TILE_RECT public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></TILE_RECT>
		<TILE_ORIGIN public="1" get="inline" set="null" line="43" static="1"><x path="Int"/></TILE_ORIGIN>
		<TILE_BLEND_NORMAL public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></TILE_BLEND_NORMAL>
		<TILE_BLEND_ADD public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></TILE_BLEND_ADD>
		<__bounds>
			<c path="openfl.geom.Rectangle"/>
			<meta><m n=":noCompletion"/></meta>
		</__bounds>
		<__commands>
			<c path="Array"><e path="openfl.display.DrawCommand"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__commands>
		<__dirty>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__dirty>
		<__glStack>
			<c path="Array"><c path="openfl._internal.renderer.opengl.utils.GLStack"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__glStack>
		<__drawPaths>
			<c path="Array"><c path="openfl._internal.renderer.opengl.utils.DrawPath"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__drawPaths>
		<__halfStrokeWidth>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__halfStrokeWidth>
		<__positionX>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__positionX>
		<__positionY>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__positionY>
		<__visible>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__visible>
		<__cachedTexture>
			<c path="openfl._internal.renderer.opengl.utils.FilterTexture"/>
			<meta><m n=":noCompletion"/></meta>
		</__cachedTexture>
		<__canvas>
			<c path="js.html.CanvasElement"/>
			<meta><m n=":noCompletion"/></meta>
		</__canvas>
		<__context>
			<c path="js.html.CanvasRenderingContext2D"/>
			<meta><m n=":noCompletion"/></meta>
		</__context>
		<beginBitmapFill public="1" set="method" line="111">
			<f a="bitmap:?matrix:?repeat:?smooth" v=":null:true:false">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Fills a drawing area with a bitmap image. The bitmap can be repeated or
	 * tiled to fill the area. The fill remains in effect until you call the
	 * <code>beginFill()</code>, <code>beginBitmapFill()</code>,
	 * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>
	 * method. Calling the <code>clear()</code> method clears the fill.
	 *
	 * <p>The application renders the fill whenever three or more points are
	 * drawn, or when the <code>endFill()</code> method is called. </p>
	 * 
	 * @param bitmap A transparent or opaque bitmap image that contains the bits
	 *               to be displayed.
	 * @param matrix A matrix object(of the openfl.geom.Matrix class), which you
	 *               can use to define transformations on the bitmap. For
	 *               example, you can use the following matrix to rotate a bitmap
	 *               by 45 degrees(pi/4 radians):
	 * @param repeat If <code>true</code>, the bitmap image repeats in a tiled
	 *               pattern. If <code>false</code>, the bitmap image does not
	 *               repeat, and the edges of the bitmap are used for any fill
	 *               area that extends beyond the bitmap.
	 *
	 *               <p>For example, consider the following bitmap(a 20 x
	 *               20-pixel checkerboard pattern):</p>
	 *
	 *               <p>When <code>repeat</code> is set to <code>true</code>(as
	 *               in the following example), the bitmap fill repeats the
	 *               bitmap:</p>
	 *
	 *               <p>When <code>repeat</code> is set to <code>false</code>,
	 *               the bitmap fill uses the edge pixels for the fill area
	 *               outside the bitmap:</p>
	 * @param smooth If <code>false</code>, upscaled bitmap images are rendered
	 *               by using a nearest-neighbor algorithm and look pixelated. If
	 *               <code>true</code>, upscaled bitmap images are rendered by
	 *               using a bilinear algorithm. Rendering by using the nearest
	 *               neighbor algorithm is faster.]]></haxe_doc>
		</beginBitmapFill>
		<beginFill public="1" set="method" line="134">
			<f a="?color:?alpha" v="0:1">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Specifies a simple one-color fill that subsequent calls to other Graphics
	 * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) use
	 * when drawing. The fill remains in effect until you call the
	 * <code>beginFill()</code>, <code>beginBitmapFill()</code>,
	 * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>
	 * method. Calling the <code>clear()</code> method clears the fill.
	 *
	 * <p>The application renders the fill whenever three or more points are
	 * drawn, or when the <code>endFill()</code> method is called.</p>
	 * 
	 * @param color The color of the fill(0xRRGGBB).
	 * @param alpha The alpha value of the fill(0.0 to 1.0).]]></haxe_doc>
		</beginFill>
		<beginGradientFill public="1" set="method" line="208">
			<f a="type:colors:alphas:ratios:?matrix:?spreadMethod:?interpolationMethod:?focalPointRatio" v="::::null:null:null:null">
				<e path="openfl.display.GradientType"/>
				<c path="Array"><d/></c>
				<c path="Array"><d/></c>
				<c path="Array"><d/></c>
				<c path="openfl.geom.Matrix"/>
				<e path="openfl.display.SpreadMethod"/>
				<e path="openfl.display.InterpolationMethod"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Specifies a gradient fill used by subsequent calls to other Graphics
	 * methods(such as <code>lineTo()</code> or <code>drawCircle()</code>) for
	 * the object. The fill remains in effect until you call the
	 * <code>beginFill()</code>, <code>beginBitmapFill()</code>,
	 * <code>beginGradientFill()</code>, or <code>beginShaderFill()</code>
	 * method. Calling the <code>clear()</code> method clears the fill.
	 *
	 * <p>The application renders the fill whenever three or more points are
	 * drawn, or when the <code>endFill()</code> method is called. </p>
	 * 
	 * @param type                A value from the GradientType class that
	 *                            specifies which gradient type to use:
	 *                            <code>GradientType.LINEAR</code> or
	 *                            <code>GradientType.RADIAL</code>.
	 * @param matrix              A transformation matrix as defined by the
	 *                            openfl.geom.Matrix class. The openfl.geom.Matrix
	 *                            class includes a
	 *                            <code>createGradientBox()</code> method, which
	 *                            lets you conveniently set up the matrix for use
	 *                            with the <code>beginGradientFill()</code>
	 *                            method.
	 * @param spreadMethod        A value from the SpreadMethod class that
	 *                            specifies which spread method to use, either:
	 *                            <code>SpreadMethod.PAD</code>,
	 *                            <code>SpreadMethod.REFLECT</code>, or
	 *                            <code>SpreadMethod.REPEAT</code>.
	 *
	 *                            <p>For example, consider a simple linear
	 *                            gradient between two colors:</p>
	 *
	 *                            <p>This example uses
	 *                            <code>SpreadMethod.PAD</code> for the spread
	 *                            method, and the gradient fill looks like the
	 *                            following:</p>
	 *
	 *                            <p>If you use <code>SpreadMethod.REFLECT</code>
	 *                            for the spread method, the gradient fill looks
	 *                            like the following:</p>
	 *
	 *                            <p>If you use <code>SpreadMethod.REPEAT</code>
	 *                            for the spread method, the gradient fill looks
	 *                            like the following:</p>
	 * @param interpolationMethod A value from the InterpolationMethod class that
	 *                            specifies which value to use:
	 *                            <code>InterpolationMethod.LINEAR_RGB</code> or
	 *                            <code>InterpolationMethod.RGB</code>
	 *
	 *                            <p>For example, consider a simple linear
	 *                            gradient between two colors(with the
	 *                            <code>spreadMethod</code> parameter set to
	 *                            <code>SpreadMethod.REFLECT</code>). The
	 *                            different interpolation methods affect the
	 *                            appearance as follows: </p>
	 * @param focalPointRatio     A number that controls the location of the
	 *                            focal point of the gradient. 0 means that the
	 *                            focal point is in the center. 1 means that the
	 *                            focal point is at one border of the gradient
	 *                            circle. -1 means that the focal point is at the
	 *                            other border of the gradient circle. A value
	 *                            less than -1 or greater than 1 is rounded to -1
	 *                            or 1. For example, the following example shows
	 *                            a <code>focalPointRatio</code> set to 0.75:
	 * @throws ArgumentError If the <code>type</code> parameter is not valid.]]></haxe_doc>
		</beginGradientFill>
		<clear public="1" set="method" line="220">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Clears the graphics that were drawn to this Graphics object, and resets
	 * fill and line style settings.
	 *</haxe_doc>
		</clear>
		<copyFrom public="1" set="method" line="237"><f a="sourceGraphics">
	<c path="openfl.display.Graphics"/>
	<x path="Void"/>
</f></copyFrom>
		<cubicCurveTo public="1" set="method" line="250"><f a="controlX1:controlY1:controlX2:controlY2:anchorX:anchorY">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></cubicCurveTo>
		<curveTo public="1" set="method" line="303">
			<f a="controlX:controlY:anchorX:anchorY">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Draws a curve using the current line style from the current drawing
	 * position to(anchorX, anchorY) and using the control point that
	 * (<code>controlX</code>, <code>controlY</code>) specifies. The current
	 * drawing position is then set to(<code>anchorX</code>,
	 * <code>anchorY</code>). If the movie clip in which you are drawing contains
	 * content created with the Flash drawing tools, calls to the
	 * <code>curveTo()</code> method are drawn underneath this content. If you
	 * call the <code>curveTo()</code> method before any calls to the
	 * <code>moveTo()</code> method, the default of the current drawing position
	 * is(0, 0). If any of the parameters are missing, this method fails and the
	 * current drawing position is not changed.
	 *
	 * <p>The curve drawn is a quadratic Bezier curve. Quadratic Bezier curves
	 * consist of two anchor points and one control point. The curve interpolates
	 * the two anchor points and curves toward the control point. </p>
	 * 
	 * @param controlX A number that specifies the horizontal position of the
	 *                 control point relative to the registration point of the
	 *                 parent display object.
	 * @param controlY A number that specifies the vertical position of the
	 *                 control point relative to the registration point of the
	 *                 parent display object.
	 * @param anchorX  A number that specifies the horizontal position of the
	 *                 next anchor point relative to the registration point of
	 *                 the parent display object.
	 * @param anchorY  A number that specifies the vertical position of the next
	 *                 anchor point relative to the registration point of the
	 *                 parent display object.]]></haxe_doc>
		</curveTo>
		<drawCircle public="1" set="method" line="340">
			<f a="x:y:radius">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Draws a circle. Set the line style, fill, or both before you call the
	 * <code>drawCircle()</code> method, by calling the <code>linestyle()</code>,
	 * <code>lineGradientStyle()</code>, <code>beginFill()</code>,
	 * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>
	 * method.
	 * 
	 * @param x      The <i>x</i> location of the center of the circle relative
	 *               to the registration point of the parent display object(in
	 *               pixels).
	 * @param y      The <i>y</i> location of the center of the circle relative
	 *               to the registration point of the parent display object(in
	 *               pixels).
	 * @param radius The radius of the circle(in pixels).]]></haxe_doc>
		</drawCircle>
		<drawEllipse public="1" set="method" line="370">
			<f a="x:y:width:height">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Draws an ellipse. Set the line style, fill, or both before you call the
	 * <code>drawEllipse()</code> method, by calling the
	 * <code>linestyle()</code>, <code>lineGradientStyle()</code>,
	 * <code>beginFill()</code>, <code>beginGradientFill()</code>, or
	 * <code>beginBitmapFill()</code> method.
	 * 
	 * @param x      The <i>x</i> location of the top-left of the bounding-box of
	 *               the ellipse relative to the registration point of the parent
	 *               display object(in pixels).
	 * @param y      The <i>y</i> location of the top left of the bounding-box of
	 *               the ellipse relative to the registration point of the parent
	 *               display object(in pixels).
	 * @param width  The width of the ellipse(in pixels).
	 * @param height The height of the ellipse(in pixels).]]></haxe_doc>
		</drawEllipse>
		<drawGraphicsData public="1" set="method" line="396">
			<f a="graphicsData">
				<x path="openfl.Vector"><c path="openfl.display.IGraphicsData"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Submits a series of IGraphicsData instances for drawing. This method
	 * accepts a Vector containing objects including paths, fills, and strokes
	 * that implement the IGraphicsData interface. A Vector of IGraphicsData
	 * instances can refer to a part of a shape, or a complex fully defined set
	 * of data for rendering a complete shape.
	 *
	 * <p> Graphics paths can contain other graphics paths. If the
	 * <code>graphicsData</code> Vector includes a path, that path and all its
	 * sub-paths are rendered during this operation. </p>
	 *]]></haxe_doc>
		</drawGraphicsData>
		<drawPath public="1" set="method" line="448">
			<f a="commands:data:?winding" v="::null">
				<x path="openfl.Vector"><x path="Int"/></x>
				<x path="openfl.Vector"><x path="Float"/></x>
				<e path="openfl.display.GraphicsPathWinding"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Submits a series of commands for drawing. The <code>drawPath()</code>
	 * method uses vector arrays to consolidate individual <code>moveTo()</code>,
	 * <code>lineTo()</code>, and <code>curveTo()</code> drawing commands into a
	 * single call. The <code>drawPath()</code> method parameters combine drawing
	 * commands with x- and y-coordinate value pairs and a drawing direction. The
	 * drawing commands are values from the GraphicsPathCommand class. The x- and
	 * y-coordinate value pairs are Numbers in an array where each pair defines a
	 * coordinate location. The drawing direction is a value from the
	 * GraphicsPathWinding class.
	 *
	 * <p> Generally, drawings render faster with <code>drawPath()</code> than
	 * with a series of individual <code>lineTo()</code> and
	 * <code>curveTo()</code> methods. </p>
	 *
	 * <p> The <code>drawPath()</code> method uses a uses a floating computation
	 * so rotation and scaling of shapes is more accurate and gives better
	 * results. However, curves submitted using the <code>drawPath()</code>
	 * method can have small sub-pixel alignment errors when used in conjunction
	 * with the <code>lineTo()</code> and <code>curveTo()</code> methods. </p>
	 *
	 * <p> The <code>drawPath()</code> method also uses slightly different rules
	 * for filling and drawing lines. They are: </p>
	 *
	 * <ul>
	 *   <li>When a fill is applied to rendering a path:
	 * <ul>
	 *   <li>A sub-path of less than 3 points is not rendered.(But note that the
	 * stroke rendering will still occur, consistent with the rules for strokes
	 * below.)</li>
	 *   <li>A sub-path that isn't closed(the end point is not equal to the
	 * begin point) is implicitly closed.</li>
	 * </ul>
	 * </li>
	 *   <li>When a stroke is applied to rendering a path:
	 * <ul>
	 *   <li>The sub-paths can be composed of any number of points.</li>
	 *   <li>The sub-path is never implicitly closed.</li>
	 * </ul>
	 * </li>
	 * </ul>
	 * 
	 * @param winding Specifies the winding rule using a value defined in the
	 *                GraphicsPathWinding class.]]></haxe_doc>
		</drawPath>
		<drawRect public="1" set="method" line="472">
			<f a="x:y:width:height">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Draws a rectangle. Set the line style, fill, or both before you call the
	 * <code>drawRect()</code> method, by calling the <code>linestyle()</code>,
	 * <code>lineGradientStyle()</code>, <code>beginFill()</code>,
	 * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>
	 * method.
	 * 
	 * @param x      A number indicating the horizontal position relative to the
	 *               registration point of the parent display object(in pixels).
	 * @param y      A number indicating the vertical position relative to the
	 *               registration point of the parent display object(in pixels).
	 * @param width  The width of the rectangle(in pixels).
	 * @param height The height of the rectangle(in pixels).
	 * @throws ArgumentError If the <code>width</code> or <code>height</code>
	 *                       parameters are not a number
	 *                      (<code>Number.NaN</code>).]]></haxe_doc>
		</drawRect>
		<drawRoundRect public="1" set="method" line="512">
			<f a="x:y:width:height:rx:?ry" v=":::::-1">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Draws a rounded rectangle. Set the line style, fill, or both before you
	 * call the <code>drawRoundRect()</code> method, by calling the
	 * <code>linestyle()</code>, <code>lineGradientStyle()</code>,
	 * <code>beginFill()</code>, <code>beginGradientFill()</code>, or
	 * <code>beginBitmapFill()</code> method.
	 * 
	 * @param x             A number indicating the horizontal position relative
	 *                      to the registration point of the parent display
	 *                      object(in pixels).
	 * @param y             A number indicating the vertical position relative to
	 *                      the registration point of the parent display object
	 *                     (in pixels).
	 * @param width         The width of the round rectangle(in pixels).
	 * @param height        The height of the round rectangle(in pixels).
	 * @param ellipseWidth  The width of the ellipse used to draw the rounded
	 *                      corners(in pixels).
	 * @param ellipseHeight The height of the ellipse used to draw the rounded
	 *                      corners(in pixels). Optional; if no value is
	 *                      specified, the default value matches that provided
	 *                      for the <code>ellipseWidth</code> parameter.
	 * @throws ArgumentError If the <code>width</code>, <code>height</code>,
	 *                       <code>ellipseWidth</code> or
	 *                       <code>ellipseHeight</code> parameters are not a
	 *                       number(<code>Number.NaN</code>).]]></haxe_doc>
		</drawRoundRect>
		<drawRoundRectComplex public="1" set="method" line="526"><f a="x:y:width:height:topLeftRadius:topRightRadius:bottomLeftRadius:bottomRightRadius">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></drawRoundRectComplex>
		<drawTiles public="1" set="method" line="533"><f a="sheet:tileData:?smooth:?flags:?count" v="::false:0:-1">
	<c path="openfl.display.Tilesheet"/>
	<c path="Array"><x path="Float"/></c>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawTiles>
		<drawTriangles public="1" set="method" line="567">
			<f a="vertices:?indices:?uvtData:?culling:?colors:?blendMode" v=":null:null:null:null:0">
				<x path="openfl.Vector"><x path="Float"/></x>
				<x path="openfl.Vector"><x path="Int"/></x>
				<x path="openfl.Vector"><x path="Float"/></x>
				<e path="openfl.display.TriangleCulling"/>
				<x path="openfl.Vector"><x path="Int"/></x>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Renders a set of triangles, typically to distort bitmaps and give them a
	 * three-dimensional appearance. The <code>drawTriangles()</code> method maps
	 * either the current fill, or a bitmap fill, to the triangle faces using a
	 * set of(u,v) coordinates.
	 *
	 * <p> Any type of fill can be used, but if the fill has a transform matrix
	 * that transform matrix is ignored. </p>
	 *
	 * <p> A <code>uvtData</code> parameter improves texture mapping when a
	 * bitmap fill is used. </p>
	 * 
	 * @param culling Specifies whether to render triangles that face in a
	 *                specified direction. This parameter prevents the rendering
	 *                of triangles that cannot be seen in the current view. This
	 *                parameter can be set to any value defined by the
	 *                TriangleCulling class.]]></haxe_doc>
		</drawTriangles>
		<endFill public="1" set="method" line="619">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[* Applies a fill to the lines and curves that were added since the last call
	 * to the <code>beginFill()</code>, <code>beginGradientFill()</code>, or
	 * <code>beginBitmapFill()</code> method. Flash uses the fill that was
	 * specified in the previous call to the <code>beginFill()</code>,
	 * <code>beginGradientFill()</code>, or <code>beginBitmapFill()</code>
	 * method. If the current drawing position does not equal the previous
	 * position specified in a <code>moveTo()</code> method and a fill is
	 * defined, the path is closed with a line and then filled.
	 *]]></haxe_doc>
		</endFill>
		<lineBitmapStyle public="1" set="method" line="655">
			<f a="bitmap:?matrix:?repeat:?smooth" v=":null:true:false">
				<c path="openfl.display.BitmapData"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Specifies a bitmap to use for the line stroke when drawing lines.
	 *
	 * <p>The bitmap line style is used for subsequent calls to Graphics methods
	 * such as the <code>lineTo()</code> method or the <code>drawCircle()</code>
	 * method. The line style remains in effect until you call the
	 * <code>lineStyle()</code> or <code>lineGradientStyle()</code> methods, or
	 * the <code>lineBitmapStyle()</code> method again with different parameters.
	 * </p>
	 *
	 * <p>You can call the <code>lineBitmapStyle()</code> method in the middle of
	 * drawing a path to specify different styles for different line segments
	 * within a path. </p>
	 *
	 * <p>Call the <code>lineStyle()</code> method before you call the
	 * <code>lineBitmapStyle()</code> method to enable a stroke, or else the
	 * value of the line style is <code>undefined</code>.</p>
	 *
	 * <p>Calls to the <code>clear()</code> method set the line style back to
	 * <code>undefined</code>. </p>
	 * 
	 * @param bitmap The bitmap to use for the line stroke.
	 * @param matrix An optional transformation matrix as defined by the
	 *               openfl.geom.Matrix class. The matrix can be used to scale or
	 *               otherwise manipulate the bitmap before applying it to the
	 *               line style.
	 * @param repeat Whether to repeat the bitmap in a tiled fashion.
	 * @param smooth Whether smoothing should be applied to the bitmap.]]></haxe_doc>
		</lineBitmapStyle>
		<lineGradientStyle public="1" set="method" line="714">
			<f a="type:colors:alphas:ratios:?matrix:?spreadMethod:?interpolationMethod:?focalPointRatio" v="::::null:null:null:null">
				<e path="openfl.display.GradientType"/>
				<c path="Array"><d/></c>
				<c path="Array"><d/></c>
				<c path="Array"><d/></c>
				<c path="openfl.geom.Matrix"/>
				<e path="openfl.display.SpreadMethod"/>
				<e path="openfl.display.InterpolationMethod"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Specifies a gradient to use for the stroke when drawing lines.
	 *
	 * <p>The gradient line style is used for subsequent calls to Graphics
	 * methods such as the <code>lineTo()</code> methods or the
	 * <code>drawCircle()</code> method. The line style remains in effect until
	 * you call the <code>lineStyle()</code> or <code>lineBitmapStyle()</code>
	 * methods, or the <code>lineGradientStyle()</code> method again with
	 * different parameters. </p>
	 *
	 * <p>You can call the <code>lineGradientStyle()</code> method in the middle
	 * of drawing a path to specify different styles for different line segments
	 * within a path. </p>
	 *
	 * <p>Call the <code>lineStyle()</code> method before you call the
	 * <code>lineGradientStyle()</code> method to enable a stroke, or else the
	 * value of the line style is <code>undefined</code>.</p>
	 *
	 * <p>Calls to the <code>clear()</code> method set the line style back to
	 * <code>undefined</code>. </p>
	 * 
	 * @param type                A value from the GradientType class that
	 *                            specifies which gradient type to use, either
	 *                            GradientType.LINEAR or GradientType.RADIAL.
	 * @param matrix              A transformation matrix as defined by the
	 *                            openfl.geom.Matrix class. The openfl.geom.Matrix
	 *                            class includes a
	 *                            <code>createGradientBox()</code> method, which
	 *                            lets you conveniently set up the matrix for use
	 *                            with the <code>lineGradientStyle()</code>
	 *                            method.
	 * @param spreadMethod        A value from the SpreadMethod class that
	 *                            specifies which spread method to use:
	 * @param interpolationMethod A value from the InterpolationMethod class that
	 *                            specifies which value to use. For example,
	 *                            consider a simple linear gradient between two
	 *                            colors(with the <code>spreadMethod</code>
	 *                            parameter set to
	 *                            <code>SpreadMethod.REFLECT</code>). The
	 *                            different interpolation methods affect the
	 *                            appearance as follows:
	 * @param focalPointRatio     A number that controls the location of the
	 *                            focal point of the gradient. The value 0 means
	 *                            the focal point is in the center. The value 1
	 *                            means the focal point is at one border of the
	 *                            gradient circle. The value -1 means that the
	 *                            focal point is at the other border of the
	 *                            gradient circle. Values less than -1 or greater
	 *                            than 1 are rounded to -1 or 1. The following
	 *                            image shows a gradient with a
	 *                            <code>focalPointRatio</code> of -0.75:]]></haxe_doc>
		</lineGradientStyle>
		<lineStyle public="1" set="method" line="860">
			<f a="?thickness:?color:?alpha:?pixelHinting:?scaleMode:?caps:?joints:?miterLimit" v="null:null:null:null:null:null:null:null">
				<x path="Float"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Bool"/>
				<e path="openfl.display.LineScaleMode"/>
				<e path="openfl.display.CapsStyle"/>
				<e path="openfl.display.JointStyle"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Specifies a line style used for subsequent calls to Graphics methods such
	 * as the <code>lineTo()</code> method or the <code>drawCircle()</code>
	 * method. The line style remains in effect until you call the
	 * <code>lineGradientStyle()</code> method, the
	 * <code>lineBitmapStyle()</code> method, or the <code>lineStyle()</code>
	 * method with different parameters.
	 *
	 * <p>You can call the <code>lineStyle()</code> method in the middle of
	 * drawing a path to specify different styles for different line segments
	 * within the path.</p>
	 *
	 * <p><b>Note: </b>Calls to the <code>clear()</code> method set the line
	 * style back to <code>undefined</code>.</p>
	 *
	 * <p><b>Note: </b>Flash Lite 4 supports only the first three parameters
	 * (<code>thickness</code>, <code>color</code>, and <code>alpha</code>).</p>
	 * 
	 * @param thickness    An integer that indicates the thickness of the line in
	 *                     points; valid values are 0-255. If a number is not
	 *                     specified, or if the parameter is undefined, a line is
	 *                     not drawn. If a value of less than 0 is passed, the
	 *                     default is 0. The value 0 indicates hairline
	 *                     thickness; the maximum thickness is 255. If a value
	 *                     greater than 255 is passed, the default is 255.
	 * @param color        A hexadecimal color value of the line; for example,
	 *                     red is 0xFF0000, blue is 0x0000FF, and so on. If a
	 *                     value is not indicated, the default is 0x000000
	 *                    (black). Optional.
	 * @param alpha        A number that indicates the alpha value of the color
	 *                     of the line; valid values are 0 to 1. If a value is
	 *                     not indicated, the default is 1(solid). If the value
	 *                     is less than 0, the default is 0. If the value is
	 *                     greater than 1, the default is 1.
	 * @param pixelHinting(Not supported in Flash Lite 4) A Boolean value that
	 *                     specifies whether to hint strokes to full pixels. This
	 *                     affects both the position of anchors of a curve and
	 *                     the line stroke size itself. With
	 *                     <code>pixelHinting</code> set to <code>true</code>,
	 *                     line widths are adjusted to full pixel widths. With
	 *                     <code>pixelHinting</code> set to <code>false</code>,
	 *                     disjoints can appear for curves and straight lines.
	 *                     For example, the following illustrations show how
	 *                     Flash Player or Adobe AIR renders two rounded
	 *                     rectangles that are identical, except that the
	 *                     <code>pixelHinting</code> parameter used in the
	 *                     <code>lineStyle()</code> method is set differently
	 *                    (the images are scaled by 200%, to emphasize the
	 *                     difference):
	 *
	 *                     <p>If a value is not supplied, the line does not use
	 *                     pixel hinting.</p>
	 * @param scaleMode   (Not supported in Flash Lite 4) A value from the
	 *                     LineScaleMode class that specifies which scale mode to
	 *                     use:
	 *                     <ul>
	 *                       <li> <code>LineScaleMode.NORMAL</code> - Always
	 *                     scale the line thickness when the object is scaled
	 *                    (the default). </li>
	 *                       <li> <code>LineScaleMode.NONE</code> - Never scale
	 *                     the line thickness. </li>
	 *                       <li> <code>LineScaleMode.VERTICAL</code> - Do not
	 *                     scale the line thickness if the object is scaled
	 *                     vertically <i>only</i>. For example, consider the
	 *                     following circles, drawn with a one-pixel line, and
	 *                     each with the <code>scaleMode</code> parameter set to
	 *                     <code>LineScaleMode.VERTICAL</code>. The circle on the
	 *                     left is scaled vertically only, and the circle on the
	 *                     right is scaled both vertically and horizontally:
	 *                     </li>
	 *                       <li> <code>LineScaleMode.HORIZONTAL</code> - Do not
	 *                     scale the line thickness if the object is scaled
	 *                     horizontally <i>only</i>. For example, consider the
	 *                     following circles, drawn with a one-pixel line, and
	 *                     each with the <code>scaleMode</code> parameter set to
	 *                     <code>LineScaleMode.HORIZONTAL</code>. The circle on
	 *                     the left is scaled horizontally only, and the circle
	 *                     on the right is scaled both vertically and
	 *                     horizontally:   </li>
	 *                     </ul>
	 * @param caps        (Not supported in Flash Lite 4) A value from the
	 *                     CapsStyle class that specifies the type of caps at the
	 *                     end of lines. Valid values are:
	 *                     <code>CapsStyle.NONE</code>,
	 *                     <code>CapsStyle.ROUND</code>, and
	 *                     <code>CapsStyle.SQUARE</code>. If a value is not
	 *                     indicated, Flash uses round caps.
	 *
	 *                     <p>For example, the following illustrations show the
	 *                     different <code>capsStyle</code> settings. For each
	 *                     setting, the illustration shows a blue line with a
	 *                     thickness of 30(for which the <code>capsStyle</code>
	 *                     applies), and a superimposed black line with a
	 *                     thickness of 1(for which no <code>capsStyle</code>
	 *                     applies): </p>
	 * @param joints      (Not supported in Flash Lite 4) A value from the
	 *                     JointStyle class that specifies the type of joint
	 *                     appearance used at angles. Valid values are:
	 *                     <code>JointStyle.BEVEL</code>,
	 *                     <code>JointStyle.MITER</code>, and
	 *                     <code>JointStyle.ROUND</code>. If a value is not
	 *                     indicated, Flash uses round joints.
	 *
	 *                     <p>For example, the following illustrations show the
	 *                     different <code>joints</code> settings. For each
	 *                     setting, the illustration shows an angled blue line
	 *                     with a thickness of 30(for which the
	 *                     <code>jointStyle</code> applies), and a superimposed
	 *                     angled black line with a thickness of 1(for which no
	 *                     <code>jointStyle</code> applies): </p>
	 *
	 *                     <p><b>Note:</b> For <code>joints</code> set to
	 *                     <code>JointStyle.MITER</code>, you can use the
	 *                     <code>miterLimit</code> parameter to limit the length
	 *                     of the miter.</p>
	 * @param miterLimit  (Not supported in Flash Lite 4) A number that
	 *                     indicates the limit at which a miter is cut off. Valid
	 *                     values range from 1 to 255(and values outside that
	 *                     range are rounded to 1 or 255). This value is only
	 *                     used if the <code>jointStyle</code> is set to
	 *                     <code>"miter"</code>. The <code>miterLimit</code>
	 *                     value represents the length that a miter can extend
	 *                     beyond the point at which the lines meet to form a
	 *                     joint. The value expresses a factor of the line
	 *                     <code>thickness</code>. For example, with a
	 *                     <code>miterLimit</code> factor of 2.5 and a
	 *                     <code>thickness</code> of 10 pixels, the miter is cut
	 *                     off at 25 pixels.
	 *
	 *                     <p>For example, consider the following angled lines,
	 *                     each drawn with a <code>thickness</code> of 20, but
	 *                     with <code>miterLimit</code> set to 1, 2, and 4.
	 *                     Superimposed are black reference lines showing the
	 *                     meeting points of the joints:</p>
	 *
	 *                     <p>Notice that a given <code>miterLimit</code> value
	 *                     has a specific maximum angle for which the miter is
	 *                     cut off. The following table lists some examples:</p>]]></haxe_doc>
		</lineStyle>
		<lineTo public="1" set="method" line="886">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Draws a line using the current line style from the current drawing
	 * position to(<code>x</code>, <code>y</code>); the current drawing position
	 * is then set to(<code>x</code>, <code>y</code>). If the display object in
	 * which you are drawing contains content that was created with the Flash
	 * drawing tools, calls to the <code>lineTo()</code> method are drawn
	 * underneath the content. If you call <code>lineTo()</code> before any calls
	 * to the <code>moveTo()</code> method, the default position for the current
	 * drawing is(<i>0, 0</i>). If any of the parameters are missing, this
	 * method fails and the current drawing position is not changed.
	 * 
	 * @param x A number that indicates the horizontal position relative to the
	 *          registration point of the parent display object(in pixels).
	 * @param y A number that indicates the vertical position relative to the
	 *          registration point of the parent display object(in pixels).]]></haxe_doc>
		</lineTo>
		<moveTo public="1" set="method" line="916">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Moves the current drawing position to(<code>x</code>, <code>y</code>). If
	 * any of the parameters are missing, this method fails and the current
	 * drawing position is not changed.
	 * 
	 * @param x A number that indicates the horizontal position relative to the
	 *          registration point of the parent display object(in pixels).
	 * @param y A number that indicates the vertical position relative to the
	 *          registration point of the parent display object(in pixels).]]></haxe_doc>
		</moveTo>
		<__getBounds set="method" line="926">
			<f a="rect:matrix">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getBounds>
		<__hitTest set="method" line="936">
			<f a="x:y:shapeFlag:matrix">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__hitTest>
		<__inflateBounds set="method" line="948">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__inflateBounds>
		<new public="1" set="method" line="64"><f a=""><x path="Void"/></f></new>
		<haxe_doc><![CDATA[* The Graphics class contains a set of methods that you can use to create a
 * vector shape. Display objects that support drawing include Sprite and Shape
 * objects. Each of these classes includes a <code>graphics</code> property
 * that is a Graphics object. The following are among those helper functions
 * provided for ease of use: <code>drawRect()</code>,
 * <code>drawRoundRect()</code>, <code>drawCircle()</code>, and
 * <code>drawEllipse()</code>.
 *
 * <p>You cannot create a Graphics object directly from ActionScript code. If
 * you call <code>new Graphics()</code>, an exception is thrown.</p>
 *
 * <p>The Graphics class is final; it cannot be subclassed.</p>]]></haxe_doc>
	</class>
	<enum path="openfl.display.DrawCommand" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Graphics.hx" module="openfl.display.Graphics">
		<BeginBitmapFill a="bitmap:matrix:repeat:smooth">
			<c path="openfl.display.BitmapData"/>
			<c path="openfl.geom.Matrix"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</BeginBitmapFill>
		<BeginFill a="color:alpha">
			<x path="Int"/>
			<x path="Float"/>
		</BeginFill>
		<CubicCurveTo a="controlX1:controlY1:controlX2:controlY2:anchorX:anchorY">
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
		</CubicCurveTo>
		<CurveTo a="controlX:controlY:anchorX:anchorY">
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
		</CurveTo>
		<DrawCircle a="x:y:radius">
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
		</DrawCircle>
		<DrawEllipse a="x:y:width:height">
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
		</DrawEllipse>
		<DrawRect a="x:y:width:height">
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
		</DrawRect>
		<DrawRoundRect a="x:y:width:height:rx:ry">
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
		</DrawRoundRect>
		<DrawTiles a="sheet:tileData:smooth:flags:count">
			<c path="openfl.display.Tilesheet"/>
			<c path="Array"><x path="Float"/></c>
			<x path="Bool"/>
			<x path="Int"/>
			<x path="Int"/>
		</DrawTiles>
		<DrawTriangles a="vertices:indices:uvtData:culling:colors:blendMode">
			<x path="openfl.Vector"><x path="Float"/></x>
			<x path="openfl.Vector"><x path="Int"/></x>
			<x path="openfl.Vector"><x path="Float"/></x>
			<e path="openfl.display.TriangleCulling"/>
			<x path="openfl.Vector"><x path="Int"/></x>
			<x path="Int"/>
		</DrawTriangles>
		<EndFill/>
		<LineStyle a="thickness:color:alpha:pixelHinting:scaleMode:caps:joints:miterLimit">
			<t path="Null"><x path="Float"/></t>
			<t path="Null"><x path="Int"/></t>
			<t path="Null"><x path="Float"/></t>
			<t path="Null"><x path="Bool"/></t>
			<e path="openfl.display.LineScaleMode"/>
			<e path="openfl.display.CapsStyle"/>
			<e path="openfl.display.JointStyle"/>
			<t path="Null"><x path="Float"/></t>
		</LineStyle>
		<LineTo a="x:y">
			<x path="Float"/>
			<x path="Float"/>
		</LineTo>
		<MoveTo a="x:y">
			<x path="Float"/>
			<x path="Float"/>
		</MoveTo>
		<meta>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</enum>
	<enum path="openfl.display.GraphicsPathWinding" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/GraphicsPathWinding.hx">
		<EVEN_ODD/>
		<NON_ZERO/>
		<haxe_doc><![CDATA[* The GraphicsPathWinding class provides values for the
 * <code>openfl.display.GraphicsPath.winding</code> property and the
 * <code>openfl.display.Graphics.drawPath()</code> method to determine the
 * direction to draw a path. A clockwise path is positively wound, and a
 * counter-clockwise path is negatively wound:
 *
 * <p> When paths intersect or overlap, the winding direction determines the
 * rules for filling the areas created by the intersection or overlap:</p>]]></haxe_doc>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>String</e></m>
		</meta>
	</enum>
	<class path="openfl.display.IGraphicsData" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/IGraphicsData.hx" interface="1"><__graphicsDataType public="1" set="null"><e path="openfl.display.GraphicsDataType"/></__graphicsDataType></class>
	<enum path="openfl.display.GraphicsDataType" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/IGraphicsData.hx" module="openfl.display.IGraphicsData">
		<STROKE/>
		<SOLID/>
		<GRADIENT/>
		<PATH/>
		<BITMAP/>
		<END/>
		<meta>
			<m n=":flatEnum"/>
			<m n=":fakeEnum"><e>Int</e></m>
		</meta>
	</enum>
	<enum path="openfl.display.InterpolationMethod" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/InterpolationMethod.hx">
		<RGB><haxe_doc><![CDATA[* Specifies that the RGB interpolation method should be used. This means
	 * that the gradient is rendered with exponential sRGB(standard RGB) space.
	 * The sRGB space is a W3C-endorsed standard that defines a non-linear
	 * conversion between red, green, and blue component values and the actual
	 * intensity of the visible component color.
	 *
	 * <p>For example, consider a simple linear gradient between two colors(with
	 * the <code>spreadMethod</code> parameter set to
	 * <code>SpreadMethod.REFLECT</code>). The different interpolation methods
	 * affect the appearance as follows: </p>]]></haxe_doc></RGB>
		<LINEAR_RGB><haxe_doc><![CDATA[* Specifies that the RGB interpolation method should be used. This means
	 * that the gradient is rendered with exponential sRGB(standard RGB) space.
	 * The sRGB space is a W3C-endorsed standard that defines a non-linear
	 * conversion between red, green, and blue component values and the actual
	 * intensity of the visible component color.
	 *
	 * <p>For example, consider a simple linear gradient between two colors(with
	 * the <code>spreadMethod</code> parameter set to
	 * <code>SpreadMethod.REFLECT</code>). The different interpolation methods
	 * affect the appearance as follows: </p>]]></haxe_doc></LINEAR_RGB>
		<haxe_doc><![CDATA[* The InterpolationMethod class provides values for the
 * <code>interpolationMethod</code> parameter in the
 * <code>Graphics.beginGradientFill()</code> and
 * <code>Graphics.lineGradientStyle()</code> methods. This parameter
 * determines the RGB space to use when rendering the gradient.]]></haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="openfl.display.JointStyle" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/JointStyle.hx">
		<MITER><haxe_doc><![CDATA[* Specifies mitered joints in the <code>joints</code> parameter of the
	 * <code>openfl.display.Graphics.lineStyle()</code> method.]]></haxe_doc></MITER>
		<ROUND><haxe_doc><![CDATA[* Specifies round joints in the <code>joints</code> parameter of the
	 * <code>openfl.display.Graphics.lineStyle()</code> method.]]></haxe_doc></ROUND>
		<BEVEL><haxe_doc><![CDATA[* Specifies beveled joints in the <code>joints</code> parameter of the
	 * <code>openfl.display.Graphics.lineStyle()</code> method.]]></haxe_doc></BEVEL>
		<haxe_doc><![CDATA[* The JointStyle class is an enumeration of constant values that specify the
 * joint style to use in drawing lines. These constants are provided for use
 * as values in the <code>joints</code> parameter of the
 * <code>openfl.display.Graphics.lineStyle()</code> method. The method supports
 * three types of joints: miter, round, and bevel, as the following example
 * shows:]]></haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="openfl.display.LineScaleMode" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/LineScaleMode.hx">
		<HORIZONTAL><haxe_doc><![CDATA[* With this setting used as the <code>scaleMode</code> parameter of the
	 * <code>lineStyle()</code> method, the thickness of the line scales
	 * <i>only</i> vertically. For example, consider the following circles, drawn
	 * with a one-pixel line, and each with the <code>scaleMode</code> parameter
	 * set to <code>LineScaleMode.VERTICAL</code>. The circle on the left is
	 * scaled only vertically, and the circle on the right is scaled both
	 * vertically and horizontally.]]></haxe_doc></HORIZONTAL>
		<NONE><haxe_doc><![CDATA[* With this setting used as the <code>scaleMode</code> parameter of the
	 * <code>lineStyle()</code> method, the thickness of the line never scales.]]></haxe_doc></NONE>
		<NORMAL><haxe_doc><![CDATA[* With this setting used as the <code>scaleMode</code> parameter of the
	 * <code>lineStyle()</code> method, the thickness of the line always scales
	 * when the object is scaled(the default).]]></haxe_doc></NORMAL>
		<VERTICAL><haxe_doc><![CDATA[* With this setting used as the <code>scaleMode</code> parameter of the
	 * <code>lineStyle()</code> method, the thickness of the line scales
	 * <i>only</i> horizontally. For example, consider the following circles,
	 * drawn with a one-pixel line, and each with the <code>scaleMode</code>
	 * parameter set to <code>LineScaleMode.HORIZONTAL</code>. The circle on the
	 * left is scaled only horizontally, and the circle on the right is scaled
	 * both vertically and horizontally.]]></haxe_doc></VERTICAL>
		<haxe_doc><![CDATA[* The LineScaleMode class provides values for the <code>scaleMode</code>
 * parameter in the <code>Graphics.lineStyle()</code> method.]]></haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.display.Loader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Loader.hx">
		<extends path="openfl.display.Sprite"/>
		<content public="1" set="null">
			<c path="openfl.display.DisplayObject"/>
			<haxe_doc><![CDATA[* Contains the root display object of the SWF file or image(JPG, PNG, or
	 * GIF) file that was loaded by using the <code>load()</code> or
	 * <code>loadBytes()</code> methods.
	 * 
	 * @throws SecurityError The loaded SWF file or image file belongs to a
	 *                       security sandbox to which you do not have access.
	 *                       For a loaded SWF file, you can avoid this situation
	 *                       by having the file call the
	 *                       <code>Security.allowDomain()</code> method or by
	 *                       having the loading file specify a
	 *                       <code>loaderContext</code> parameter with its
	 *                       <code>securityDomain</code> property set to
	 *                       <code>SecurityDomain.currentDomain</code> when you
	 *                       call the <code>load()</code> or
	 *                       <code>loadBytes()</code> method.]]></haxe_doc>
		</content>
		<contentLoaderInfo public="1" set="null">
			<c path="openfl.display.LoaderInfo"/>
			<haxe_doc><![CDATA[* Returns a LoaderInfo object corresponding to the object being loaded.
	 * LoaderInfo objects are shared between the Loader object and the loaded
	 * content object. The LoaderInfo object supplies loading progress
	 * information and statistics about the loaded file.
	 *
	 * <p>Events related to the load are dispatched by the LoaderInfo object
	 * referenced by the <code>contentLoaderInfo</code> property of the Loader
	 * object. The <code>contentLoaderInfo</code> property is set to a valid
	 * LoaderInfo object, even before the content is loaded, so that you can add
	 * event listeners to the object prior to the load.</p>
	 *
	 * <p>To detect uncaught errors that happen in a loaded SWF, use the
	 * <code>Loader.uncaughtErrorEvents</code> property, not the
	 * <code>Loader.contentLoaderInfo.uncaughtErrorEvents</code> property.</p>]]></haxe_doc>
		</contentLoaderInfo>
		<mImage><c path="openfl.display.BitmapData"/></mImage>
		<mShape><c path="openfl.display.Shape"/></mShape>
		<close public="1" set="method" line="189">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[* Cancels a <code>load()</code> method operation that is currently in
	 * progress for the Loader instance.
	 *]]></haxe_doc>
		</close>
		<load public="1" set="method" line="357">
			<f a="request:?context" v=":null">
				<c path="openfl.net.URLRequest"/>
				<c path="openfl.system.LoaderContext"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Loads a SWF, JPEG, progressive JPEG, unanimated GIF, or PNG file into an
	 * object that is a child of this Loader object. If you load an animated GIF
	 * file, only the first frame is displayed. As the Loader object can contain
	 * only a single child, issuing a subsequent <code>load()</code> request
	 * terminates the previous request, if still pending, and commences a new
	 * load.
	 *
	 * <p><b>Note</b>: In AIR 1.5 and Flash Player 10, the maximum size for a
	 * loaded image is 8,191 pixels in width or height, and the total number of
	 * pixels cannot exceed 16,777,215 pixels.(So, if an loaded image is 8,191
	 * pixels wide, it can only be 2,048 pixels high.) In Flash Player 9 and
	 * earlier and AIR 1.1 and earlier, the limitation is 2,880 pixels in height
	 * and 2,880 pixels in width.</p>
	 *
	 * <p>A SWF file or image loaded into a Loader object inherits the position,
	 * rotation, and scale properties of the parent display objects of the Loader
	 * object. </p>
	 *
	 * <p>Use the <code>unload()</code> method to remove movies or images loaded
	 * with this method, or to cancel a load operation that is in progress.</p>
	 *
	 * <p>You can prevent a SWF file from using this method by setting the
	 * <code>allowNetworking</code> parameter of the the <code>object</code> and
	 * <code>embed</code> tags in the HTML page that contains the SWF
	 * content.</p>
	 *
	 * <p>When you use this method, consider the Flash Player security model,
	 * which is described in the Loader class description. </p>
	 *
	 * <p> In Flash Player 10 and later, if you use a multipart Content-Type(for
	 * example "multipart/form-data") that contains an upload(indicated by a
	 * "filename" parameter in a "content-disposition" header within the POST
	 * body), the POST operation is subject to the security rules applied to
	 * uploads:</p>
	 *
	 * <ul>
	 *   <li>The POST operation must be performed in response to a user-initiated
	 * action, such as a mouse click or key press.</li>
	 *   <li>If the POST operation is cross-domain(the POST target is not on the
	 * same server as the SWF file that is sending the POST request), the target
	 * server must provide a URL policy file that permits cross-domain
	 * access.</li>
	 * </ul>
	 *
	 * <p>Also, for any multipart Content-Type, the syntax must be valid
	 * (according to the RFC2046 standard). If the syntax appears to be invalid,
	 * the POST operation is subject to the security rules applied to
	 * uploads.</p>
	 *
	 * <p>For more information related to security, see the Flash Player
	 * Developer Center Topic: <a
	 * href="http://www.adobe.com/go/devnet_security_en"
	 * scope="external">Security</a>.</p>
	 * 
	 * @param request The absolute or relative URL of the SWF, JPEG, GIF, or PNG
	 *                file to be loaded. A relative path must be relative to the
	 *                main SWF file. Absolute URLs must include the protocol
	 *                reference, such as http:// or file:///. Filenames cannot
	 *                include disk drive specifications.
	 * @param context A LoaderContext object, which has properties that define
	 *                the following:
	 *                <ul>
	 *                  <li>Whether or not to check for the existence of a policy
	 *                file upon loading the object</li>
	 *                  <li>The ApplicationDomain for the loaded object</li>
	 *                  <li>The SecurityDomain for the loaded object</li>
	 *                  <li>The ImageDecodingPolicy for the loaded image
	 *                object</li>
	 *                </ul>
	 *
	 *                <p>If the <code>context</code> parameter is not specified
	 *                or refers to a null object, the loaded content remains in
	 *                its own security domain.</p>
	 *
	 *                <p>For complete details, see the description of the
	 *                properties in the <a
	 *                href="../system/LoaderContext.html">LoaderContext</a>
	 *                class.</p>
	 * @throws IOError               The <code>digest</code> property of the
	 *                               <code>request</code> object is not
	 *                               <code>null</code>. You should only set the
	 *                               <code>digest</code> property of a URLRequest
	 *                               object when calling the
	 *                               <code>URLLoader.load()</code> method when
	 *                               loading a SWZ file(an Adobe platform
	 *                               component).
	 * @throws IllegalOperationError If the <code>requestedContentParent</code>
	 *                               property of the <code>context</code>
	 *                               parameter is a <code>Loader</code>.
	 * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>
	 *                               parameter is set to non-null and has some
	 *                               values which are not Strings.
	 * @throws SecurityError         The value of
	 *                               <code>LoaderContext.securityDomain</code>
	 *                               must be either <code>null</code> or
	 *                               <code>SecurityDomain.currentDomain</code>.
	 *                               This reflects the fact that you can only
	 *                               place the loaded media in its natural
	 *                               security sandbox or your own(the latter
	 *                               requires a policy file).
	 * @throws SecurityError         Local SWF files may not set
	 *                               LoaderContext.securityDomain to anything
	 *                               other than <code>null</code>. It is not
	 *                               permitted to import non-local media into a
	 *                               local sandbox, or to place other local media
	 *                               in anything other than its natural sandbox.
	 * @throws SecurityError         You cannot connect to commonly reserved
	 *                               ports. For a complete list of blocked ports,
	 *                               see "Restricting Networking APIs" in the
	 *                               <i>ActionScript 3.0 Developer's Guide</i>.
	 * @throws SecurityError         If the <code>applicationDomain</code> or
	 *                               <code>securityDomain</code> properties of
	 *                               the <code>context</code> parameter are from
	 *                               a disallowed domain.
	 * @throws SecurityError         If a local SWF file is attempting to use the
	 *                               <code>securityDomain</code> property of the
	 *                               <code>context</code> parameter.
	 * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>
	 *                      object if the
	 *                      <code>LoaderContext.requestedContentParent</code>
	 *                      property has been specified and it is not possible to
	 *                      add the loaded content as a child to the specified
	 *                      DisplayObjectContainer. This could happen if the
	 *                      loaded content is a
	 *                      <code>openfl.display.AVM1Movie</code> or if the
	 *                      <code>addChild()</code> call to the
	 *                      requestedContentParent throws an error.
	 * @event complete      Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when the file has completed loading. The
	 *                      <code>complete</code> event is always dispatched
	 *                      after the <code>init</code> event.
	 * @event httpStatus    Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when a network request is made over HTTP and
	 *                      Flash Player can detect the HTTP status code.
	 * @event init          Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when the properties and methods of the loaded
	 *                      SWF file are accessible. The <code>init</code> event
	 *                      always precedes the <code>complete</code> event.
	 * @event ioError       Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when an input or output error occurs that
	 *                      causes a load operation to fail.
	 * @event open          Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when the loading operation starts.
	 * @event progress      Dispatched by the <code>contentLoaderInfo</code>
	 *                      object as data is received while load operation
	 *                      progresses.
	 * @event securityError Dispatched by the <code>contentLoaderInfo</code>
	 *                      object if a SWF file in the local-with-filesystem
	 *                      sandbox attempts to load content in the
	 *                      local-with-networking sandbox, or vice versa.
	 * @event securityError Dispatched by the <code>contentLoaderInfo</code>
	 *                      object if the
	 *                      <code>LoaderContext.requestedContentParent</code>
	 *                      property has been specified and the security sandbox
	 *                      of the
	 *                      <code>LoaderContext.requestedContentParent</code>
	 *                      does not have access to the loaded SWF.
	 * @event unload        Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when a loaded object is removed.]]></haxe_doc>
		</load>
		<loadBytes public="1" set="method" line="491">
			<f a="buffer">
				<t path="openfl.utils.ByteArray"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Loads from binary data stored in a ByteArray object.
	 *
	 * <p>The <code>loadBytes()</code> method is asynchronous. You must wait for
	 * the "init" event before accessing the properties of a loaded object.</p>
	 *
	 * <p>When you use this method, consider the Flash Player security model,
	 * which is described in the Loader class description. </p>
	 * 
	 * @param bytes   A ByteArray object. The contents of the ByteArray can be
	 *                any of the file formats supported by the Loader class: SWF,
	 *                GIF, JPEG, or PNG.
	 * @param context A LoaderContext object. Only the
	 *                <code>applicationDomain</code> property of the
	 *                LoaderContext object applies; the
	 *                <code>checkPolicyFile</code> and
	 *                <code>securityDomain</code> properties of the LoaderContext
	 *                object do not apply.
	 *
	 *                <p>If the <code>context</code> parameter is not specified
	 *                or refers to a null object, the content is loaded into the
	 *                current security domain -  a process referred to as "import
	 *                loading" in Flash Player security documentation.
	 *                Specifically, if the loading SWF file trusts the remote SWF
	 *                by incorporating the remote SWF into its code, then the
	 *                loading SWF can import it directly into its own security
	 *                domain.</p>
	 *
	 *                <p>For more information related to security, see the Flash
	 *                Player Developer Center Topic: <a
	 *                href="http://www.adobe.com/go/devnet_security_en"
	 *                scope="external">Security</a>.</p>
	 * @throws ArgumentError         If the <code>length</code> property of the
	 *                               ByteArray object is not greater than 0.
	 * @throws IllegalOperationError If the <code>checkPolicyFile</code> or
	 *                               <code>securityDomain</code> property of the
	 *                               <code>context</code> parameter are non-null.
	 * @throws IllegalOperationError If the <code>requestedContentParent</code>
	 *                               property of the <code>context</code>
	 *                               parameter is a <code>Loader</code>.
	 * @throws IllegalOperationError If the <code>LoaderContext.parameters</code>
	 *                               parameter is set to non-null and has some
	 *                               values which are not Strings.
	 * @throws SecurityError         If the provided
	 *                               <code>applicationDomain</code> property of
	 *                               the <code>context</code> property is from a
	 *                               disallowed domain.
	 * @throws SecurityError         You cannot connect to commonly reserved
	 *                               ports. For a complete list of blocked ports,
	 *                               see "Restricting Networking APIs" in the
	 *                               <i>ActionScript 3.0 Developer's Guide</i>.
	 * @event asyncError    Dispatched by the <code>contentLoaderInfo</code>
	 *                      object if the
	 *                      <code>LoaderContext.requestedContentParent</code>
	 *                      property has been specified and it is not possible to
	 *                      add the loaded content as a child to the specified
	 *                      DisplayObjectContainer. This could happen if the
	 *                      loaded content is a
	 *                      <code>openfl.display.AVM1Movie</code> or if the
	 *                      <code>addChild()</code> call to the
	 *                      requestedContentParent throws an error.
	 * @event complete      Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when the operation is complete. The
	 *                      <code>complete</code> event is always dispatched
	 *                      after the <code>init</code> event.
	 * @event init          Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when the properties and methods of the loaded
	 *                      data are accessible. The <code>init</code> event
	 *                      always precedes the <code>complete</code> event.
	 * @event ioError       Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when the runtime cannot parse the data in the
	 *                      byte array.
	 * @event open          Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when the operation starts.
	 * @event progress      Dispatched by the <code>contentLoaderInfo</code>
	 *                      object as data is transfered in memory.
	 * @event securityError Dispatched by the <code>contentLoaderInfo</code>
	 *                      object if the
	 *                      <code>LoaderContext.requestedContentParent</code>
	 *                      property has been specified and the security sandbox
	 *                      of the
	 *                      <code>LoaderContext.requestedContentParent</code>
	 *                      does not have access to the loaded SWF.
	 * @event unload        Dispatched by the <code>contentLoaderInfo</code>
	 *                      object when a loaded object is removed.]]></haxe_doc>
		</loadBytes>
		<unload public="1" set="method" line="521">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[* Removes a child of this Loader object that was loaded by using the
	 * <code>load()</code> method. The <code>property</code> of the associated
	 * LoaderInfo object is reset to <code>null</code>. The child is not
	 * necessarily destroyed because other objects might have references to it;
	 * however, it is no longer a child of the Loader object.
	 *
	 * <p>As a best practice, before you unload a child SWF file, you should
	 * explicitly close any streams in the child SWF file's objects, such as
	 * LocalConnection, NetConnection, NetStream, and Sound objects. Otherwise,
	 * audio in the child SWF file might continue to play, even though the child
	 * SWF file was unloaded. To close streams in the child SWF file, add an
	 * event listener to the child that listens for the <code>unload</code>
	 * event. When the parent calls <code>Loader.unload()</code>, the
	 * <code>unload</code> event is dispatched to the child. The following code
	 * shows how you might do this:</p>
	 * <pre xml:space="preserve"> function closeAllStreams(evt:Event) {
	 * myNetStream.close(); mySound.close(); myNetConnection.close();
	 * myLocalConnection.close(); }
	 * myMovieClip.loaderInfo.addEventListener(Event.UNLOAD,
	 * closeAllStreams);</pre>
	 *]]></haxe_doc>
		</unload>
		<unloadAndStop public="1" set="method" line="577">
			<f a="?gc" v="true">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Attempts to unload child SWF file contents and stops the execution of
	 * commands from loaded SWF files. This method attempts to unload SWF files
	 * that were loaded using <code>Loader.load()</code> or
	 * <code>Loader.loadBytes()</code> by removing references to EventDispatcher,
	 * NetConnection, Timer, Sound, or Video objects of the child SWF file. As a
	 * result, the following occurs for the child SWF file and the child SWF
	 * file's display list:
	 * <ul>
	 *   <li>Sounds are stopped.</li>
	 *   <li>Stage event listeners are removed.</li>
	 *   <li>Event listeners for <code>enterFrame</code>,
	 * <code>frameConstructed</code>, <code>exitFrame</code>,
	 * <code>activate</code> and <code>deactivate</code> are removed.</li>
	 *   <li>Timers are stopped.</li>
	 *   <li>Camera and Microphone instances are detached</li>
	 *   <li>Movie clips are stopped.</li>
	 * </ul>
	 * 
	 * @param gc Provides a hint to the garbage collector to run on the child SWF
	 *           objects(<code>true</code>) or not(<code>false</code>). If you
	 *           are unloading many objects asynchronously, setting the
	 *           <code>gc</code> paramter to <code>false</code> might improve
	 *           application performance. However, if the parameter is set to
	 *           <code>false</code>, media and display objects of the child SWF
	 *           file might persist in memory after running the
	 *           <code>unloadAndStop()</code> command.]]></haxe_doc>
		</unloadAndStop>
		<BitmapData_onLoad set="method" line="591">
			<f a="bitmapData">
				<c path="openfl.display.BitmapData"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</BitmapData_onLoad>
		<BitmapData_onError set="method" line="605">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</BitmapData_onError>
		<new public="1" set="method" line="175">
			<f a=""><x path="Void"/></f>
			<haxe_doc><![CDATA[* Creates a Loader object that you can use to load files, such as SWF, JPEG,
	 * GIF, or PNG files. Call the <code>load()</code> method to load the asset
	 * as a child of the Loader instance. You can then add the Loader object to
	 * the display list(for instance, by using the <code>addChild()</code>
	 * method of a DisplayObjectContainer instance). The asset appears on the
	 * Stage as it loads.
	 *
	 * <p>You can also use a Loader instance "offlist," that is without adding it
	 * to a display object container on the display list. In this mode, the
	 * Loader instance might be used to load a SWF file that contains additional
	 * modules of an application. </p>
	 *
	 * <p>To detect when the SWF file is finished loading, you can use the events
	 * of the LoaderInfo object associated with the
	 * <code>contentLoaderInfo</code> property of the Loader object. At that
	 * point, the code in the module SWF file can be executed to initialize and
	 * start the module. In the offlist mode, a Loader instance might also be
	 * used to load a SWF file that contains components or media assets. Again,
	 * you can use the LoaderInfo object event notifications to detect when the
	 * components are finished loading. At that point, the application can start
	 * using the components and media assets in the library of the SWF file by
	 * instantiating the ActionScript 3.0 classes that represent those components
	 * and assets.</p>
	 *
	 * <p>To determine the status of a Loader object, monitor the following
	 * events that the LoaderInfo object associated with the
	 * <code>contentLoaderInfo</code> property of the Loader object:</p>
	 *
	 * <ul>
	 *   <li>The <code>open</code> event is dispatched when loading begins.</li>
	 *   <li>The <code>ioError</code> or <code>securityError</code> event is
	 * dispatched if the file cannot be loaded or if an error occured during the
	 * load process. </li>
	 *   <li>The <code>progress</code> event fires continuously while the file is
	 * being loaded.</li>
	 *   <li>The <code>complete</code> event is dispatched when a file completes
	 * downloading, but before the loaded movie clip's methods and properties are
	 * available. </li>
	 *   <li>The <code>init</code> event is dispatched after the properties and
	 * methods of the loaded SWF file are accessible, so you can begin
	 * manipulating the loaded SWF file. This event is dispatched before the
	 * <code>complete</code> handler. In streaming SWF files, the
	 * <code>init</code> event can occur significantly earlier than the
	 * <code>complete</code> event. For most purposes, use the <code>init</code>
	 * handler.</li>
	 * </ul>]]></haxe_doc>
		</new>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<class path="openfl.display.OpenGLView" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/OpenGLView.hx">
		<extends path="openfl.display.DirectRenderer"/>
		<CONTEXT_LOST public="1" get="inline" set="null" line="24" static="1"><c path="String"/></CONTEXT_LOST>
		<CONTEXT_RESTORED public="1" get="inline" set="null" line="25" static="1"><c path="String"/></CONTEXT_RESTORED>
		<isSupported public="1" get="accessor" set="null" static="1"><x path="Bool"/></isSupported>
		<get_isSupported set="method" line="199" static="1">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_isSupported>
		<__added>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__added>
		<__initialized>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__initialized>
		<__renderCanvas public="1" set="method" line="77" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderCanvas>
		<__renderDOM public="1" set="method" line="93" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderDOM>
		<__renderGL public="1" set="method" line="169" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderGL>
		<new public="1" set="method" line="33"><f a=""><x path="Void"/></f></new>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<enum path="openfl.display.PixelSnapping" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/PixelSnapping.hx">
		<NEVER/>
		<AUTO/>
		<ALWAYS/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.display.Preloader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Preloader.hx">
		<extends path="lime.app.Preloader"/>
		<display><c path="openfl.display.Sprite"/></display>
		<displayComplete><x path="Bool"/></displayComplete>
		<load public="1" set="method" line="41" override="1"><f a="urls:types">
	<c path="Array"><c path="String"/></c>
	<c path="Array"><x path="lime.AssetType"/></c>
	<x path="Void"/>
</f></load>
		<start set="method" line="88" override="1"><f a=""><x path="Void"/></f></start>
		<update set="method" line="104" override="1"><f a="loaded:total">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></update>
		<display_onComplete set="method" line="122">
			<f a="event">
				<c path="openfl.events.Event"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</display_onComplete>
		<sound_onComplete set="method" line="135">
			<f a="event">
				<c path="openfl.events.Event"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</sound_onComplete>
		<sound_onIOError set="method" line="150">
			<f a="event">
				<c path="openfl.events.IOErrorEvent"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</sound_onIOError>
		<new public="1" set="method" line="21"><f a="?display" v="null">
	<c path="openfl.display.Sprite"/>
	<x path="Void"/>
</f></new>
	</class>
	<typedef path="openfl.display.OpenFLPreloader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Preloader.hx" module="openfl.display.Preloader"><c path="NMEPreloader"/></typedef>
	<class path="openfl.display.Shape" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Shape.hx">
		<extends path="openfl.display.DisplayObject"/>
		<graphics public="1" get="accessor" set="null"><c path="openfl.display.Graphics"/></graphics>
		<__getBounds set="method" line="27" override="1">
			<f a="rect:matrix">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Matrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getBounds>
		<__hitTest set="method" line="38" override="1">
			<f a="x:y:shapeFlag:stack:interactiveOnly">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__hitTest>
		<__renderCanvas public="1" set="method" line="57" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderCanvas>
		<__renderDOM public="1" set="method" line="64" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderDOM>
		<__renderGL public="1" set="method" line="71" override="1">
			<f a="renderSession">
				<c path="openfl._internal.renderer.RenderSession"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__renderGL>
		<get_graphics set="method" line="91">
			<f a=""><c path="openfl.display.Graphics"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_graphics>
		<new public="1" set="method" line="20"><f a=""><x path="Void"/></f></new>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<enum path="openfl.display.SpreadMethod" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/SpreadMethod.hx">
		<REPEAT/>
		<REFLECT/>
		<PAD/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.display.Stage" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Stage.hx">
		<extends path="openfl.display.Sprite"/>
		<align public="1"><e path="openfl.display.StageAlign"/></align>
		<allowsFullScreen public="1"><x path="Bool"/></allowsFullScreen>
		<color public="1" get="accessor" set="accessor"><x path="Int"/></color>
		<displayState public="1" set="accessor"><e path="openfl.display.StageDisplayState"/></displayState>
		<focus public="1" get="accessor" set="accessor"><c path="openfl.display.InteractiveObject"/></focus>
		<frameRate public="1"><x path="Float"/></frameRate>
		<quality public="1"><e path="openfl.display.StageQuality"/></quality>
		<stageFocusRect public="1"><x path="Bool"/></stageFocusRect>
		<scaleMode public="1"><e path="openfl.display.StageScaleMode"/></scaleMode>
		<stageHeight public="1" set="null"><x path="Int"/></stageHeight>
		<stageWidth public="1" set="null"><x path="Int"/></stageWidth>
		<__clearBeforeRender>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__clearBeforeRender>
		<__color>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__color>
		<__colorSplit>
			<c path="Array"><x path="Float"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__colorSplit>
		<__colorString>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__colorString>
		<__cursor>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__cursor>
		<__cursorHidden>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__cursorHidden>
		<__dirty>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__dirty>
		<__dragBounds>
			<c path="openfl.geom.Rectangle"/>
			<meta><m n=":noCompletion"/></meta>
		</__dragBounds>
		<__dragObject>
			<c path="openfl.display.Sprite"/>
			<meta><m n=":noCompletion"/></meta>
		</__dragObject>
		<__dragOffsetX>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__dragOffsetX>
		<__dragOffsetY>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__dragOffsetY>
		<__focus>
			<c path="openfl.display.InteractiveObject"/>
			<meta><m n=":noCompletion"/></meta>
		</__focus>
		<__fullscreen>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__fullscreen>
		<__invalidated>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__invalidated>
		<__mouseX>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__mouseX>
		<__mouseY>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__mouseY>
		<__originalWidth>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__originalWidth>
		<__originalHeight>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__originalHeight>
		<__renderer>
			<c path="openfl._internal.renderer.AbstractRenderer"/>
			<meta><m n=":noCompletion"/></meta>
		</__renderer>
		<__stack>
			<c path="Array"><c path="openfl.display.DisplayObject"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__stack>
		<__transparent>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__transparent>
		<__wasDirty>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__wasDirty>
		<globalToLocal public="1" set="method" line="126" override="1"><f a="pos">
	<c path="openfl.geom.Point"/>
	<c path="openfl.geom.Point"/>
</f></globalToLocal>
		<invalidate public="1" set="method" line="133"><f a=""><x path="Void"/></f></invalidate>
		<localToGlobal public="1" set="method" line="140" override="1"><f a="pos">
	<c path="openfl.geom.Point"/>
	<c path="openfl.geom.Point"/>
</f></localToGlobal>
		<__drag set="method" line="147">
			<f a="mouse">
				<c path="openfl.geom.Point"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__drag>
		<__fireEvent set="method" line="189">
			<f a="event:stack">
				<c path="openfl.events.Event"/>
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fireEvent>
		<__getInteractive set="method" line="250" override="1">
			<f a="stack">
				<c path="Array"><c path="openfl.display.DisplayObject"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getInteractive>
		<__render set="method" line="257">
			<f a="context">
				<e path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__render>
		<__resize set="method" line="310">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__resize>
		<__setCursor set="method" line="371">
			<f a="cursor">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__setCursor>
		<__setCursorHidden set="method" line="389">
			<f a="value">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__setCursorHidden>
		<__startDrag set="method" line="403">
			<f a="sprite:lockCenter:bounds">
				<c path="openfl.display.Sprite"/>
				<x path="Bool"/>
				<c path="openfl.geom.Rectangle"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__startDrag>
		<__stopDrag set="method" line="436">
			<f a="sprite">
				<c path="openfl.display.Sprite"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__stopDrag>
		<__update public="1" set="method" line="444" override="1">
			<f a="transformOnly:updateChildren">
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__update>
		<get_mouseX set="method" line="506" override="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_mouseX>
		<get_mouseY set="method" line="513" override="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_mouseY>
		<canvas_onContextLost set="method" line="528">
			<f a="event">
				<c path="js.html.webgl.ContextEvent"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</canvas_onContextLost>
		<canvas_onContextRestored set="method" line="535">
			<f a="event">
				<c path="js.html.webgl.ContextEvent"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</canvas_onContextRestored>
		<get_color set="method" line="550">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_color>
		<set_color set="method" line="557">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_color>
		<get_focus set="method" line="571">
			<f a=""><c path="openfl.display.InteractiveObject"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_focus>
		<set_focus set="method" line="578">
			<f a="value">
				<c path="openfl.display.InteractiveObject"/>
				<c path="openfl.display.InteractiveObject"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_focus>
		<set_displayState set="method" line="611">
			<f a="value">
				<e path="openfl.display.StageDisplayState"/>
				<e path="openfl.display.StageDisplayState"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_displayState>
		<new public="1" set="method" line="87"><f a="width:height:?color" v="::null">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":access"><e>'???'</e></m></meta>
	</class>
	<enum path="openfl.display.StageAlign" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/StageAlign.hx">
		<TOP_RIGHT/>
		<TOP_LEFT/>
		<TOP/>
		<RIGHT/>
		<LEFT/>
		<BOTTOM_RIGHT/>
		<BOTTOM_LEFT/>
		<BOTTOM/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="openfl.display.StageDisplayState" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/StageDisplayState.hx">
		<NORMAL/>
		<FULL_SCREEN/>
		<FULL_SCREEN_INTERACTIVE/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="openfl.display.StageQuality" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/StageQuality.hx">
		<BEST/>
		<HIGH/>
		<MEDIUM/>
		<LOW/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="openfl.display.StageScaleMode" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/StageScaleMode.hx">
		<SHOW_ALL/>
		<NO_SCALE/>
		<NO_BORDER/>
		<EXACT_FIT/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.display.Tilesheet" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/Tilesheet.hx">
		<TILE_SCALE public="1" get="inline" set="null" line="16" static="1"><x path="Int"/></TILE_SCALE>
		<TILE_ROTATION public="1" get="inline" set="null" line="17" static="1"><x path="Int"/></TILE_ROTATION>
		<TILE_RGB public="1" get="inline" set="null" line="18" static="1"><x path="Int"/></TILE_RGB>
		<TILE_ALPHA public="1" get="inline" set="null" line="19" static="1"><x path="Int"/></TILE_ALPHA>
		<TILE_TRANS_2x2 public="1" get="inline" set="null" line="20" static="1"><x path="Int"/></TILE_TRANS_2x2>
		<TILE_RECT public="1" get="inline" set="null" line="21" static="1"><x path="Int"/></TILE_RECT>
		<TILE_ORIGIN public="1" get="inline" set="null" line="22" static="1"><x path="Int"/></TILE_ORIGIN>
		<TILE_BLEND_NORMAL public="1" get="inline" set="null" line="24" static="1"><x path="Int"/></TILE_BLEND_NORMAL>
		<TILE_BLEND_ADD public="1" get="inline" set="null" line="25" static="1"><x path="Int"/></TILE_BLEND_ADD>
		<TILE_BLEND_MULTIPLY public="1" get="inline" set="null" line="26" static="1"><x path="Int"/></TILE_BLEND_MULTIPLY>
		<TILE_BLEND_SCREEN public="1" get="inline" set="null" line="27" static="1"><x path="Int"/></TILE_BLEND_SCREEN>
		<__defaultPoint line="29" static="1">
			<c path="openfl.geom.Point"/>
			<meta><m n=":noCompletion"/></meta>
		</__defaultPoint>
		<__bitmap>
			<c path="openfl.display.BitmapData"/>
			<meta><m n=":noCompletion"/></meta>
		</__bitmap>
		<__centerPoints>
			<c path="Array"><c path="openfl.geom.Point"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__centerPoints>
		<__tileRects>
			<c path="Array"><c path="openfl.geom.Rectangle"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__tileRects>
		<__tileUVs>
			<c path="Array"><c path="openfl.geom.Rectangle"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__tileUVs>
		<__rectTile>
			<c path="openfl.geom.Rectangle"/>
			<meta><m n=":noCompletion"/></meta>
		</__rectTile>
		<__rectUV>
			<c path="openfl.geom.Rectangle"/>
			<meta><m n=":noCompletion"/></meta>
		</__rectUV>
		<__point>
			<c path="openfl.geom.Point"/>
			<meta><m n=":noCompletion"/></meta>
		</__point>
		<addTileRect public="1" set="method" line="81">
			<f a="rectangle:?centerPoint" v=":null">
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Adds an single tile to this TileSheet
	 * @param	rectangle a rectangle defining the dimensions and positioning of a new tile
	 * @param	centerPoint if set, will act as the translation point of the tile, default: top-left corner
	 * @return an Int representing the id of a single tile rect</haxe_doc>
		</addTileRect>
		<drawTiles public="1" set="method" line="185">
			<f a="graphics:tileData:?smooth:?flags:?count" v="::false:0:-1">
				<c path="openfl.display.Graphics"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc><![CDATA[* Draws tiles to a give Graphic Object
	 * @param	graphics the "Graphics" object to draw tiles to
	 * @param	tileData an Array<Float>(3) denoting the X position, Y position, and tile to render repsectively
	 * @param	smooth whether to smooth the tile or not
	 * @param	flags
	 * @param	count]]></haxe_doc>
		</drawTiles>
		<getTileCenter public="1" get="inline" set="null" line="191"><f a="index">
	<x path="Int"/>
	<c path="openfl.geom.Point"/>
</f></getTileCenter>
		<getTileRect public="1" get="inline" set="null" line="198"><f a="index">
	<x path="Int"/>
	<c path="openfl.geom.Rectangle"/>
</f></getTileRect>
		<getTileUVs public="1" get="inline" set="null" line="205"><f a="index">
	<x path="Int"/>
	<c path="openfl.geom.Rectangle"/>
</f></getTileUVs>
		<new public="1" set="method" line="53">
			<f a="image">
				<c path="openfl.display.BitmapData"/>
				<x path="Void"/>
			</f>
			<haxe_doc>*Creates new TileSheet Object
	 * @param	image a bitmap data to create tiles from</haxe_doc>
		</new>
		<meta><m n=":allow"><e>'???'</e></m></meta>
	</class>
	<enum path="openfl.display.TriangleCulling" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/display/TriangleCulling.hx">
		<NEGATIVE/>
		<NONE/>
		<POSITIVE/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.errors.Error" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/errors/Error.hx">
		<DEFAULT_TO_STRING get="inline" set="null" line="10" static="1"><c path="String"/></DEFAULT_TO_STRING>
		<errorID public="1"><x path="Int"/></errorID>
		<message public="1"><c path="String"/></message>
		<name public="1"><c path="String"/></name>
		<getStackTrace public="1" set="method" line="26"><f a=""><c path="String"/></f></getStackTrace>
		<toString public="1" set="method" line="33"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="17"><f a="?message:?id" v="'':0">
	<c path="String"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.errors.ArgumentError" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/errors/ArgumentError.hx">
		<extends path="openfl.errors.Error"/>
		<new public="1" set="method" line="7"><f a="?inMessage" v="''">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.errors.IOError" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/errors/IOError.hx">
		<extends path="openfl.errors.Error"/>
		<new public="1" set="method" line="7"><f a="?message" v="''">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.errors.RangeError" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/errors/RangeError.hx">
		<extends path="openfl.errors.Error"/>
		<new public="1" set="method" line="7"><f a="?inMessage" v="''">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.errors.TypeError" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/errors/TypeError.hx">
		<extends path="openfl.errors.Error"/>
		<new public="1" set="method" line="7"><f a="?inMessage" v="''">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.Event" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/Event.hx">
		<ACTIVATE public="1" line="10" static="1"><c path="String"/></ACTIVATE>
		<ADDED public="1" line="11" static="1"><c path="String"/></ADDED>
		<ADDED_TO_STAGE public="1" line="12" static="1"><c path="String"/></ADDED_TO_STAGE>
		<CANCEL public="1" line="13" static="1"><c path="String"/></CANCEL>
		<CHANGE public="1" line="14" static="1"><c path="String"/></CHANGE>
		<CLOSE public="1" line="15" static="1"><c path="String"/></CLOSE>
		<COMPLETE public="1" line="16" static="1"><c path="String"/></COMPLETE>
		<CONNECT public="1" line="17" static="1"><c path="String"/></CONNECT>
		<CONTEXT3D_CREATE public="1" line="18" static="1"><c path="String"/></CONTEXT3D_CREATE>
		<DEACTIVATE public="1" line="19" static="1"><c path="String"/></DEACTIVATE>
		<ENTER_FRAME public="1" line="20" static="1"><c path="String"/></ENTER_FRAME>
		<ID3 public="1" line="21" static="1"><c path="String"/></ID3>
		<INIT public="1" line="22" static="1"><c path="String"/></INIT>
		<MOUSE_LEAVE public="1" line="23" static="1"><c path="String"/></MOUSE_LEAVE>
		<OPEN public="1" line="24" static="1"><c path="String"/></OPEN>
		<REMOVED public="1" line="25" static="1"><c path="String"/></REMOVED>
		<REMOVED_FROM_STAGE public="1" line="26" static="1"><c path="String"/></REMOVED_FROM_STAGE>
		<RENDER public="1" line="27" static="1"><c path="String"/></RENDER>
		<RESIZE public="1" line="28" static="1"><c path="String"/></RESIZE>
		<SCROLL public="1" line="29" static="1"><c path="String"/></SCROLL>
		<SELECT public="1" line="30" static="1"><c path="String"/></SELECT>
		<SOUND_COMPLETE public="1" line="31" static="1"><c path="String"/></SOUND_COMPLETE>
		<TAB_CHILDREN_CHANGE public="1" line="32" static="1"><c path="String"/></TAB_CHILDREN_CHANGE>
		<TAB_ENABLED_CHANGE public="1" line="33" static="1"><c path="String"/></TAB_ENABLED_CHANGE>
		<TAB_INDEX_CHANGE public="1" line="34" static="1"><c path="String"/></TAB_INDEX_CHANGE>
		<UNLOAD public="1" line="35" static="1"><c path="String"/></UNLOAD>
		<bubbles public="1" set="null"><x path="Bool"/></bubbles>
		<cancelable public="1" set="null"><x path="Bool"/></cancelable>
		<currentTarget public="1"><d/></currentTarget>
		<eventPhase public="1" set="null"><e path="openfl.events.EventPhase"/></eventPhase>
		<target public="1"><d/></target>
		<type public="1" set="null"><c path="String"/></type>
		<__isCancelled>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__isCancelled>
		<__isCancelledNow>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__isCancelledNow>
		<clone public="1" set="method" line="58"><f a=""><c path="openfl.events.Event"/></f></clone>
		<isDefaultPrevented public="1" set="method" line="69"><f a=""><x path="Bool"/></f></isDefaultPrevented>
		<stopImmediatePropagation public="1" set="method" line="76"><f a=""><x path="Void"/></f></stopImmediatePropagation>
		<stopPropagation public="1" set="method" line="84"><f a=""><x path="Void"/></f></stopPropagation>
		<toString public="1" set="method" line="91"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="48"><f a="type:?bubbles:?cancelable" v=":false:false">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.TextEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/TextEvent.hx">
		<extends path="openfl.events.Event"/>
		<LINK public="1" line="7" static="1"><c path="String"/></LINK>
		<TEXT_INPUT public="1" line="8" static="1"><c path="String"/></TEXT_INPUT>
		<text public="1"><c path="String"/></text>
		<clone public="1" set="method" line="22" override="1"><f a=""><c path="openfl.events.Event"/></f></clone>
		<toString public="1" set="method" line="29" override="1"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="13"><f a="type:?bubbles:?cancelable:?text" v=":false:false:''">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.ErrorEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/ErrorEvent.hx">
		<extends path="openfl.events.TextEvent"/>
		<ERROR public="1" line="7" static="1"><c path="String"/></ERROR>
		<errorID public="1" set="null"><x path="Int"/></errorID>
		<clone public="1" set="method" line="20" override="1"><f a=""><c path="openfl.events.Event"/></f></clone>
		<toString public="1" set="method" line="27" override="1"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="12"><f a="type:?bubbles:?cancelable:?text:?id" v=":false:false:'':0">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events._EventDispatcher.Listener" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/EventDispatcher.hx" private="1" module="openfl.events.EventDispatcher">
		<callback public="1"><f a="">
	<d/>
	<x path="Void"/>
</f></callback>
		<priority public="1"><x path="Int"/></priority>
		<useCapture public="1"><x path="Bool"/></useCapture>
		<match public="1" set="method" line="196"><f a="callback:useCapture">
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Bool"/>
</f></match>
		<new public="1" set="method" line="187"><f a="callback:useCapture:priority">
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<enum path="openfl.events.EventPhase" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/EventPhase.hx">
		<CAPTURING_PHASE/>
		<AT_TARGET/>
		<BUBBLING_PHASE/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.events.FocusEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/FocusEvent.hx">
		<extends path="openfl.events.Event"/>
		<FOCUS_IN public="1" line="10" static="1"><c path="String"/></FOCUS_IN>
		<FOCUS_OUT public="1" line="11" static="1"><c path="String"/></FOCUS_OUT>
		<KEY_FOCUS_CHANGE public="1" line="12" static="1"><c path="String"/></KEY_FOCUS_CHANGE>
		<MOUSE_FOCUS_CHANGE public="1" line="13" static="1"><c path="String"/></MOUSE_FOCUS_CHANGE>
		<keyCode public="1"><x path="Int"/></keyCode>
		<relatedObject public="1"><c path="openfl.display.InteractiveObject"/></relatedObject>
		<shiftKey public="1"><x path="Bool"/></shiftKey>
		<clone public="1" set="method" line="31" override="1"><f a=""><c path="openfl.events.Event"/></f></clone>
		<toString public="1" set="method" line="44" override="1"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="20"><f a="type:?bubbles:?cancelable:?relatedObject:?shiftKey:?keyCode" v=":false:false:null:false:0">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="openfl.display.InteractiveObject"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.HTTPStatusEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/HTTPStatusEvent.hx">
		<extends path="openfl.events.Event"/>
		<HTTP_RESPONSE_STATUS public="1" line="7" static="1"><c path="String"/></HTTP_RESPONSE_STATUS>
		<HTTP_STATUS public="1" line="8" static="1"><c path="String"/></HTTP_STATUS>
		<responseHeaders public="1"><c path="Array"><d/></c></responseHeaders>
		<responseURL public="1"><c path="String"/></responseURL>
		<status public="1" set="null"><x path="Int"/></status>
		<new public="1" set="method" line="15"><f a="type:?bubbles:?cancelable:?status" v=":false:false:0">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.IOErrorEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/IOErrorEvent.hx">
		<extends path="openfl.events.ErrorEvent"/>
		<IO_ERROR public="1" line="7" static="1"><c path="String"/></IO_ERROR>
		<clone public="1" set="method" line="17" override="1"><f a=""><c path="openfl.events.Event"/></f></clone>
		<toString public="1" set="method" line="24" override="1"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="10"><f a="type:?bubbles:?cancelable:?text:?id" v=":true:false:'':0">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.KeyboardEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/KeyboardEvent.hx">
		<extends path="openfl.events.Event"/>
		<KEY_DOWN public="1" line="10" static="1"><c path="String"/></KEY_DOWN>
		<KEY_UP public="1" line="11" static="1"><c path="String"/></KEY_UP>
		<altKey public="1"><x path="Bool"/></altKey>
		<charCode public="1"><x path="Int"/></charCode>
		<ctrlKey public="1"><x path="Bool"/></ctrlKey>
		<commandKey public="1"><x path="Bool"/></commandKey>
		<controlKey public="1"><x path="Bool"/></controlKey>
		<keyCode public="1"><x path="Int"/></keyCode>
		<keyLocation public="1"><x path="openfl.ui.KeyLocation"/></keyLocation>
		<shiftKey public="1"><x path="Bool"/></shiftKey>
		<clone public="1" set="method" line="41" override="1"><f a=""><c path="openfl.events.Event"/></f></clone>
		<toString public="1" set="method" line="48" override="1"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="23"><f a="type:?bubbles:?cancelable:?charCodeValue:?keyCodeValue:?keyLocationValue:?ctrlKeyValue:?altKeyValue:?shiftKeyValue:?controlKeyValue:?commandKeyValue" v=":false:false:0:0:null:false:false:false:false:false">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="openfl.ui.KeyLocation"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.MouseEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/MouseEvent.hx">
		<extends path="openfl.events.Event"/>
		<CLICK public="1" line="11" static="1"><c path="String"/></CLICK>
		<DOUBLE_CLICK public="1" line="12" static="1"><c path="String"/></DOUBLE_CLICK>
		<MIDDLE_CLICK public="1" line="13" static="1"><c path="String"/></MIDDLE_CLICK>
		<MIDDLE_MOUSE_DOWN public="1" line="14" static="1"><c path="String"/></MIDDLE_MOUSE_DOWN>
		<MIDDLE_MOUSE_UP public="1" line="15" static="1"><c path="String"/></MIDDLE_MOUSE_UP>
		<MOUSE_DOWN public="1" line="16" static="1"><c path="String"/></MOUSE_DOWN>
		<MOUSE_MOVE public="1" line="17" static="1"><c path="String"/></MOUSE_MOVE>
		<MOUSE_OUT public="1" line="18" static="1"><c path="String"/></MOUSE_OUT>
		<MOUSE_OVER public="1" line="19" static="1"><c path="String"/></MOUSE_OVER>
		<MOUSE_UP public="1" line="20" static="1"><c path="String"/></MOUSE_UP>
		<MOUSE_WHEEL public="1" line="21" static="1"><c path="String"/></MOUSE_WHEEL>
		<RIGHT_CLICK public="1" line="22" static="1"><c path="String"/></RIGHT_CLICK>
		<RIGHT_MOUSE_DOWN public="1" line="23" static="1"><c path="String"/></RIGHT_MOUSE_DOWN>
		<RIGHT_MOUSE_UP public="1" line="24" static="1"><c path="String"/></RIGHT_MOUSE_UP>
		<ROLL_OUT public="1" line="25" static="1"><c path="String"/></ROLL_OUT>
		<ROLL_OVER public="1" line="26" static="1"><c path="String"/></ROLL_OVER>
		<__buttonDown line="28" static="1">
			<c path="Array"><x path="Bool"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__buttonDown>
		<__create public="1" set="method" line="63" static="1">
			<f a="type:button:local:target">
				<c path="String"/>
				<x path="Int"/>
				<c path="openfl.geom.Point"/>
				<c path="openfl.display.InteractiveObject"/>
				<c path="openfl.events.MouseEvent"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__create>
		<altKey public="1"><x path="Bool"/></altKey>
		<buttonDown public="1"><x path="Bool"/></buttonDown>
		<commandKey public="1"><x path="Bool"/></commandKey>
		<clickCount public="1"><x path="Int"/></clickCount>
		<ctrlKey public="1"><x path="Bool"/></ctrlKey>
		<delta public="1"><x path="Int"/></delta>
		<localX public="1"><x path="Float"/></localX>
		<localY public="1"><x path="Float"/></localY>
		<relatedObject public="1"><c path="openfl.display.InteractiveObject"/></relatedObject>
		<shiftKey public="1"><x path="Bool"/></shiftKey>
		<stageX public="1"><x path="Float"/></stageX>
		<stageY public="1"><x path="Float"/></stageY>
		<clone public="1" set="method" line="109" override="1"><f a=""><c path="openfl.events.Event"/></f></clone>
		<toString public="1" set="method" line="116" override="1"><f a=""><c path="String"/></f></toString>
		<updateAfterEvent public="1" set="method" line="123"><f a=""><x path="Void"/></f></updateAfterEvent>
		<new public="1" set="method" line="44"><f a="type:?bubbles:?cancelable:?localX:?localY:?relatedObject:?ctrlKey:?altKey:?shiftKey:?buttonDown:?delta:?commandKey:?clickCount" v=":true:false:0:0:null:false:false:false:false:0:false:0">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="openfl.display.InteractiveObject"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.ProgressEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/ProgressEvent.hx">
		<extends path="openfl.events.Event"/>
		<PROGRESS public="1" line="7" static="1"><c path="String"/></PROGRESS>
		<SOCKET_DATA public="1" line="8" static="1"><c path="String"/></SOCKET_DATA>
		<bytesLoaded public="1"><x path="Float"/></bytesLoaded>
		<bytesTotal public="1"><x path="Float"/></bytesTotal>
		<clone public="1" set="method" line="24" override="1"><f a=""><c path="openfl.events.Event"/></f></clone>
		<toString public="1" set="method" line="31" override="1"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="14"><f a="type:?bubbles:?cancelable:?bytesLoaded:?bytesTotal" v=":false:false:0:0">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.SecurityErrorEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/SecurityErrorEvent.hx">
		<extends path="openfl.events.ErrorEvent"/>
		<SECURITY_ERROR public="1" line="7" static="1"><c path="String"/></SECURITY_ERROR>
		<clone public="1" set="method" line="17" override="1"><f a=""><c path="openfl.events.Event"/></f></clone>
		<toString public="1" set="method" line="24" override="1"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="10"><f a="type:?bubbles:?cancelable:?text:?id" v=":false:false:'':0">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.TimerEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/TimerEvent.hx">
		<extends path="openfl.events.Event"/>
		<TIMER public="1" line="7" static="1"><c path="String"/></TIMER>
		<TIMER_COMPLETE public="1" line="8" static="1"><c path="String"/></TIMER_COMPLETE>
		<clone public="1" set="method" line="18" override="1"><f a=""><c path="openfl.events.Event"/></f></clone>
		<toString public="1" set="method" line="25" override="1"><f a=""><c path="String"/></f></toString>
		<updateAfterEvent public="1" set="method" line="32"><f a=""><x path="Void"/></f></updateAfterEvent>
		<new public="1" set="method" line="11"><f a="type:?bubbles:?cancelable" v=":false:false">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.events.TouchEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/events/TouchEvent.hx">
		<extends path="openfl.events.Event"/>
		<TOUCH_BEGIN public="1" get="inline" set="null" line="11" static="1"><c path="String"/></TOUCH_BEGIN>
		<TOUCH_END public="1" get="inline" set="null" line="12" static="1"><c path="String"/></TOUCH_END>
		<TOUCH_MOVE public="1" get="inline" set="null" line="13" static="1"><c path="String"/></TOUCH_MOVE>
		<TOUCH_OUT public="1" get="inline" set="null" line="14" static="1"><c path="String"/></TOUCH_OUT>
		<TOUCH_OVER public="1" get="inline" set="null" line="15" static="1"><c path="String"/></TOUCH_OVER>
		<TOUCH_ROLL_OUT public="1" get="inline" set="null" line="16" static="1"><c path="String"/></TOUCH_ROLL_OUT>
		<TOUCH_ROLL_OVER public="1" get="inline" set="null" line="17" static="1"><c path="String"/></TOUCH_ROLL_OVER>
		<TOUCH_TAP public="1" get="inline" set="null" line="18" static="1"><c path="String"/></TOUCH_TAP>
		<__create public="1" set="method" line="69" static="1">
			<f a="type:touch:local:target">
				<c path="String"/>
				<d/>
				<c path="openfl.geom.Point"/>
				<c path="openfl.display.InteractiveObject"/>
				<c path="openfl.events.TouchEvent"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__create>
		<altKey public="1"><x path="Bool"/></altKey>
		<buttonDown public="1"><x path="Bool"/></buttonDown>
		<commandKey public="1"><x path="Bool"/></commandKey>
		<ctrlKey public="1"><x path="Bool"/></ctrlKey>
		<delta public="1"><x path="Int"/></delta>
		<isPrimaryTouchPoint public="1"><x path="Bool"/></isPrimaryTouchPoint>
		<localX public="1"><x path="Float"/></localX>
		<localY public="1"><x path="Float"/></localY>
		<pressure public="1"><x path="Float"/></pressure>
		<relatedObject public="1"><c path="openfl.display.InteractiveObject"/></relatedObject>
		<shiftKey public="1"><x path="Bool"/></shiftKey>
		<sizeX public="1"><x path="Float"/></sizeX>
		<sizeY public="1"><x path="Float"/></sizeY>
		<stageX public="1"><x path="Float"/></stageX>
		<stageY public="1"><x path="Float"/></stageY>
		<touchPointID public="1"><x path="Int"/></touchPointID>
		<updateAfterEvent public="1" set="method" line="62"><f a=""><x path="Void"/></f></updateAfterEvent>
		<new public="1" set="method" line="38"><f a="type:?bubbles:?cancelable:?localX:?localY:?sizeX:?sizeY:?relatedObject:?ctrlKey:?altKey:?shiftKey:?buttonDown:?delta:?commandKey:?clickCount" v=":true:false:0:0:1:1:null:false:false:false:false:0:false:0">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="openfl.display.InteractiveObject"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.filters.BitmapFilter" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/filters/BitmapFilter.hx">
		<clone public="1" set="method" line="22"><f a=""><c path="openfl.filters.BitmapFilter"/></f></clone>
		<__applyFilter public="1" set="method" line="30">
			<f a="sourceData:targetData:sourceRect:destPoint">
				<c path="js.html.ImageData"/>
				<c path="js.html.ImageData"/>
				<c path="openfl.geom.Rectangle"/>
				<c path="openfl.geom.Point"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__applyFilter>
		<new public="1" set="method" line="15"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.geom.ColorTransform" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/geom/ColorTransform.hx">
		<alphaMultiplier public="1"><x path="Float"/></alphaMultiplier>
		<alphaOffset public="1"><x path="Float"/></alphaOffset>
		<blueMultiplier public="1"><x path="Float"/></blueMultiplier>
		<blueOffset public="1"><x path="Float"/></blueOffset>
		<color public="1" get="accessor" set="accessor"><x path="Int"/></color>
		<greenMultiplier public="1"><x path="Float"/></greenMultiplier>
		<greenOffset public="1"><x path="Float"/></greenOffset>
		<redMultiplier public="1"><x path="Float"/></redMultiplier>
		<redOffset public="1"><x path="Float"/></redOffset>
		<concat public="1" set="method" line="36"><f a="second">
	<c path="openfl.geom.ColorTransform"/>
	<x path="Void"/>
</f></concat>
		<get_color set="method" line="53">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_color>
		<set_color set="method" line="60">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_color>
		<__toLimeColorMatrix set="method" line="75">
			<f a=""><x path="lime.math.ColorMatrix"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__toLimeColorMatrix>
		<new public="1" set="method" line="22"><f a="?redMultiplier:?greenMultiplier:?blueMultiplier:?alphaMultiplier:?redOffset:?greenOffset:?blueOffset:?alphaOffset" v="1:1:1:1:0:0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.geom.Transform" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/geom/Transform.hx">
		<colorTransform public="1"><c path="openfl.geom.ColorTransform"/></colorTransform>
		<concatenatedColorTransform public="1"><c path="openfl.geom.ColorTransform"/></concatenatedColorTransform>
		<concatenatedMatrix public="1"><c path="openfl.geom.Matrix"/></concatenatedMatrix>
		<matrix public="1" get="accessor" set="accessor"><c path="openfl.geom.Matrix"/></matrix>
		<pixelBounds public="1"><c path="openfl.geom.Rectangle"/></pixelBounds>
		<__displayObject>
			<c path="openfl.display.DisplayObject"/>
			<meta><m n=":noCompletion"/></meta>
		</__displayObject>
		<__matrix>
			<c path="openfl.geom.Matrix"/>
			<meta><m n=":noCompletion"/></meta>
		</__matrix>
		<get_matrix set="method" line="40">
			<f a=""><c path="openfl.geom.Matrix"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_matrix>
		<set_matrix set="method" line="58">
			<f a="value">
				<c path="openfl.geom.Matrix"/>
				<c path="openfl.geom.Matrix"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_matrix>
		<new public="1" set="method" line="20"><f a="displayObject">
	<c path="openfl.display.DisplayObject"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.geom.Vector3D" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/geom/Vector3D.hx">
		<X_AXIS public="1" get="accessor" set="null" static="1"><c path="openfl.geom.Vector3D"/></X_AXIS>
		<Y_AXIS public="1" get="accessor" set="null" static="1"><c path="openfl.geom.Vector3D"/></Y_AXIS>
		<Z_AXIS public="1" get="accessor" set="null" static="1"><c path="openfl.geom.Vector3D"/></Z_AXIS>
		<angleBetween public="1" get="inline" set="null" line="36" static="1"><f a="a:b">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Float"/>
</f></angleBetween>
		<distance public="1" get="inline" set="null" line="80" static="1"><f a="pt1:pt2">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
	<x path="Float"/>
</f></distance>
		<get_X_AXIS get="inline" set="null" line="209" static="1">
			<f a=""><c path="openfl.geom.Vector3D"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_X_AXIS>
		<get_Y_AXIS get="inline" set="null" line="216" static="1">
			<f a=""><c path="openfl.geom.Vector3D"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_Y_AXIS>
		<get_Z_AXIS get="inline" set="null" line="223" static="1">
			<f a=""><c path="openfl.geom.Vector3D"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_Z_AXIS>
		<length public="1" get="accessor" set="null"><x path="Float"/></length>
		<lengthSquared public="1" get="accessor" set="null"><x path="Float"/></lengthSquared>
		<w public="1"><x path="Float"/></w>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<z public="1"><x path="Float"/></z>
		<add public="1" get="inline" set="null" line="29"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
</f></add>
		<clone public="1" get="inline" set="null" line="48"><f a=""><c path="openfl.geom.Vector3D"/></f></clone>
		<copyFrom public="1" get="inline" set="null" line="55"><f a="sourceVector3D">
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></copyFrom>
		<crossProduct public="1" get="inline" set="null" line="64"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
</f></crossProduct>
		<decrementBy public="1" get="inline" set="null" line="71"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></decrementBy>
		<dotProduct public="1" get="inline" set="null" line="91"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<x path="Float"/>
</f></dotProduct>
		<equals public="1" get="inline" set="null" line="98"><f a="toCompare:?allFour" v=":false">
	<c path="openfl.geom.Vector3D"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></equals>
		<incrementBy public="1" get="inline" set="null" line="105"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<x path="Void"/>
</f></incrementBy>
		<nearEquals public="1" get="inline" set="null" line="114"><f a="toCompare:tolerance:?allFour" v="::false">
	<c path="openfl.geom.Vector3D"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></nearEquals>
		<negate public="1" get="inline" set="null" line="121"><f a=""><x path="Void"/></f></negate>
		<normalize public="1" get="inline" set="null" line="130"><f a=""><x path="Float"/></f></normalize>
		<project public="1" get="inline" set="null" line="147"><f a=""><x path="Void"/></f></project>
		<scaleBy public="1" get="inline" set="null" line="156"><f a="s">
	<x path="Float"/>
	<x path="Void"/>
</f></scaleBy>
		<setTo public="1" get="inline" set="null" line="165"><f a="xa:ya:za">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setTo>
		<subtract public="1" get="inline" set="null" line="174"><f a="a">
	<c path="openfl.geom.Vector3D"/>
	<c path="openfl.geom.Vector3D"/>
</f></subtract>
		<toString public="1" get="inline" set="null" line="181"><f a=""><c path="String"/></f></toString>
		<get_length get="inline" set="null" line="195">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<get_lengthSquared get="inline" set="null" line="202">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lengthSquared>
		<new public="1" set="method" line="19"><f a="?x:?y:?z:?w" v="0:0:0:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<typedef path="openfl.gl.GL" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/gl/GL.hx"><c path="lime.graphics.opengl.GL"/></typedef>
	<typedef path="openfl.gl.GLBuffer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/gl/GLBuffer.hx"><t path="lime.graphics.opengl.GLBuffer"/></typedef>
	<typedef path="openfl.gl.GLFramebuffer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/gl/GLFramebuffer.hx"><t path="lime.graphics.opengl.GLFramebuffer"/></typedef>
	<typedef path="openfl.gl.GLProgram" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/gl/GLProgram.hx"><t path="lime.graphics.opengl.GLProgram"/></typedef>
	<typedef path="openfl.gl.GLRenderbuffer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/gl/GLRenderbuffer.hx"><t path="lime.graphics.opengl.GLRenderbuffer"/></typedef>
	<typedef path="openfl.gl.GLShader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/gl/GLShader.hx"><t path="lime.graphics.opengl.GLShader"/></typedef>
	<typedef path="openfl.gl.GLTexture" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/gl/GLTexture.hx"><t path="lime.graphics.opengl.GLTexture"/></typedef>
	<typedef path="openfl.gl.GLUniformLocation" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/gl/GLUniformLocation.hx"><t path="lime.graphics.opengl.GLUniformLocation"/></typedef>
	<class path="openfl.media.ID3Info" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/media/ID3Info.hx">
		<album public="1"><c path="String"/></album>
		<artist public="1"><c path="String"/></artist>
		<comment public="1"><c path="String"/></comment>
		<genre public="1"><c path="String"/></genre>
		<songName public="1"><c path="String"/></songName>
		<track public="1"><c path="String"/></track>
		<year public="1"><c path="String"/></year>
		<new public="1" set="method" line="16"><f a=""><x path="Void"/></f></new>
	</class>
	<class path="openfl.media.SoundJS" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/media/Sound.hx" module="openfl.media.Sound" extern="1">
		<addEventListener public="1" set="method" static="1"><f a="type:listener:?useCapture">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
	<d/>
</f></addEventListener>
		<dispatchEvent public="1" set="method" static="1"><f a="eventObj:?target">
	<d/>
	<d/>
	<x path="Bool"/>
</f></dispatchEvent>
		<hasEventListener public="1" set="method" static="1"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasEventListener>
		<removeAllEventListeners public="1" set="method" static="1"><f a="?type">
	<c path="String"/>
	<x path="Void"/>
</f></removeAllEventListeners>
		<removeEventListener public="1" set="method" static="1"><f a="type:listener:?useCapture">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
	<x path="Void"/>
</f></removeEventListener>
		<createInstance public="1" set="method" static="1"><f a="src">
	<c path="String"/>
	<c path="openfl.media.SoundJSInstance"/>
</f></createInstance>
		<getCapabilities public="1" set="method" static="1"><f a=""><d/></f></getCapabilities>
		<getCapability public="1" set="method" static="1"><f a="key">
	<c path="String"/>
	<d/>
</f></getCapability>
		<getMute public="1" set="method" static="1"><f a=""><x path="Bool"/></f></getMute>
		<getVolume public="1" set="method" static="1"><f a=""><x path="Float"/></f></getVolume>
		<initializeDefaultPlugins public="1" set="method" static="1"><f a=""><x path="Bool"/></f></initializeDefaultPlugins>
		<isReady public="1" set="method" static="1"><f a=""><x path="Bool"/></f></isReady>
		<loadComplete public="1" set="method" static="1"><f a="src">
	<c path="String"/>
	<x path="Bool"/>
</f></loadComplete>
		<play public="1" set="method" static="1"><f a="src:?interrupt:?delay:?offset:?loop:?volume:?pan">
	<c path="String"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="openfl.media.SoundJSInstance"/>
</f></play>
		<registerManifest public="1" set="method" static="1"><f a="manifest:basepath">
	<c path="Array"><d/></c>
	<c path="String"/>
	<d/>
</f></registerManifest>
		<registerPlugin public="1" set="method" static="1"><f a="plugin">
	<d/>
	<x path="Bool"/>
</f></registerPlugin>
		<registerPlugins public="1" set="method" static="1"><f a="plugins">
	<c path="Array"><d/></c>
	<x path="Bool"/>
</f></registerPlugins>
		<registerSound public="1" set="method" static="1"><f a="src:?id:?data:?preload">
	<c path="String"/>
	<c path="String"/>
	<x path="Float"/>
	<x path="Bool"/>
	<d/>
</f></registerSound>
		<removeAllSounds public="1" set="method" static="1"><f a=""><x path="Void"/></f></removeAllSounds>
		<removeManifest public="1" set="method" static="1"><f a="manifest">
	<c path="Array"><d/></c>
	<d/>
</f></removeManifest>
		<removeSound public="1" set="method" static="1"><f a="src">
	<c path="String"/>
	<x path="Void"/>
</f></removeSound>
		<setMute public="1" set="method" static="1"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setMute>
		<setVolume public="1" set="method" static="1"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></setVolume>
		<stop public="1" set="method" static="1"><f a=""><x path="Void"/></f></stop>
		<activePlugin public="1" static="1"><d/></activePlugin>
		<alternateExtensions public="1" static="1"><c path="Array"><c path="String"/></c></alternateExtensions>
		<defaultInterruptBehavior public="1" static="1"><c path="String"/></defaultInterruptBehavior>
		<DELIMITER public="1" static="1"><c path="String"/></DELIMITER>
		<INTERRUPT_ANY public="1" get="inline" set="null" line="253" static="1"><c path="String"/></INTERRUPT_ANY>
		<INTERRUPT_EARLY public="1" get="inline" set="null" line="254" static="1"><c path="String"/></INTERRUPT_EARLY>
		<INTERRUPT_LATE public="1" get="inline" set="null" line="255" static="1"><c path="String"/></INTERRUPT_LATE>
		<INTERRUPT_NONE public="1" get="inline" set="null" line="256" static="1"><c path="String"/></INTERRUPT_NONE>
		<PLAY_FAILED public="1" static="1"><c path="String"/></PLAY_FAILED>
		<PLAY_FINISHED public="1" static="1"><c path="String"/></PLAY_FINISHED>
		<PLAY_INITED public="1" static="1"><c path="String"/></PLAY_INITED>
		<PLAY_INTERRUPTED public="1" static="1"><c path="String"/></PLAY_INTERRUPTED>
		<PLAY_SUCCEEDED public="1" static="1"><c path="String"/></PLAY_SUCCEEDED>
		<SUPPORTED_EXTENSIONS public="1" static="1"><c path="Array"><c path="String"/></c></SUPPORTED_EXTENSIONS>
		<meta><m n=":native"><e>"createjs.Sound"</e></m></meta>
	</class>
	<class path="openfl.media.Sound" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/media/Sound.hx">
		<extends path="openfl.events.EventDispatcher"/>
		<__registeredSounds line="19" static="1">
			<x path="Map">
				<c path="String"/>
				<x path="Bool"/>
			</x>
			<meta><m n=":noCompletion"/></meta>
		</__registeredSounds>
		<fromAudioBuffer public="1" set="method" line="76" static="1"><f a="buffer">
	<c path="lime.audio.AudioBuffer"/>
	<c path="openfl.media.Sound"/>
</f></fromAudioBuffer>
		<bytesLoaded public="1" set="null"><x path="Int"/></bytesLoaded>
		<bytesTotal public="1" set="null"><x path="Int"/></bytesTotal>
		<id3 public="1" get="accessor" set="null"><c path="openfl.media.ID3Info"/></id3>
		<isBuffering public="1" set="null"><x path="Bool"/></isBuffering>
		<length public="1" set="null"><x path="Float"/></length>
		<url public="1" set="null"><c path="String"/></url>
		<__buffer>
			<c path="lime.audio.AudioBuffer"/>
			<meta><m n=":noCompletion"/></meta>
		</__buffer>
		<__sound>
			<c path="openfl.media.SoundJSInstance"/>
			<meta><m n=":noCompletion"/></meta>
		</__sound>
		<__soundID>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__soundID>
		<close public="1" set="method" line="57"><f a=""><x path="Void"/></f></close>
		<load public="1" set="method" line="85"><f a="stream:?context" v=":null">
	<c path="openfl.net.URLRequest"/>
	<c path="openfl.media.SoundLoaderContext"/>
	<x path="Void"/>
</f></load>
		<loadCompressedDataFromByteArray public="1" set="method" line="109"><f a="bytes:bytesLength:?forcePlayAsMusic" v="::false">
	<t path="openfl.utils.ByteArray"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></loadCompressedDataFromByteArray>
		<loadPCMFromByteArray public="1" set="method" line="122"><f a="bytes:samples:?format:?stereo:?sampleRate" v="::null:true:44100">
	<t path="openfl.utils.ByteArray"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Bool"/>
	<x path="Float"/>
	<x path="Void"/>
</f></loadPCMFromByteArray>
		<play public="1" set="method" line="135"><f a="?startTime:?loops:?sndTransform" v="0.0f:0:null">
	<x path="Float"/>
	<x path="Int"/>
	<c path="openfl.media.SoundTransform"/>
	<c path="openfl.media.SoundChannel"/>
</f></play>
		<get_id3 set="method" line="176">
			<f a=""><c path="openfl.media.ID3Info"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_id3>
		<AudioBuffer_onURLLoad set="method" line="190">
			<f a="buffer">
				<c path="lime.audio.AudioBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</AudioBuffer_onURLLoad>
		<SoundJS_onFileLoad set="method" line="199">
			<f a="event">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</SoundJS_onFileLoad>
		<new public="1" set="method" line="37"><f a="?stream:?context" v="null:null">
	<c path="openfl.net.URLRequest"/>
	<c path="openfl.media.SoundLoaderContext"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":autoBuild"><e>'???'</e></m></meta>
	</class>
	<class path="openfl.media.SoundJSEventDispatcher" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/media/Sound.hx" module="openfl.media.Sound" extern="1">
		<initialize public="1" set="method" static="1"><f a="target">
	<d/>
	<x path="Void"/>
</f></initialize>
		<addEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
	<d/>
</f></addEventListener>
		<dispatchEvent public="1" set="method"><f a="eventObj:?target">
	<d/>
	<d/>
	<x path="Bool"/>
</f></dispatchEvent>
		<hasEventListener public="1" set="method"><f a="type">
	<c path="String"/>
	<x path="Bool"/>
</f></hasEventListener>
		<off public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
	<x path="Bool"/>
</f></off>
		<on public="1" set="method"><f a="type:listener:?scope:?once:?data:?useCapture">
	<c path="String"/>
	<d/>
	<d/>
	<x path="Bool"/>
	<d/>
	<x path="Bool"/>
	<d/>
</f></on>
		<removeAllEventListeners public="1" set="method"><f a="?type">
	<c path="String"/>
	<x path="Void"/>
</f></removeAllEventListeners>
		<removeEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<d/>
	<x path="Bool"/>
	<x path="Void"/>
</f></removeEventListener>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<meta><m n=":native"><e>"createjs.EventDispatcher"</e></m></meta>
	</class>
	<class path="openfl.media.SoundJSInstance" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/media/Sound.hx" module="openfl.media.Sound" extern="1">
		<extends path="openfl.media.SoundJSEventDispatcher"/>
		<getDuration public="1" set="method"><f a=""><x path="Int"/></f></getDuration>
		<getMute public="1" set="method"><f a=""><x path="Bool"/></f></getMute>
		<getPan public="1" set="method"><f a=""><x path="Float"/></f></getPan>
		<getPosition public="1" set="method"><f a=""><x path="Int"/></f></getPosition>
		<getVolume public="1" set="method"><f a=""><x path="Float"/></f></getVolume>
		<pause public="1" set="method"><f a=""><x path="Bool"/></f></pause>
		<play public="1" set="method"><f a="?interrupt:?delay:?offset:?loop:?volume:?pan">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></play>
		<resume public="1" set="method"><f a=""><x path="Bool"/></f></resume>
		<setMute public="1" set="method"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setMute>
		<setPan public="1" set="method"><f a="value">
	<x path="Float"/>
	<x path="Float"/>
</f></setPan>
		<setPosition public="1" set="method"><f a="value">
	<x path="Int"/>
	<x path="Void"/>
</f></setPosition>
		<setVolume public="1" set="method"><f a="value">
	<x path="Float"/>
	<x path="Bool"/>
</f></setVolume>
		<stop public="1" set="method"><f a=""><x path="Bool"/></f></stop>
		<gainNode public="1"><d/></gainNode>
		<pan public="1"><x path="Float"/></pan>
		<panNode public="1"><d/></panNode>
		<playState public="1"><c path="String"/></playState>
		<sourceNode public="1"><d/></sourceNode>
		<uniqueId public="1"><d/></uniqueId>
		<volume public="1"><x path="Float"/></volume>
		<onComplete public="1"><f a="">
	<c path="openfl.media.SoundJSInstance"/>
	<x path="Void"/>
</f></onComplete>
		<onLoop public="1"><f a="">
	<c path="openfl.media.SoundJSInstance"/>
	<x path="Void"/>
</f></onLoop>
		<onPlayFailed public="1"><f a="">
	<c path="openfl.media.SoundJSInstance"/>
	<x path="Void"/>
</f></onPlayFailed>
		<onPlayInterrupted public="1"><f a="">
	<c path="openfl.media.SoundJSInstance"/>
	<x path="Void"/>
</f></onPlayInterrupted>
		<onPlaySucceeded public="1"><f a="">
	<c path="openfl.media.SoundJSInstance"/>
	<x path="Void"/>
</f></onPlaySucceeded>
		<onReady public="1"><f a="">
	<c path="openfl.media.SoundJSInstance"/>
	<x path="Void"/>
</f></onReady>
		<new public="1" set="method"><f a="src:owner">
	<c path="String"/>
	<d/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"createjs.SoundInstance"</e></m></meta>
	</class>
	<class path="openfl.media.SoundChannel" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/media/SoundChannel.hx">
		<extends path="openfl.events.EventDispatcher"/>
		<leftPeak public="1" set="null"><x path="Float"/></leftPeak>
		<position public="1" get="accessor" set="accessor"><x path="Float"/></position>
		<rightPeak public="1" set="null"><x path="Float"/></rightPeak>
		<soundTransform public="1" get="accessor" set="accessor"><c path="openfl.media.SoundTransform"/></soundTransform>
		<__source>
			<c path="lime.audio.AudioSource"/>
			<meta><m n=":noCompletion"/></meta>
		</__source>
		<__soundInstance>
			<c path="openfl.media.SoundJSInstance"/>
			<meta><m n=":noCompletion"/></meta>
		</__soundInstance>
		<stop public="1" set="method" line="41"><f a=""><x path="Void"/></f></stop>
		<__dispose set="method" line="53">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__dispose>
		<get_position set="method" line="69">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_position>
		<set_position set="method" line="80">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_position>
		<get_soundTransform set="method" line="93">
			<f a=""><c path="openfl.media.SoundTransform"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_soundTransform>
		<set_soundTransform set="method" line="106">
			<f a="value">
				<c path="openfl.media.SoundTransform"/>
				<c path="openfl.media.SoundTransform"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_soundTransform>
		<soundInstance_onComplete set="method" line="132">
			<f a="_">
				<unknown/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</soundInstance_onComplete>
		<source_onComplete set="method" line="140">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</source_onComplete>
		<new set="method" line="25"><f a="soundInstance">
	<c path="openfl.media.SoundJSInstance"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.media.SoundLoaderContext" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/media/SoundLoaderContext.hx">
		<bufferTime public="1"><x path="Float"/></bufferTime>
		<checkPolicyFile public="1"><x path="Bool"/></checkPolicyFile>
		<new public="1" set="method" line="11"><f a="?bufferTime:?checkPolicyFile" v="0:false">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.media.SoundTransform" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/media/SoundTransform.hx">
		<leftToLeft public="1"><x path="Float"/></leftToLeft>
		<leftToRight public="1"><x path="Float"/></leftToRight>
		<pan public="1"><x path="Float"/></pan>
		<rightToLeft public="1"><x path="Float"/></rightToLeft>
		<rightToRight public="1"><x path="Float"/></rightToRight>
		<volume public="1"><x path="Float"/></volume>
		<clone public="1" set="method" line="27"><f a=""><c path="openfl.media.SoundTransform"/></f></clone>
		<new public="1" set="method" line="15"><f a="?vol:?panning" v="1:0">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.net.URLLoader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/net/URLLoader.hx">
		<extends path="openfl.events.EventDispatcher"/>
		<bytesLoaded public="1"><x path="Int"/></bytesLoaded>
		<bytesTotal public="1"><x path="Int"/></bytesTotal>
		<data public="1"><d/></data>
		<dataFormat public="1" set="accessor"><e path="openfl.net.URLLoaderDataFormat"/></dataFormat>
		<close public="1" set="method" line="47"><f a=""><x path="Void"/></f></close>
		<getData set="dynamic" line="54"><f a=""><d/></f></getData>
		<load public="1" set="method" line="61"><f a="request">
	<c path="openfl.net.URLRequest"/>
	<x path="Void"/>
</f></load>
		<registerEvents set="method" line="71">
			<f a="subject">
				<c path="js.html.EventTarget"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</registerEvents>
		<requestUrl set="method" line="136">
			<f a="url:method:data:requestHeaders">
				<c path="String"/>
				<c path="String"/>
				<d/>
				<c path="Array"><c path="openfl.net.URLRequestHeader"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</requestUrl>
		<onData set="method" line="242">
			<f a="_">
				<unknown/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</onData>
		<onError set="method" line="262">
			<f a="msg">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</onError>
		<onOpen set="method" line="272">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</onOpen>
		<onProgress set="method" line="281">
			<f a="event">
				<t path="openfl.net.XMLHttpRequestProgressEvent"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</onProgress>
		<onSecurityError set="method" line="292">
			<f a="msg">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</onSecurityError>
		<onStatus set="method" line="302">
			<f a="status">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</onStatus>
		<set_dataFormat set="method" line="318">
			<f a="inputVal">
				<e path="openfl.net.URLLoaderDataFormat"/>
				<e path="openfl.net.URLLoaderDataFormat"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_dataFormat>
		<new public="1" set="method" line="30"><f a="?request" v="null">
	<c path="openfl.net.URLRequest"/>
	<x path="Void"/>
</f></new>
	</class>
	<typedef path="openfl.net.XMLHttpRequestProgressEvent" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/net/URLLoader.hx" module="openfl.net.URLLoader"><d/></typedef>
	<enum path="openfl.net.URLLoaderDataFormat" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/net/URLLoaderDataFormat.hx">
		<BINARY/>
		<TEXT/>
		<VARIABLES/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.net.URLRequest" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/net/URLRequest.hx">
		<contentType public="1"><c path="String"/></contentType>
		<data public="1"><d/></data>
		<method public="1"><c path="String"/></method>
		<requestHeaders public="1"><c path="Array"><c path="openfl.net.URLRequestHeader"/></c></requestHeaders>
		<url public="1"><c path="String"/></url>
		<userAgent public="1"><c path="String"/></userAgent>
		<formatRequestHeaders public="1" set="method" line="33"><f a=""><c path="Array"><c path="openfl.net.URLRequestHeader"/></c></f></formatRequestHeaders>
		<new public="1" set="method" line="18"><f a="?inURL" v="null">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.net.URLRequestHeader" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/net/URLRequestHeader.hx">
		<name public="1"><c path="String"/></name>
		<value public="1"><c path="String"/></value>
		<new public="1" set="method" line="11"><f a="?name:?value" v="'':''">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.net.URLRequestMethod" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/net/URLRequestMethod.hx">
		<DELETE public="1" line="6" static="1"><c path="String"/></DELETE>
		<GET public="1" line="7" static="1"><c path="String"/></GET>
		<HEAD public="1" line="8" static="1"><c path="String"/></HEAD>
		<OPTIONS public="1" line="9" static="1"><c path="String"/></OPTIONS>
		<POST public="1" line="10" static="1"><c path="String"/></POST>
		<PUT public="1" line="11" static="1"><c path="String"/></PUT>
	</class>
	<class path="openfl.net.URLVariables" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/net/URLVariables.hx">
		<decode public="1" set="method" line="18"><f a="inVars">
	<c path="String"/>
	<x path="Void"/>
</f></decode>
		<toString public="1" set="method" line="49"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="7"><f a="?inEncoded" v="null">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="openfl.system.Capabilities" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/system/Capabilities.hx">
		<hasAccessibility public="1" line="15" static="1"><x path="Bool"/></hasAccessibility>
		<pixelAspectRatio public="1" get="accessor" set="null" static="1"><x path="Float"/></pixelAspectRatio>
		<screenDPI public="1" get="accessor" set="null" static="1"><x path="Float"/></screenDPI>
		<screenResolutionX public="1" get="accessor" set="null" static="1"><x path="Float"/></screenResolutionX>
		<screenResolutionY public="1" get="accessor" set="null" static="1"><x path="Float"/></screenResolutionY>
		<language public="1" get="accessor" set="null" static="1"><c path="String"/></language>
		<get_pixelAspectRatio set="method" line="30" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_pixelAspectRatio>
		<get_screenDPI set="method" line="31" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_screenDPI>
		<get_screenResolutionX set="method" line="60" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_screenResolutionX>
		<get_screenResolutionY set="method" line="75" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_screenResolutionY>
		<get_language set="method" line="90" static="1">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_language>
	</class>
	<class path="openfl.system.LoaderContext" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/system/LoaderContext.hx">
		<allowCodeImport public="1"><x path="Bool"/></allowCodeImport>
		<allowLoadBytesCodeExecution public="1"><x path="Bool"/></allowLoadBytesCodeExecution>
		<applicationDomain public="1"><c path="openfl.system.ApplicationDomain"/></applicationDomain>
		<checkPolicyFile public="1"><x path="Bool"/></checkPolicyFile>
		<securityDomain public="1"><c path="openfl.system.SecurityDomain"/></securityDomain>
		<new public="1" set="method" line="14"><f a="?checkPolicyFile:?applicationDomain:?securityDomain" v="false:null:null">
	<x path="Bool"/>
	<c path="openfl.system.ApplicationDomain"/>
	<c path="openfl.system.SecurityDomain"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="openfl.system.SecurityDomain" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/system/SecurityDomain.hx">
		<currentDomain public="1" set="null" line="7" static="1"><c path="openfl.system.SecurityDomain"/></currentDomain>
		<new set="method" line="10"><f a=""><x path="Void"/></f></new>
	</class>
	<enum path="openfl.text.AntiAliasType" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/AntiAliasType.hx">
		<ADVANCED/>
		<NORMAL/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.text.Font" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/Font.hx">
		<extends path="lime.graphics.Font"/>
		<__registeredFonts line="14" static="1">
			<c path="Array"><c path="openfl.text.Font"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__registeredFonts>
		<enumerateFonts public="1" set="method" line="24" static="1"><f a="?enumerateDeviceFonts" v="false">
	<x path="Bool"/>
	<c path="Array"><c path="openfl.text.Font"/></c>
</f></enumerateFonts>
		<fromBytes public="1" set="method" line="31" static="1"><f a="bytes">
	<t path="openfl.utils.ByteArray"/>
	<c path="openfl.text.Font"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="40" static="1"><f a="path">
	<c path="String"/>
	<c path="openfl.text.Font"/>
</f></fromFile>
		<registerFont public="1" set="method" line="49" static="1"><f a="font">
	<x path="Class"><d/></x>
	<x path="Void"/>
</f></registerFont>
		<fontStyle public="1"><e path="openfl.text.FontStyle"/></fontStyle>
		<fontType public="1"><e path="openfl.text.FontType"/></fontType>
		<new public="1" set="method" line="17"><f a="?name" v="null">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":build"><e>'???'</e></m>
			<m n=":autoBuild"><e>'???'</e></m>
		</meta>
	</class>
	<enum path="openfl.text.FontStyle" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/FontStyle.hx">
		<REGULAR/>
		<ITALIC/>
		<BOLD_ITALIC/>
		<BOLD/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="openfl.text.FontType" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/FontType.hx">
		<DEVICE/>
		<EMBEDDED/>
		<EMBEDDED_CFF/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="openfl.text.GridFitType" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/GridFitType.hx">
		<NONE/>
		<PIXEL/>
		<SUBPIXEL/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.text.TextFormatRange" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/TextField.hx" module="openfl.text.TextField">
		<end public="1"><x path="Int"/></end>
		<format public="1"><c path="openfl.text.TextFormat"/></format>
		<start public="1"><x path="Int"/></start>
		<new public="1" set="method" line="792"><f a="format:start:end">
	<c path="openfl.text.TextFormat"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<enum path="openfl.text.TextFieldAutoSize" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/TextFieldAutoSize.hx">
		<CENTER/>
		<LEFT/>
		<NONE/>
		<RIGHT/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="openfl.text.TextFieldType" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/TextFieldType.hx">
		<DYNAMIC/>
		<INPUT/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.text.TextFormat" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/TextFormat.hx">
		<align public="1"><e path="openfl.text.TextFormatAlign"/></align>
		<blockIndent public="1"><t path="Null"><x path="Float"/></t></blockIndent>
		<bold public="1"><t path="Null"><x path="Bool"/></t></bold>
		<bullet public="1"><t path="Null"><x path="Bool"/></t></bullet>
		<color public="1"><t path="Null"><x path="Int"/></t></color>
		<font public="1"><c path="String"/></font>
		<indent public="1"><t path="Null"><x path="Float"/></t></indent>
		<italic public="1"><t path="Null"><x path="Bool"/></t></italic>
		<kerning public="1"><t path="Null"><x path="Bool"/></t></kerning>
		<leading public="1"><t path="Null"><x path="Float"/></t></leading>
		<leftMargin public="1"><t path="Null"><x path="Float"/></t></leftMargin>
		<letterSpacing public="1"><t path="Null"><x path="Float"/></t></letterSpacing>
		<rightMargin public="1"><t path="Null"><x path="Float"/></t></rightMargin>
		<size public="1"><t path="Null"><x path="Float"/></t></size>
		<tabStops public="1"><c path="Array"><x path="Int"/></c></tabStops>
		<target public="1"><c path="String"/></target>
		<underline public="1"><t path="Null"><x path="Bool"/></t></underline>
		<url public="1"><c path="String"/></url>
		<clone public="1" set="method" line="46"><f a=""><c path="openfl.text.TextFormat"/></f></clone>
		<__merge set="method" line="67">
			<f a="format">
				<c path="openfl.text.TextFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__merge>
		<new public="1" set="method" line="27"><f a="?font:?size:?color:?bold:?italic:?underline:?url:?target:?align:?leftMargin:?rightMargin:?indent:?leading" v="null:null:null:null:null:null:null:null:null:null:null:null:null">
	<c path="String"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="String"/>
	<c path="String"/>
	<e path="openfl.text.TextFormatAlign"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<enum path="openfl.text.TextFormatAlign" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/TextFormatAlign.hx">
		<LEFT/>
		<RIGHT/>
		<JUSTIFY/>
		<CENTER/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="openfl.text.TextLineMetrics" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/text/TextLineMetrics.hx">
		<ascent public="1"><x path="Float"/></ascent>
		<descent public="1"><x path="Float"/></descent>
		<height public="1"><x path="Float"/></height>
		<leading public="1"><x path="Float"/></leading>
		<width public="1"><x path="Float"/></width>
		<x public="1"><x path="Float"/></x>
		<new public="1" set="method" line="15"><f a="x:width:height:ascent:descent:leading">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="openfl.ui.KeyLocation" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/ui/KeyLocation.hx">
		<this><x path="Int"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="openfl.ui._KeyLocation.KeyLocation_Impl_" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/ui/KeyLocation.hx" private="1" module="openfl.ui.KeyLocation">
	<STANDARD public="1" get="inline" set="null" line="8" static="1">
		<x path="openfl.ui.KeyLocation"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STANDARD>
	<LEFT public="1" get="inline" set="null" line="9" static="1">
		<x path="openfl.ui.KeyLocation"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<RIGHT public="1" get="inline" set="null" line="10" static="1">
		<x path="openfl.ui.KeyLocation"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<NUM_PAD public="1" get="inline" set="null" line="11" static="1">
		<x path="openfl.ui.KeyLocation"/>
		<meta>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_PAD>
	<meta><m n=":enum"/></meta>
</class></impl>
	</abstract>
	<class path="openfl.ui._KeyLocation.KeyLocation_Impl_" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/ui/KeyLocation.hx" private="1" module="openfl.ui.KeyLocation">
		<STANDARD public="1" get="inline" set="null" line="8" static="1">
			<x path="openfl.ui.KeyLocation"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STANDARD>
		<LEFT public="1" get="inline" set="null" line="9" static="1">
			<x path="openfl.ui.KeyLocation"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<RIGHT public="1" get="inline" set="null" line="10" static="1">
			<x path="openfl.ui.KeyLocation"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<NUM_PAD public="1" get="inline" set="null" line="11" static="1">
			<x path="openfl.ui.KeyLocation"/>
			<meta>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_PAD>
		<meta><m n=":enum"/></meta>
	</class>
	<class path="openfl.ui.Keyboard" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/ui/Keyboard.hx">
		<NUMBER_0 public="1" get="inline" set="null" line="7" static="1"><x path="Int"/></NUMBER_0>
		<NUMBER_1 public="1" get="inline" set="null" line="8" static="1"><x path="Int"/></NUMBER_1>
		<NUMBER_2 public="1" get="inline" set="null" line="9" static="1"><x path="Int"/></NUMBER_2>
		<NUMBER_3 public="1" get="inline" set="null" line="10" static="1"><x path="Int"/></NUMBER_3>
		<NUMBER_4 public="1" get="inline" set="null" line="11" static="1"><x path="Int"/></NUMBER_4>
		<NUMBER_5 public="1" get="inline" set="null" line="12" static="1"><x path="Int"/></NUMBER_5>
		<NUMBER_6 public="1" get="inline" set="null" line="13" static="1"><x path="Int"/></NUMBER_6>
		<NUMBER_7 public="1" get="inline" set="null" line="14" static="1"><x path="Int"/></NUMBER_7>
		<NUMBER_8 public="1" get="inline" set="null" line="15" static="1"><x path="Int"/></NUMBER_8>
		<NUMBER_9 public="1" get="inline" set="null" line="16" static="1"><x path="Int"/></NUMBER_9>
		<A public="1" get="inline" set="null" line="17" static="1"><x path="Int"/></A>
		<B public="1" get="inline" set="null" line="18" static="1"><x path="Int"/></B>
		<C public="1" get="inline" set="null" line="19" static="1"><x path="Int"/></C>
		<D public="1" get="inline" set="null" line="20" static="1"><x path="Int"/></D>
		<E public="1" get="inline" set="null" line="21" static="1"><x path="Int"/></E>
		<F public="1" get="inline" set="null" line="22" static="1"><x path="Int"/></F>
		<G public="1" get="inline" set="null" line="23" static="1"><x path="Int"/></G>
		<H public="1" get="inline" set="null" line="24" static="1"><x path="Int"/></H>
		<I public="1" get="inline" set="null" line="25" static="1"><x path="Int"/></I>
		<J public="1" get="inline" set="null" line="26" static="1"><x path="Int"/></J>
		<K public="1" get="inline" set="null" line="27" static="1"><x path="Int"/></K>
		<L public="1" get="inline" set="null" line="28" static="1"><x path="Int"/></L>
		<M public="1" get="inline" set="null" line="29" static="1"><x path="Int"/></M>
		<N public="1" get="inline" set="null" line="30" static="1"><x path="Int"/></N>
		<O public="1" get="inline" set="null" line="31" static="1"><x path="Int"/></O>
		<P public="1" get="inline" set="null" line="32" static="1"><x path="Int"/></P>
		<Q public="1" get="inline" set="null" line="33" static="1"><x path="Int"/></Q>
		<R public="1" get="inline" set="null" line="34" static="1"><x path="Int"/></R>
		<S public="1" get="inline" set="null" line="35" static="1"><x path="Int"/></S>
		<T public="1" get="inline" set="null" line="36" static="1"><x path="Int"/></T>
		<U public="1" get="inline" set="null" line="37" static="1"><x path="Int"/></U>
		<V public="1" get="inline" set="null" line="38" static="1"><x path="Int"/></V>
		<W public="1" get="inline" set="null" line="39" static="1"><x path="Int"/></W>
		<X public="1" get="inline" set="null" line="40" static="1"><x path="Int"/></X>
		<Y public="1" get="inline" set="null" line="41" static="1"><x path="Int"/></Y>
		<Z public="1" get="inline" set="null" line="42" static="1"><x path="Int"/></Z>
		<NUMPAD_0 public="1" get="inline" set="null" line="44" static="1"><x path="Int"/></NUMPAD_0>
		<NUMPAD_1 public="1" get="inline" set="null" line="45" static="1"><x path="Int"/></NUMPAD_1>
		<NUMPAD_2 public="1" get="inline" set="null" line="46" static="1"><x path="Int"/></NUMPAD_2>
		<NUMPAD_3 public="1" get="inline" set="null" line="47" static="1"><x path="Int"/></NUMPAD_3>
		<NUMPAD_4 public="1" get="inline" set="null" line="48" static="1"><x path="Int"/></NUMPAD_4>
		<NUMPAD_5 public="1" get="inline" set="null" line="49" static="1"><x path="Int"/></NUMPAD_5>
		<NUMPAD_6 public="1" get="inline" set="null" line="50" static="1"><x path="Int"/></NUMPAD_6>
		<NUMPAD_7 public="1" get="inline" set="null" line="51" static="1"><x path="Int"/></NUMPAD_7>
		<NUMPAD_8 public="1" get="inline" set="null" line="52" static="1"><x path="Int"/></NUMPAD_8>
		<NUMPAD_9 public="1" get="inline" set="null" line="53" static="1"><x path="Int"/></NUMPAD_9>
		<NUMPAD_MULTIPLY public="1" get="inline" set="null" line="54" static="1"><x path="Int"/></NUMPAD_MULTIPLY>
		<NUMPAD_ADD public="1" get="inline" set="null" line="55" static="1"><x path="Int"/></NUMPAD_ADD>
		<NUMPAD_ENTER public="1" get="inline" set="null" line="56" static="1"><x path="Int"/></NUMPAD_ENTER>
		<NUMPAD_SUBTRACT public="1" get="inline" set="null" line="57" static="1"><x path="Int"/></NUMPAD_SUBTRACT>
		<NUMPAD_DECIMAL public="1" get="inline" set="null" line="58" static="1"><x path="Int"/></NUMPAD_DECIMAL>
		<NUMPAD_DIVIDE public="1" get="inline" set="null" line="59" static="1"><x path="Int"/></NUMPAD_DIVIDE>
		<F1 public="1" get="inline" set="null" line="61" static="1"><x path="Int"/></F1>
		<F2 public="1" get="inline" set="null" line="62" static="1"><x path="Int"/></F2>
		<F3 public="1" get="inline" set="null" line="63" static="1"><x path="Int"/></F3>
		<F4 public="1" get="inline" set="null" line="64" static="1"><x path="Int"/></F4>
		<F5 public="1" get="inline" set="null" line="65" static="1"><x path="Int"/></F5>
		<F6 public="1" get="inline" set="null" line="66" static="1"><x path="Int"/></F6>
		<F7 public="1" get="inline" set="null" line="67" static="1"><x path="Int"/></F7>
		<F8 public="1" get="inline" set="null" line="68" static="1"><x path="Int"/></F8>
		<F9 public="1" get="inline" set="null" line="69" static="1"><x path="Int"/></F9>
		<F10 public="1" get="inline" set="null" line="70" static="1"><x path="Int"/></F10>
		<F11 public="1" get="inline" set="null" line="71" static="1"><x path="Int"/></F11>
		<F12 public="1" get="inline" set="null" line="72" static="1"><x path="Int"/></F12>
		<F13 public="1" get="inline" set="null" line="73" static="1"><x path="Int"/></F13>
		<F14 public="1" get="inline" set="null" line="74" static="1"><x path="Int"/></F14>
		<F15 public="1" get="inline" set="null" line="75" static="1"><x path="Int"/></F15>
		<BACKSPACE public="1" get="inline" set="null" line="77" static="1"><x path="Int"/></BACKSPACE>
		<TAB public="1" get="inline" set="null" line="78" static="1"><x path="Int"/></TAB>
		<ALTERNATE public="1" get="inline" set="null" line="79" static="1"><x path="Int"/></ALTERNATE>
		<ENTER public="1" get="inline" set="null" line="80" static="1"><x path="Int"/></ENTER>
		<COMMAND public="1" get="inline" set="null" line="81" static="1"><x path="Int"/></COMMAND>
		<SHIFT public="1" get="inline" set="null" line="82" static="1"><x path="Int"/></SHIFT>
		<CONTROL public="1" get="inline" set="null" line="83" static="1"><x path="Int"/></CONTROL>
		<CAPS_LOCK public="1" get="inline" set="null" line="84" static="1"><x path="Int"/></CAPS_LOCK>
		<NUMPAD public="1" get="inline" set="null" line="85" static="1"><x path="Int"/></NUMPAD>
		<ESCAPE public="1" get="inline" set="null" line="86" static="1"><x path="Int"/></ESCAPE>
		<SPACE public="1" get="inline" set="null" line="87" static="1"><x path="Int"/></SPACE>
		<PAGE_UP public="1" get="inline" set="null" line="88" static="1"><x path="Int"/></PAGE_UP>
		<PAGE_DOWN public="1" get="inline" set="null" line="89" static="1"><x path="Int"/></PAGE_DOWN>
		<END public="1" get="inline" set="null" line="90" static="1"><x path="Int"/></END>
		<HOME public="1" get="inline" set="null" line="91" static="1"><x path="Int"/></HOME>
		<LEFT public="1" get="inline" set="null" line="92" static="1"><x path="Int"/></LEFT>
		<RIGHT public="1" get="inline" set="null" line="93" static="1"><x path="Int"/></RIGHT>
		<UP public="1" get="inline" set="null" line="94" static="1"><x path="Int"/></UP>
		<DOWN public="1" get="inline" set="null" line="95" static="1"><x path="Int"/></DOWN>
		<INSERT public="1" get="inline" set="null" line="96" static="1"><x path="Int"/></INSERT>
		<DELETE public="1" get="inline" set="null" line="97" static="1"><x path="Int"/></DELETE>
		<NUMLOCK public="1" get="inline" set="null" line="98" static="1"><x path="Int"/></NUMLOCK>
		<BREAK public="1" get="inline" set="null" line="99" static="1"><x path="Int"/></BREAK>
		<SEMICOLON public="1" get="inline" set="null" line="101" static="1"><x path="Int"/></SEMICOLON>
		<EQUAL public="1" get="inline" set="null" line="102" static="1"><x path="Int"/></EQUAL>
		<COMMA public="1" get="inline" set="null" line="103" static="1"><x path="Int"/></COMMA>
		<MINUS public="1" get="inline" set="null" line="104" static="1"><x path="Int"/></MINUS>
		<PERIOD public="1" get="inline" set="null" line="105" static="1"><x path="Int"/></PERIOD>
		<SLASH public="1" get="inline" set="null" line="106" static="1"><x path="Int"/></SLASH>
		<BACKQUOTE public="1" get="inline" set="null" line="107" static="1"><x path="Int"/></BACKQUOTE>
		<LEFTBRACKET public="1" get="inline" set="null" line="108" static="1"><x path="Int"/></LEFTBRACKET>
		<BACKSLASH public="1" get="inline" set="null" line="109" static="1"><x path="Int"/></BACKSLASH>
		<RIGHTBRACKET public="1" get="inline" set="null" line="110" static="1"><x path="Int"/></RIGHTBRACKET>
		<QUOTE public="1" get="inline" set="null" line="111" static="1"><x path="Int"/></QUOTE>
		<DOM_VK_CANCEL get="inline" set="null" line="115" static="1"><x path="Int"/></DOM_VK_CANCEL>
		<DOM_VK_HELP get="inline" set="null" line="116" static="1"><x path="Int"/></DOM_VK_HELP>
		<DOM_VK_BACK_SPACE get="inline" set="null" line="117" static="1"><x path="Int"/></DOM_VK_BACK_SPACE>
		<DOM_VK_TAB get="inline" set="null" line="118" static="1"><x path="Int"/></DOM_VK_TAB>
		<DOM_VK_CLEAR get="inline" set="null" line="119" static="1"><x path="Int"/></DOM_VK_CLEAR>
		<DOM_VK_RETURN get="inline" set="null" line="120" static="1"><x path="Int"/></DOM_VK_RETURN>
		<DOM_VK_ENTER get="inline" set="null" line="121" static="1"><x path="Int"/></DOM_VK_ENTER>
		<DOM_VK_SHIFT get="inline" set="null" line="122" static="1"><x path="Int"/></DOM_VK_SHIFT>
		<DOM_VK_CONTROL get="inline" set="null" line="123" static="1"><x path="Int"/></DOM_VK_CONTROL>
		<DOM_VK_ALT get="inline" set="null" line="124" static="1"><x path="Int"/></DOM_VK_ALT>
		<DOM_VK_PAUSE get="inline" set="null" line="125" static="1"><x path="Int"/></DOM_VK_PAUSE>
		<DOM_VK_CAPS_LOCK get="inline" set="null" line="126" static="1"><x path="Int"/></DOM_VK_CAPS_LOCK>
		<DOM_VK_ESCAPE get="inline" set="null" line="127" static="1"><x path="Int"/></DOM_VK_ESCAPE>
		<DOM_VK_SPACE get="inline" set="null" line="128" static="1"><x path="Int"/></DOM_VK_SPACE>
		<DOM_VK_PAGE_UP get="inline" set="null" line="129" static="1"><x path="Int"/></DOM_VK_PAGE_UP>
		<DOM_VK_PAGE_DOWN get="inline" set="null" line="130" static="1"><x path="Int"/></DOM_VK_PAGE_DOWN>
		<DOM_VK_END get="inline" set="null" line="131" static="1"><x path="Int"/></DOM_VK_END>
		<DOM_VK_HOME get="inline" set="null" line="132" static="1"><x path="Int"/></DOM_VK_HOME>
		<DOM_VK_LEFT get="inline" set="null" line="133" static="1"><x path="Int"/></DOM_VK_LEFT>
		<DOM_VK_UP get="inline" set="null" line="134" static="1"><x path="Int"/></DOM_VK_UP>
		<DOM_VK_RIGHT get="inline" set="null" line="135" static="1"><x path="Int"/></DOM_VK_RIGHT>
		<DOM_VK_DOWN get="inline" set="null" line="136" static="1"><x path="Int"/></DOM_VK_DOWN>
		<DOM_VK_PRINTSCREEN get="inline" set="null" line="137" static="1"><x path="Int"/></DOM_VK_PRINTSCREEN>
		<DOM_VK_INSERT get="inline" set="null" line="138" static="1"><x path="Int"/></DOM_VK_INSERT>
		<DOM_VK_DELETE get="inline" set="null" line="139" static="1"><x path="Int"/></DOM_VK_DELETE>
		<DOM_VK_0 get="inline" set="null" line="140" static="1"><x path="Int"/></DOM_VK_0>
		<DOM_VK_1 get="inline" set="null" line="141" static="1"><x path="Int"/></DOM_VK_1>
		<DOM_VK_2 get="inline" set="null" line="142" static="1"><x path="Int"/></DOM_VK_2>
		<DOM_VK_3 get="inline" set="null" line="143" static="1"><x path="Int"/></DOM_VK_3>
		<DOM_VK_4 get="inline" set="null" line="144" static="1"><x path="Int"/></DOM_VK_4>
		<DOM_VK_5 get="inline" set="null" line="145" static="1"><x path="Int"/></DOM_VK_5>
		<DOM_VK_6 get="inline" set="null" line="146" static="1"><x path="Int"/></DOM_VK_6>
		<DOM_VK_7 get="inline" set="null" line="147" static="1"><x path="Int"/></DOM_VK_7>
		<DOM_VK_8 get="inline" set="null" line="148" static="1"><x path="Int"/></DOM_VK_8>
		<DOM_VK_9 get="inline" set="null" line="149" static="1"><x path="Int"/></DOM_VK_9>
		<DOM_VK_SEMICOLON get="inline" set="null" line="150" static="1"><x path="Int"/></DOM_VK_SEMICOLON>
		<DOM_VK_EQUALS get="inline" set="null" line="151" static="1"><x path="Int"/></DOM_VK_EQUALS>
		<DOM_VK_A get="inline" set="null" line="152" static="1"><x path="Int"/></DOM_VK_A>
		<DOM_VK_B get="inline" set="null" line="153" static="1"><x path="Int"/></DOM_VK_B>
		<DOM_VK_C get="inline" set="null" line="154" static="1"><x path="Int"/></DOM_VK_C>
		<DOM_VK_D get="inline" set="null" line="155" static="1"><x path="Int"/></DOM_VK_D>
		<DOM_VK_E get="inline" set="null" line="156" static="1"><x path="Int"/></DOM_VK_E>
		<DOM_VK_F get="inline" set="null" line="157" static="1"><x path="Int"/></DOM_VK_F>
		<DOM_VK_G get="inline" set="null" line="158" static="1"><x path="Int"/></DOM_VK_G>
		<DOM_VK_H get="inline" set="null" line="159" static="1"><x path="Int"/></DOM_VK_H>
		<DOM_VK_I get="inline" set="null" line="160" static="1"><x path="Int"/></DOM_VK_I>
		<DOM_VK_J get="inline" set="null" line="161" static="1"><x path="Int"/></DOM_VK_J>
		<DOM_VK_K get="inline" set="null" line="162" static="1"><x path="Int"/></DOM_VK_K>
		<DOM_VK_L get="inline" set="null" line="163" static="1"><x path="Int"/></DOM_VK_L>
		<DOM_VK_M get="inline" set="null" line="164" static="1"><x path="Int"/></DOM_VK_M>
		<DOM_VK_N get="inline" set="null" line="165" static="1"><x path="Int"/></DOM_VK_N>
		<DOM_VK_O get="inline" set="null" line="166" static="1"><x path="Int"/></DOM_VK_O>
		<DOM_VK_P get="inline" set="null" line="167" static="1"><x path="Int"/></DOM_VK_P>
		<DOM_VK_Q get="inline" set="null" line="168" static="1"><x path="Int"/></DOM_VK_Q>
		<DOM_VK_R get="inline" set="null" line="169" static="1"><x path="Int"/></DOM_VK_R>
		<DOM_VK_S get="inline" set="null" line="170" static="1"><x path="Int"/></DOM_VK_S>
		<DOM_VK_T get="inline" set="null" line="171" static="1"><x path="Int"/></DOM_VK_T>
		<DOM_VK_U get="inline" set="null" line="172" static="1"><x path="Int"/></DOM_VK_U>
		<DOM_VK_V get="inline" set="null" line="173" static="1"><x path="Int"/></DOM_VK_V>
		<DOM_VK_W get="inline" set="null" line="174" static="1"><x path="Int"/></DOM_VK_W>
		<DOM_VK_X get="inline" set="null" line="175" static="1"><x path="Int"/></DOM_VK_X>
		<DOM_VK_Y get="inline" set="null" line="176" static="1"><x path="Int"/></DOM_VK_Y>
		<DOM_VK_Z get="inline" set="null" line="177" static="1"><x path="Int"/></DOM_VK_Z>
		<DOM_VK_CONTEXT_MENU get="inline" set="null" line="178" static="1"><x path="Int"/></DOM_VK_CONTEXT_MENU>
		<DOM_VK_NUMPAD0 get="inline" set="null" line="179" static="1"><x path="Int"/></DOM_VK_NUMPAD0>
		<DOM_VK_NUMPAD1 get="inline" set="null" line="180" static="1"><x path="Int"/></DOM_VK_NUMPAD1>
		<DOM_VK_NUMPAD2 get="inline" set="null" line="181" static="1"><x path="Int"/></DOM_VK_NUMPAD2>
		<DOM_VK_NUMPAD3 get="inline" set="null" line="182" static="1"><x path="Int"/></DOM_VK_NUMPAD3>
		<DOM_VK_NUMPAD4 get="inline" set="null" line="183" static="1"><x path="Int"/></DOM_VK_NUMPAD4>
		<DOM_VK_NUMPAD5 get="inline" set="null" line="184" static="1"><x path="Int"/></DOM_VK_NUMPAD5>
		<DOM_VK_NUMPAD6 get="inline" set="null" line="185" static="1"><x path="Int"/></DOM_VK_NUMPAD6>
		<DOM_VK_NUMPAD7 get="inline" set="null" line="186" static="1"><x path="Int"/></DOM_VK_NUMPAD7>
		<DOM_VK_NUMPAD8 get="inline" set="null" line="187" static="1"><x path="Int"/></DOM_VK_NUMPAD8>
		<DOM_VK_NUMPAD9 get="inline" set="null" line="188" static="1"><x path="Int"/></DOM_VK_NUMPAD9>
		<DOM_VK_MULTIPLY get="inline" set="null" line="189" static="1"><x path="Int"/></DOM_VK_MULTIPLY>
		<DOM_VK_ADD get="inline" set="null" line="190" static="1"><x path="Int"/></DOM_VK_ADD>
		<DOM_VK_SEPARATOR get="inline" set="null" line="191" static="1"><x path="Int"/></DOM_VK_SEPARATOR>
		<DOM_VK_SUBTRACT get="inline" set="null" line="192" static="1"><x path="Int"/></DOM_VK_SUBTRACT>
		<DOM_VK_DECIMAL get="inline" set="null" line="193" static="1"><x path="Int"/></DOM_VK_DECIMAL>
		<DOM_VK_DIVIDE get="inline" set="null" line="194" static="1"><x path="Int"/></DOM_VK_DIVIDE>
		<DOM_VK_F1 get="inline" set="null" line="195" static="1"><x path="Int"/></DOM_VK_F1>
		<DOM_VK_F2 get="inline" set="null" line="196" static="1"><x path="Int"/></DOM_VK_F2>
		<DOM_VK_F3 get="inline" set="null" line="197" static="1"><x path="Int"/></DOM_VK_F3>
		<DOM_VK_F4 get="inline" set="null" line="198" static="1"><x path="Int"/></DOM_VK_F4>
		<DOM_VK_F5 get="inline" set="null" line="199" static="1"><x path="Int"/></DOM_VK_F5>
		<DOM_VK_F6 get="inline" set="null" line="200" static="1"><x path="Int"/></DOM_VK_F6>
		<DOM_VK_F7 get="inline" set="null" line="201" static="1"><x path="Int"/></DOM_VK_F7>
		<DOM_VK_F8 get="inline" set="null" line="202" static="1"><x path="Int"/></DOM_VK_F8>
		<DOM_VK_F9 get="inline" set="null" line="203" static="1"><x path="Int"/></DOM_VK_F9>
		<DOM_VK_F10 get="inline" set="null" line="204" static="1"><x path="Int"/></DOM_VK_F10>
		<DOM_VK_F11 get="inline" set="null" line="205" static="1"><x path="Int"/></DOM_VK_F11>
		<DOM_VK_F12 get="inline" set="null" line="206" static="1"><x path="Int"/></DOM_VK_F12>
		<DOM_VK_F13 get="inline" set="null" line="207" static="1"><x path="Int"/></DOM_VK_F13>
		<DOM_VK_F14 get="inline" set="null" line="208" static="1"><x path="Int"/></DOM_VK_F14>
		<DOM_VK_F15 get="inline" set="null" line="209" static="1"><x path="Int"/></DOM_VK_F15>
		<DOM_VK_F16 get="inline" set="null" line="210" static="1"><x path="Int"/></DOM_VK_F16>
		<DOM_VK_F17 get="inline" set="null" line="211" static="1"><x path="Int"/></DOM_VK_F17>
		<DOM_VK_F18 get="inline" set="null" line="212" static="1"><x path="Int"/></DOM_VK_F18>
		<DOM_VK_F19 get="inline" set="null" line="213" static="1"><x path="Int"/></DOM_VK_F19>
		<DOM_VK_F20 get="inline" set="null" line="214" static="1"><x path="Int"/></DOM_VK_F20>
		<DOM_VK_F21 get="inline" set="null" line="215" static="1"><x path="Int"/></DOM_VK_F21>
		<DOM_VK_F22 get="inline" set="null" line="216" static="1"><x path="Int"/></DOM_VK_F22>
		<DOM_VK_F23 get="inline" set="null" line="217" static="1"><x path="Int"/></DOM_VK_F23>
		<DOM_VK_F24 get="inline" set="null" line="218" static="1"><x path="Int"/></DOM_VK_F24>
		<DOM_VK_NUM_LOCK get="inline" set="null" line="219" static="1"><x path="Int"/></DOM_VK_NUM_LOCK>
		<DOM_VK_SCROLL_LOCK get="inline" set="null" line="220" static="1"><x path="Int"/></DOM_VK_SCROLL_LOCK>
		<DOM_VK_COMMA get="inline" set="null" line="221" static="1"><x path="Int"/></DOM_VK_COMMA>
		<DOM_VK_PERIOD get="inline" set="null" line="222" static="1"><x path="Int"/></DOM_VK_PERIOD>
		<DOM_VK_SLASH get="inline" set="null" line="223" static="1"><x path="Int"/></DOM_VK_SLASH>
		<DOM_VK_BACK_QUOTE get="inline" set="null" line="224" static="1"><x path="Int"/></DOM_VK_BACK_QUOTE>
		<DOM_VK_OPEN_BRACKET get="inline" set="null" line="225" static="1"><x path="Int"/></DOM_VK_OPEN_BRACKET>
		<DOM_VK_BACK_SLASH get="inline" set="null" line="226" static="1"><x path="Int"/></DOM_VK_BACK_SLASH>
		<DOM_VK_CLOSE_BRACKET get="inline" set="null" line="227" static="1"><x path="Int"/></DOM_VK_CLOSE_BRACKET>
		<DOM_VK_QUOTE get="inline" set="null" line="228" static="1"><x path="Int"/></DOM_VK_QUOTE>
		<DOM_VK_META get="inline" set="null" line="229" static="1"><x path="Int"/></DOM_VK_META>
		<DOM_VK_KANA get="inline" set="null" line="231" static="1"><x path="Int"/></DOM_VK_KANA>
		<DOM_VK_HANGUL get="inline" set="null" line="232" static="1"><x path="Int"/></DOM_VK_HANGUL>
		<DOM_VK_JUNJA get="inline" set="null" line="233" static="1"><x path="Int"/></DOM_VK_JUNJA>
		<DOM_VK_FINAL get="inline" set="null" line="234" static="1"><x path="Int"/></DOM_VK_FINAL>
		<DOM_VK_HANJA get="inline" set="null" line="235" static="1"><x path="Int"/></DOM_VK_HANJA>
		<DOM_VK_KANJI get="inline" set="null" line="236" static="1"><x path="Int"/></DOM_VK_KANJI>
		<DOM_VK_CONVERT get="inline" set="null" line="237" static="1"><x path="Int"/></DOM_VK_CONVERT>
		<DOM_VK_NONCONVERT get="inline" set="null" line="238" static="1"><x path="Int"/></DOM_VK_NONCONVERT>
		<DOM_VK_ACEPT get="inline" set="null" line="239" static="1"><x path="Int"/></DOM_VK_ACEPT>
		<DOM_VK_MODECHANGE get="inline" set="null" line="240" static="1"><x path="Int"/></DOM_VK_MODECHANGE>
		<DOM_VK_SELECT get="inline" set="null" line="241" static="1"><x path="Int"/></DOM_VK_SELECT>
		<DOM_VK_PRINT get="inline" set="null" line="242" static="1"><x path="Int"/></DOM_VK_PRINT>
		<DOM_VK_EXECUTE get="inline" set="null" line="243" static="1"><x path="Int"/></DOM_VK_EXECUTE>
		<DOM_VK_SLEEP get="inline" set="null" line="244" static="1"><x path="Int"/></DOM_VK_SLEEP>
		<capsLock public="1" set="null" static="1"><x path="Bool"/></capsLock>
		<numLock public="1" set="null" static="1"><x path="Bool"/></numLock>
		<isAccessible public="1" set="method" line="250" static="1"><f a=""><x path="Bool"/></f></isAccessible>
		<__convertMozillaCode public="1" set="method" line="258" static="1">
			<f a="code">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__convertMozillaCode>
		<__convertWebkitCode public="1" set="method" line="289" static="1">
			<f a="code">
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__convertWebkitCode>
	</class>
	<typedef path="openfl.utils.ArrayBufferView" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/utils/ArrayBufferView.hx"><t path="lime.utils.ArrayBufferView"/></typedef>
	<typedef path="openfl.utils.ByteArray" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/utils/ByteArray.hx"><c path="lime.utils.ByteArray"/></typedef>
	<typedef path="openfl.utils.Float32Array" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/utils/Float32Array.hx"><t path="lime.utils.Float32Array"/></typedef>
	<typedef path="openfl.utils.Int16Array" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/utils/Int16Array.hx"><t path="lime.utils.Int16Array"/></typedef>
	<typedef path="openfl.utils.Int32Array" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/utils/Int32Array.hx"><t path="lime.utils.Int32Array"/></typedef>
	<class path="openfl.utils.Timer" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/utils/Timer.hx">
		<extends path="openfl.events.EventDispatcher"/>
		<currentCount public="1" set="null"><x path="Int"/></currentCount>
		<delay public="1" get="accessor" set="accessor"><x path="Float"/></delay>
		<repeatCount public="1" set="accessor"><x path="Int"/></repeatCount>
		<running public="1" set="null"><x path="Bool"/></running>
		<__delay>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__delay>
		<__timer>
			<t path="haxe._Timer.HaxeTimer"/>
			<meta><m n=":noCompletion"/></meta>
		</__timer>
		<__timerID>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__timerID>
		<reset public="1" set="method" line="46"><f a=""><x path="Void"/></f></reset>
		<start public="1" set="method" line="59"><f a=""><x path="Void"/></f></start>
		<stop public="1" set="method" line="77"><f a=""><x path="Void"/></f></stop>
		<get_delay set="method" line="107">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_delay>
		<set_delay set="method" line="114">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_delay>
		<set_repeatCount set="method" line="130">
			<f a="v">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_repeatCount>
		<timer_onTimer set="method" line="151">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</timer_onTimer>
		<new public="1" set="method" line="27"><f a="delay:?repeatCount" v=":0">
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<typedef path="openfl.utils.UInt8Array" params="" file="/usr/lib/haxe/lib/openfl/2,1,7/openfl/utils/UInt8Array.hx"><t path="lime.utils.UInt8Array"/></typedef>
</haxe>